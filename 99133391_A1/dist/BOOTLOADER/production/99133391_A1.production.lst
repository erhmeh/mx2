

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Aug 14 17:24:16 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F67J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1,inline
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84  0000                     
    85                           ; Version 1.42
    86                           ; Generated 13/04/2017 GMT
    87                           ; 
    88                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F67J50 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     
   120 ;; Function _HMI_InitButtons is unused but had its address taken
   121  0000                     
   122 ;; Function _HMI_LeftSwitch is unused but had its address taken
   123  0000                     
   124 ;; Function _HMI_RightSwitch is unused but had its address taken
   125  0000                     
   126 ;; Function _HMI_UpSwitch is unused but had its address taken
   127  0000                     
   128 ;; Function _HMI_DownSwitch is unused but had its address taken
   129  0000                     
   130 ;; Function _HMI_DIPSwitch is unused but had its address taken
   131  0000                     
   132 ;; Function _MXK_InitTestButton is unused but had its address taken
   133  0000                     
   134 ;; Function _MXK_TestButton is unused but had its address taken
   135  0000                     
   136 ;; Function _MXK_InitDIPSwitch is unused but had its address taken
   137  0000                     
   138 ;; Function _MXK_DIPSwitch is unused but had its address taken
   139  0000                     
   140 ;; Function _Event_DIPSwitch is unused but had its address taken
   141  0000                     
   142 ;; Function _Event_HMI_DIPSwitch is unused but had its address taken
   143  0000                     
   144 ;; Function _Event_TestButton is unused but had its address taken
   145  0000                     
   146 ;; Function _Event_HMI_LeftButton is unused but had its address taken
   147  0000                     
   148 ;; Function _Event_HMI_RightButton is unused but had its address taken
   149  0000                     
   150 ;; Function _Event_HMI_UpButton is unused but had its address taken
   151  0000                     
   152 ;; Function _Event_HMI_DownButton is unused but had its address taken
   153  0000                     
   154                           	psect	idataCOMRAM
   155  011F9A                     __pidataCOMRAM:
   156                           	opt stack 0
   157                           
   158                           ;initializer for _gCursor
   159  011F9A  0006               	dw	6
   160  011F9C  0006               	dw	6
   161                           
   162                           ;initializer for _Bus_State
   163  011F9E  01                 	db	1
   164                           
   165                           ;initializer for _change
   166  011F9F  01                 	db	1
   167                           
   168                           ;initializer for _zero
   169  011FA0  30                 	db	48
   170                           
   171                           ;initializer for _l
   172  011FA1  80                 	db	128
   173                           
   174                           ;initializer for _w
   175  011FA2  80                 	db	128
   176                           
   177                           	psect	idataBANK0
   178  011FA3                     __pidataBANK0:
   179                           	opt stack 0
   180                           
   181                           ;initializer for _gCharSize
   182  011FA3  0005               	dw	5
   183  011FA5  0007               	dw	7
   184                           
   185                           ;initializer for _gForecolour
   186  011FA7  FFFF               	dw	65535
   187                           
   188                           ;initializer for _A
   189  011FA9  41                 	db	65
   190                           
   191                           ;initializer for _a
   192  011FAA  61                 	db	97
   193                           
   194                           	psect	idataBANK1
   195  011FAB                     __pidataBANK1:
   196                           	opt stack 0
   197                           
   198                           ;initializer for Console_Render@F6956
   199  011FAB  0006               	dw	6
   200  011FAD  0006               	dw	6
   201                           
   202                           ;initializer for _gLineSize
   203  011FAF  0080               	dw	128
   204  011FB1  0007               	dw	7
   205                           
   206                           	psect	mediumconst
   207  00FC9A                     __pmediumconst:
   208                           	opt stack 0
   209  00FC9A  00                 	db	0
   210  00FC9B                     _InitList:
   211                           	opt stack 0
   212  00FC9B  1100               	dw	4352
   213  00FC9D  0080               	dw	128
   214  00FC9F  012C               	dw	300
   215  00FCA1  B100               	dw	45312
   216  00FCA3  0002               	dw	2
   217  00FCA5  0035               	dw	53
   218  00FCA7  0036               	dw	54
   219  00FCA9  B200               	dw	45568
   220  00FCAB  0002               	dw	2
   221  00FCAD  0035               	dw	53
   222  00FCAF  0036               	dw	54
   223  00FCB1  B300               	dw	45824
   224  00FCB3  0002               	dw	2
   225  00FCB5  0035               	dw	53
   226  00FCB7  0036               	dw	54
   227  00FCB9  0002               	dw	2
   228  00FCBB  0035               	dw	53
   229  00FCBD  0036               	dw	54
   230  00FCBF  B400               	dw	46080
   231  00FCC1  0000               	dw	0
   232  00FCC3  C000               	dw	49152
   233  00FCC5  00A2               	dw	162
   234  00FCC7  0002               	dw	2
   235  00FCC9  0084               	dw	132
   236  00FCCB  C100               	dw	49408
   237  00FCCD  00C5               	dw	197
   238  00FCCF  C200               	dw	49664
   239  00FCD1  000D               	dw	13
   240  00FCD3  0000               	dw	0
   241  00FCD5  C300               	dw	49920
   242  00FCD7  008D               	dw	141
   243  00FCD9  002A               	dw	42
   244  00FCDB  C400               	dw	50176
   245  00FCDD  008D               	dw	141
   246  00FCDF  00EE               	dw	238
   247  00FCE1  C500               	dw	50432
   248  00FCE3  000A               	dw	10
   249  00FCE5  3600               	dw	13824
   250  00FCE7  00C8               	dw	200
   251  00FCE9  E000               	dw	57344
   252  00FCEB  0012               	dw	18
   253  00FCED  001C               	dw	28
   254  00FCEF  0010               	dw	16
   255  00FCF1  0018               	dw	24
   256  00FCF3  0033               	dw	51
   257  00FCF5  002C               	dw	44
   258  00FCF7  0025               	dw	37
   259  00FCF9  0028               	dw	40
   260  00FCFB  0028               	dw	40
   261  00FCFD  0027               	dw	39
   262  00FCFF  002F               	dw	47
   263  00FD01  003C               	dw	60
   264  00FD03  0000               	dw	0
   265  00FD05  0003               	dw	3
   266  00FD07  0003               	dw	3
   267  00FD09  0010               	dw	16
   268  00FD0B  0080               	dw	128
   269  00FD0D  0078               	dw	120
   270  00FD0F  E100               	dw	57600
   271  00FD11  0012               	dw	18
   272  00FD13  001C               	dw	28
   273  00FD15  0010               	dw	16
   274  00FD17  0018               	dw	24
   275  00FD19  002D               	dw	45
   276  00FD1B  0028               	dw	40
   277  00FD1D  0023               	dw	35
   278  00FD1F  0028               	dw	40
   279  00FD21  0028               	dw	40
   280  00FD23  0026               	dw	38
   281  00FD25  002F               	dw	47
   282  00FD27  003B               	dw	59
   283  00FD29  0000               	dw	0
   284  00FD2B  0003               	dw	3
   285  00FD2D  0003               	dw	3
   286  00FD2F  0010               	dw	16
   287  00FD31  3A00               	dw	14848
   288  00FD33  0005               	dw	5
   289  00FD35  2A00               	dw	10752
   290  00FD37  0000               	dw	0
   291  00FD39  0002               	dw	2
   292  00FD3B  0000               	dw	0
   293  00FD3D  0081               	dw	129
   294  00FD3F  2B00               	dw	11008
   295  00FD41  0000               	dw	0
   296  00FD43  0003               	dw	3
   297  00FD45  0000               	dw	0
   298  00FD47  00A2               	dw	162
   299  00FD49  2900               	dw	10496
   300  00FD4B  2C00               	dw	11264
   301  00FD4D                     __end_of_InitList:
   302                           	opt stack 0
   303  00FD4D                     Timer0_Init@PRESCALE:
   304                           	opt stack 0
   305  00FD4D  0002               	dw	2
   306  00FD4F  0004               	dw	4
   307  00FD51  0008               	dw	8
   308  00FD53  0010               	dw	16
   309  00FD55  0020               	dw	32
   310  00FD57  0040               	dw	64
   311  00FD59  0080               	dw	128
   312  00FD5B  0100               	dw	256
   313  00FD5D                     __end_ofTimer0_Init@PRESCALE:
   314                           	opt stack 0
   315  00FD5D                     PortProperty_Valid@F6830:
   316                           	opt stack 0
   317  00FD5D  00                 	db	0
   318  00FD5E  01                 	db	1
   319  00FD5F  02                 	db	2
   320  00FD60  00                 	db	0
   321  00FD61  01                 	db	1
   322  00FD62  00                 	db	0
   323  00FD63  01                 	db	1
   324  00FD64  00                 	db	0
   325  00FD65  02                 	db	2
   326  00FD66  02                 	db	2
   327  00FD67  00                 	db	0
   328  00FD68  00                 	db	0
   329  00FD69  03                 	db	3
   330  00FD6A  03                 	db	3
   331  00FD6B  03                 	db	3
   332  00FD6C  00                 	db	0
   333  00FD6D                     __end_ofPortProperty_Valid@F6830:
   334                           	opt stack 0
   335  00FD6D                     _dpowers:
   336                           	opt stack 0
   337  00FD6D  0001               	dw	1
   338  00FD6F  000A               	dw	10
   339  00FD71  0064               	dw	100
   340  00FD73  03E8               	dw	1000
   341  00FD75  2710               	dw	10000
   342  00FD77                     __end_of_dpowers:
   343                           	opt stack 0
   344  00FD77                     _MASKS:
   345                           	opt stack 0
   346  00FD77  00                 	db	0
   347  00FD78  01                 	db	1
   348  00FD79  03                 	db	3
   349  00FD7A  07                 	db	7
   350  00FD7B  0F                 	db	15
   351  00FD7C  1F                 	db	31
   352  00FD7D  3F                 	db	63
   353  00FD7E  7F                 	db	127
   354  00FD7F  FF                 	db	255
   355  00FD80                     __end_of_MASKS:
   356                           	opt stack 0
   357  00FD80                     HMI_SetButton@F7211:
   358                           	opt stack 0
   359  00FD80  00                 	db	0
   360  00FD81  02                 	db	2
   361  00FD82  01                 	db	1
   362  00FD83  03                 	db	3
   363  00FD84                     __end_ofHMI_SetButton@F7211:
   364                           	opt stack 0
   365  00FD84                     Timer2_Init@PRESCALE:
   366                           	opt stack 0
   367  00FD84  01                 	db	1
   368  00FD85  04                 	db	4
   369  00FD86  10                 	db	16
   370  00FD87                     __end_ofTimer2_Init@PRESCALE:
   371                           	opt stack 0
   372  00FD87                     _Font5x7:
   373                           	opt stack 0
   374  00FD87  00                 	db	0
   375  00FD88  00                 	db	0
   376  00FD89  00                 	db	0
   377  00FD8A  00                 	db	0
   378  00FD8B  00                 	db	0
   379  00FD8C  00                 	db	0
   380  00FD8D  00                 	db	0
   381  00FD8E  5F                 	db	95
   382  00FD8F  00                 	db	0
   383  00FD90  00                 	db	0
   384  00FD91  00                 	db	0
   385  00FD92  07                 	db	7
   386  00FD93  00                 	db	0
   387  00FD94  07                 	db	7
   388  00FD95  00                 	db	0
   389  00FD96  14                 	db	20
   390  00FD97  7F                 	db	127
   391  00FD98  14                 	db	20
   392  00FD99  7F                 	db	127
   393  00FD9A  14                 	db	20
   394  00FD9B  24                 	db	36
   395  00FD9C  2A                 	db	42
   396  00FD9D  7F                 	db	127
   397  00FD9E  2A                 	db	42
   398  00FD9F  12                 	db	18
   399  00FDA0  23                 	db	35
   400  00FDA1  13                 	db	19
   401  00FDA2  08                 	db	8
   402  00FDA3  64                 	db	100
   403  00FDA4  62                 	db	98
   404  00FDA5  36                 	db	54
   405  00FDA6  49                 	db	73
   406  00FDA7  55                 	db	85
   407  00FDA8  22                 	db	34
   408  00FDA9  50                 	db	80
   409  00FDAA  00                 	db	0
   410  00FDAB  05                 	db	5
   411  00FDAC  03                 	db	3
   412  00FDAD  00                 	db	0
   413  00FDAE  00                 	db	0
   414  00FDAF  00                 	db	0
   415  00FDB0  1C                 	db	28
   416  00FDB1  22                 	db	34
   417  00FDB2  41                 	db	65
   418  00FDB3  00                 	db	0
   419  00FDB4  00                 	db	0
   420  00FDB5  41                 	db	65
   421  00FDB6  22                 	db	34
   422  00FDB7  1C                 	db	28
   423  00FDB8  00                 	db	0
   424  00FDB9  08                 	db	8
   425  00FDBA  2A                 	db	42
   426  00FDBB  1C                 	db	28
   427  00FDBC  2A                 	db	42
   428  00FDBD  08                 	db	8
   429  00FDBE  08                 	db	8
   430  00FDBF  08                 	db	8
   431  00FDC0  3E                 	db	62
   432  00FDC1  08                 	db	8
   433  00FDC2  08                 	db	8
   434  00FDC3  00                 	db	0
   435  00FDC4  50                 	db	80
   436  00FDC5  30                 	db	48
   437  00FDC6  00                 	db	0
   438  00FDC7  00                 	db	0
   439  00FDC8  08                 	db	8
   440  00FDC9  08                 	db	8
   441  00FDCA  08                 	db	8
   442  00FDCB  08                 	db	8
   443  00FDCC  08                 	db	8
   444  00FDCD  00                 	db	0
   445  00FDCE  60                 	db	96
   446  00FDCF  60                 	db	96
   447  00FDD0  00                 	db	0
   448  00FDD1  00                 	db	0
   449  00FDD2  20                 	db	32
   450  00FDD3  10                 	db	16
   451  00FDD4  08                 	db	8
   452  00FDD5  04                 	db	4
   453  00FDD6  02                 	db	2
   454  00FDD7  3E                 	db	62
   455  00FDD8  51                 	db	81
   456  00FDD9  49                 	db	73
   457  00FDDA  45                 	db	69
   458  00FDDB  3E                 	db	62
   459  00FDDC  00                 	db	0
   460  00FDDD  42                 	db	66
   461  00FDDE  7F                 	db	127
   462  00FDDF  40                 	db	64
   463  00FDE0  00                 	db	0
   464  00FDE1  42                 	db	66
   465  00FDE2  61                 	db	97
   466  00FDE3  51                 	db	81
   467  00FDE4  49                 	db	73
   468  00FDE5  46                 	db	70
   469  00FDE6  21                 	db	33
   470  00FDE7  41                 	db	65
   471  00FDE8  45                 	db	69
   472  00FDE9  4B                 	db	75
   473  00FDEA  31                 	db	49
   474  00FDEB  18                 	db	24
   475  00FDEC  14                 	db	20
   476  00FDED  12                 	db	18
   477  00FDEE  7F                 	db	127
   478  00FDEF  10                 	db	16
   479  00FDF0  27                 	db	39
   480  00FDF1  45                 	db	69
   481  00FDF2  45                 	db	69
   482  00FDF3  45                 	db	69
   483  00FDF4  39                 	db	57
   484  00FDF5  3C                 	db	60
   485  00FDF6  4A                 	db	74
   486  00FDF7  49                 	db	73
   487  00FDF8  49                 	db	73
   488  00FDF9  30                 	db	48
   489  00FDFA  01                 	db	1
   490  00FDFB  71                 	db	113
   491  00FDFC  09                 	db	9
   492  00FDFD  05                 	db	5
   493  00FDFE  03                 	db	3
   494  00FDFF  36                 	db	54
   495  00FE00  49                 	db	73
   496  00FE01  49                 	db	73
   497  00FE02  49                 	db	73
   498  00FE03  36                 	db	54
   499  00FE04  06                 	db	6
   500  00FE05  49                 	db	73
   501  00FE06  49                 	db	73
   502  00FE07  29                 	db	41
   503  00FE08  1E                 	db	30
   504  00FE09  00                 	db	0
   505  00FE0A  36                 	db	54
   506  00FE0B  36                 	db	54
   507  00FE0C  00                 	db	0
   508  00FE0D  00                 	db	0
   509  00FE0E  00                 	db	0
   510  00FE0F  56                 	db	86
   511  00FE10  36                 	db	54
   512  00FE11  00                 	db	0
   513  00FE12  00                 	db	0
   514  00FE13  00                 	db	0
   515  00FE14  08                 	db	8
   516  00FE15  14                 	db	20
   517  00FE16  22                 	db	34
   518  00FE17  41                 	db	65
   519  00FE18  14                 	db	20
   520  00FE19  14                 	db	20
   521  00FE1A  14                 	db	20
   522  00FE1B  14                 	db	20
   523  00FE1C  14                 	db	20
   524  00FE1D  41                 	db	65
   525  00FE1E  22                 	db	34
   526  00FE1F  14                 	db	20
   527  00FE20  08                 	db	8
   528  00FE21  00                 	db	0
   529  00FE22  02                 	db	2
   530  00FE23  01                 	db	1
   531  00FE24  51                 	db	81
   532  00FE25  09                 	db	9
   533  00FE26  06                 	db	6
   534  00FE27  32                 	db	50
   535  00FE28  49                 	db	73
   536  00FE29  79                 	db	121
   537  00FE2A  41                 	db	65
   538  00FE2B  3E                 	db	62
   539  00FE2C  7E                 	db	126
   540  00FE2D  11                 	db	17
   541  00FE2E  11                 	db	17
   542  00FE2F  11                 	db	17
   543  00FE30  7E                 	db	126
   544  00FE31  7F                 	db	127
   545  00FE32  49                 	db	73
   546  00FE33  49                 	db	73
   547  00FE34  49                 	db	73
   548  00FE35  36                 	db	54
   549  00FE36  3E                 	db	62
   550  00FE37  41                 	db	65
   551  00FE38  41                 	db	65
   552  00FE39  41                 	db	65
   553  00FE3A  22                 	db	34
   554  00FE3B  7F                 	db	127
   555  00FE3C  41                 	db	65
   556  00FE3D  41                 	db	65
   557  00FE3E  22                 	db	34
   558  00FE3F  1C                 	db	28
   559  00FE40  7F                 	db	127
   560  00FE41  49                 	db	73
   561  00FE42  49                 	db	73
   562  00FE43  49                 	db	73
   563  00FE44  41                 	db	65
   564  00FE45  7F                 	db	127
   565  00FE46  09                 	db	9
   566  00FE47  09                 	db	9
   567  00FE48  01                 	db	1
   568  00FE49  01                 	db	1
   569  00FE4A  3E                 	db	62
   570  00FE4B  41                 	db	65
   571  00FE4C  41                 	db	65
   572  00FE4D  51                 	db	81
   573  00FE4E  32                 	db	50
   574  00FE4F  7F                 	db	127
   575  00FE50  08                 	db	8
   576  00FE51  08                 	db	8
   577  00FE52  08                 	db	8
   578  00FE53  7F                 	db	127
   579  00FE54  00                 	db	0
   580  00FE55  41                 	db	65
   581  00FE56  7F                 	db	127
   582  00FE57  41                 	db	65
   583  00FE58  00                 	db	0
   584  00FE59  20                 	db	32
   585  00FE5A  40                 	db	64
   586  00FE5B  41                 	db	65
   587  00FE5C  3F                 	db	63
   588  00FE5D  01                 	db	1
   589  00FE5E  7F                 	db	127
   590  00FE5F  08                 	db	8
   591  00FE60  14                 	db	20
   592  00FE61  22                 	db	34
   593  00FE62  41                 	db	65
   594  00FE63  7F                 	db	127
   595  00FE64  40                 	db	64
   596  00FE65  40                 	db	64
   597  00FE66  40                 	db	64
   598  00FE67  40                 	db	64
   599  00FE68  7F                 	db	127
   600  00FE69  02                 	db	2
   601  00FE6A  04                 	db	4
   602  00FE6B  02                 	db	2
   603  00FE6C  7F                 	db	127
   604  00FE6D  7F                 	db	127
   605  00FE6E  04                 	db	4
   606  00FE6F  08                 	db	8
   607  00FE70  10                 	db	16
   608  00FE71  7F                 	db	127
   609  00FE72  3E                 	db	62
   610  00FE73  41                 	db	65
   611  00FE74  41                 	db	65
   612  00FE75  41                 	db	65
   613  00FE76  3E                 	db	62
   614  00FE77  7F                 	db	127
   615  00FE78  09                 	db	9
   616  00FE79  09                 	db	9
   617  00FE7A  09                 	db	9
   618  00FE7B  06                 	db	6
   619  00FE7C  3E                 	db	62
   620  00FE7D  41                 	db	65
   621  00FE7E  51                 	db	81
   622  00FE7F  21                 	db	33
   623  00FE80  5E                 	db	94
   624  00FE81  7F                 	db	127
   625  00FE82  09                 	db	9
   626  00FE83  19                 	db	25
   627  00FE84  29                 	db	41
   628  00FE85  46                 	db	70
   629  00FE86  46                 	db	70
   630  00FE87  49                 	db	73
   631  00FE88  49                 	db	73
   632  00FE89  49                 	db	73
   633  00FE8A  31                 	db	49
   634  00FE8B  01                 	db	1
   635  00FE8C  01                 	db	1
   636  00FE8D  7F                 	db	127
   637  00FE8E  01                 	db	1
   638  00FE8F  01                 	db	1
   639  00FE90  3F                 	db	63
   640  00FE91  40                 	db	64
   641  00FE92  40                 	db	64
   642  00FE93  40                 	db	64
   643  00FE94  3F                 	db	63
   644  00FE95  1F                 	db	31
   645  00FE96  20                 	db	32
   646  00FE97  40                 	db	64
   647  00FE98  20                 	db	32
   648  00FE99  1F                 	db	31
   649  00FE9A  7F                 	db	127
   650  00FE9B  20                 	db	32
   651  00FE9C  18                 	db	24
   652  00FE9D  20                 	db	32
   653  00FE9E  7F                 	db	127
   654  00FE9F  63                 	db	99
   655  00FEA0  14                 	db	20
   656  00FEA1  08                 	db	8
   657  00FEA2  14                 	db	20
   658  00FEA3  63                 	db	99
   659  00FEA4  03                 	db	3
   660  00FEA5  04                 	db	4
   661  00FEA6  78                 	db	120
   662  00FEA7  04                 	db	4
   663  00FEA8  03                 	db	3
   664  00FEA9  61                 	db	97
   665  00FEAA  51                 	db	81
   666  00FEAB  49                 	db	73
   667  00FEAC  45                 	db	69
   668  00FEAD  43                 	db	67
   669  00FEAE  00                 	db	0
   670  00FEAF  00                 	db	0
   671  00FEB0  7F                 	db	127
   672  00FEB1  41                 	db	65
   673  00FEB2  41                 	db	65
   674  00FEB3  02                 	db	2
   675  00FEB4  04                 	db	4
   676  00FEB5  08                 	db	8
   677  00FEB6  10                 	db	16
   678  00FEB7  20                 	db	32
   679  00FEB8  41                 	db	65
   680  00FEB9  41                 	db	65
   681  00FEBA  7F                 	db	127
   682  00FEBB  00                 	db	0
   683  00FEBC  00                 	db	0
   684  00FEBD  04                 	db	4
   685  00FEBE  02                 	db	2
   686  00FEBF  01                 	db	1
   687  00FEC0  02                 	db	2
   688  00FEC1  04                 	db	4
   689  00FEC2  40                 	db	64
   690  00FEC3  40                 	db	64
   691  00FEC4  40                 	db	64
   692  00FEC5  40                 	db	64
   693  00FEC6  40                 	db	64
   694  00FEC7  00                 	db	0
   695  00FEC8  01                 	db	1
   696  00FEC9  02                 	db	2
   697  00FECA  04                 	db	4
   698  00FECB  00                 	db	0
   699  00FECC  20                 	db	32
   700  00FECD  54                 	db	84
   701  00FECE  54                 	db	84
   702  00FECF  54                 	db	84
   703  00FED0  78                 	db	120
   704  00FED1  7F                 	db	127
   705  00FED2  48                 	db	72
   706  00FED3  44                 	db	68
   707  00FED4  44                 	db	68
   708  00FED5  38                 	db	56
   709  00FED6  38                 	db	56
   710  00FED7  44                 	db	68
   711  00FED8  44                 	db	68
   712  00FED9  44                 	db	68
   713  00FEDA  20                 	db	32
   714  00FEDB  38                 	db	56
   715  00FEDC  44                 	db	68
   716  00FEDD  44                 	db	68
   717  00FEDE  48                 	db	72
   718  00FEDF  7F                 	db	127
   719  00FEE0  38                 	db	56
   720  00FEE1  54                 	db	84
   721  00FEE2  54                 	db	84
   722  00FEE3  54                 	db	84
   723  00FEE4  18                 	db	24
   724  00FEE5  08                 	db	8
   725  00FEE6  7E                 	db	126
   726  00FEE7  09                 	db	9
   727  00FEE8  01                 	db	1
   728  00FEE9  02                 	db	2
   729  00FEEA  08                 	db	8
   730  00FEEB  14                 	db	20
   731  00FEEC  54                 	db	84
   732  00FEED  54                 	db	84
   733  00FEEE  3C                 	db	60
   734  00FEEF  7F                 	db	127
   735  00FEF0  08                 	db	8
   736  00FEF1  04                 	db	4
   737  00FEF2  04                 	db	4
   738  00FEF3  78                 	db	120
   739  00FEF4  00                 	db	0
   740  00FEF5  44                 	db	68
   741  00FEF6  7D                 	db	125
   742  00FEF7  40                 	db	64
   743  00FEF8  00                 	db	0
   744  00FEF9  20                 	db	32
   745  00FEFA  40                 	db	64
   746  00FEFB  44                 	db	68
   747  00FEFC  3D                 	db	61
   748  00FEFD  00                 	db	0
   749  00FEFE  00                 	db	0
   750  00FEFF  7F                 	db	127
   751  00FF00  10                 	db	16
   752  00FF01  28                 	db	40
   753  00FF02  44                 	db	68
   754  00FF03  00                 	db	0
   755  00FF04  41                 	db	65
   756  00FF05  7F                 	db	127
   757  00FF06  40                 	db	64
   758  00FF07  00                 	db	0
   759  00FF08  7C                 	db	124
   760  00FF09  04                 	db	4
   761  00FF0A  18                 	db	24
   762  00FF0B  04                 	db	4
   763  00FF0C  78                 	db	120
   764  00FF0D  7C                 	db	124
   765  00FF0E  08                 	db	8
   766  00FF0F  04                 	db	4
   767  00FF10  04                 	db	4
   768  00FF11  78                 	db	120
   769  00FF12  38                 	db	56
   770  00FF13  44                 	db	68
   771  00FF14  44                 	db	68
   772  00FF15  44                 	db	68
   773  00FF16  38                 	db	56
   774  00FF17  7C                 	db	124
   775  00FF18  14                 	db	20
   776  00FF19  14                 	db	20
   777  00FF1A  14                 	db	20
   778  00FF1B  08                 	db	8
   779  00FF1C  08                 	db	8
   780  00FF1D  14                 	db	20
   781  00FF1E  14                 	db	20
   782  00FF1F  18                 	db	24
   783  00FF20  7C                 	db	124
   784  00FF21  7C                 	db	124
   785  00FF22  08                 	db	8
   786  00FF23  04                 	db	4
   787  00FF24  04                 	db	4
   788  00FF25  08                 	db	8
   789  00FF26  48                 	db	72
   790  00FF27  54                 	db	84
   791  00FF28  54                 	db	84
   792  00FF29  54                 	db	84
   793  00FF2A  20                 	db	32
   794  00FF2B  04                 	db	4
   795  00FF2C  3F                 	db	63
   796  00FF2D  44                 	db	68
   797  00FF2E  40                 	db	64
   798  00FF2F  20                 	db	32
   799  00FF30  3C                 	db	60
   800  00FF31  40                 	db	64
   801  00FF32  40                 	db	64
   802  00FF33  20                 	db	32
   803  00FF34  7C                 	db	124
   804  00FF35  1C                 	db	28
   805  00FF36  20                 	db	32
   806  00FF37  40                 	db	64
   807  00FF38  20                 	db	32
   808  00FF39  1C                 	db	28
   809  00FF3A  3C                 	db	60
   810  00FF3B  40                 	db	64
   811  00FF3C  30                 	db	48
   812  00FF3D  40                 	db	64
   813  00FF3E  3C                 	db	60
   814  00FF3F  44                 	db	68
   815  00FF40  28                 	db	40
   816  00FF41  10                 	db	16
   817  00FF42  28                 	db	40
   818  00FF43  44                 	db	68
   819  00FF44  0C                 	db	12
   820  00FF45  50                 	db	80
   821  00FF46  50                 	db	80
   822  00FF47  50                 	db	80
   823  00FF48  3C                 	db	60
   824  00FF49  44                 	db	68
   825  00FF4A  64                 	db	100
   826  00FF4B  54                 	db	84
   827  00FF4C  4C                 	db	76
   828  00FF4D  44                 	db	68
   829  00FF4E  00                 	db	0
   830  00FF4F  08                 	db	8
   831  00FF50  36                 	db	54
   832  00FF51  41                 	db	65
   833  00FF52  00                 	db	0
   834  00FF53  00                 	db	0
   835  00FF54  00                 	db	0
   836  00FF55  7F                 	db	127
   837  00FF56  00                 	db	0
   838  00FF57  00                 	db	0
   839  00FF58  00                 	db	0
   840  00FF59  41                 	db	65
   841  00FF5A  36                 	db	54
   842  00FF5B  08                 	db	8
   843  00FF5C  00                 	db	0
   844  00FF5D  08                 	db	8
   845  00FF5E  08                 	db	8
   846  00FF5F  2A                 	db	42
   847  00FF60  1C                 	db	28
   848  00FF61  08                 	db	8
   849  00FF62  08                 	db	8
   850  00FF63  1C                 	db	28
   851  00FF64  2A                 	db	42
   852  00FF65  08                 	db	8
   853  00FF66  08                 	db	8
   854  00FF67                     __end_of_Font5x7:
   855                           	opt stack 0
   856  00FF67                     _PortG_Property:
   857                           	opt stack 0
   858  00FF67  FC00               	dw	64512
   859  00FF69                     __end_of_PortG_Property:
   860                           	opt stack 0
   861  00FF69                     _PortF_Property:
   862                           	opt stack 0
   863  00FF69  0FFF               	dw	4095
   864  00FF6B                     __end_of_PortF_Property:
   865                           	opt stack 0
   866  00FF6B                     _PortE_Property:
   867                           	opt stack 0
   868  00FF6B  0000               	dw	0
   869  00FF6D                     __end_of_PortE_Property:
   870                           	opt stack 0
   871  00FF6D                     _PortD_Property:
   872                           	opt stack 0
   873  00FF6D  FFFF               	dw	65535
   874  00FF6F                     __end_of_PortD_Property:
   875                           	opt stack 0
   876  00FF6F                     _PortC_Property:
   877                           	opt stack 0
   878  00FF6F  FFF0               	dw	65520
   879  00FF71                     __end_of_PortC_Property:
   880                           	opt stack 0
   881  00FF71                     _PortB_Property:
   882                           	opt stack 0
   883  00FF71  FF00               	dw	65280
   884  00FF73                     __end_of_PortB_Property:
   885                           	opt stack 0
   886  00FF73                     _PortA_Property:
   887                           	opt stack 0
   888  00FF73  00FF               	dw	255
   889  00FF75                     __end_of_PortA_Property:
   890                           	opt stack 0
   891  0000                     _TMR0	set	4054
   892  0000                     _PR2	set	4043
   893  0000                     _T2CONbits	set	4042
   894  0000                     _T0CONbits	set	4053
   895  0000                     _RCONbits	set	4048
   896  0000                     _OSCTUNEbits	set	3995
   897  0000                     _PIR3	set	4004
   898  0000                     _PIR2	set	4001
   899  0000                     _PIR1	set	3998
   900  0000                     _INTCONbits	set	4082
   901  0000                     _SSP2CON2bits	set	3947
   902  0000                     _SSP1CON2bits	set	4037
   903  0000                     _SSP1ADD	set	4040
   904  0000                     _ANCON0	set	4033
   905  0000                     _ADRESL	set	4035
   906  0000                     _ADRESH	set	4036
   907  0000                     _ADCON1bits	set	4033
   908  0000                     _ADCON0bits	set	4034
   909  0000                     _SSP2CON1bits	set	3948
   910  0000                     _SSP1CON1bits	set	4038
   911  0000                     _SSP2STATbits	set	3949
   912  0000                     _SSP1STATbits	set	4039
   913  0000                     _PIE3bits	set	4003
   914  0000                     _PIE1bits	set	3997
   915  0000                     _PIR3bits	set	4004
   916  0000                     _PIR1bits	set	3998
   917  0000                     _IPR3bits	set	4005
   918  0000                     _IPR1bits	set	3999
   919  0000                     _PORTFbits	set	3973
   920  0000                     _SSP2CON2	set	3947
   921  0000                     _SSP1CON2	set	4037
   922  0000                     _SSP2BUF	set	3951
   923  0000                     _SSP2CON1	set	3948
   924  0000                     _SSP2STAT	set	3949
   925  0000                     _SSP1BUF	set	4041
   926  0000                     _SSP1CON1	set	4038
   927  0000                     _SSP1STAT	set	4039
   928  0000                     _LATG	set	3983
   929  0000                     _LATF	set	3982
   930  0000                     _LATE	set	3981
   931  0000                     _LATD	set	3980
   932  0000                     _LATC	set	3979
   933  0000                     _LATB	set	3978
   934  0000                     _LATA	set	3977
   935  0000                     _TRISG	set	3992
   936  0000                     _TRISF	set	3991
   937  0000                     _TRISE	set	3990
   938  0000                     _TRISD	set	3989
   939  0000                     _TRISC	set	3988
   940  0000                     _TRISB	set	3987
   941  0000                     _TRISA	set	3986
   942  0000                     _PORTG	set	3974
   943  0000                     _PORTF	set	3973
   944  0000                     _PORTE	set	3972
   945  0000                     _PORTD	set	3971
   946  0000                     _PORTC	set	3970
   947  0000                     _PORTB	set	3969
   948  0000                     _PORTA	set	3968
   949  00FF75                     STR_10:
   950  00FF75  20                 	db	32
   951  00FF76  20                 	db	32
   952  00FF77  20                 	db	32
   953  00FF78  20                 	db	32
   954  00FF79  20                 	db	32
   955  00FF7A  20                 	db	32
   956  00FF7B  20                 	db	32
   957  00FF7C  20                 	db	32
   958  00FF7D  20                 	db	32
   959  00FF7E  20                 	db	32
   960  00FF7F  20                 	db	32
   961  00FF80  20                 	db	32
   962  00FF81  20                 	db	32
   963  00FF82  20                 	db	32
   964  00FF83  20                 	db	32
   965  00FF84  20                 	db	32
   966  00FF85  20                 	db	32
   967  00FF86  20                 	db	32
   968  00FF87  20                 	db	32
   969  00FF88  20                 	db	32
   970  00FF89  20                 	db	32
   971  00FF8A  20                 	db	32
   972  00FF8B  0A                 	db	10
   973  00FF8C  00                 	db	0
   974  00FF8D  4A                 	db	74	;'J'
   975  00FF8E  61                 	db	97	;'a'
   976  00FF8F  6D                 	db	109	;'m'
   977  00FF90  69                 	db	105	;'i'
   978  00FF91  6E                 	db	110	;'n'
   979  00FF92  20                 	db	32
   980  00FF93  45                 	db	69	;'E'
   981  00FF94  61                 	db	97	;'a'
   982  00FF95  72                 	db	114	;'r'
   983  00FF96  6C                 	db	108	;'l'
   984  00FF97  79                 	db	121	;'y'
   985  00FF98  20                 	db	32
   986  00FF99  39                 	db	57	;'9'
   987  00FF9A  39                 	db	57	;'9'
   988  00FF9B  31                 	db	49	;'1'
   989  00FF9C  33                 	db	51	;'3'
   990  00FF9D  33                 	db	51	;'3'
   991  00FF9E  33                 	db	51	;'3'
   992  00FF9F  39                 	db	57	;'9'
   993  00FFA0  31                 	db	49	;'1'
   994  00FFA1  0A                 	db	10
   995  00FFA2  00                 	db	0
   996  00FFA3  43                 	db	67	;'C'
   997  00FFA4  75                 	db	117	;'u'
   998  00FFA5  72                 	db	114	;'r'
   999  00FFA6  72                 	db	114	;'r'
  1000  00FFA7  65                 	db	101	;'e'
  1001  00FFA8  6E                 	db	110	;'n'
  1002  00FFA9  74                 	db	116	;'t'
  1003  00FFAA  20                 	db	32
  1004  00FFAB  4D                 	db	77	;'M'
  1005  00FFAC  6F                 	db	111	;'o'
  1006  00FFAD  64                 	db	100	;'d'
  1007  00FFAE  65                 	db	101	;'e'
  1008  00FFAF  3A                 	db	58	;':'
  1009  00FFB0  0A                 	db	10
  1010  00FFB1  00                 	db	0
  1011  00FFB2  44                 	db	68	;'D'
  1012  00FFB3  69                 	db	105	;'i'
  1013  00FFB4  72                 	db	114	;'r'
  1014  00FFB5  65                 	db	101	;'e'
  1015  00FFB6  63                 	db	99	;'c'
  1016  00FFB7  74                 	db	116	;'t'
  1017  00FFB8  69                 	db	105	;'i'
  1018  00FFB9  6F                 	db	111	;'o'
  1019  00FFBA  6E                 	db	110	;'n'
  1020  00FFBB  3A                 	db	58	;':'
  1021  00FFBC  20                 	db	32
  1022  00FFBD  25                 	db	37
  1023  00FFBE  64                 	db	100	;'d'
  1024  00FFBF  0A                 	db	10
  1025  00FFC0  00                 	db	0
  1026  00FFC1  20                 	db	32
  1027  00FFC2  43                 	db	67	;'C'
  1028  00FFC3  6F                 	db	111	;'o'
  1029  00FFC4  6E                 	db	110	;'n'
  1030  00FFC5  74                 	db	116	;'t'
  1031  00FFC6  69                 	db	105	;'i'
  1032  00FFC7  6E                 	db	110	;'n'
  1033  00FFC8  75                 	db	117	;'u'
  1034  00FFC9  6F                 	db	111	;'o'
  1035  00FFCA  75                 	db	117	;'u'
  1036  00FFCB  73                 	db	115	;'s'
  1037  00FFCC  0A                 	db	10
  1038  00FFCD  0A                 	db	10
  1039  00FFCE  00                 	db	0
  1040  00FFCF  20                 	db	32
  1041  00FFD0  55                 	db	85	;'U'
  1042  00FFD1  6E                 	db	110	;'n'
  1043  00FFD2  64                 	db	100	;'d'
  1044  00FFD3  65                 	db	101	;'e'
  1045  00FFD4  66                 	db	102	;'f'
  1046  00FFD5  69                 	db	105	;'i'
  1047  00FFD6  6E                 	db	110	;'n'
  1048  00FFD7  65                 	db	101	;'e'
  1049  00FFD8  64                 	db	100	;'d'
  1050  00FFD9  0A                 	db	10
  1051  00FFDA  0A                 	db	10
  1052  00FFDB  00                 	db	0
  1053  00FFDC  20                 	db	32
  1054  00FFDD  50                 	db	80	;'P'
  1055  00FFDE  6F                 	db	111	;'o'
  1056  00FFDF  73                 	db	115	;'s'
  1057  00FFE0  69                 	db	105	;'i'
  1058  00FFE1  74                 	db	116	;'t'
  1059  00FFE2  69                 	db	105	;'i'
  1060  00FFE3  6F                 	db	111	;'o'
  1061  00FFE4  6E                 	db	110	;'n'
  1062  00FFE5  0A                 	db	10
  1063  00FFE6  0A                 	db	10
  1064  00FFE7  00                 	db	0
  1065  00FFE8  53                 	db	83	;'S'
  1066  00FFE9  70                 	db	112	;'p'
  1067  00FFEA  65                 	db	101	;'e'
  1068  00FFEB  65                 	db	101	;'e'
  1069  00FFEC  64                 	db	100	;'d'
  1070  00FFED  3A                 	db	58	;':'
  1071  00FFEE  20                 	db	32
  1072  00FFEF  25                 	db	37
  1073  00FFF0  64                 	db	100	;'d'
  1074  00FFF1  0A                 	db	10
  1075  00FFF2  00                 	db	0
  1076  00FFF3  20                 	db	32
  1077  00FFF4  53                 	db	83	;'S'
  1078  00FFF5  74                 	db	116	;'t'
  1079  00FFF6  65                 	db	101	;'e'
  1080  00FFF7  70                 	db	112	;'p'
  1081  00FFF8  0A                 	db	10
  1082  00FFF9  0A                 	db	10
  1083  00FFFA  00                 	db	0
  1084  00FFFB  25                 	db	37
  1085  00FFFC  63                 	db	99	;'c'
  1086  00FFFD  00                 	db	0
  1087  0000                     
  1088                           ; #config settings
  1089  00FFFE  00                 	db	0	; dummy byte at the end
  1090  0000                     
  1091                           	psect	cinit
  1092  011388                     __pcinit:
  1093                           	opt stack 0
  1094  011388                     start_initialization:
  1095                           	opt stack 0
  1096  011388                     __initialization:
  1097                           	opt stack 0
  1098                           
  1099                           ; Initialize objects allocated to BANK1 (8 bytes)
  1100                           ; load TBLPTR registers with __pidataBANK1
  1101  011388  0EAB               	movlw	low __pidataBANK1
  1102  01138A  6EF6               	movwf	tblptrl,c
  1103  01138C  0E1F               	movlw	high __pidataBANK1
  1104  01138E  6EF7               	movwf	tblptrh,c
  1105  011390  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1106  011392  6EF8               	movwf	tblptru,c
  1107  011394  EE01  F0CE         	lfsr	0,__pdataBANK1
  1108  011398  EE10 F008          	lfsr	1,8
  1109  01139C                     copy_data0:
  1110  01139C  0009               	tblrd		*+
  1111  01139E  CFF5 FFEE          	movff	tablat,postinc0
  1112  0113A2  50E5               	movf	postdec1,w,c
  1113  0113A4  50E1               	movf	fsr1l,w,c
  1114  0113A6  E1FA               	bnz	copy_data0
  1115                           
  1116                           ; Initialize objects allocated to BANK0 (8 bytes)
  1117                           ; load TBLPTR registers with __pidataBANK0
  1118  0113A8  0EA3               	movlw	low __pidataBANK0
  1119  0113AA  6EF6               	movwf	tblptrl,c
  1120  0113AC  0E1F               	movlw	high __pidataBANK0
  1121  0113AE  6EF7               	movwf	tblptrh,c
  1122  0113B0  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1123  0113B2  6EF8               	movwf	tblptru,c
  1124  0113B4  EE00  F0F8         	lfsr	0,__pdataBANK0
  1125  0113B8  EE10 F008          	lfsr	1,8
  1126  0113BC                     copy_data1:
  1127  0113BC  0009               	tblrd		*+
  1128  0113BE  CFF5 FFEE          	movff	tablat,postinc0
  1129  0113C2  50E5               	movf	postdec1,w,c
  1130  0113C4  50E1               	movf	fsr1l,w,c
  1131  0113C6  E1FA               	bnz	copy_data1
  1132                           
  1133                           ; Initialize objects allocated to COMRAM (9 bytes)
  1134                           ; load TBLPTR registers with __pidataCOMRAM
  1135  0113C8  0E9A               	movlw	low __pidataCOMRAM
  1136  0113CA  6EF6               	movwf	tblptrl,c
  1137  0113CC  0E1F               	movlw	high __pidataCOMRAM
  1138  0113CE  6EF7               	movwf	tblptrh,c
  1139  0113D0  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  1140  0113D2  6EF8               	movwf	tblptru,c
  1141  0113D4  EE00  F040         	lfsr	0,__pdataCOMRAM
  1142  0113D8  EE10 F009          	lfsr	1,9
  1143  0113DC                     copy_data2:
  1144  0113DC  0009               	tblrd		*+
  1145  0113DE  CFF5 FFEE          	movff	tablat,postinc0
  1146  0113E2  50E5               	movf	postdec1,w,c
  1147  0113E4  50E1               	movf	fsr1l,w,c
  1148  0113E6  E1FA               	bnz	copy_data2
  1149                           
  1150                           ; Clear objects allocated to BIGRAM (300 bytes)
  1151  0113E8  EE02  F046         	lfsr	0,__pbssBIGRAM
  1152  0113EC  EE11 F02C          	lfsr	1,300
  1153  0113F0                     clear_0:
  1154  0113F0  6AEE               	clrf	postinc0,c
  1155  0113F2  50E5               	movf	postdec1,w,c
  1156  0113F4  50E1               	movf	fsr1l,w,c
  1157  0113F6  E1FC               	bnz	clear_0
  1158  0113F8  50E2               	movf	fsr1h,w,c
  1159  0113FA  E1FA               	bnz	clear_0
  1160                           
  1161                           ; Clear objects allocated to BANK2 (70 bytes)
  1162  0113FC  EE02  F000         	lfsr	0,__pbssBANK2
  1163  011400  0E46               	movlw	70
  1164  011402                     clear_1:
  1165  011402  6AEE               	clrf	postinc0,c
  1166  011404  06E8               	decf	wreg,f,c
  1167  011406  E1FD               	bnz	clear_1
  1168                           
  1169                           ; Clear objects allocated to BANK1 (184 bytes)
  1170  011408  EE01  F000         	lfsr	0,__pbssBANK1
  1171  01140C  0EB8               	movlw	184
  1172  01140E                     clear_2:
  1173  01140E  6AEE               	clrf	postinc0,c
  1174  011410  06E8               	decf	wreg,f,c
  1175  011412  E1FD               	bnz	clear_2
  1176                           
  1177                           ; Clear objects allocated to BANK0 (104 bytes)
  1178  011414  EE00  F060         	lfsr	0,__pbssBANK0
  1179  011418  0E68               	movlw	104
  1180  01141A                     clear_3:
  1181  01141A  6AEE               	clrf	postinc0,c
  1182  01141C  06E8               	decf	wreg,f,c
  1183  01141E  E1FD               	bnz	clear_3
  1184                           
  1185                           ; Clear objects allocated to COMRAM (27 bytes)
  1186  011420  EE00  F025         	lfsr	0,__pbssCOMRAM
  1187  011424  0E1B               	movlw	27
  1188  011426                     clear_4:
  1189  011426  6AEE               	clrf	postinc0,c
  1190  011428  06E8               	decf	wreg,f,c
  1191  01142A  E1FD               	bnz	clear_4
  1192  01142C                     end_of_initialization:
  1193                           	opt stack 0
  1194  01142C                     __end_of__initialization:
  1195                           	opt stack 0
  1196  01142C  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1197  01142E  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1198  011430  0100               	movlb	0
  1199  011432  EFFD  F08C         	goto	_main	;jump to C main() function
  1200                           tblptru	equ	0xFF8
  1201                           tblptrh	equ	0xFF7
  1202                           tblptrl	equ	0xFF6
  1203                           tablat	equ	0xFF5
  1204                           postinc0	equ	0xFEE
  1205                           wreg	equ	0xFE8
  1206                           postdec1	equ	0xFE5
  1207                           fsr1h	equ	0xFE2
  1208                           fsr1l	equ	0xFE1
  1209                           
  1210                           	psect	bssCOMRAM
  1211  000025                     __pbssCOMRAM:
  1212                           	opt stack 0
  1213  000025                     _lQueue:
  1214                           	opt stack 0
  1215  000025                     	ds	3
  1216  000028                     _pShiftVal:
  1217                           	opt stack 0
  1218  000028                     	ds	2
  1219  00002A                     _COUNTER:
  1220                           	opt stack 0
  1221  00002A                     	ds	2
  1222  00002C                     _lMotor:
  1223                           	opt stack 0
  1224  00002C                     	ds	2
  1225  00002E                     _lCurrent:
  1226                           	opt stack 0
  1227  00002E                     	ds	2
  1228  000030                     HMI_GRender@a:
  1229                           	opt stack 0
  1230  000030                     	ds	2
  1231  000032                     _gBackcolour:
  1232                           	opt stack 0
  1233  000032                     	ds	2
  1234  000034                     Event_TestButton@j:
  1235                           	opt stack 0
  1236  000034                     	ds	1
  1237  000035                     Timer2_Init@PRE:
  1238                           	opt stack 0
  1239  000035                     	ds	1
  1240  000036                     Timer2_Init@INDEX:
  1241                           	opt stack 0
  1242  000036                     	ds	1
  1243  000037                     Timer0_Init@PRE:
  1244                           	opt stack 0
  1245  000037                     	ds	1
  1246  000038                     _INDEX:
  1247                           	opt stack 0
  1248  000038                     	ds	1
  1249  000039                     rand@screw:
  1250                           	opt stack 0
  1251  000039                     	ds	1
  1252  00003A                     OutSeg@a:
  1253                           	opt stack 0
  1254  00003A                     	ds	1
  1255  00003B                     OutSeg@segset:
  1256                           	opt stack 0
  1257  00003B                     	ds	1
  1258  00003C                     OutSeg@cur:
  1259                           	opt stack 0
  1260  00003C                     	ds	1
  1261  00003D                     _lBufferY:
  1262                           	opt stack 0
  1263  00003D                     	ds	1
  1264  00003E                     _lBufferX:
  1265                           	opt stack 0
  1266  00003E                     	ds	1
  1267  00003F                     _clearall:
  1268                           	opt stack 0
  1269  00003F                     	ds	1
  1270                           tblptru	equ	0xFF8
  1271                           tblptrh	equ	0xFF7
  1272                           tblptrl	equ	0xFF6
  1273                           tablat	equ	0xFF5
  1274                           postinc0	equ	0xFEE
  1275                           wreg	equ	0xFE8
  1276                           postdec1	equ	0xFE5
  1277                           fsr1h	equ	0xFE2
  1278                           fsr1l	equ	0xFE1
  1279                           
  1280                           	psect	dataCOMRAM
  1281  000040                     __pdataCOMRAM:
  1282                           	opt stack 0
  1283  000040                     _gCursor:
  1284                           	opt stack 0
  1285  000040                     	ds	4
  1286  000044                     _Bus_State:
  1287                           	opt stack 0
  1288  000044                     	ds	1
  1289  000045                     _change:
  1290                           	opt stack 0
  1291  000045                     	ds	1
  1292  000046                     	ds	1
  1293  000047                     _l:
  1294                           	opt stack 0
  1295  000047                     	ds	1
  1296  000048                     _w:
  1297                           	opt stack 0
  1298  000048                     	ds	1
  1299                           tblptru	equ	0xFF8
  1300                           tblptrh	equ	0xFF7
  1301                           tblptrl	equ	0xFF6
  1302                           tablat	equ	0xFF5
  1303                           postinc0	equ	0xFEE
  1304                           wreg	equ	0xFE8
  1305                           postdec1	equ	0xFE5
  1306                           fsr1h	equ	0xFE2
  1307                           fsr1l	equ	0xFE1
  1308                           
  1309                           	psect	bssBANK0
  1310  000060                     __pbssBANK0:
  1311                           	opt stack 0
  1312  000060                     Timer2_Init@DIV:
  1313                           	opt stack 0
  1314  000060                     	ds	4
  1315  000064                     Timer0_Init@DIV:
  1316                           	opt stack 0
  1317  000064                     	ds	4
  1318  000068                     _gISR:
  1319                           	opt stack 0
  1320  000068                     	ds	3
  1321  00006B                     _lStepFunction:
  1322                           	opt stack 0
  1323  00006B                     	ds	3
  1324  00006E                     _I2C1_Done:
  1325                           	opt stack 0
  1326  00006E                     	ds	3
  1327  000071                     _mode:
  1328                           	opt stack 0
  1329  000071                     	ds	2
  1330  000073                     _speed:
  1331                           	opt stack 0
  1332  000073                     	ds	2
  1333  000075                     _direction:
  1334                           	opt stack 0
  1335  000075                     	ds	2
  1336  000077                     _val:
  1337                           	opt stack 0
  1338  000077                     	ds	2
  1339  000079                     SPI_Send9@dat:
  1340                           	opt stack 0
  1341  000079                     	ds	2
  1342  00007B                     _u:
  1343                           	opt stack 0
  1344  00007B                     	ds	1
  1345  00007C                     _j:
  1346                           	opt stack 0
  1347  00007C                     	ds	1
  1348  00007D                     _i:
  1349                           	opt stack 0
  1350  00007D                     	ds	1
  1351  00007E                     _ADC_Initialised:
  1352                           	opt stack 0
  1353  00007E                     	ds	1
  1354  00007F                     _PortE:
  1355                           	opt stack 0
  1356  00007F                     	ds	10
  1357  000089                     _PortD:
  1358                           	opt stack 0
  1359  000089                     	ds	10
  1360  000093                     _PortC:
  1361                           	opt stack 0
  1362  000093                     	ds	10
  1363  00009D                     _I2C2T:
  1364                           	opt stack 0
  1365  00009D                     	ds	7
  1366  0000A4                     _I2C1T:
  1367                           	opt stack 0
  1368  0000A4                     	ds	7
  1369  0000AB                     _Stepper:
  1370                           	opt stack 0
  1371  0000AB                     	ds	6
  1372  0000B1                     _ADC_AN2:
  1373                           	opt stack 0
  1374  0000B1                     	ds	5
  1375  0000B6                     _ADC_AN1:
  1376                           	opt stack 0
  1377  0000B6                     	ds	5
  1378  0000BB                     _ADC_AN0:
  1379                           	opt stack 0
  1380  0000BB                     	ds	5
  1381  0000C0                     LCD_DrawRectangle@p4:
  1382                           	opt stack 0
  1383  0000C0                     	ds	4
  1384  0000C4                     LCD_DrawRectangle@p2:
  1385                           	opt stack 0
  1386  0000C4                     	ds	4
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           postinc0	equ	0xFEE
  1392                           wreg	equ	0xFE8
  1393                           postdec1	equ	0xFE5
  1394                           fsr1h	equ	0xFE2
  1395                           fsr1l	equ	0xFE1
  1396                           
  1397                           	psect	dataBANK0
  1398  0000F8                     __pdataBANK0:
  1399                           	opt stack 0
  1400  0000F8                     _gCharSize:
  1401                           	opt stack 0
  1402  0000F8                     	ds	4
  1403  0000FC                     _gForecolour:
  1404                           	opt stack 0
  1405  0000FC                     	ds	2
  1406  0000FE                     	ds	1
  1407  0000FF                     	ds	1
  1408                           tblptru	equ	0xFF8
  1409                           tblptrh	equ	0xFF7
  1410                           tblptrl	equ	0xFF6
  1411                           tablat	equ	0xFF5
  1412                           postinc0	equ	0xFEE
  1413                           wreg	equ	0xFE8
  1414                           postdec1	equ	0xFE5
  1415                           fsr1h	equ	0xFE2
  1416                           fsr1l	equ	0xFE1
  1417                           
  1418                           	psect	bssBANK1
  1419  000100                     __pbssBANK1:
  1420                           	opt stack 0
  1421  000100                     _lCBuffer:
  1422                           	opt stack 0
  1423  000100                     	ds	30
  1424  00011E                     _I2C2_More:
  1425                           	opt stack 0
  1426  00011E                     	ds	3
  1427  000121                     _I2C1_More:
  1428                           	opt stack 0
  1429  000121                     	ds	3
  1430  000124                     _I2C2_Done:
  1431                           	opt stack 0
  1432  000124                     	ds	3
  1433  000127                     _HMIBoard:
  1434                           	opt stack 0
  1435  000127                     	ds	58
  1436  000161                     _SPI1:
  1437                           	opt stack 0
  1438  000161                     	ds	11
  1439  00016C                     _SPI2:
  1440                           	opt stack 0
  1441  00016C                     	ds	11
  1442  000177                     _DIPSwitch:
  1443                           	opt stack 0
  1444  000177                     	ds	10
  1445  000181                     _TestButton:
  1446                           	opt stack 0
  1447  000181                     	ds	10
  1448  00018B                     _PortG:
  1449                           	opt stack 0
  1450  00018B                     	ds	10
  1451  000195                     _PortB:
  1452                           	opt stack 0
  1453  000195                     	ds	10
  1454  00019F                     _PortA:
  1455                           	opt stack 0
  1456  00019F                     	ds	10
  1457  0001A9                     _PortF:
  1458                           	opt stack 0
  1459  0001A9                     	ds	10
  1460  0001B3                     _ADC_AN3:
  1461                           	opt stack 0
  1462  0001B3                     	ds	5
  1463                           tblptru	equ	0xFF8
  1464                           tblptrh	equ	0xFF7
  1465                           tblptrl	equ	0xFF6
  1466                           tablat	equ	0xFF5
  1467                           postinc0	equ	0xFEE
  1468                           wreg	equ	0xFE8
  1469                           postdec1	equ	0xFE5
  1470                           fsr1h	equ	0xFE2
  1471                           fsr1l	equ	0xFE1
  1472                           
  1473                           	psect	dataBANK1
  1474  0001CE                     __pdataBANK1:
  1475                           	opt stack 0
  1476  0001CE                     Console_Render@F6956:
  1477                           	opt stack 0
  1478  0001CE                     	ds	4
  1479  0001D2                     _gLineSize:
  1480                           	opt stack 0
  1481  0001D2                     	ds	4
  1482                           tblptru	equ	0xFF8
  1483                           tblptrh	equ	0xFF7
  1484                           tblptrl	equ	0xFF6
  1485                           tablat	equ	0xFF5
  1486                           postinc0	equ	0xFEE
  1487                           wreg	equ	0xFE8
  1488                           postdec1	equ	0xFE5
  1489                           fsr1h	equ	0xFE2
  1490                           fsr1l	equ	0xFE1
  1491                           
  1492                           	psect	bssBANK2
  1493  000200                     __pbssBANK2:
  1494                           	opt stack 0
  1495  000200                     Console_MakeField@Fill:
  1496                           	opt stack 0
  1497  000200                     	ds	70
  1498                           tblptru	equ	0xFF8
  1499                           tblptrh	equ	0xFF7
  1500                           tblptrl	equ	0xFF6
  1501                           tablat	equ	0xFF5
  1502                           postinc0	equ	0xFEE
  1503                           wreg	equ	0xFE8
  1504                           postdec1	equ	0xFE5
  1505                           fsr1h	equ	0xFE2
  1506                           fsr1l	equ	0xFE1
  1507                           
  1508                           	psect	bssBIGRAM
  1509  000246                     __pbssBIGRAM:
  1510                           	opt stack 0
  1511  000246                     _lBuffer:
  1512                           	opt stack 0
  1513  000246                     	ds	300
  1514                           tblptru	equ	0xFF8
  1515                           tblptrh	equ	0xFF7
  1516                           tblptrl	equ	0xFF6
  1517                           tablat	equ	0xFF5
  1518                           postinc0	equ	0xFEE
  1519                           wreg	equ	0xFE8
  1520                           postdec1	equ	0xFE5
  1521                           fsr1h	equ	0xFE2
  1522                           fsr1l	equ	0xFE1
  1523                           
  1524                           	psect	cstackBANK1
  1525  0001B8                     __pcstackBANK1:
  1526                           	opt stack 0
  1527  0001B8                     Port_CheckQuadType@pInput:
  1528                           	opt stack 0
  1529  0001B8                     Motor_Init@pMotor:
  1530                           	opt stack 0
  1531                           
  1532                           ; 2 bytes @ 0x0
  1533  0001B8                     	ds	2
  1534  0001BA                     Port_CheckQuadType@pQuad:
  1535                           	opt stack 0
  1536  0001BA                     Motor_Init@pAddress:
  1537                           	opt stack 0
  1538                           
  1539                           ; 2 bytes @ 0x2
  1540  0001BA                     	ds	1
  1541  0001BB                     Port_CheckQuadType@pDrive:
  1542                           	opt stack 0
  1543                           
  1544                           ; 1 bytes @ 0x3
  1545  0001BB                     	ds	1
  1546  0001BC                     Port_CheckQuadType@Pair1:
  1547                           	opt stack 0
  1548                           
  1549                           ; 1 bytes @ 0x4
  1550  0001BC                     	ds	1
  1551  0001BD                     Port_CheckQuadType@Pair2:
  1552                           	opt stack 0
  1553                           
  1554                           ; 1 bytes @ 0x5
  1555  0001BD                     	ds	1
  1556  0001BE                     Port_CheckQuadType@Output:
  1557                           	opt stack 0
  1558                           
  1559                           ; 1 bytes @ 0x6
  1560  0001BE                     	ds	1
  1561  0001BF                     Port_CheckPortType@pInput:
  1562                           	opt stack 0
  1563  0001BF                     Port_SetQuadType@pInput:
  1564                           	opt stack 0
  1565                           
  1566                           ; 2 bytes @ 0x7
  1567  0001BF                     	ds	2
  1568  0001C1                     Port_CheckPortType@pDrive:
  1569                           	opt stack 0
  1570  0001C1                     Port_SetQuadType@pQuad:
  1571                           	opt stack 0
  1572                           
  1573                           ; 1 bytes @ 0x9
  1574  0001C1                     	ds	1
  1575  0001C2                     Port_SetQuadType@pType:
  1576                           	opt stack 0
  1577  0001C2                     Port_SetType@pInput:
  1578                           	opt stack 0
  1579                           
  1580                           ; 2 bytes @ 0xA
  1581  0001C2                     	ds	2
  1582  0001C4                     Port_SetType@pType:
  1583                           	opt stack 0
  1584                           
  1585                           ; 1 bytes @ 0xC
  1586  0001C4                     	ds	1
  1587  0001C5                     ??_Port_SetType:
  1588                           
  1589                           ; 1 bytes @ 0xD
  1590  0001C5                     	ds	2
  1591  0001C7                     Port_SetType@Output:
  1592                           	opt stack 0
  1593                           
  1594                           ; 1 bytes @ 0xF
  1595  0001C7                     	ds	1
  1596  0001C8                     Port_Init@pInput:
  1597                           	opt stack 0
  1598                           
  1599                           ; 2 bytes @ 0x10
  1600  0001C8                     	ds	2
  1601  0001CA                     Port_Init@pPort:
  1602                           	opt stack 0
  1603                           
  1604                           ; 1 bytes @ 0x12
  1605  0001CA                     	ds	1
  1606  0001CB                     ??_Port_Init:
  1607                           
  1608                           ; 1 bytes @ 0x13
  1609  0001CB                     	ds	2
  1610  0001CD                     Port_Init@i:
  1611                           	opt stack 0
  1612                           
  1613                           ; 1 bytes @ 0x15
  1614  0001CD                     	ds	1
  1615                           tblptru	equ	0xFF8
  1616                           tblptrh	equ	0xFF7
  1617                           tblptrl	equ	0xFF6
  1618                           tablat	equ	0xFF5
  1619                           postinc0	equ	0xFEE
  1620                           wreg	equ	0xFE8
  1621                           postdec1	equ	0xFE5
  1622                           fsr1h	equ	0xFE2
  1623                           fsr1l	equ	0xFE1
  1624                           
  1625                           	psect	cstackBANK0
  1626  0000C8                     __pcstackBANK0:
  1627                           	opt stack 0
  1628  0000C8                     ?_GetPortProperties:
  1629                           	opt stack 0
  1630  0000C8                     ?_GetPortPORT:
  1631                           	opt stack 0
  1632  0000C8                     ?_GetPortTRIS:
  1633                           	opt stack 0
  1634  0000C8                     ?___lldiv:
  1635                           	opt stack 0
  1636  0000C8                     Byte_SetBit@pInput:
  1637                           	opt stack 0
  1638  0000C8                     Byte_SetZone@pInput:
  1639                           	opt stack 0
  1640  0000C8                     Byte_GetZone@pInput:
  1641                           	opt stack 0
  1642  0000C8                     Byte_SetByte@pInput:
  1643                           	opt stack 0
  1644  0000C8                     delay_ms@ms:
  1645                           	opt stack 0
  1646  0000C8                     delay_us@us:
  1647                           	opt stack 0
  1648  0000C8                     MXK_Queue@pCallback:
  1649                           	opt stack 0
  1650  0000C8                     Timer0_Start@pFunction:
  1651                           	opt stack 0
  1652  0000C8                     ___lldiv@dividend:
  1653                           	opt stack 0
  1654                           
  1655                           ; 4 bytes @ 0x0
  1656  0000C8                     	ds	2
  1657  0000CA                     GetPortProperties@pInput:
  1658                           	opt stack 0
  1659  0000CA                     GetPortPORT@pInput:
  1660                           	opt stack 0
  1661  0000CA                     GetPortTRIS@pInput:
  1662                           	opt stack 0
  1663  0000CA                     Byte_SetBit@pBit:
  1664                           	opt stack 0
  1665  0000CA                     Byte_SetZone@pMax:
  1666                           	opt stack 0
  1667  0000CA                     Byte_GetZone@pMax:
  1668                           	opt stack 0
  1669  0000CA                     Byte_SetByte@pValue:
  1670                           	opt stack 0
  1671  0000CA                     delay_ms@u:
  1672                           	opt stack 0
  1673  0000CA                     delay_us@u:
  1674                           	opt stack 0
  1675                           
  1676                           ; 4 bytes @ 0x2
  1677  0000CA                     	ds	1
  1678  0000CB                     Byte_SetBit@pValue:
  1679                           	opt stack 0
  1680  0000CB                     Byte_SetZone@pChunk:
  1681                           	opt stack 0
  1682  0000CB                     Byte_GetZone@pChunk:
  1683                           	opt stack 0
  1684  0000CB                     Motor_Move@pMotor:
  1685                           	opt stack 0
  1686                           
  1687                           ; 2 bytes @ 0x3
  1688  0000CB                     	ds	1
  1689  0000CC                     ??_Byte_SetBit:
  1690  0000CC                     Byte_SetZone@pChunkSize:
  1691                           	opt stack 0
  1692  0000CC                     Byte_GetZone@pChunkSize:
  1693                           	opt stack 0
  1694  0000CC                     ___lldiv@divisor:
  1695                           	opt stack 0
  1696                           
  1697                           ; 4 bytes @ 0x4
  1698  0000CC                     	ds	1
  1699  0000CD                     ??_Byte_GetZone:
  1700  0000CD                     Byte_SetZone@pValue:
  1701                           	opt stack 0
  1702  0000CD                     Motor_Move@pDelta:
  1703                           	opt stack 0
  1704                           
  1705                           ; 2 bytes @ 0x5
  1706  0000CD                     	ds	1
  1707  0000CE                     ??_Byte_SetZone:
  1708  0000CE                     Byte_GetZone@MASK:
  1709                           	opt stack 0
  1710  0000CE                     MXK_BlockSwitchTo@CUR:
  1711                           	opt stack 0
  1712  0000CE                     MXK_SwitchTo@CUR:
  1713                           	opt stack 0
  1714                           
  1715                           ; 1 bytes @ 0x6
  1716  0000CE                     	ds	1
  1717  0000CF                     Byte_GetZone@Offset:
  1718                           	opt stack 0
  1719  0000CF                     MXK_BlockSwitchTo@pModule:
  1720                           	opt stack 0
  1721  0000CF                     MXK_SwitchTo@pModule:
  1722                           	opt stack 0
  1723                           
  1724                           ; 1 bytes @ 0x7
  1725  0000CF                     	ds	1
  1726  0000D0                     Byte_GetZone@Output:
  1727                           	opt stack 0
  1728  0000D0                     ___lldiv@quotient:
  1729                           	opt stack 0
  1730                           
  1731                           ; 4 bytes @ 0x8
  1732  0000D0                     	ds	1
  1733  0000D1                     Byte_SetZone@Offset:
  1734                           	opt stack 0
  1735  0000D1                     Byte_GetPair@pInput:
  1736                           	opt stack 0
  1737                           
  1738                           ; 2 bytes @ 0x9
  1739  0000D1                     	ds	1
  1740  0000D2                     Byte_SetZone@MASK:
  1741                           	opt stack 0
  1742                           
  1743                           ; 1 bytes @ 0xA
  1744  0000D2                     	ds	1
  1745  0000D3                     Byte_GetPair@pPair:
  1746                           	opt stack 0
  1747  0000D3                     Byte_SetPair@pInput:
  1748                           	opt stack 0
  1749  0000D3                     Byte_SetQuad@pInput:
  1750                           	opt stack 0
  1751                           
  1752                           ; 2 bytes @ 0xB
  1753  0000D3                     	ds	1
  1754  0000D4                     ___lldiv@counter:
  1755                           	opt stack 0
  1756  0000D4                     Word_GetPair@pInput:
  1757                           	opt stack 0
  1758                           
  1759                           ; 2 bytes @ 0xC
  1760  0000D4                     	ds	1
  1761  0000D5                     Byte_SetPair@pPair:
  1762                           	opt stack 0
  1763  0000D5                     Byte_SetQuad@pQuad:
  1764                           	opt stack 0
  1765  0000D5                     Timer0_Init@pFrequency:
  1766                           	opt stack 0
  1767                           
  1768                           ; 4 bytes @ 0xD
  1769  0000D5                     	ds	1
  1770  0000D6                     Byte_SetPair@pValue:
  1771                           	opt stack 0
  1772  0000D6                     Byte_SetQuad@pValue:
  1773                           	opt stack 0
  1774  0000D6                     Word_GetPair@pPair:
  1775                           	opt stack 0
  1776                           
  1777                           ; 1 bytes @ 0xE
  1778  0000D6                     	ds	1
  1779  0000D7                     Port_SetPin@pInput:
  1780                           	opt stack 0
  1781  0000D7                     Port_Set@pInput:
  1782                           	opt stack 0
  1783  0000D7                     Word_SetPair@pInput:
  1784                           	opt stack 0
  1785  0000D7                     PortProperty_Valid@pInput:
  1786                           	opt stack 0
  1787                           
  1788                           ; 2 bytes @ 0xF
  1789  0000D7                     	ds	2
  1790  0000D9                     ??_Timer0_Init:
  1791  0000D9                     Port_SetPin@pPin:
  1792                           	opt stack 0
  1793  0000D9                     Port_Set@pValue:
  1794                           	opt stack 0
  1795  0000D9                     Word_SetPair@pPair:
  1796                           	opt stack 0
  1797  0000D9                     PortProperty_Valid@pPinDrive:
  1798                           	opt stack 0
  1799                           
  1800                           ; 1 bytes @ 0x11
  1801  0000D9                     	ds	1
  1802  0000DA                     ??_Port_Set:
  1803  0000DA                     Port_SetPin@pValue:
  1804                           	opt stack 0
  1805  0000DA                     Word_SetPair@pValue:
  1806                           	opt stack 0
  1807  0000DA                     PortProperty_Valid@pPin:
  1808                           	opt stack 0
  1809                           
  1810                           ; 1 bytes @ 0x12
  1811  0000DA                     	ds	1
  1812  0000DB                     ??_PortProperty_Valid:
  1813  0000DB                     Port_SetPin@Type:
  1814                           	opt stack 0
  1815  0000DB                     Timer0_Init@pCPUClock:
  1816                           	opt stack 0
  1817                           
  1818                           ; 4 bytes @ 0x13
  1819  0000DB                     	ds	1
  1820  0000DC                     LED_Set@pValue:
  1821                           	opt stack 0
  1822                           
  1823                           ; 1 bytes @ 0x14
  1824  0000DC                     	ds	1
  1825  0000DD                     LED_Set@pLED:
  1826                           	opt stack 0
  1827  0000DD                     PortProperty_Valid@Errors:
  1828                           	opt stack 0
  1829                           
  1830                           ; 16 bytes @ 0x15
  1831  0000DD                     	ds	1
  1832  0000DE                     
  1833                           ; 1 bytes @ 0x16
  1834  0000DE                     	ds	1
  1835  0000DF                     Timer0_Init@DIVIDE:
  1836                           	opt stack 0
  1837                           
  1838                           ; 4 bytes @ 0x17
  1839  0000DF                     	ds	4
  1840  0000E3                     Motor_Speed@pMotor:
  1841                           	opt stack 0
  1842                           
  1843                           ; 2 bytes @ 0x1B
  1844  0000E3                     	ds	2
  1845  0000E5                     Motor_Speed@pFrequency:
  1846                           	opt stack 0
  1847                           
  1848                           ; 2 bytes @ 0x1D
  1849  0000E5                     	ds	2
  1850  0000E7                     
  1851                           ; 1 bytes @ 0x1F
  1852  0000E7                     	ds	3
  1853  0000EA                     Port_Set@TypeRequired:
  1854                           	opt stack 0
  1855                           
  1856                           ; 2 bytes @ 0x22
  1857  0000EA                     	ds	2
  1858  0000EC                     Port_Set@TypeActual:
  1859                           	opt stack 0
  1860                           
  1861                           ; 2 bytes @ 0x24
  1862  0000EC                     	ds	1
  1863  0000ED                     PortProperty_Valid@Pair:
  1864                           	opt stack 0
  1865                           
  1866                           ; 1 bytes @ 0x25
  1867  0000ED                     	ds	1
  1868  0000EE                     Port_Set@Type:
  1869                           	opt stack 0
  1870  0000EE                     Port_CheckPairType@pInput:
  1871                           	opt stack 0
  1872  0000EE                     Port_SetPinType@pInput:
  1873                           	opt stack 0
  1874                           
  1875                           ; 2 bytes @ 0x26
  1876  0000EE                     	ds	2
  1877  0000F0                     Port_CheckPairType@pPair:
  1878                           	opt stack 0
  1879  0000F0                     Port_SetPinType@pPin:
  1880                           	opt stack 0
  1881                           
  1882                           ; 1 bytes @ 0x28
  1883  0000F0                     	ds	1
  1884  0000F1                     Port_CheckPairType@pDrive:
  1885                           	opt stack 0
  1886  0000F1                     Port_SetPinType@pType:
  1887                           	opt stack 0
  1888                           
  1889                           ; 1 bytes @ 0x29
  1890  0000F1                     	ds	1
  1891  0000F2                     Port_CheckPairType@Pin1:
  1892                           	opt stack 0
  1893  0000F2                     Port_SetPinType@Output:
  1894                           	opt stack 0
  1895                           
  1896                           ; 1 bytes @ 0x2A
  1897  0000F2                     	ds	1
  1898  0000F3                     Port_CheckPairType@Pin2:
  1899                           	opt stack 0
  1900  0000F3                     Port_SetPinType@Props:
  1901                           	opt stack 0
  1902                           
  1903                           ; 2 bytes @ 0x2B
  1904  0000F3                     	ds	1
  1905  0000F4                     Port_CheckPairType@Output:
  1906                           	opt stack 0
  1907                           
  1908                           ; 1 bytes @ 0x2C
  1909  0000F4                     	ds	1
  1910  0000F5                     LED_Init@pLED:
  1911                           	opt stack 0
  1912  0000F5                     Port_CheckPairType@Props:
  1913                           	opt stack 0
  1914                           
  1915                           ; 2 bytes @ 0x2D
  1916  0000F5                     	ds	2
  1917  0000F7                     Port_CheckPortType@Output:
  1918                           	opt stack 0
  1919  0000F7                     Port_SetQuadType@Output:
  1920                           	opt stack 0
  1921                           
  1922                           ; 1 bytes @ 0x2F
  1923  0000F7                     	ds	1
  1924  0000F8                     tblptru	equ	0xFF8
  1925                           tblptrh	equ	0xFF7
  1926                           tblptrl	equ	0xFF6
  1927                           tablat	equ	0xFF5
  1928                           postinc0	equ	0xFEE
  1929                           wreg	equ	0xFE8
  1930                           postdec1	equ	0xFE5
  1931                           fsr1h	equ	0xFE2
  1932                           fsr1l	equ	0xFE1
  1933                           
  1934                           ; 1 bytes @ 0x30
  1935                           
  1936                           	psect	cstackCOMRAM
  1937  000001                     __pcstackCOMRAM:
  1938                           	opt stack 0
  1939  000001                     i2Byte_SetBit@pInput:
  1940                           	opt stack 0
  1941  000001                     i2Byte_GetZone@pInput:
  1942                           	opt stack 0
  1943  000001                     i2delay_us@us:
  1944                           	opt stack 0
  1945  000001                     i2MXK_Queue@pCallback:
  1946                           	opt stack 0
  1947                           
  1948                           ; 3 bytes @ 0x0
  1949  000001                     	ds	2
  1950  000003                     i2Byte_SetBit@pBit:
  1951                           	opt stack 0
  1952  000003                     i2Byte_GetZone@pMax:
  1953                           	opt stack 0
  1954  000003                     i2delay_us@u:
  1955                           	opt stack 0
  1956                           
  1957                           ; 4 bytes @ 0x2
  1958  000003                     	ds	1
  1959  000004                     i2Byte_SetBit@pValue:
  1960                           	opt stack 0
  1961  000004                     i2Byte_GetZone@pChunk:
  1962                           	opt stack 0
  1963                           
  1964                           ; 1 bytes @ 0x3
  1965  000004                     	ds	1
  1966  000005                     ??i2_Byte_SetBit:
  1967  000005                     i2Byte_GetZone@pChunkSize:
  1968                           	opt stack 0
  1969                           
  1970                           ; 1 bytes @ 0x4
  1971  000005                     	ds	1
  1972  000006                     ??i2_Byte_GetZone:
  1973                           
  1974                           ; 1 bytes @ 0x5
  1975  000006                     	ds	1
  1976  000007                     i2Byte_GetZone@MASK:
  1977                           	opt stack 0
  1978  000007                     i2MXK_SwitchTo@CUR:
  1979                           	opt stack 0
  1980                           
  1981                           ; 1 bytes @ 0x6
  1982  000007                     	ds	1
  1983  000008                     i2Byte_GetZone@Offset:
  1984                           	opt stack 0
  1985  000008                     i2MXK_SwitchTo@pModule:
  1986                           	opt stack 0
  1987                           
  1988                           ; 1 bytes @ 0x7
  1989  000008                     	ds	1
  1990  000009                     i2Byte_GetZone@Output:
  1991                           	opt stack 0
  1992                           
  1993                           ; 1 bytes @ 0x8
  1994  000009                     	ds	1
  1995  00000A                     i2Byte_GetPair@pInput:
  1996                           	opt stack 0
  1997                           
  1998                           ; 2 bytes @ 0x9
  1999  00000A                     	ds	2
  2000  00000C                     i2Byte_GetPair@pPair:
  2001                           	opt stack 0
  2002                           
  2003                           ; 1 bytes @ 0xB
  2004  00000C                     	ds	1
  2005  00000D                     i2Word_GetPair@pInput:
  2006                           	opt stack 0
  2007                           
  2008                           ; 2 bytes @ 0xC
  2009  00000D                     	ds	2
  2010  00000F                     i2Word_GetPair@pPair:
  2011                           	opt stack 0
  2012                           
  2013                           ; 1 bytes @ 0xE
  2014  00000F                     	ds	1
  2015  000010                     i2Port_SetPin@pInput:
  2016                           	opt stack 0
  2017                           
  2018                           ; 2 bytes @ 0xF
  2019  000010                     	ds	2
  2020  000012                     i2Port_SetPin@pPin:
  2021                           	opt stack 0
  2022                           
  2023                           ; 1 bytes @ 0x11
  2024  000012                     	ds	1
  2025  000013                     i2Port_SetPin@pValue:
  2026                           	opt stack 0
  2027                           
  2028                           ; 1 bytes @ 0x12
  2029  000013                     	ds	1
  2030  000014                     i2Port_SetPin@Type:
  2031                           	opt stack 0
  2032                           
  2033                           ; 1 bytes @ 0x13
  2034  000014                     	ds	1
  2035  000015                     
  2036                           ; 1 bytes @ 0x14
  2037  000015                     	ds	2
  2038  000017                     ??_ISR_Function:
  2039                           
  2040                           ; 1 bytes @ 0x16
  2041  000017                     	ds	14
  2042                           tblptru	equ	0xFF8
  2043                           tblptrh	equ	0xFF7
  2044                           tblptrl	equ	0xFF6
  2045                           tablat	equ	0xFF5
  2046                           postinc0	equ	0xFEE
  2047                           wreg	equ	0xFE8
  2048                           postdec1	equ	0xFE5
  2049                           fsr1h	equ	0xFE2
  2050                           fsr1l	equ	0xFE1
  2051                           
  2052 ;;
  2053 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2054 ;;
  2055 ;; *************** function _main *****************
  2056 ;; Defined at:
  2057 ;;		line 224 in file "main.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels required when called:   18
  2077 ;; This function calls:
  2078 ;;		_MXK_BlockSwitchTo
  2079 ;;		_MXK_Dequeue
  2080 ;;		_MXK_Release
  2081 ;;		_Motor_Move
  2082 ;;		_Motor_Speed
  2083 ;;		_initialise
  2084 ;; This function is called by:
  2085 ;;		Startup code after reset
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text0
  2090  0119FA                     __ptext0:
  2091                           	opt stack 0
  2092  0119FA                     _main:
  2093                           	opt stack 13
  2094                           
  2095                           ;main.c: 225: initialise();
  2096                           
  2097                           ;incstack = 0
  2098  0119FA  EC94  F08E         	call	_initialise	;wreg free
  2099                           
  2100                           ;main.c: 226: if (MXK_BlockSwitchTo(eMXK_Motor)) {
  2101  0119FE  0E08               	movlw	8
  2102  011A00  EC75  F08E         	call	_MXK_BlockSwitchTo
  2103  011A04  0900               	iorlw	0
  2104  011A06  B4D8               	btfsc	status,2,c
  2105  011A08  EF45  F00A         	goto	start
  2106                           
  2107                           ;main.c: 227: Motor_Speed(&Stepper, 256);
  2108  011A0C  0EAB               	movlw	low _Stepper
  2109  011A0E  0100               	movlb	0	; () banked
  2110  011A10  6FE3               	movwf	Motor_Speed@pMotor& (0+255),b
  2111  011A12  0E00               	movlw	high _Stepper
  2112  011A14  0100               	movlb	0	; () banked
  2113  011A16  6FE4               	movwf	(Motor_Speed@pMotor+1)& (0+255),b
  2114  011A18  0E01               	movlw	1
  2115  011A1A  0100               	movlb	0	; () banked
  2116  011A1C  6FE6               	movwf	(Motor_Speed@pFrequency+1)& (0+255),b
  2117  011A1E  0E00               	movlw	0
  2118  011A20  6FE5               	movwf	Motor_Speed@pFrequency& (0+255),b
  2119  011A22  EC31  F08F         	call	_Motor_Speed	;wreg free
  2120                           
  2121                           ;main.c: 228: Motor_Move(&Stepper, 1);
  2122  011A26  0EAB               	movlw	low _Stepper
  2123  011A28  0100               	movlb	0	; () banked
  2124  011A2A  6FCB               	movwf	Motor_Move@pMotor& (0+255),b
  2125  011A2C  0E00               	movlw	high _Stepper
  2126  011A2E  0100               	movlb	0	; () banked
  2127  011A30  6FCC               	movwf	(Motor_Move@pMotor+1)& (0+255),b
  2128  011A32  0E00               	movlw	0
  2129  011A34  0100               	movlb	0	; () banked
  2130  011A36  6FCE               	movwf	(Motor_Move@pDelta+1)& (0+255),b
  2131  011A38  0E01               	movlw	1
  2132  011A3A  6FCD               	movwf	Motor_Move@pDelta& (0+255),b
  2133  011A3C  ECB2  F08E         	call	_Motor_Move	;wreg free
  2134                           
  2135                           ;main.c: 229: if (MXK_Release())
  2136  011A40  EC96  F08F         	call	_MXK_Release	;wreg free
  2137  011A44  0900               	iorlw	0
  2138  011A46  B4D8               	btfsc	status,2,c
  2139  011A48  EF45  F00A         	goto	start
  2140                           
  2141                           ;main.c: 230: MXK_Dequeue();
  2142  011A4C  ECEA  F08E         	call	_MXK_Dequeue	;wreg free
  2143  011A50  EF45  F00A         	goto	start
  2144  011A54                     __end_of_main:
  2145                           	opt stack 0
  2146                           tblptru	equ	0xFF8
  2147                           tblptrh	equ	0xFF7
  2148                           tblptrl	equ	0xFF6
  2149                           tablat	equ	0xFF5
  2150                           postinc0	equ	0xFEE
  2151                           wreg	equ	0xFE8
  2152                           postdec1	equ	0xFE5
  2153                           fsr1h	equ	0xFE2
  2154                           fsr1l	equ	0xFE1
  2155                           status	equ	0xFD8
  2156                           
  2157 ;; *************** function _initialise *****************
  2158 ;; Defined at:
  2159 ;;		line 42 in file "main.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;Total ram usage:        0 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:   17
  2180 ;; This function calls:
  2181 ;;		_ISR_Enable
  2182 ;;		_MXK_BlockSwitchTo
  2183 ;;		_MXK_Dequeue
  2184 ;;		_MXK_Init
  2185 ;;		_MXK_Release
  2186 ;;		_Motor_Init
  2187 ;; This function is called by:
  2188 ;;		_main
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text1
  2193  011D28                     __ptext1:
  2194                           	opt stack 0
  2195  011D28                     _initialise:
  2196                           	opt stack 13
  2197                           
  2198                           ;main.c: 44: MXK_Init();
  2199                           
  2200                           ;incstack = 0
  2201  011D28  ECC6  F085         	call	_MXK_Init	;wreg free
  2202                           
  2203                           ;main.c: 56: if (MXK_BlockSwitchTo(eMXK_Motor)) {
  2204  011D2C  0E08               	movlw	8
  2205  011D2E  EC75  F08E         	call	_MXK_BlockSwitchTo
  2206  011D32  0900               	iorlw	0
  2207  011D34  B4D8               	btfsc	status,2,c
  2208  011D36  D013               	goto	l11303
  2209                           
  2210                           ;main.c: 57: Motor_Init(&Stepper, 0b1000);
  2211  011D38  0EAB               	movlw	low _Stepper
  2212  011D3A  0101               	movlb	1	; () banked
  2213  011D3C  6FB8               	movwf	Motor_Init@pMotor& (0+255),b
  2214  011D3E  0E00               	movlw	high _Stepper
  2215  011D40  0101               	movlb	1	; () banked
  2216  011D42  6FB9               	movwf	(Motor_Init@pMotor+1)& (0+255),b
  2217  011D44  0E00               	movlw	0
  2218  011D46  0101               	movlb	1	; () banked
  2219  011D48  6FBB               	movwf	(Motor_Init@pAddress+1)& (0+255),b
  2220  011D4A  0E08               	movlw	8
  2221  011D4C  6FBA               	movwf	Motor_Init@pAddress& (0+255),b
  2222  011D4E  EC3E  F088         	call	_Motor_Init	;wreg free
  2223                           
  2224                           ;main.c: 58: if (MXK_Release())
  2225  011D52  EC96  F08F         	call	_MXK_Release	;wreg free
  2226  011D56  0900               	iorlw	0
  2227  011D58  A4D8               	btfss	status,2,c
  2228                           
  2229                           ;main.c: 59: MXK_Dequeue();
  2230  011D5A  ECEA  F08E         	call	_MXK_Dequeue	;wreg free
  2231  011D5E                     l11303:
  2232                           
  2233                           ;main.c: 60: }
  2234                           ;main.c: 63: ISR_Enable();
  2235  011D5E  ECC8  F08F         	call	_ISR_Enable	;wreg free
  2236  011D62  0012               	return		;funcret
  2237  011D64                     __end_of_initialise:
  2238                           	opt stack 0
  2239                           tblptru	equ	0xFF8
  2240                           tblptrh	equ	0xFF7
  2241                           tblptrl	equ	0xFF6
  2242                           tablat	equ	0xFF5
  2243                           postinc0	equ	0xFEE
  2244                           wreg	equ	0xFE8
  2245                           postdec1	equ	0xFE5
  2246                           fsr1h	equ	0xFE2
  2247                           fsr1l	equ	0xFE1
  2248                           status	equ	0xFD8
  2249                           
  2250 ;; *************** function _Motor_Init *****************
  2251 ;; Defined at:
  2252 ;;		line 26 in file "Library/Motor.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  pMotor          2    0[BANK1 ] PTR struct Motor
  2255 ;;		 -> Stepper(6), 
  2256 ;;  pAddress        2    2[BANK1 ] unsigned short 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;		None
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2268 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;Total ram usage:        4 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:   12
  2275 ;; This function calls:
  2276 ;;		_Port_SetPin
  2277 ;;		_Port_SetPinType
  2278 ;;		_Timer0_Init
  2279 ;; This function is called by:
  2280 ;;		_initialise
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text2
  2285  01107C                     __ptext2:
  2286                           	opt stack 0
  2287  01107C                     _Motor_Init:
  2288                           	opt stack 17
  2289                           
  2290                           ;Motor.c: 28: pMotor->mDelta = 0;
  2291                           
  2292                           ;incstack = 0
  2293  01107C  C1B8  FFD9         	movff	Motor_Init@pMotor,fsr2l
  2294  011080  C1B9  FFDA         	movff	Motor_Init@pMotor+1,fsr2h
  2295  011084  0E00               	movlw	0
  2296  011086  6EDE               	movwf	postinc2,c
  2297  011088  0E00               	movlw	0
  2298  01108A  6EDD               	movwf	postdec2,c
  2299                           
  2300                           ;Motor.c: 29: pMotor->mFrequency = 0;
  2301  01108C  0101               	movlb	1	; () banked
  2302  01108E  EE20 F002          	lfsr	2,2
  2303  011092  51B8               	movf	Motor_Init@pMotor& (0+255),w,b
  2304  011094  26D9               	addwf	fsr2l,f,c
  2305  011096  51B9               	movf	(Motor_Init@pMotor+1)& (0+255),w,b
  2306  011098  22DA               	addwfc	fsr2h,f,c
  2307  01109A  0E00               	movlw	0
  2308  01109C  6EDE               	movwf	postinc2,c
  2309  01109E  0E00               	movlw	0
  2310  0110A0  6EDD               	movwf	postdec2,c
  2311                           
  2312                           ; BSR set to: 1
  2313                           ;Motor.c: 30: pMotor->mAddress = pAddress;
  2314  0110A2  0101               	movlb	1	; () banked
  2315  0110A4  EE20 F004          	lfsr	2,4
  2316  0110A8  51B8               	movf	Motor_Init@pMotor& (0+255),w,b
  2317  0110AA  26D9               	addwf	fsr2l,f,c
  2318  0110AC  51B9               	movf	(Motor_Init@pMotor+1)& (0+255),w,b
  2319  0110AE  22DA               	addwfc	fsr2h,f,c
  2320  0110B0  C1BA  FFDE         	movff	Motor_Init@pAddress,postinc2
  2321  0110B4  C1BB  FFDD         	movff	Motor_Init@pAddress+1,postdec2
  2322                           
  2323                           ; BSR set to: 1
  2324                           ;Motor.c: 33: Port_SetPinType (&PortE, eP0, eTypeOutputPushPull);
  2325  0110B8  0E7F               	movlw	low _PortE
  2326  0110BA  0100               	movlb	0	; () banked
  2327  0110BC  6FEE               	movwf	Port_SetPinType@pInput& (0+255),b
  2328  0110BE  0E00               	movlw	high _PortE
  2329  0110C0  0100               	movlb	0	; () banked
  2330  0110C2  6FEF               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  2331  0110C4  0E00               	movlw	0
  2332  0110C6  0100               	movlb	0	; () banked
  2333  0110C8  6FF0               	movwf	Port_SetPinType@pPin& (0+255),b
  2334  0110CA  0E03               	movlw	3
  2335  0110CC  0100               	movlb	0	; () banked
  2336  0110CE  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2337  0110D0  EC1D  F084         	call	_Port_SetPinType	;wreg free
  2338                           
  2339                           ;Motor.c: 34: Port_SetPinType (&PortE, eP1, eTypeOutputPushPull);
  2340  0110D4  0E7F               	movlw	low _PortE
  2341  0110D6  0100               	movlb	0	; () banked
  2342  0110D8  6FEE               	movwf	Port_SetPinType@pInput& (0+255),b
  2343  0110DA  0E00               	movlw	high _PortE
  2344  0110DC  0100               	movlb	0	; () banked
  2345  0110DE  6FEF               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  2346  0110E0  0E01               	movlw	1
  2347  0110E2  0100               	movlb	0	; () banked
  2348  0110E4  6FF0               	movwf	Port_SetPinType@pPin& (0+255),b
  2349  0110E6  0E03               	movlw	3
  2350  0110E8  0100               	movlb	0	; () banked
  2351  0110EA  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2352  0110EC  EC1D  F084         	call	_Port_SetPinType	;wreg free
  2353                           
  2354                           ;Motor.c: 35: Port_SetPin (&PortE, eP0, 0);
  2355  0110F0  0E7F               	movlw	low _PortE
  2356  0110F2  0100               	movlb	0	; () banked
  2357  0110F4  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  2358  0110F6  0E00               	movlw	high _PortE
  2359  0110F8  0100               	movlb	0	; () banked
  2360  0110FA  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  2361  0110FC  0E00               	movlw	0
  2362  0110FE  0100               	movlb	0	; () banked
  2363  011100  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  2364  011102  0E00               	movlw	0
  2365  011104  0100               	movlb	0	; () banked
  2366  011106  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  2367  011108  ECA9  F088         	call	_Port_SetPin	;wreg free
  2368                           
  2369                           ;Motor.c: 36: Port_SetPin (&PortE, eP1, 0);
  2370  01110C  0E7F               	movlw	low _PortE
  2371  01110E  0100               	movlb	0	; () banked
  2372  011110  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  2373  011112  0E00               	movlw	high _PortE
  2374  011114  0100               	movlb	0	; () banked
  2375  011116  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  2376  011118  0E01               	movlw	1
  2377  01111A  0100               	movlb	0	; () banked
  2378  01111C  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  2379  01111E  0E00               	movlw	0
  2380  011120  0100               	movlb	0	; () banked
  2381  011122  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  2382  011124  ECA9  F088         	call	_Port_SetPin	;wreg free
  2383                           
  2384                           ;Motor.c: 38: lStepFunction = Motor_Step;
  2385  011128  0E5A               	movlw	low _Motor_Step
  2386  01112A  0100               	movlb	0	; () banked
  2387  01112C  6F6B               	movwf	_lStepFunction& (0+255),b
  2388  01112E  0E0E               	movlw	high _Motor_Step
  2389  011130  0100               	movlb	0	; () banked
  2390  011132  6F6C               	movwf	(_lStepFunction+1)& (0+255),b
  2391  011134  0E01               	movlw	low (_Motor_Step shr (0+16))
  2392  011136  0100               	movlb	0	; () banked
  2393  011138  6F6D               	movwf	(_lStepFunction+2)& (0+255),b
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;Motor.c: 39: Timer0_Init(1000);
  2397  01113A  0EE8               	movlw	232
  2398  01113C  0100               	movlb	0	; () banked
  2399  01113E  6FD5               	movwf	Timer0_Init@pFrequency& (0+255),b
  2400  011140  0E03               	movlw	3
  2401  011142  6FD6               	movwf	(Timer0_Init@pFrequency+1)& (0+255),b
  2402  011144  0E00               	movlw	0
  2403  011146  6FD7               	movwf	(Timer0_Init@pFrequency+2)& (0+255),b
  2404  011148  0E00               	movlw	0
  2405  01114A  6FD8               	movwf	(Timer0_Init@pFrequency+3)& (0+255),b
  2406  01114C  EC83  F086         	call	_Timer0_Init	;wreg free
  2407  011150  0012               	return		;funcret
  2408  011152                     __end_of_Motor_Init:
  2409                           	opt stack 0
  2410                           tblptru	equ	0xFF8
  2411                           tblptrh	equ	0xFF7
  2412                           tblptrl	equ	0xFF6
  2413                           tablat	equ	0xFF5
  2414                           postinc0	equ	0xFEE
  2415                           wreg	equ	0xFE8
  2416                           postdec1	equ	0xFE5
  2417                           fsr1h	equ	0xFE2
  2418                           fsr1l	equ	0xFE1
  2419                           postinc2	equ	0xFDE
  2420                           postdec2	equ	0xFDD
  2421                           fsr2h	equ	0xFDA
  2422                           fsr2l	equ	0xFD9
  2423                           status	equ	0xFD8
  2424                           
  2425 ;; *************** function _MXK_Init *****************
  2426 ;; Defined at:
  2427 ;;		line 33 in file "Library/MXK.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      void 
  2434 ;; Registers used:
  2435 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:   16
  2448 ;; This function calls:
  2449 ;;		_LED_Init
  2450 ;;		_Port_Init
  2451 ;;		_Port_SetPin
  2452 ;;		_Port_SetPinType
  2453 ;;		_Port_SetQuadType
  2454 ;;		_Port_SetType
  2455 ;;		_delay_ms
  2456 ;; This function is called by:
  2457 ;;		_initialise
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           	psect	text3
  2462  010B8C                     __ptext3:
  2463                           	opt stack 0
  2464  010B8C                     _MXK_Init:
  2465                           	opt stack 13
  2466                           
  2467                           ;MXK.c: 35: Bus_State = eMXK_Idle;
  2468                           
  2469                           ;incstack = 0
  2470  010B8C  0E01               	movlw	1
  2471  010B8E  6E44               	movwf	_Bus_State,c
  2472                           
  2473                           ;MXK.c: 36: lQueue = (Function)0;
  2474  010B90  0E00               	movlw	0
  2475  010B92  6E25               	movwf	_lQueue,c	;volatile
  2476  010B94  0E00               	movlw	0
  2477  010B96  6E26               	movwf	_lQueue+1,c	;volatile
  2478  010B98  0E00               	movlw	0
  2479  010B9A  6E27               	movwf	_lQueue+2,c	;volatile
  2480                           
  2481                           ;MXK.c: 38: Port_Init(&PortA, ePortA);
  2482  010B9C  0E9F               	movlw	low _PortA
  2483  010B9E  0101               	movlb	1	; () banked
  2484  010BA0  6FC8               	movwf	Port_Init@pInput& (0+255),b
  2485  010BA2  0E01               	movlw	high _PortA
  2486  010BA4  0101               	movlb	1	; () banked
  2487  010BA6  6FC9               	movwf	(Port_Init@pInput+1)& (0+255),b
  2488  010BA8  0E00               	movlw	0
  2489  010BAA  0101               	movlb	1	; () banked
  2490  010BAC  6FCA               	movwf	Port_Init@pPort& (0+255),b
  2491  010BAE  ECFD  F084         	call	_Port_Init	;wreg free
  2492                           
  2493                           ;MXK.c: 39: Port_Init(&PortB, ePortB);
  2494  010BB2  0E95               	movlw	low _PortB
  2495  010BB4  0101               	movlb	1	; () banked
  2496  010BB6  6FC8               	movwf	Port_Init@pInput& (0+255),b
  2497  010BB8  0E01               	movlw	high _PortB
  2498  010BBA  0101               	movlb	1	; () banked
  2499  010BBC  6FC9               	movwf	(Port_Init@pInput+1)& (0+255),b
  2500  010BBE  0E01               	movlw	1
  2501  010BC0  0101               	movlb	1	; () banked
  2502  010BC2  6FCA               	movwf	Port_Init@pPort& (0+255),b
  2503  010BC4  ECFD  F084         	call	_Port_Init	;wreg free
  2504                           
  2505                           ;MXK.c: 40: Port_Init(&PortC, ePortC);
  2506  010BC8  0E93               	movlw	low _PortC
  2507  010BCA  0101               	movlb	1	; () banked
  2508  010BCC  6FC8               	movwf	Port_Init@pInput& (0+255),b
  2509  010BCE  0E00               	movlw	high _PortC
  2510  010BD0  0101               	movlb	1	; () banked
  2511  010BD2  6FC9               	movwf	(Port_Init@pInput+1)& (0+255),b
  2512  010BD4  0E02               	movlw	2
  2513  010BD6  0101               	movlb	1	; () banked
  2514  010BD8  6FCA               	movwf	Port_Init@pPort& (0+255),b
  2515  010BDA  ECFD  F084         	call	_Port_Init	;wreg free
  2516                           
  2517                           ;MXK.c: 41: Port_Init(&PortD, ePortD);
  2518  010BDE  0E89               	movlw	low _PortD
  2519  010BE0  0101               	movlb	1	; () banked
  2520  010BE2  6FC8               	movwf	Port_Init@pInput& (0+255),b
  2521  010BE4  0E00               	movlw	high _PortD
  2522  010BE6  0101               	movlb	1	; () banked
  2523  010BE8  6FC9               	movwf	(Port_Init@pInput+1)& (0+255),b
  2524  010BEA  0E03               	movlw	3
  2525  010BEC  0101               	movlb	1	; () banked
  2526  010BEE  6FCA               	movwf	Port_Init@pPort& (0+255),b
  2527  010BF0  ECFD  F084         	call	_Port_Init	;wreg free
  2528                           
  2529                           ;MXK.c: 42: Port_Init(&PortE, ePortE);
  2530  010BF4  0E7F               	movlw	low _PortE
  2531  010BF6  0101               	movlb	1	; () banked
  2532  010BF8  6FC8               	movwf	Port_Init@pInput& (0+255),b
  2533  010BFA  0E00               	movlw	high _PortE
  2534  010BFC  0101               	movlb	1	; () banked
  2535  010BFE  6FC9               	movwf	(Port_Init@pInput+1)& (0+255),b
  2536  010C00  0E04               	movlw	4
  2537  010C02  0101               	movlb	1	; () banked
  2538  010C04  6FCA               	movwf	Port_Init@pPort& (0+255),b
  2539  010C06  ECFD  F084         	call	_Port_Init	;wreg free
  2540                           
  2541                           ;MXK.c: 43: Port_Init(&PortF, ePortF);
  2542  010C0A  0EA9               	movlw	low _PortF
  2543  010C0C  0101               	movlb	1	; () banked
  2544  010C0E  6FC8               	movwf	Port_Init@pInput& (0+255),b
  2545  010C10  0E01               	movlw	high _PortF
  2546  010C12  0101               	movlb	1	; () banked
  2547  010C14  6FC9               	movwf	(Port_Init@pInput+1)& (0+255),b
  2548  010C16  0E05               	movlw	5
  2549  010C18  0101               	movlb	1	; () banked
  2550  010C1A  6FCA               	movwf	Port_Init@pPort& (0+255),b
  2551  010C1C  ECFD  F084         	call	_Port_Init	;wreg free
  2552                           
  2553                           ;MXK.c: 44: Port_Init(&PortG, ePortG);
  2554  010C20  0E8B               	movlw	low _PortG
  2555  010C22  0101               	movlb	1	; () banked
  2556  010C24  6FC8               	movwf	Port_Init@pInput& (0+255),b
  2557  010C26  0E01               	movlw	high _PortG
  2558  010C28  0101               	movlb	1	; () banked
  2559  010C2A  6FC9               	movwf	(Port_Init@pInput+1)& (0+255),b
  2560  010C2C  0E06               	movlw	6
  2561  010C2E  0101               	movlb	1	; () banked
  2562  010C30  6FCA               	movwf	Port_Init@pPort& (0+255),b
  2563  010C32  ECFD  F084         	call	_Port_Init	;wreg free
  2564                           
  2565                           ;MXK.c: 46: Port_SetPinType (&PortF, eP5, eTypeInput);
  2566  010C36  0EA9               	movlw	low _PortF
  2567  010C38  0100               	movlb	0	; () banked
  2568  010C3A  6FEE               	movwf	Port_SetPinType@pInput& (0+255),b
  2569  010C3C  0E01               	movlw	high _PortF
  2570  010C3E  0100               	movlb	0	; () banked
  2571  010C40  6FEF               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  2572  010C42  0E05               	movlw	5
  2573  010C44  0100               	movlb	0	; () banked
  2574  010C46  6FF0               	movwf	Port_SetPinType@pPin& (0+255),b
  2575  010C48  0E00               	movlw	0
  2576  010C4A  0100               	movlb	0	; () banked
  2577  010C4C  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2578  010C4E  EC1D  F084         	call	_Port_SetPinType	;wreg free
  2579                           
  2580                           ;MXK.c: 47: Port_SetQuadType (&PortB, eP0_3, eTypeInput);
  2581  010C52  0E95               	movlw	low _PortB
  2582  010C54  0101               	movlb	1	; () banked
  2583  010C56  6FBF               	movwf	Port_SetQuadType@pInput& (0+255),b
  2584  010C58  0E01               	movlw	high _PortB
  2585  010C5A  0101               	movlb	1	; () banked
  2586  010C5C  6FC0               	movwf	(Port_SetQuadType@pInput+1)& (0+255),b
  2587  010C5E  0E00               	movlw	0
  2588  010C60  0101               	movlb	1	; () banked
  2589  010C62  6FC1               	movwf	Port_SetQuadType@pQuad& (0+255),b
  2590  010C64  0E00               	movlw	0
  2591  010C66  0101               	movlb	1	; () banked
  2592  010C68  6FC2               	movwf	Port_SetQuadType@pType& (0+255),b
  2593  010C6A  ECDD  F081         	call	_Port_SetQuadType	;wreg free
  2594                           
  2595                           ;MXK.c: 48: Port_SetPinType (&PortF, eP6, eTypeOutputPushPull);
  2596  010C6E  0EA9               	movlw	low _PortF
  2597  010C70  0100               	movlb	0	; () banked
  2598  010C72  6FEE               	movwf	Port_SetPinType@pInput& (0+255),b
  2599  010C74  0E01               	movlw	high _PortF
  2600  010C76  0100               	movlb	0	; () banked
  2601  010C78  6FEF               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  2602  010C7A  0E06               	movlw	6
  2603  010C7C  0100               	movlb	0	; () banked
  2604  010C7E  6FF0               	movwf	Port_SetPinType@pPin& (0+255),b
  2605  010C80  0E03               	movlw	3
  2606  010C82  0100               	movlb	0	; () banked
  2607  010C84  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2608  010C86  EC1D  F084         	call	_Port_SetPinType	;wreg free
  2609                           
  2610                           ;MXK.c: 49: Port_SetType (&PortG, eTypeOutputPushPull);
  2611  010C8A  0E8B               	movlw	low _PortG
  2612  010C8C  0101               	movlb	1	; () banked
  2613  010C8E  6FC2               	movwf	Port_SetType@pInput& (0+255),b
  2614  010C90  0E01               	movlw	high _PortG
  2615  010C92  0101               	movlb	1	; () banked
  2616  010C94  6FC3               	movwf	(Port_SetType@pInput+1)& (0+255),b
  2617  010C96  0E03               	movlw	3
  2618  010C98  0101               	movlb	1	; () banked
  2619  010C9A  6FC4               	movwf	Port_SetType@pType& (0+255),b
  2620  010C9C  EC08  F083         	call	_Port_SetType	;wreg free
  2621                           
  2622                           ;MXK.c: 51: Port_SetPin(&PortG, eP4, 0);
  2623  010CA0  0E8B               	movlw	low _PortG
  2624  010CA2  0100               	movlb	0	; () banked
  2625  010CA4  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  2626  010CA6  0E01               	movlw	high _PortG
  2627  010CA8  0100               	movlb	0	; () banked
  2628  010CAA  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  2629  010CAC  0E04               	movlw	4
  2630  010CAE  0100               	movlb	0	; () banked
  2631  010CB0  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  2632  010CB2  0E00               	movlw	0
  2633  010CB4  0100               	movlb	0	; () banked
  2634  010CB6  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  2635  010CB8  ECA9  F088         	call	_Port_SetPin	;wreg free
  2636                           
  2637                           ;MXK.c: 52: Port_SetPin(&PortF, eP6,1);
  2638  010CBC  0EA9               	movlw	low _PortF
  2639  010CBE  0100               	movlb	0	; () banked
  2640  010CC0  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  2641  010CC2  0E01               	movlw	high _PortF
  2642  010CC4  0100               	movlb	0	; () banked
  2643  010CC6  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  2644  010CC8  0E06               	movlw	6
  2645  010CCA  0100               	movlb	0	; () banked
  2646  010CCC  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  2647  010CCE  0E01               	movlw	1
  2648  010CD0  0100               	movlb	0	; () banked
  2649  010CD2  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  2650  010CD4  ECA9  F088         	call	_Port_SetPin	;wreg free
  2651                           
  2652                           ;MXK.c: 55: LED_Init(eLED1);
  2653  010CD8  0E00               	movlw	0
  2654  010CDA  ECCC  F08C         	call	_LED_Init
  2655                           
  2656                           ;MXK.c: 56: LED_Init(eLED2);
  2657  010CDE  0E01               	movlw	1
  2658  010CE0  ECCC  F08C         	call	_LED_Init
  2659                           
  2660                           ;MXK.c: 58: PIR1 = 0;
  2661  010CE4  0E00               	movlw	0
  2662  010CE6  6E9E               	movwf	3998,c	;volatile
  2663                           
  2664                           ;MXK.c: 59: PIR2 = 0;
  2665  010CE8  0E00               	movlw	0
  2666  010CEA  6EA1               	movwf	4001,c	;volatile
  2667                           
  2668                           ;MXK.c: 60: PIR3 = 0;
  2669  010CEC  0E00               	movlw	0
  2670  010CEE  6EA4               	movwf	4004,c	;volatile
  2671                           
  2672                           ;MXK.c: 62: OSCTUNEbits.INTSRC = 1;
  2673  010CF0  8E9B               	bsf	3995,7,c	;volatile
  2674                           
  2675                           ;MXK.c: 63: OSCTUNEbits.PLLEN = 1;
  2676  010CF2  8C9B               	bsf	3995,6,c	;volatile
  2677                           
  2678                           ;MXK.c: 66: delay_ms(100);
  2679  010CF4  0E00               	movlw	0
  2680  010CF6  0100               	movlb	0	; () banked
  2681  010CF8  6FC9               	movwf	(delay_ms@ms+1)& (0+255),b
  2682  010CFA  0E64               	movlw	100
  2683  010CFC  6FC8               	movwf	delay_ms@ms& (0+255),b
  2684  010CFE  EC30  F08C         	call	_delay_ms	;wreg free
  2685                           
  2686                           ;MXK.c: 68: RCONbits.IPEN = 1;
  2687  010D02  8ED0               	bsf	4048,7,c	;volatile
  2688  010D04  0012               	return		;funcret
  2689  010D06                     __end_of_MXK_Init:
  2690                           	opt stack 0
  2691                           tblptru	equ	0xFF8
  2692                           tblptrh	equ	0xFF7
  2693                           tblptrl	equ	0xFF6
  2694                           tablat	equ	0xFF5
  2695                           postinc0	equ	0xFEE
  2696                           wreg	equ	0xFE8
  2697                           postdec1	equ	0xFE5
  2698                           fsr1h	equ	0xFE2
  2699                           fsr1l	equ	0xFE1
  2700                           postinc2	equ	0xFDE
  2701                           postdec2	equ	0xFDD
  2702                           fsr2h	equ	0xFDA
  2703                           fsr2l	equ	0xFD9
  2704                           status	equ	0xFD8
  2705                           
  2706 ;; *************** function _delay_ms *****************
  2707 ;; Defined at:
  2708 ;;		line 240 in file "Library/Types.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  ms              2    0[BANK0 ] unsigned short 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  u               4    2[BANK0 ] volatile unsigned long 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		wreg, status,2, status,0
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2722 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2723 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;Total ram usage:        6 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    7
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_MXK_Init
  2733 ;;		_LCD_Reset
  2734 ;;		_LCD_Init
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text4
  2739  011860                     __ptext4:
  2740                           	opt stack 0
  2741  011860                     _delay_ms:
  2742                           	opt stack 21
  2743                           
  2744                           ;Types.c: 242: volatile unsigned long u;
  2745                           ;Types.c: 243: while (ms--)
  2746                           
  2747                           ;incstack = 0
  2748  011860  D01F               	goto	l10163
  2749  011862                     l10155:
  2750                           
  2751                           ;Types.c: 244: {
  2752                           ;Types.c: 246: for (u = 0; u < (((48*1000000L) / 4000UL) / 10UL); u++) {
  2753  011862  0E00               	movlw	0
  2754  011864  0100               	movlb	0	; () banked
  2755  011866  6FCA               	movwf	delay_ms@u& (0+255),b	;volatile
  2756  011868  0E00               	movlw	0
  2757  01186A  6FCB               	movwf	(delay_ms@u+1)& (0+255),b	;volatile
  2758  01186C  0E00               	movlw	0
  2759  01186E  6FCC               	movwf	(delay_ms@u+2)& (0+255),b	;volatile
  2760  011870  0E00               	movlw	0
  2761  011872  6FCD               	movwf	(delay_ms@u+3)& (0+255),b	;volatile
  2762  011874                     l10157:
  2763                           
  2764                           ; BSR set to: 0
  2765  011874  0100               	movlb	0	; () banked
  2766  011876  51CD               	movf	(delay_ms@u+3)& (0+255),w,b	;volatile
  2767  011878  0100               	movlb	0	; () banked
  2768  01187A  11CC               	iorwf	(delay_ms@u+2)& (0+255),w,b	;volatile
  2769  01187C  E111               	bnz	l10163
  2770  01187E  0EB0               	movlw	176
  2771  011880  0100               	movlb	0	; () banked
  2772  011882  5DCA               	subwf	delay_ms@u& (0+255),w,b	;volatile
  2773  011884  0E04               	movlw	4
  2774  011886  0100               	movlb	0	; () banked
  2775  011888  59CB               	subwfb	(delay_ms@u+1)& (0+255),w,b	;volatile
  2776  01188A  B0D8               	btfsc	status,0,c
  2777  01188C  D009               	goto	l10163
  2778                           
  2779                           ; BSR set to: 0
  2780                           
  2781                           ; BSR set to: 0
  2782  01188E  F000               	nop		; ;# 
  2783  011890  0E01               	movlw	1
  2784  011892  0100               	movlb	0	; () banked
  2785  011894  27CA               	addwf	delay_ms@u& (0+255),f,b	;volatile
  2786  011896  0E00               	movlw	0
  2787  011898  23CB               	addwfc	(delay_ms@u+1)& (0+255),f,b	;volatile
  2788  01189A  23CC               	addwfc	(delay_ms@u+2)& (0+255),f,b	;volatile
  2789  01189C  23CD               	addwfc	(delay_ms@u+3)& (0+255),f,b	;volatile
  2790  01189E  D7EA               	goto	l10157
  2791  0118A0                     l10163:
  2792  0118A0  0100               	movlb	0	; () banked
  2793  0118A2  07C8               	decf	delay_ms@ms& (0+255),f,b
  2794  0118A4  A0D8               	btfss	status,0,c
  2795  0118A6  07C9               	decf	(delay_ms@ms+1)& (0+255),f,b
  2796  0118A8  0100               	movlb	0	; () banked
  2797  0118AA  29C8               	incf	delay_ms@ms& (0+255),w,b
  2798  0118AC  E1DA               	bnz	l10155
  2799  0118AE  0100               	movlb	0	; () banked
  2800  0118B0  29C9               	incf	(delay_ms@ms+1)& (0+255),w,b
  2801  0118B2  A4D8               	btfss	status,2,c
  2802  0118B4  D7D6               	goto	l10155
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;Types.c: 251: }
  2806                           ;Types.c: 252: }
  2807                           ;Types.c: 253: u = 0x8008;
  2808                           
  2809                           ; BSR set to: 0
  2810  0118B6  0E08               	movlw	8
  2811  0118B8  0100               	movlb	0	; () banked
  2812  0118BA  6FCA               	movwf	delay_ms@u& (0+255),b	;volatile
  2813  0118BC  0E80               	movlw	128
  2814  0118BE  6FCB               	movwf	(delay_ms@u+1)& (0+255),b	;volatile
  2815  0118C0  0E00               	movlw	0
  2816  0118C2  6FCC               	movwf	(delay_ms@u+2)& (0+255),b	;volatile
  2817  0118C4  0E00               	movlw	0
  2818  0118C6  6FCD               	movwf	(delay_ms@u+3)& (0+255),b	;volatile
  2819                           
  2820                           ; BSR set to: 0
  2821  0118C8  0012               	return		;funcret
  2822  0118CA                     __end_of_delay_ms:
  2823                           	opt stack 0
  2824                           tblptru	equ	0xFF8
  2825                           tblptrh	equ	0xFF7
  2826                           tblptrl	equ	0xFF6
  2827                           tablat	equ	0xFF5
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           postdec1	equ	0xFE5
  2831                           fsr1h	equ	0xFE2
  2832                           fsr1l	equ	0xFE1
  2833                           postinc2	equ	0xFDE
  2834                           postdec2	equ	0xFDD
  2835                           fsr2h	equ	0xFDA
  2836                           fsr2l	equ	0xFD9
  2837                           status	equ	0xFD8
  2838                           
  2839 ;; *************** function _Port_SetQuadType *****************
  2840 ;; Defined at:
  2841 ;;		line 399 in file "Library/Port.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  pInput          2    7[BANK1 ] const PTR struct Port
  2844 ;;		 -> PortB(10), PortD(10), 
  2845 ;;  pQuad           1    9[BANK1 ] enum E6776
  2846 ;;  pType           1   10[BANK1 ] enum E6795
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  Output          1   47[BANK0 ] enum E6475
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      enum E6475
  2851 ;; Registers used:
  2852 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2858 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;Total ram usage:        5 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:   13
  2865 ;; This function calls:
  2866 ;;		_Byte_SetQuad
  2867 ;;		_Port_CheckQuadType
  2868 ;;		_Word_SetPair
  2869 ;; This function is called by:
  2870 ;;		_MXK_Init
  2871 ;;		_MXK_InitDIPSwitch
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text5
  2876  0103BA                     __ptext5:
  2877                           	opt stack 0
  2878  0103BA                     _Port_SetQuadType:
  2879                           	opt stack 15
  2880                           
  2881                           ;Port.c: 401: ePinError Output = ePinErrorState;
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;incstack = 0
  2885  0103BA  0E05               	movlw	5
  2886  0103BC  0100               	movlb	0	; () banked
  2887  0103BE  6FF7               	movwf	Port_SetQuadType@Output& (0+255),b
  2888                           
  2889                           ;Port.c: 403: switch (pType)
  2890  0103C0  D0C7               	goto	l10229
  2891  0103C2                     l10213:
  2892                           
  2893                           ;Port.c: 407: {
  2894                           ;Port.c: 409: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0xF);
  2895  0103C2  0101               	movlb	1	; () banked
  2896  0103C4  EE20 F002          	lfsr	2,2
  2897  0103C8  51BF               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2898  0103CA  26D9               	addwf	fsr2l,f,c
  2899  0103CC  51C0               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2900  0103CE  22DA               	addwfc	fsr2h,f,c
  2901  0103D0  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2902  0103D4  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2903  0103D8  C1C1  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2904  0103DC  0E0F               	movlw	15
  2905  0103DE  0100               	movlb	0	; () banked
  2906  0103E0  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2907  0103E2  EC58  F08F         	call	_Byte_SetQuad	;wreg free
  2908                           
  2909                           ;Port.c: 412: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0);
  2910  0103E6  0101               	movlb	1	; () banked
  2911  0103E8  EE20 F004          	lfsr	2,4
  2912  0103EC  51BF               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2913  0103EE  26D9               	addwf	fsr2l,f,c
  2914  0103F0  51C0               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2915  0103F2  22DA               	addwfc	fsr2h,f,c
  2916  0103F4  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2917  0103F8  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2918  0103FC  C1C1  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2919  010400  0E00               	movlw	0
  2920  010402  0100               	movlb	0	; () banked
  2921  010404  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2922  010406  EC58  F08F         	call	_Byte_SetQuad	;wreg free
  2923                           
  2924                           ;Port.c: 413: }
  2925                           ;Port.c: 415: break;
  2926  01040A  D0B0               	goto	l10231
  2927  01040C                     l10215:
  2928                           
  2929                           ;Port.c: 417: if ((Output = Port_CheckQuadType(pInput, pQuad, eNone)) == ePinErrorNone)
  2930  01040C  C1BF  F1B8         	movff	Port_SetQuadType@pInput,Port_CheckQuadType@pInput
  2931  010410  C1C0  F1B9         	movff	Port_SetQuadType@pInput+1,Port_CheckQuadType@pInput+1
  2932  010414  C1C1  F1BA         	movff	Port_SetQuadType@pQuad,Port_CheckQuadType@pQuad
  2933  010418  0E03               	movlw	3
  2934  01041A  0101               	movlb	1	; () banked
  2935  01041C  6FBB               	movwf	Port_CheckQuadType@pDrive& (0+255),b
  2936  01041E  EC2A  F08D         	call	_Port_CheckQuadType	;wreg free
  2937  010422  0100               	movlb	0	; () banked
  2938  010424  6FF7               	movwf	Port_SetQuadType@Output& (0+255),b
  2939  010426  0100               	movlb	0	; () banked
  2940  010428  51F7               	movf	Port_SetQuadType@Output& (0+255),w,b
  2941  01042A  A4D8               	btfss	status,2,c
  2942  01042C  0012               	return	
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;Port.c: 418: {
  2946                           ;Port.c: 420: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0);
  2947  01042E  0101               	movlb	1	; () banked
  2948  010430  EE20 F002          	lfsr	2,2
  2949  010434  51BF               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2950  010436  26D9               	addwf	fsr2l,f,c
  2951  010438  51C0               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2952  01043A  22DA               	addwfc	fsr2h,f,c
  2953  01043C  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2954  010440  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2955  010444  C1C1  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2956  010448  0E00               	movlw	0
  2957  01044A  0100               	movlb	0	; () banked
  2958  01044C  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2959  01044E  EC58  F08F         	call	_Byte_SetQuad	;wreg free
  2960                           
  2961                           ;Port.c: 423: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0);
  2962  010452  0101               	movlb	1	; () banked
  2963  010454  EE20 F004          	lfsr	2,4
  2964  010458  51BF               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2965  01045A  26D9               	addwf	fsr2l,f,c
  2966  01045C  51C0               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2967  01045E  22DA               	addwfc	fsr2h,f,c
  2968  010460  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2969  010464  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2970  010468  C1C1  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2971  01046C  0E00               	movlw	0
  2972  01046E  0100               	movlb	0	; () banked
  2973  010470  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2974  010472  EC58  F08F         	call	_Byte_SetQuad	;wreg free
  2975                           
  2976                           ;Port.c: 424: }
  2977  010476  D07A               	goto	l10231
  2978  010478                     l10219:
  2979                           
  2980                           ;Port.c: 428: if ((Output = Port_CheckQuadType(pInput, pQuad, eNone)) == ePinErrorNone)
  2981  010478  C1BF  F1B8         	movff	Port_SetQuadType@pInput,Port_CheckQuadType@pInput
  2982  01047C  C1C0  F1B9         	movff	Port_SetQuadType@pInput+1,Port_CheckQuadType@pInput+1
  2983  010480  C1C1  F1BA         	movff	Port_SetQuadType@pQuad,Port_CheckQuadType@pQuad
  2984  010484  0E03               	movlw	3
  2985  010486  0101               	movlb	1	; () banked
  2986  010488  6FBB               	movwf	Port_CheckQuadType@pDrive& (0+255),b
  2987  01048A  EC2A  F08D         	call	_Port_CheckQuadType	;wreg free
  2988  01048E  0100               	movlb	0	; () banked
  2989  010490  6FF7               	movwf	Port_SetQuadType@Output& (0+255),b
  2990  010492  0100               	movlb	0	; () banked
  2991  010494  51F7               	movf	Port_SetQuadType@Output& (0+255),w,b
  2992  010496  A4D8               	btfss	status,2,c
  2993  010498  0012               	return	
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;Port.c: 429: {
  2997                           ;Port.c: 431: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0xF);
  2998  01049A  0101               	movlb	1	; () banked
  2999  01049C  EE20 F002          	lfsr	2,2
  3000  0104A0  51BF               	movf	Port_SetQuadType@pInput& (0+255),w,b
  3001  0104A2  26D9               	addwf	fsr2l,f,c
  3002  0104A4  51C0               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  3003  0104A6  22DA               	addwfc	fsr2h,f,c
  3004  0104A8  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  3005  0104AC  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  3006  0104B0  C1C1  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  3007  0104B4  0E0F               	movlw	15
  3008  0104B6  0100               	movlb	0	; () banked
  3009  0104B8  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  3010  0104BA  EC58  F08F         	call	_Byte_SetQuad	;wreg free
  3011                           
  3012                           ;Port.c: 434: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0xF);
  3013  0104BE  0101               	movlb	1	; () banked
  3014  0104C0  EE20 F004          	lfsr	2,4
  3015  0104C4  51BF               	movf	Port_SetQuadType@pInput& (0+255),w,b
  3016  0104C6  26D9               	addwf	fsr2l,f,c
  3017  0104C8  51C0               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  3018  0104CA  22DA               	addwfc	fsr2h,f,c
  3019  0104CC  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  3020  0104D0  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  3021  0104D4  C1C1  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  3022  0104D8  0E0F               	movlw	15
  3023  0104DA  0100               	movlb	0	; () banked
  3024  0104DC  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  3025  0104DE  EC58  F08F         	call	_Byte_SetQuad	;wreg free
  3026                           
  3027                           ;Port.c: 435: }
  3028  0104E2  D044               	goto	l10231
  3029  0104E4                     l10223:
  3030                           
  3031                           ;Port.c: 439: if ((Output = Port_CheckQuadType(pInput, pQuad, eNone)) == ePinErrorNone)
  3032  0104E4  C1BF  F1B8         	movff	Port_SetQuadType@pInput,Port_CheckQuadType@pInput
  3033  0104E8  C1C0  F1B9         	movff	Port_SetQuadType@pInput+1,Port_CheckQuadType@pInput+1
  3034  0104EC  C1C1  F1BA         	movff	Port_SetQuadType@pQuad,Port_CheckQuadType@pQuad
  3035  0104F0  0E03               	movlw	3
  3036  0104F2  0101               	movlb	1	; () banked
  3037  0104F4  6FBB               	movwf	Port_CheckQuadType@pDrive& (0+255),b
  3038  0104F6  EC2A  F08D         	call	_Port_CheckQuadType	;wreg free
  3039  0104FA  0100               	movlb	0	; () banked
  3040  0104FC  6FF7               	movwf	Port_SetQuadType@Output& (0+255),b
  3041  0104FE  0100               	movlb	0	; () banked
  3042  010500  51F7               	movf	Port_SetQuadType@Output& (0+255),w,b
  3043  010502  A4D8               	btfss	status,2,c
  3044  010504  0012               	return	
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;Port.c: 440: {
  3048                           ;Port.c: 442: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0);
  3049  010506  0101               	movlb	1	; () banked
  3050  010508  EE20 F002          	lfsr	2,2
  3051  01050C  51BF               	movf	Port_SetQuadType@pInput& (0+255),w,b
  3052  01050E  26D9               	addwf	fsr2l,f,c
  3053  010510  51C0               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  3054  010512  22DA               	addwfc	fsr2h,f,c
  3055  010514  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  3056  010518  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  3057  01051C  C1C1  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  3058  010520  0E00               	movlw	0
  3059  010522  0100               	movlb	0	; () banked
  3060  010524  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  3061  010526  EC58  F08F         	call	_Byte_SetQuad	;wreg free
  3062                           
  3063                           ;Port.c: 445: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0);
  3064  01052A  0101               	movlb	1	; () banked
  3065  01052C  EE20 F004          	lfsr	2,4
  3066  010530  51BF               	movf	Port_SetQuadType@pInput& (0+255),w,b
  3067  010532  26D9               	addwf	fsr2l,f,c
  3068  010534  51C0               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  3069  010536  22DA               	addwfc	fsr2h,f,c
  3070  010538  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  3071  01053C  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  3072  010540  C1C1  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  3073  010544  0E00               	movlw	0
  3074  010546  0100               	movlb	0	; () banked
  3075  010548  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  3076  01054A  EC58  F08F         	call	_Byte_SetQuad	;wreg free
  3077                           
  3078                           ;Port.c: 446: }
  3079  01054E  D00E               	goto	l10231
  3080  010550                     l10229:
  3081  010550  0101               	movlb	1	; () banked
  3082  010552  51C2               	movf	Port_SetQuadType@pType& (0+255),w,b
  3083                           
  3084                           ; Switch size 1, requested type "space"
  3085                           ; Number of cases is 4, Range of values is 0 to 3
  3086                           ; switch strategies available:
  3087                           ; Name         Instructions Cycles
  3088                           ; simple_byte           13     7 (average)
  3089                           ;	Chosen strategy is simple_byte
  3090  010554  0A00               	xorlw	0	; case 0
  3091  010556  B4D8               	btfsc	status,2,c
  3092  010558  D734               	goto	l10213
  3093  01055A  0A01               	xorlw	1	; case 1
  3094  01055C  B4D8               	btfsc	status,2,c
  3095  01055E  D756               	goto	l10215
  3096  010560  0A03               	xorlw	3	; case 2
  3097  010562  B4D8               	btfsc	status,2,c
  3098  010564  D789               	goto	l10219
  3099  010566  0A01               	xorlw	1	; case 3
  3100  010568  B4D8               	btfsc	status,2,c
  3101  01056A  D7BC               	goto	l10223
  3102  01056C                     l10231:
  3103                           
  3104                           ;Port.c: 454: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4, (UINT8)pType);
  3105  01056C  0E08               	movlw	8
  3106  01056E  0101               	movlb	1	; () banked
  3107  010570  25BF               	addwf	Port_SetQuadType@pInput& (0+255),w,b
  3108  010572  0100               	movlb	0	; () banked
  3109  010574  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3110  010576  0E00               	movlw	0
  3111  010578  0101               	movlb	1	; () banked
  3112  01057A  21C0               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
  3113  01057C  0100               	movlb	0	; () banked
  3114  01057E  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3115  010580  0101               	movlb	1	; () banked
  3116  010582  51C1               	movf	Port_SetQuadType@pQuad& (0+255),w,b
  3117  010584  0D04               	mullw	4
  3118  010586  CFF3 F0D9          	movff	prodl,Word_SetPair@pPair
  3119  01058A  C1C2  F0DA         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
  3120  01058E  ECF2  F08D         	call	_Word_SetPair	;wreg free
  3121                           
  3122                           ;Port.c: 455: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4 + 1, (UINT8)pType);
  3123  010592  0E08               	movlw	8
  3124  010594  0101               	movlb	1	; () banked
  3125  010596  25BF               	addwf	Port_SetQuadType@pInput& (0+255),w,b
  3126  010598  0100               	movlb	0	; () banked
  3127  01059A  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3128  01059C  0E00               	movlw	0
  3129  01059E  0101               	movlb	1	; () banked
  3130  0105A0  21C0               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
  3131  0105A2  0100               	movlb	0	; () banked
  3132  0105A4  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3133  0105A6  0101               	movlb	1	; () banked
  3134  0105A8  51C1               	movf	Port_SetQuadType@pQuad& (0+255),w,b
  3135  0105AA  0D04               	mullw	4
  3136  0105AC  28F3               	incf	prodl,w,c
  3137  0105AE  0100               	movlb	0	; () banked
  3138  0105B0  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3139  0105B2  C1C2  F0DA         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
  3140  0105B6  ECF2  F08D         	call	_Word_SetPair	;wreg free
  3141                           
  3142                           ;Port.c: 456: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4 + 2, (UINT8)pType);
  3143  0105BA  0E08               	movlw	8
  3144  0105BC  0101               	movlb	1	; () banked
  3145  0105BE  25BF               	addwf	Port_SetQuadType@pInput& (0+255),w,b
  3146  0105C0  0100               	movlb	0	; () banked
  3147  0105C2  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3148  0105C4  0E00               	movlw	0
  3149  0105C6  0101               	movlb	1	; () banked
  3150  0105C8  21C0               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
  3151  0105CA  0100               	movlb	0	; () banked
  3152  0105CC  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3153  0105CE  0101               	movlb	1	; () banked
  3154  0105D0  51C1               	movf	Port_SetQuadType@pQuad& (0+255),w,b
  3155  0105D2  0D04               	mullw	4
  3156  0105D4  50F3               	movf	prodl,w,c
  3157  0105D6  0F02               	addlw	2
  3158  0105D8  0100               	movlb	0	; () banked
  3159  0105DA  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3160  0105DC  C1C2  F0DA         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
  3161  0105E0  ECF2  F08D         	call	_Word_SetPair	;wreg free
  3162                           
  3163                           ;Port.c: 457: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4 + 3, (UINT8)pType);
  3164  0105E4  0E08               	movlw	8
  3165  0105E6  0101               	movlb	1	; () banked
  3166  0105E8  25BF               	addwf	Port_SetQuadType@pInput& (0+255),w,b
  3167  0105EA  0100               	movlb	0	; () banked
  3168  0105EC  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3169  0105EE  0E00               	movlw	0
  3170  0105F0  0101               	movlb	1	; () banked
  3171  0105F2  21C0               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
  3172  0105F4  0100               	movlb	0	; () banked
  3173  0105F6  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3174  0105F8  0101               	movlb	1	; () banked
  3175  0105FA  51C1               	movf	Port_SetQuadType@pQuad& (0+255),w,b
  3176  0105FC  0D04               	mullw	4
  3177  0105FE  50F3               	movf	prodl,w,c
  3178  010600  0F03               	addlw	3
  3179  010602  0100               	movlb	0	; () banked
  3180  010604  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3181  010606  C1C2  F0DA         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
  3182  01060A  ECF2  F08D         	call	_Word_SetPair	;wreg free
  3183  01060E  0012               	return	
  3184  010610                     __end_of_Port_SetQuadType:
  3185                           	opt stack 0
  3186                           tblptru	equ	0xFF8
  3187                           tblptrh	equ	0xFF7
  3188                           tblptrl	equ	0xFF6
  3189                           tablat	equ	0xFF5
  3190                           prodl	equ	0xFF3
  3191                           postinc0	equ	0xFEE
  3192                           wreg	equ	0xFE8
  3193                           postdec1	equ	0xFE5
  3194                           fsr1h	equ	0xFE2
  3195                           fsr1l	equ	0xFE1
  3196                           postinc2	equ	0xFDE
  3197                           postdec2	equ	0xFDD
  3198                           fsr2h	equ	0xFDA
  3199                           fsr2l	equ	0xFD9
  3200                           status	equ	0xFD8
  3201                           
  3202 ;; *************** function _Byte_SetQuad *****************
  3203 ;; Defined at:
  3204 ;;		line 101 in file "Library/Types.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  pInput          2   11[BANK0 ] PTR struct Byte
  3207 ;;		 -> SSP2CON1(1), SSP1CON1(1), TRISG(1), TRISF(1), 
  3208 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
  3209 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
  3210 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
  3211 ;;		 -> NULL(0), 
  3212 ;;  pQuad           1   13[BANK0 ] unsigned char 
  3213 ;;  pValue          1   14[BANK0 ] unsigned char 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3225 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;Total ram usage:        4 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    8
  3232 ;; This function calls:
  3233 ;;		_Byte_SetZone
  3234 ;; This function is called by:
  3235 ;;		_Port_SetQuadType
  3236 ;;		_Port_SetQuad
  3237 ;;		_SPI_Init
  3238 ;;		_SPI_MinSpeed
  3239 ;;		_SPI_MaxSpeed
  3240 ;;		_Word_SetQuad
  3241 ;;		_I2C_Init
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text6
  3246  011EB0                     __ptext6:
  3247                           	opt stack 0
  3248  011EB0                     _Byte_SetQuad:
  3249                           	opt stack 19
  3250                           
  3251                           ;Types.c: 103: Byte_SetZone(pInput, 2, pQuad, 4, pValue);
  3252                           
  3253                           ;incstack = 0
  3254  011EB0  C0D3  F0C8         	movff	Byte_SetQuad@pInput,Byte_SetZone@pInput
  3255  011EB4  C0D4  F0C9         	movff	Byte_SetQuad@pInput+1,Byte_SetZone@pInput+1
  3256  011EB8  0E02               	movlw	2
  3257  011EBA  0100               	movlb	0	; () banked
  3258  011EBC  6FCA               	movwf	Byte_SetZone@pMax& (0+255),b
  3259  011EBE  C0D5  F0CB         	movff	Byte_SetQuad@pQuad,Byte_SetZone@pChunk
  3260  011EC2  0E04               	movlw	4
  3261  011EC4  0100               	movlb	0	; () banked
  3262  011EC6  6FCC               	movwf	Byte_SetZone@pChunkSize& (0+255),b
  3263  011EC8  C0D6  F0CD         	movff	Byte_SetQuad@pValue,Byte_SetZone@pValue
  3264  011ECC  EC69  F089         	call	_Byte_SetZone	;wreg free
  3265  011ED0  0012               	return		;funcret
  3266  011ED2                     __end_of_Byte_SetQuad:
  3267                           	opt stack 0
  3268                           tblptru	equ	0xFF8
  3269                           tblptrh	equ	0xFF7
  3270                           tblptrl	equ	0xFF6
  3271                           tablat	equ	0xFF5
  3272                           prodl	equ	0xFF3
  3273                           postinc0	equ	0xFEE
  3274                           wreg	equ	0xFE8
  3275                           postdec1	equ	0xFE5
  3276                           fsr1h	equ	0xFE2
  3277                           fsr1l	equ	0xFE1
  3278                           postinc2	equ	0xFDE
  3279                           postdec2	equ	0xFDD
  3280                           fsr2h	equ	0xFDA
  3281                           fsr2l	equ	0xFD9
  3282                           status	equ	0xFD8
  3283                           
  3284 ;; *************** function _Port_Init *****************
  3285 ;; Defined at:
  3286 ;;		line 150 in file "Library/Port.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  pInput          2   16[BANK1 ] const PTR struct Port
  3289 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  3290 ;;		 -> PortD(10), PortC(10), PortF(10), 
  3291 ;;  pPort           1   18[BANK1 ] enum E6786
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  i               1   21[BANK1 ] unsigned char 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3303 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;Total ram usage:        6 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; Hardware stack levels required when called:   15
  3310 ;; This function calls:
  3311 ;;		_GetPortPORT
  3312 ;;		_GetPortProperties
  3313 ;;		_GetPortTRIS
  3314 ;;		_Port_Set
  3315 ;;		_Port_SetPinType
  3316 ;;		_Port_SetType
  3317 ;;		_Word_GetPair
  3318 ;; This function is called by:
  3319 ;;		_MXK_Init
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text7
  3324  0109FA                     __ptext7:
  3325                           	opt stack 0
  3326  0109FA                     _Port_Init:
  3327                           	opt stack 13
  3328                           
  3329                           ;Port.c: 153: pInput->mProperties = GetPortProperties(pPort);
  3330                           
  3331                           ;incstack = 0
  3332  0109FA  0101               	movlb	1	; () banked
  3333  0109FC  51CA               	movf	Port_Init@pPort& (0+255),w,b
  3334  0109FE  ECC3  F08A         	call	_GetPortProperties
  3335  010A02  C1C8  FFD9         	movff	Port_Init@pInput,fsr2l
  3336  010A06  C1C9  FFDA         	movff	Port_Init@pInput+1,fsr2h
  3337  010A0A  0100               	movlb	0	; () banked
  3338  010A0C  C0C8  FFDE         	movff	?_GetPortProperties,postinc2
  3339  010A10  0100               	movlb	0	; () banked
  3340  010A12  C0C9  FFDD         	movff	?_GetPortProperties+1,postdec2
  3341                           
  3342                           ;Port.c: 154: pInput->mInput = GetPortPORT(pPort);
  3343  010A16  0101               	movlb	1	; () banked
  3344  010A18  51CA               	movf	Port_Init@pPort& (0+255),w,b
  3345  010A1A  EC16  F08B         	call	_GetPortPORT
  3346  010A1E  0101               	movlb	1	; () banked
  3347  010A20  EE20 F006          	lfsr	2,6
  3348  010A24  51C8               	movf	Port_Init@pInput& (0+255),w,b
  3349  010A26  26D9               	addwf	fsr2l,f,c
  3350  010A28  51C9               	movf	(Port_Init@pInput+1)& (0+255),w,b
  3351  010A2A  22DA               	addwfc	fsr2h,f,c
  3352  010A2C  0100               	movlb	0	; () banked
  3353  010A2E  C0C8  FFDE         	movff	?_GetPortPORT,postinc2
  3354  010A32  0100               	movlb	0	; () banked
  3355  010A34  C0C9  FFDD         	movff	?_GetPortPORT+1,postdec2
  3356                           
  3357                           ;Port.c: 155: pInput->mOutput = GetPortPORT(pPort);
  3358  010A38  0101               	movlb	1	; () banked
  3359  010A3A  51CA               	movf	Port_Init@pPort& (0+255),w,b
  3360  010A3C  EC16  F08B         	call	_GetPortPORT
  3361  010A40  0101               	movlb	1	; () banked
  3362  010A42  EE20 F004          	lfsr	2,4
  3363  010A46  51C8               	movf	Port_Init@pInput& (0+255),w,b
  3364  010A48  26D9               	addwf	fsr2l,f,c
  3365  010A4A  51C9               	movf	(Port_Init@pInput+1)& (0+255),w,b
  3366  010A4C  22DA               	addwfc	fsr2h,f,c
  3367  010A4E  0100               	movlb	0	; () banked
  3368  010A50  C0C8  FFDE         	movff	?_GetPortPORT,postinc2
  3369  010A54  0100               	movlb	0	; () banked
  3370  010A56  C0C9  FFDD         	movff	?_GetPortPORT+1,postdec2
  3371                           
  3372                           ;Port.c: 156: pInput->mDirection = GetPortTRIS(pPort);
  3373  010A5A  0101               	movlb	1	; () banked
  3374  010A5C  51CA               	movf	Port_Init@pPort& (0+255),w,b
  3375  010A5E  EC70  F08A         	call	_GetPortTRIS
  3376  010A62  0101               	movlb	1	; () banked
  3377  010A64  EE20 F002          	lfsr	2,2
  3378  010A68  51C8               	movf	Port_Init@pInput& (0+255),w,b
  3379  010A6A  26D9               	addwf	fsr2l,f,c
  3380  010A6C  51C9               	movf	(Port_Init@pInput+1)& (0+255),w,b
  3381  010A6E  22DA               	addwfc	fsr2h,f,c
  3382  010A70  0100               	movlb	0	; () banked
  3383  010A72  C0C8  FFDE         	movff	?_GetPortTRIS,postinc2
  3384  010A76  0100               	movlb	0	; () banked
  3385  010A78  C0C9  FFDD         	movff	?_GetPortTRIS+1,postdec2
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;Port.c: 159: pInput->mOutput->mBits = 0x00;
  3389  010A7C  0101               	movlb	1	; () banked
  3390  010A7E  EE20 F004          	lfsr	2,4
  3391  010A82  51C8               	movf	Port_Init@pInput& (0+255),w,b
  3392  010A84  26D9               	addwf	fsr2l,f,c
  3393  010A86  51C9               	movf	(Port_Init@pInput+1)& (0+255),w,b
  3394  010A88  22DA               	addwfc	fsr2h,f,c
  3395  010A8A  CFDE F1CB          	movff	postinc2,??_Port_Init
  3396  010A8E  CFDD F1CC          	movff	postdec2,??_Port_Init+1
  3397  010A92  C1CB  FFD9         	movff	??_Port_Init,fsr2l
  3398  010A96  C1CC  FFDA         	movff	??_Port_Init+1,fsr2h
  3399  010A9A  0E00               	movlw	0
  3400  010A9C  6EDF               	movwf	indf2,c
  3401                           
  3402                           ; BSR set to: 1
  3403                           ;Port.c: 160: pInput->mDirection->mBits = 0xFF;
  3404  010A9E  0101               	movlb	1	; () banked
  3405  010AA0  EE20 F002          	lfsr	2,2
  3406  010AA4  51C8               	movf	Port_Init@pInput& (0+255),w,b
  3407  010AA6  26D9               	addwf	fsr2l,f,c
  3408  010AA8  51C9               	movf	(Port_Init@pInput+1)& (0+255),w,b
  3409  010AAA  22DA               	addwfc	fsr2h,f,c
  3410  010AAC  CFDE F1CB          	movff	postinc2,??_Port_Init
  3411  010AB0  CFDD F1CC          	movff	postdec2,??_Port_Init+1
  3412  010AB4  C1CB  FFD9         	movff	??_Port_Init,fsr2l
  3413  010AB8  C1CC  FFDA         	movff	??_Port_Init+1,fsr2h
  3414  010ABC  0EFF               	movlw	255
  3415  010ABE  6EDF               	movwf	indf2,c
  3416                           
  3417                           ; BSR set to: 1
  3418                           ;Port.c: 163: Port_SetType(pInput, eTypeInput);
  3419  010AC0  C1C8  F1C2         	movff	Port_Init@pInput,Port_SetType@pInput
  3420  010AC4  C1C9  F1C3         	movff	Port_Init@pInput+1,Port_SetType@pInput+1
  3421  010AC8  0E00               	movlw	0
  3422  010ACA  0101               	movlb	1	; () banked
  3423  010ACC  6FC4               	movwf	Port_SetType@pType& (0+255),b
  3424  010ACE  EC08  F083         	call	_Port_SetType	;wreg free
  3425                           
  3426                           ;Port.c: 166: UINT8 i;
  3427                           ;Port.c: 167: for (i=0; i<8; i++)
  3428  010AD2  0E00               	movlw	0
  3429  010AD4  0101               	movlb	1	; () banked
  3430  010AD6  6FCD               	movwf	Port_Init@i& (0+255),b
  3431  010AD8                     l10189:
  3432                           
  3433                           ; BSR set to: 1
  3434  010AD8  0E07               	movlw	7
  3435  010ADA  0101               	movlb	1	; () banked
  3436  010ADC  65CD               	cpfsgt	Port_Init@i& (0+255),b
  3437  010ADE  D031               	goto	l10203
  3438  010AE0  D04B               	goto	l10209
  3439  010AE2                     l10193:
  3440                           
  3441                           ;Port.c: 172: Port_SetPinType(pInput, i, eTypeOutputPushPull);
  3442  010AE2  C1C8  F0EE         	movff	Port_Init@pInput,Port_SetPinType@pInput
  3443  010AE6  C1C9  F0EF         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  3444  010AEA  C1CD  F0F0         	movff	Port_Init@i,Port_SetPinType@pPin
  3445  010AEE  0E03               	movlw	3
  3446  010AF0  0100               	movlb	0	; () banked
  3447  010AF2  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  3448  010AF4  EC1D  F084         	call	_Port_SetPinType	;wreg free
  3449                           
  3450                           ;Port.c: 173: break;
  3451  010AF8  D03C               	goto	l10205
  3452  010AFA                     l10195:
  3453                           
  3454                           ;Port.c: 175: Port_SetPinType(pInput, i, eTypeOutputOpenSource);
  3455  010AFA  C1C8  F0EE         	movff	Port_Init@pInput,Port_SetPinType@pInput
  3456  010AFE  C1C9  F0EF         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  3457  010B02  C1CD  F0F0         	movff	Port_Init@i,Port_SetPinType@pPin
  3458  010B06  0E02               	movlw	2
  3459  010B08  0100               	movlb	0	; () banked
  3460  010B0A  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  3461  010B0C  EC1D  F084         	call	_Port_SetPinType	;wreg free
  3462                           
  3463                           ;Port.c: 176: break;
  3464  010B10  D030               	goto	l10205
  3465  010B12                     l10197:
  3466                           
  3467                           ;Port.c: 178: Port_SetPinType(pInput, i, eTypeOutputOpenDrain);
  3468  010B12  C1C8  F0EE         	movff	Port_Init@pInput,Port_SetPinType@pInput
  3469  010B16  C1C9  F0EF         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  3470  010B1A  C1CD  F0F0         	movff	Port_Init@i,Port_SetPinType@pPin
  3471  010B1E  0E01               	movlw	1
  3472  010B20  0100               	movlb	0	; () banked
  3473  010B22  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  3474  010B24  EC1D  F084         	call	_Port_SetPinType	;wreg free
  3475                           
  3476                           ;Port.c: 179: break;
  3477  010B28  D024               	goto	l10205
  3478  010B2A                     l10199:
  3479                           
  3480                           ;Port.c: 181: Port_SetPinType(pInput, i, eTypeInput);
  3481  010B2A  C1C8  F0EE         	movff	Port_Init@pInput,Port_SetPinType@pInput
  3482  010B2E  C1C9  F0EF         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  3483  010B32  C1CD  F0F0         	movff	Port_Init@i,Port_SetPinType@pPin
  3484  010B36  0E00               	movlw	0
  3485  010B38  0100               	movlb	0	; () banked
  3486  010B3A  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  3487  010B3C  EC1D  F084         	call	_Port_SetPinType	;wreg free
  3488                           
  3489                           ;Port.c: 183: }
  3490                           
  3491                           ;Port.c: 182: break;
  3492  010B40  D018               	goto	l10205
  3493  010B42                     l10203:
  3494  010B42  C1C8  FFD9         	movff	Port_Init@pInput,fsr2l
  3495  010B46  C1C9  FFDA         	movff	Port_Init@pInput+1,fsr2h
  3496  010B4A  CFDE F0D4          	movff	postinc2,Word_GetPair@pInput
  3497  010B4E  CFDD F0D5          	movff	postdec2,Word_GetPair@pInput+1
  3498  010B52  C1CD  F0D6         	movff	Port_Init@i,Word_GetPair@pPair
  3499  010B56  EC56  F08E         	call	_Word_GetPair	;wreg free
  3500                           
  3501                           ; Switch size 1, requested type "space"
  3502                           ; Number of cases is 4, Range of values is 0 to 3
  3503                           ; switch strategies available:
  3504                           ; Name         Instructions Cycles
  3505                           ; simple_byte           13     7 (average)
  3506                           ;	Chosen strategy is simple_byte
  3507  010B5A  0A00               	xorlw	0	; case 0
  3508  010B5C  B4D8               	btfsc	status,2,c
  3509  010B5E  D7C1               	goto	l10193
  3510  010B60  0A01               	xorlw	1	; case 1
  3511  010B62  B4D8               	btfsc	status,2,c
  3512  010B64  D7D6               	goto	l10197
  3513  010B66  0A03               	xorlw	3	; case 2
  3514  010B68  B4D8               	btfsc	status,2,c
  3515  010B6A  D7C7               	goto	l10195
  3516  010B6C  0A01               	xorlw	1	; case 3
  3517  010B6E  B4D8               	btfsc	status,2,c
  3518  010B70  D7DC               	goto	l10199
  3519  010B72                     l10205:
  3520  010B72  0101               	movlb	1	; () banked
  3521  010B74  2BCD               	incf	Port_Init@i& (0+255),f,b
  3522  010B76  D7B0               	goto	l10189
  3523  010B78                     l10209:
  3524                           
  3525                           ; BSR set to: 1
  3526                           ;Port.c: 184: }
  3527                           ;Port.c: 185: Port_Set(pInput, 0x00);
  3528  010B78  C1C8  F0D7         	movff	Port_Init@pInput,Port_Set@pInput
  3529  010B7C  C1C9  F0D8         	movff	Port_Init@pInput+1,Port_Set@pInput+1
  3530  010B80  0E00               	movlw	0
  3531  010B82  0100               	movlb	0	; () banked
  3532  010B84  6FD9               	movwf	Port_Set@pValue& (0+255),b
  3533  010B86  EC00  F080         	call	_Port_Set	;wreg free
  3534  010B8A  0012               	return		;funcret
  3535  010B8C                     __end_of_Port_Init:
  3536                           	opt stack 0
  3537                           tblptru	equ	0xFF8
  3538                           tblptrh	equ	0xFF7
  3539                           tblptrl	equ	0xFF6
  3540                           tablat	equ	0xFF5
  3541                           prodl	equ	0xFF3
  3542                           postinc0	equ	0xFEE
  3543                           wreg	equ	0xFE8
  3544                           postdec1	equ	0xFE5
  3545                           fsr1h	equ	0xFE2
  3546                           fsr1l	equ	0xFE1
  3547                           indf2	equ	0xFDF
  3548                           postinc2	equ	0xFDE
  3549                           postdec2	equ	0xFDD
  3550                           fsr2h	equ	0xFDA
  3551                           fsr2l	equ	0xFD9
  3552                           status	equ	0xFD8
  3553                           
  3554 ;; *************** function _Port_SetType *****************
  3555 ;; Defined at:
  3556 ;;		line 513 in file "Library/Port.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  pInput          2   10[BANK1 ] const PTR struct Port
  3559 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  3560 ;;		 -> PortD(10), PortC(10), PortF(10), 
  3561 ;;  pType           1   12[BANK1 ] enum E6795
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  Output          1   15[BANK1 ] enum E6475
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  1    wreg      enum E6475
  3566 ;; Registers used:
  3567 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3573 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;Total ram usage:        6 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; Hardware stack levels required when called:   14
  3580 ;; This function calls:
  3581 ;;		_Port_CheckPortType
  3582 ;;		_Word_SetPair
  3583 ;; This function is called by:
  3584 ;;		_Port_Init
  3585 ;;		_MXK_Init
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text8
  3590  010610                     __ptext8:
  3591                           	opt stack 0
  3592  010610                     _Port_SetType:
  3593                           	opt stack 14
  3594                           
  3595                           ;Port.c: 515: ePinError Output = ePinErrorState;
  3596                           
  3597                           ;incstack = 0
  3598  010610  0E05               	movlw	5
  3599  010612  0101               	movlb	1	; () banked
  3600  010614  6FC7               	movwf	Port_SetType@Output& (0+255),b
  3601                           
  3602                           ;Port.c: 517: switch (pType)
  3603  010616  D07A               	goto	l10017
  3604  010618                     l10001:
  3605                           
  3606                           ; BSR set to: 1
  3607                           ;Port.c: 522: pInput->mDirection->mBits = 0xFF;
  3608  010618  0101               	movlb	1	; () banked
  3609  01061A  EE20 F002          	lfsr	2,2
  3610  01061E  51C2               	movf	Port_SetType@pInput& (0+255),w,b
  3611  010620  26D9               	addwf	fsr2l,f,c
  3612  010622  51C3               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  3613  010624  22DA               	addwfc	fsr2h,f,c
  3614  010626  CFDE F1C5          	movff	postinc2,??_Port_SetType
  3615  01062A  CFDD F1C6          	movff	postdec2,??_Port_SetType+1
  3616  01062E  C1C5  FFD9         	movff	??_Port_SetType,fsr2l
  3617  010632  C1C6  FFDA         	movff	??_Port_SetType+1,fsr2h
  3618  010636  0EFF               	movlw	255
  3619  010638  D067               	goto	L3
  3620  01063A                     l10003:
  3621                           
  3622                           ; BSR set to: 1
  3623                           ;Port.c: 526: if ((Output=Port_CheckPortType(pInput, eLow)) == ePinErrorNone)
  3624  01063A  C1C2  F1BF         	movff	Port_SetType@pInput,Port_CheckPortType@pInput
  3625  01063E  C1C3  F1C0         	movff	Port_SetType@pInput+1,Port_CheckPortType@pInput+1
  3626  010642  0E01               	movlw	1
  3627  010644  0101               	movlb	1	; () banked
  3628  010646  6FC1               	movwf	Port_CheckPortType@pDrive& (0+255),b
  3629  010648  ECCE  F08D         	call	_Port_CheckPortType	;wreg free
  3630  01064C  0101               	movlb	1	; () banked
  3631  01064E  6FC7               	movwf	Port_SetType@Output& (0+255),b
  3632  010650  0101               	movlb	1	; () banked
  3633  010652  51C7               	movf	Port_SetType@Output& (0+255),w,b
  3634  010654  A4D8               	btfss	status,2,c
  3635  010656  0012               	return	
  3636                           
  3637                           ; BSR set to: 1
  3638                           ;Port.c: 527: {
  3639                           ;Port.c: 529: pInput->mDirection->mBits = 0x00;
  3640  010658  0101               	movlb	1	; () banked
  3641  01065A  EE20 F002          	lfsr	2,2
  3642  01065E  51C2               	movf	Port_SetType@pInput& (0+255),w,b
  3643  010660  26D9               	addwf	fsr2l,f,c
  3644  010662  51C3               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  3645  010664  22DA               	addwfc	fsr2h,f,c
  3646  010666  CFDE F1C5          	movff	postinc2,??_Port_SetType
  3647  01066A  CFDD F1C6          	movff	postdec2,??_Port_SetType+1
  3648  01066E  C1C5  FFD9         	movff	??_Port_SetType,fsr2l
  3649  010672  C1C6  FFDA         	movff	??_Port_SetType+1,fsr2h
  3650  010676  0E00               	movlw	0
  3651  010678  6EDF               	movwf	indf2,c
  3652                           
  3653                           ;Port.c: 532: pInput->mOutput->mBits = 0x00;
  3654  01067A  0101               	movlb	1	; () banked
  3655  01067C  EE20 F004          	lfsr	2,4
  3656  010680  D036               	goto	L5
  3657  010682                     l10007:
  3658                           
  3659                           ; BSR set to: 1
  3660                           ;Port.c: 537: if ((Output=Port_CheckPortType(pInput, eHigh)) == ePinErrorNone)
  3661  010682  C1C2  F1BF         	movff	Port_SetType@pInput,Port_CheckPortType@pInput
  3662  010686  C1C3  F1C0         	movff	Port_SetType@pInput+1,Port_CheckPortType@pInput+1
  3663  01068A  0E02               	movlw	2
  3664  01068C  0101               	movlb	1	; () banked
  3665  01068E  6FC1               	movwf	Port_CheckPortType@pDrive& (0+255),b
  3666  010690  ECCE  F08D         	call	_Port_CheckPortType	;wreg free
  3667  010694  0101               	movlb	1	; () banked
  3668  010696  6FC7               	movwf	Port_SetType@Output& (0+255),b
  3669  010698  0101               	movlb	1	; () banked
  3670  01069A  51C7               	movf	Port_SetType@Output& (0+255),w,b
  3671  01069C  A4D8               	btfss	status,2,c
  3672  01069E  0012               	return	
  3673                           
  3674                           ; BSR set to: 1
  3675                           ;Port.c: 538: {
  3676                           ;Port.c: 540: pInput->mDirection->mBits = 0xFF;
  3677  0106A0  0101               	movlb	1	; () banked
  3678  0106A2  EE20 F002          	lfsr	2,2
  3679  0106A6  51C2               	movf	Port_SetType@pInput& (0+255),w,b
  3680  0106A8  26D9               	addwf	fsr2l,f,c
  3681  0106AA  51C3               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  3682  0106AC  22DA               	addwfc	fsr2h,f,c
  3683  0106AE  CFDE F1C5          	movff	postinc2,??_Port_SetType
  3684  0106B2  CFDD F1C6          	movff	postdec2,??_Port_SetType+1
  3685  0106B6  C1C5  FFD9         	movff	??_Port_SetType,fsr2l
  3686  0106BA  C1C6  FFDA         	movff	??_Port_SetType+1,fsr2h
  3687  0106BE  0EFF               	movlw	255
  3688  0106C0  6EDF               	movwf	indf2,c
  3689                           
  3690                           ;Port.c: 543: pInput->mOutput->mBits = 0xFF;
  3691  0106C2  0101               	movlb	1	; () banked
  3692  0106C4  EE20 F004          	lfsr	2,4
  3693  0106C8  D7AA               	goto	L4
  3694  0106CA                     l10011:
  3695                           
  3696                           ; BSR set to: 1
  3697                           ;Port.c: 548: if ((Output=Port_CheckPortType(pInput, eHL)) == ePinErrorNone)
  3698  0106CA  C1C2  F1BF         	movff	Port_SetType@pInput,Port_CheckPortType@pInput
  3699  0106CE  C1C3  F1C0         	movff	Port_SetType@pInput+1,Port_CheckPortType@pInput+1
  3700  0106D2  0E00               	movlw	0
  3701  0106D4  0101               	movlb	1	; () banked
  3702  0106D6  6FC1               	movwf	Port_CheckPortType@pDrive& (0+255),b
  3703  0106D8  ECCE  F08D         	call	_Port_CheckPortType	;wreg free
  3704  0106DC  0101               	movlb	1	; () banked
  3705  0106DE  6FC7               	movwf	Port_SetType@Output& (0+255),b
  3706  0106E0  0101               	movlb	1	; () banked
  3707  0106E2  51C7               	movf	Port_SetType@Output& (0+255),w,b
  3708  0106E4  A4D8               	btfss	status,2,c
  3709  0106E6  0012               	return	
  3710                           
  3711                           ; BSR set to: 1
  3712                           ;Port.c: 549: {
  3713                           ;Port.c: 551: pInput->mDirection->mBits = 0x00;
  3714  0106E8  0101               	movlb	1	; () banked
  3715  0106EA  EE20 F002          	lfsr	2,2
  3716  0106EE                     L5:
  3717  0106EE  51C2               	movf	Port_SetType@pInput& (0+255),w,b
  3718  0106F0  26D9               	addwf	fsr2l,f,c
  3719  0106F2  51C3               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  3720  0106F4  22DA               	addwfc	fsr2h,f,c
  3721  0106F6  CFDE F1C5          	movff	postinc2,??_Port_SetType
  3722  0106FA  CFDD F1C6          	movff	postdec2,??_Port_SetType+1
  3723  0106FE  C1C5  FFD9         	movff	??_Port_SetType,fsr2l
  3724  010702  C1C6  FFDA         	movff	??_Port_SetType+1,fsr2h
  3725  010706  0E00               	movlw	0
  3726  010708                     L3:
  3727  010708  6EDF               	movwf	indf2,c
  3728                           
  3729                           ;Port.c: 552: }
  3730  01070A  D00E               	goto	l10019
  3731  01070C                     l10017:
  3732                           
  3733                           ; BSR set to: 1
  3734  01070C  0101               	movlb	1	; () banked
  3735  01070E  51C4               	movf	Port_SetType@pType& (0+255),w,b
  3736                           
  3737                           ; Switch size 1, requested type "space"
  3738                           ; Number of cases is 4, Range of values is 0 to 3
  3739                           ; switch strategies available:
  3740                           ; Name         Instructions Cycles
  3741                           ; simple_byte           13     7 (average)
  3742                           ;	Chosen strategy is simple_byte
  3743  010710  0A00               	xorlw	0	; case 0
  3744  010712  B4D8               	btfsc	status,2,c
  3745  010714  D781               	goto	l10001
  3746  010716  0A01               	xorlw	1	; case 1
  3747  010718  B4D8               	btfsc	status,2,c
  3748  01071A  D78F               	goto	l10003
  3749  01071C  0A03               	xorlw	3	; case 2
  3750  01071E  B4D8               	btfsc	status,2,c
  3751  010720  D7B0               	goto	l10007
  3752  010722  0A01               	xorlw	1	; case 3
  3753  010724  B4D8               	btfsc	status,2,c
  3754  010726  D7D1               	goto	l10011
  3755  010728                     l10019:
  3756                           
  3757                           ; BSR set to: 1
  3758                           ;Port.c: 560: Word_SetPair(&pInput->mType, 0, (UINT8)pType);
  3759  010728  0E08               	movlw	8
  3760  01072A  0101               	movlb	1	; () banked
  3761  01072C  25C2               	addwf	Port_SetType@pInput& (0+255),w,b
  3762  01072E  0100               	movlb	0	; () banked
  3763  010730  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3764  010732  0E00               	movlw	0
  3765  010734  0101               	movlb	1	; () banked
  3766  010736  21C3               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3767  010738  0100               	movlb	0	; () banked
  3768  01073A  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3769  01073C  0E00               	movlw	0
  3770  01073E  0100               	movlb	0	; () banked
  3771  010740  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3772  010742  C1C4  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3773  010746  ECF2  F08D         	call	_Word_SetPair	;wreg free
  3774                           
  3775                           ;Port.c: 561: Word_SetPair(&pInput->mType, 1, (UINT8)pType);
  3776  01074A  0E08               	movlw	8
  3777  01074C  0101               	movlb	1	; () banked
  3778  01074E  25C2               	addwf	Port_SetType@pInput& (0+255),w,b
  3779  010750  0100               	movlb	0	; () banked
  3780  010752  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3781  010754  0E00               	movlw	0
  3782  010756  0101               	movlb	1	; () banked
  3783  010758  21C3               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3784  01075A  0100               	movlb	0	; () banked
  3785  01075C  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3786  01075E  0E01               	movlw	1
  3787  010760  0100               	movlb	0	; () banked
  3788  010762  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3789  010764  C1C4  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3790  010768  ECF2  F08D         	call	_Word_SetPair	;wreg free
  3791                           
  3792                           ;Port.c: 562: Word_SetPair(&pInput->mType, 2, (UINT8)pType);
  3793  01076C  0E08               	movlw	8
  3794  01076E  0101               	movlb	1	; () banked
  3795  010770  25C2               	addwf	Port_SetType@pInput& (0+255),w,b
  3796  010772  0100               	movlb	0	; () banked
  3797  010774  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3798  010776  0E00               	movlw	0
  3799  010778  0101               	movlb	1	; () banked
  3800  01077A  21C3               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3801  01077C  0100               	movlb	0	; () banked
  3802  01077E  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3803  010780  0E02               	movlw	2
  3804  010782  0100               	movlb	0	; () banked
  3805  010784  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3806  010786  C1C4  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3807  01078A  ECF2  F08D         	call	_Word_SetPair	;wreg free
  3808                           
  3809                           ;Port.c: 563: Word_SetPair(&pInput->mType, 3, (UINT8)pType);
  3810  01078E  0E08               	movlw	8
  3811  010790  0101               	movlb	1	; () banked
  3812  010792  25C2               	addwf	Port_SetType@pInput& (0+255),w,b
  3813  010794  0100               	movlb	0	; () banked
  3814  010796  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3815  010798  0E00               	movlw	0
  3816  01079A  0101               	movlb	1	; () banked
  3817  01079C  21C3               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3818  01079E  0100               	movlb	0	; () banked
  3819  0107A0  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3820  0107A2  0E03               	movlw	3
  3821  0107A4  0100               	movlb	0	; () banked
  3822  0107A6  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3823  0107A8  C1C4  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3824  0107AC  ECF2  F08D         	call	_Word_SetPair	;wreg free
  3825                           
  3826                           ;Port.c: 564: Word_SetPair(&pInput->mType, 4, (UINT8)pType);
  3827  0107B0  0E08               	movlw	8
  3828  0107B2  0101               	movlb	1	; () banked
  3829  0107B4  25C2               	addwf	Port_SetType@pInput& (0+255),w,b
  3830  0107B6  0100               	movlb	0	; () banked
  3831  0107B8  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3832  0107BA  0E00               	movlw	0
  3833  0107BC  0101               	movlb	1	; () banked
  3834  0107BE  21C3               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3835  0107C0  0100               	movlb	0	; () banked
  3836  0107C2  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3837  0107C4  0E04               	movlw	4
  3838  0107C6  0100               	movlb	0	; () banked
  3839  0107C8  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3840  0107CA  C1C4  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3841  0107CE  ECF2  F08D         	call	_Word_SetPair	;wreg free
  3842                           
  3843                           ;Port.c: 565: Word_SetPair(&pInput->mType, 5, (UINT8)pType);
  3844  0107D2  0E08               	movlw	8
  3845  0107D4  0101               	movlb	1	; () banked
  3846  0107D6  25C2               	addwf	Port_SetType@pInput& (0+255),w,b
  3847  0107D8  0100               	movlb	0	; () banked
  3848  0107DA  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3849  0107DC  0E00               	movlw	0
  3850  0107DE  0101               	movlb	1	; () banked
  3851  0107E0  21C3               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3852  0107E2  0100               	movlb	0	; () banked
  3853  0107E4  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3854  0107E6  0E05               	movlw	5
  3855  0107E8  0100               	movlb	0	; () banked
  3856  0107EA  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3857  0107EC  C1C4  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3858  0107F0  ECF2  F08D         	call	_Word_SetPair	;wreg free
  3859                           
  3860                           ;Port.c: 566: Word_SetPair(&pInput->mType, 6, (UINT8)pType);
  3861  0107F4  0E08               	movlw	8
  3862  0107F6  0101               	movlb	1	; () banked
  3863  0107F8  25C2               	addwf	Port_SetType@pInput& (0+255),w,b
  3864  0107FA  0100               	movlb	0	; () banked
  3865  0107FC  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3866  0107FE  0E00               	movlw	0
  3867  010800  0101               	movlb	1	; () banked
  3868  010802  21C3               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3869  010804  0100               	movlb	0	; () banked
  3870  010806  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3871  010808  0E06               	movlw	6
  3872  01080A  0100               	movlb	0	; () banked
  3873  01080C  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3874  01080E  C1C4  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3875  010812  ECF2  F08D         	call	_Word_SetPair	;wreg free
  3876                           
  3877                           ;Port.c: 567: Word_SetPair(&pInput->mType, 7, (UINT8)pType);
  3878  010816  0E08               	movlw	8
  3879  010818  0101               	movlb	1	; () banked
  3880  01081A  25C2               	addwf	Port_SetType@pInput& (0+255),w,b
  3881  01081C  0100               	movlb	0	; () banked
  3882  01081E  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3883  010820  0E00               	movlw	0
  3884  010822  0101               	movlb	1	; () banked
  3885  010824  21C3               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3886  010826  0100               	movlb	0	; () banked
  3887  010828  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3888  01082A  0E07               	movlw	7
  3889  01082C  0100               	movlb	0	; () banked
  3890  01082E  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3891  010830  C1C4  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3892  010834  ECF2  F08D         	call	_Word_SetPair	;wreg free
  3893  010838  0012               	return	
  3894  01083A                     __end_of_Port_SetType:
  3895                           	opt stack 0
  3896                           tblptru	equ	0xFF8
  3897                           tblptrh	equ	0xFF7
  3898                           tblptrl	equ	0xFF6
  3899                           tablat	equ	0xFF5
  3900                           prodl	equ	0xFF3
  3901                           postinc0	equ	0xFEE
  3902                           wreg	equ	0xFE8
  3903                           postdec1	equ	0xFE5
  3904                           fsr1h	equ	0xFE2
  3905                           fsr1l	equ	0xFE1
  3906                           indf2	equ	0xFDF
  3907                           postinc2	equ	0xFDE
  3908                           postdec2	equ	0xFDD
  3909                           fsr2h	equ	0xFDA
  3910                           fsr2l	equ	0xFD9
  3911                           status	equ	0xFD8
  3912                           
  3913 ;; *************** function _Port_CheckPortType *****************
  3914 ;; Defined at:
  3915 ;;		line 138 in file "Library/Port.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  pInput          2    7[BANK1 ] const PTR struct Port
  3918 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  3919 ;;		 -> PortD(10), PortC(10), PortF(10), 
  3920 ;;  pDrive          1    9[BANK1 ] enum E6469
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  Output          1   47[BANK0 ] enum E6475
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      enum E6475
  3925 ;; Registers used:
  3926 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3932 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;Total ram usage:        4 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:   13
  3939 ;; This function calls:
  3940 ;;		_Port_CheckQuadType
  3941 ;; This function is called by:
  3942 ;;		_Port_SetType
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text9
  3947  011B9C                     __ptext9:
  3948                           	opt stack 0
  3949  011B9C                     _Port_CheckPortType:
  3950                           	opt stack 14
  3951                           
  3952                           ;Port.c: 140: ePinError Output = ePinErrorState;
  3953                           
  3954                           ;incstack = 0
  3955  011B9C  0E05               	movlw	5
  3956  011B9E  0100               	movlb	0	; () banked
  3957  011BA0  6FF7               	movwf	Port_CheckPortType@Output& (0+255),b
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;Port.c: 143: if ((Output = Port_CheckQuadType(pInput, eP0_3, pDrive)) == ePinErrorNone)
  3961  011BA2  C1BF  F1B8         	movff	Port_CheckPortType@pInput,Port_CheckQuadType@pInput
  3962  011BA6  C1C0  F1B9         	movff	Port_CheckPortType@pInput+1,Port_CheckQuadType@pInput+1
  3963  011BAA  0E00               	movlw	0
  3964  011BAC  0101               	movlb	1	; () banked
  3965  011BAE  6FBA               	movwf	Port_CheckQuadType@pQuad& (0+255),b
  3966  011BB0  C1C1  F1BB         	movff	Port_CheckPortType@pDrive,Port_CheckQuadType@pDrive
  3967  011BB4  EC2A  F08D         	call	_Port_CheckQuadType	;wreg free
  3968  011BB8  0100               	movlb	0	; () banked
  3969  011BBA  6FF7               	movwf	Port_CheckPortType@Output& (0+255),b
  3970  011BBC  0100               	movlb	0	; () banked
  3971  011BBE  51F7               	movf	Port_CheckPortType@Output& (0+255),w,b
  3972  011BC0  A4D8               	btfss	status,2,c
  3973  011BC2  D00D               	goto	l9809
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;Port.c: 144: Output = Port_CheckQuadType(pInput, eP4_7, pDrive);
  3977  011BC4  C1BF  F1B8         	movff	Port_CheckPortType@pInput,Port_CheckQuadType@pInput
  3978  011BC8  C1C0  F1B9         	movff	Port_CheckPortType@pInput+1,Port_CheckQuadType@pInput+1
  3979  011BCC  0E01               	movlw	1
  3980  011BCE  0101               	movlb	1	; () banked
  3981  011BD0  6FBA               	movwf	Port_CheckQuadType@pQuad& (0+255),b
  3982  011BD2  C1C1  F1BB         	movff	Port_CheckPortType@pDrive,Port_CheckQuadType@pDrive
  3983  011BD6  EC2A  F08D         	call	_Port_CheckQuadType	;wreg free
  3984  011BDA  0100               	movlb	0	; () banked
  3985  011BDC  6FF7               	movwf	Port_CheckPortType@Output& (0+255),b
  3986  011BDE                     l9809:
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;Port.c: 146: return Output;
  3990  011BDE  0100               	movlb	0	; () banked
  3991  011BE0  51F7               	movf	Port_CheckPortType@Output& (0+255),w,b
  3992  011BE2  0012               	return	
  3993  011BE4                     __end_of_Port_CheckPortType:
  3994                           	opt stack 0
  3995                           tblptru	equ	0xFF8
  3996                           tblptrh	equ	0xFF7
  3997                           tblptrl	equ	0xFF6
  3998                           tablat	equ	0xFF5
  3999                           prodl	equ	0xFF3
  4000                           postinc0	equ	0xFEE
  4001                           wreg	equ	0xFE8
  4002                           postdec1	equ	0xFE5
  4003                           fsr1h	equ	0xFE2
  4004                           fsr1l	equ	0xFE1
  4005                           indf2	equ	0xFDF
  4006                           postinc2	equ	0xFDE
  4007                           postdec2	equ	0xFDD
  4008                           fsr2h	equ	0xFDA
  4009                           fsr2l	equ	0xFD9
  4010                           status	equ	0xFD8
  4011                           
  4012 ;; *************** function _Port_CheckQuadType *****************
  4013 ;; Defined at:
  4014 ;;		line 126 in file "Library/Port.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;  pInput          2    0[BANK1 ] const PTR struct Port
  4017 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  4018 ;;		 -> PortD(10), PortC(10), PortF(10), 
  4019 ;;  pQuad           1    2[BANK1 ] enum E6776
  4020 ;;  pDrive          1    3[BANK1 ] enum E6469
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  Output          1    6[BANK1 ] enum E6475
  4023 ;;  Pair2           1    5[BANK1 ] enum E6760
  4024 ;;  Pair1           1    4[BANK1 ] enum E6760
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      enum E6475
  4027 ;; Registers used:
  4028 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4034 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;Total ram usage:        7 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:   12
  4041 ;; This function calls:
  4042 ;;		_Port_CheckPairType
  4043 ;; This function is called by:
  4044 ;;		_Port_CheckPortType
  4045 ;;		_Port_SetQuadType
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text10
  4050  011A54                     __ptext10:
  4051                           	opt stack 0
  4052  011A54                     _Port_CheckQuadType:
  4053                           	opt stack 14
  4054                           
  4055                           ;Port.c: 128: ePinError Output = ePinErrorState;
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;incstack = 0
  4059  011A54  0E05               	movlw	5
  4060  011A56  0101               	movlb	1	; () banked
  4061  011A58  6FBE               	movwf	Port_CheckQuadType@Output& (0+255),b
  4062                           
  4063                           ; BSR set to: 1
  4064                           ;Port.c: 129: ePair Pair1 = (ePair)((int)pQuad * 2);
  4065  011A5A  0101               	movlb	1	; () banked
  4066  011A5C  51BA               	movf	Port_CheckQuadType@pQuad& (0+255),w,b
  4067  011A5E  0D02               	mullw	2
  4068  011A60  CFF3 F1BC          	movff	prodl,Port_CheckQuadType@Pair1
  4069                           
  4070                           ; BSR set to: 1
  4071                           ;Port.c: 130: ePair Pair2 = (ePair)((int)pQuad * 2 + 1);
  4072  011A64  0101               	movlb	1	; () banked
  4073  011A66  51BA               	movf	Port_CheckQuadType@pQuad& (0+255),w,b
  4074  011A68  0D02               	mullw	2
  4075  011A6A  28F3               	incf	prodl,w,c
  4076  011A6C  0101               	movlb	1	; () banked
  4077  011A6E  6FBD               	movwf	Port_CheckQuadType@Pair2& (0+255),b
  4078                           
  4079                           ; BSR set to: 1
  4080                           ;Port.c: 133: if ((Output = Port_CheckPairType(pInput, Pair1, pDrive)) == ePinErrorNone)
  4081  011A70  C1B8  F0EE         	movff	Port_CheckQuadType@pInput,Port_CheckPairType@pInput
  4082  011A74  C1B9  F0EF         	movff	Port_CheckQuadType@pInput+1,Port_CheckPairType@pInput+1
  4083  011A78  C1BC  F0F0         	movff	Port_CheckQuadType@Pair1,Port_CheckPairType@pPair
  4084  011A7C  C1BB  F0F1         	movff	Port_CheckQuadType@pDrive,Port_CheckPairType@pDrive
  4085  011A80  EC65  F08C         	call	_Port_CheckPairType	;wreg free
  4086  011A84  0101               	movlb	1	; () banked
  4087  011A86  6FBE               	movwf	Port_CheckQuadType@Output& (0+255),b
  4088  011A88  0101               	movlb	1	; () banked
  4089  011A8A  51BE               	movf	Port_CheckQuadType@Output& (0+255),w,b
  4090  011A8C  A4D8               	btfss	status,2,c
  4091  011A8E  D00C               	goto	l9773
  4092                           
  4093                           ; BSR set to: 1
  4094                           ;Port.c: 134: Output = Port_CheckPairType(pInput, Pair2, pDrive);
  4095  011A90  C1B8  F0EE         	movff	Port_CheckQuadType@pInput,Port_CheckPairType@pInput
  4096  011A94  C1B9  F0EF         	movff	Port_CheckQuadType@pInput+1,Port_CheckPairType@pInput+1
  4097  011A98  C1BD  F0F0         	movff	Port_CheckQuadType@Pair2,Port_CheckPairType@pPair
  4098  011A9C  C1BB  F0F1         	movff	Port_CheckQuadType@pDrive,Port_CheckPairType@pDrive
  4099  011AA0  EC65  F08C         	call	_Port_CheckPairType	;wreg free
  4100  011AA4  0101               	movlb	1	; () banked
  4101  011AA6  6FBE               	movwf	Port_CheckQuadType@Output& (0+255),b
  4102  011AA8                     l9773:
  4103                           
  4104                           ; BSR set to: 1
  4105                           ;Port.c: 136: return Output;
  4106  011AA8  0101               	movlb	1	; () banked
  4107  011AAA  51BE               	movf	Port_CheckQuadType@Output& (0+255),w,b
  4108  011AAC  0012               	return	
  4109  011AAE                     __end_of_Port_CheckQuadType:
  4110                           	opt stack 0
  4111                           tblptru	equ	0xFF8
  4112                           tblptrh	equ	0xFF7
  4113                           tblptrl	equ	0xFF6
  4114                           tablat	equ	0xFF5
  4115                           prodl	equ	0xFF3
  4116                           postinc0	equ	0xFEE
  4117                           wreg	equ	0xFE8
  4118                           postdec1	equ	0xFE5
  4119                           fsr1h	equ	0xFE2
  4120                           fsr1l	equ	0xFE1
  4121                           indf2	equ	0xFDF
  4122                           postinc2	equ	0xFDE
  4123                           postdec2	equ	0xFDD
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           status	equ	0xFD8
  4127                           
  4128 ;; *************** function _Port_CheckPairType *****************
  4129 ;; Defined at:
  4130 ;;		line 112 in file "Library/Port.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  pInput          2   38[BANK0 ] const PTR struct Port
  4133 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  4134 ;;		 -> PortD(10), PortC(10), PortF(10), 
  4135 ;;  pPair           1   40[BANK0 ] enum E6760
  4136 ;;  pDrive          1   41[BANK0 ] enum E6469
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  Props           2   45[BANK0 ] PTR struct PortProperty
  4139 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  4140 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
  4141 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
  4142 ;;		 -> PortC(10), PortF(10), NULL(0), 
  4143 ;;  Output          1   44[BANK0 ] enum E6475
  4144 ;;  Pin2            1   43[BANK0 ] enum E6750
  4145 ;;  Pin1            1   42[BANK0 ] enum E6750
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      enum E6475
  4148 ;; Registers used:
  4149 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4155 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;Total ram usage:        9 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:   11
  4162 ;; This function calls:
  4163 ;;		_PortProperty_Valid
  4164 ;; This function is called by:
  4165 ;;		_Port_CheckQuadType
  4166 ;;		_Port_SetPairType
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           	psect	text11
  4171  0118CA                     __ptext11:
  4172                           	opt stack 0
  4173  0118CA                     _Port_CheckPairType:
  4174                           	opt stack 14
  4175                           
  4176                           ;Port.c: 114: ePinError Output = ePinErrorState;
  4177                           
  4178                           ; BSR set to: 1
  4179                           ;incstack = 0
  4180  0118CA  0E05               	movlw	5
  4181  0118CC  0100               	movlb	0	; () banked
  4182  0118CE  6FF4               	movwf	Port_CheckPairType@Output& (0+255),b
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;Port.c: 116: PortPropertyPtr Props = (PortPropertyPtr)&(pInput->mProperties->mWord);
  4186  0118D0  C0EE  FFD9         	movff	Port_CheckPairType@pInput,fsr2l
  4187  0118D4  C0EF  FFDA         	movff	Port_CheckPairType@pInput+1,fsr2h
  4188  0118D8  CFDE F0F5          	movff	postinc2,Port_CheckPairType@Props
  4189  0118DC  CFDD F0F6          	movff	postdec2,Port_CheckPairType@Props+1
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;Port.c: 117: ePin Pin1 = (ePin)((int)pPair * 2);
  4193  0118E0  0100               	movlb	0	; () banked
  4194  0118E2  51F0               	movf	Port_CheckPairType@pPair& (0+255),w,b
  4195  0118E4  0D02               	mullw	2
  4196  0118E6  CFF3 F0F2          	movff	prodl,Port_CheckPairType@Pin1
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;Port.c: 118: ePin Pin2 = (ePin)((int)pPair * 2 + 1);
  4200  0118EA  0100               	movlb	0	; () banked
  4201  0118EC  51F0               	movf	Port_CheckPairType@pPair& (0+255),w,b
  4202  0118EE  0D02               	mullw	2
  4203  0118F0  28F3               	incf	prodl,w,c
  4204  0118F2  0100               	movlb	0	; () banked
  4205  0118F4  6FF3               	movwf	Port_CheckPairType@Pin2& (0+255),b
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;Port.c: 121: if ((Output = PortProperty_Valid(Props, pDrive, Pin1)) == ePinErrorNone)
  4209  0118F6  C0F5  F0D7         	movff	Port_CheckPairType@Props,PortProperty_Valid@pInput
  4210  0118FA  C0F6  F0D8         	movff	Port_CheckPairType@Props+1,PortProperty_Valid@pInput+1
  4211  0118FE  C0F1  F0D9         	movff	Port_CheckPairType@pDrive,PortProperty_Valid@pPinDrive
  4212  011902  C0F2  F0DA         	movff	Port_CheckPairType@Pin1,PortProperty_Valid@pPin
  4213  011906  ECB7  F08B         	call	_PortProperty_Valid	;wreg free
  4214  01190A  0100               	movlb	0	; () banked
  4215  01190C  6FF4               	movwf	Port_CheckPairType@Output& (0+255),b
  4216  01190E  0100               	movlb	0	; () banked
  4217  011910  51F4               	movf	Port_CheckPairType@Output& (0+255),w,b
  4218  011912  A4D8               	btfss	status,2,c
  4219  011914  D00C               	goto	l9631
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;Port.c: 122: Output = PortProperty_Valid(Props, pDrive, Pin2);
  4223  011916  C0F5  F0D7         	movff	Port_CheckPairType@Props,PortProperty_Valid@pInput
  4224  01191A  C0F6  F0D8         	movff	Port_CheckPairType@Props+1,PortProperty_Valid@pInput+1
  4225  01191E  C0F1  F0D9         	movff	Port_CheckPairType@pDrive,PortProperty_Valid@pPinDrive
  4226  011922  C0F3  F0DA         	movff	Port_CheckPairType@Pin2,PortProperty_Valid@pPin
  4227  011926  ECB7  F08B         	call	_PortProperty_Valid	;wreg free
  4228  01192A  0100               	movlb	0	; () banked
  4229  01192C  6FF4               	movwf	Port_CheckPairType@Output& (0+255),b
  4230  01192E                     l9631:
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;Port.c: 124: return Output;
  4234  01192E  0100               	movlb	0	; () banked
  4235  011930  51F4               	movf	Port_CheckPairType@Output& (0+255),w,b
  4236  011932  0012               	return	
  4237  011934                     __end_of_Port_CheckPairType:
  4238                           	opt stack 0
  4239                           tblptru	equ	0xFF8
  4240                           tblptrh	equ	0xFF7
  4241                           tblptrl	equ	0xFF6
  4242                           tablat	equ	0xFF5
  4243                           prodl	equ	0xFF3
  4244                           postinc0	equ	0xFEE
  4245                           wreg	equ	0xFE8
  4246                           postdec1	equ	0xFE5
  4247                           fsr1h	equ	0xFE2
  4248                           fsr1l	equ	0xFE1
  4249                           indf2	equ	0xFDF
  4250                           postinc2	equ	0xFDE
  4251                           postdec2	equ	0xFDD
  4252                           fsr2h	equ	0xFDA
  4253                           fsr2l	equ	0xFD9
  4254                           status	equ	0xFD8
  4255                           
  4256 ;; *************** function _Port_Set *****************
  4257 ;; Defined at:
  4258 ;;		line 570 in file "Library/Port.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;  pInput          2   15[BANK0 ] const PTR struct Port
  4261 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  4262 ;;		 -> PortD(10), PortC(10), PortF(10), 
  4263 ;;  pValue          1   17[BANK0 ] unsigned char 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  TypeActual      2   36[BANK0 ] unsigned short 
  4266 ;;  TypeRequired    2   34[BANK0 ] unsigned short 
  4267 ;;  Type            1   38[BANK0 ] enum E6795
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      void 
  4270 ;; Registers used:
  4271 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4277 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4280 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;Total ram usage:       24 bytes
  4282 ;; Hardware stack levels used:    1
  4283 ;; Hardware stack levels required when called:   10
  4284 ;; This function calls:
  4285 ;;		_Byte_SetByte
  4286 ;;		_Word_GetPair
  4287 ;; This function is called by:
  4288 ;;		_Port_Init
  4289 ;;		_Port_Toggle
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text12
  4294  010000                     __ptext12:
  4295                           	opt stack 0
  4296  010000                     _Port_Set:
  4297                           	opt stack 17
  4298                           
  4299                           ;Port.c: 572: ePinType Type = (ePinType)Word_GetPair(&pInput->mType, 0);
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;incstack = 0
  4303  010000  0E08               	movlw	8
  4304  010002  0100               	movlb	0	; () banked
  4305  010004  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4306  010006  0100               	movlb	0	; () banked
  4307  010008  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4308  01000A  0E00               	movlw	0
  4309  01000C  0100               	movlb	0	; () banked
  4310  01000E  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4311  010010  0100               	movlb	0	; () banked
  4312  010012  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4313  010014  0E00               	movlw	0
  4314  010016  0100               	movlb	0	; () banked
  4315  010018  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4316  01001A  EC56  F08E         	call	_Word_GetPair	;wreg free
  4317  01001E  0100               	movlb	0	; () banked
  4318  010020  6FEE               	movwf	Port_Set@Type& (0+255),b
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;Port.c: 573: UINT16 TypeRequired = Type | (Type << 2) | (Type << 4) | (Type << 6) | (Ty
      +                          pe << 8) | (Type << 10) | (Type << 12) | (Type << 14);
  4322  010022  0100               	movlb	0	; () banked
  4323  010024  51EE               	movf	Port_Set@Type& (0+255),w,b
  4324  010026  0100               	movlb	0	; () banked
  4325  010028  6FDA               	movwf	??_Port_Set& (0+255),b
  4326  01002A  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4327  01002C  0E0E               	movlw	14
  4328  01002E                     u6705:
  4329  01002E  90D8               	bcf	status,0,c
  4330  010030  0100               	movlb	0	; () banked
  4331  010032  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4332  010034  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4333  010036  2EE8               	decfsz	wreg,f,c
  4334  010038  D7FA               	goto	u6705
  4335  01003A  0100               	movlb	0	; () banked
  4336  01003C  51EE               	movf	Port_Set@Type& (0+255),w,b
  4337  01003E  0100               	movlb	0	; () banked
  4338  010040  6FDC               	movwf	(??_Port_Set+2)& (0+255),b
  4339  010042  6BDD               	clrf	(??_Port_Set+3)& (0+255),b
  4340  010044  0E0C               	movlw	12
  4341  010046                     u6715:
  4342  010046  90D8               	bcf	status,0,c
  4343  010048  0100               	movlb	0	; () banked
  4344  01004A  37DC               	rlcf	(??_Port_Set+2)& (0+255),f,b
  4345  01004C  37DD               	rlcf	(??_Port_Set+3)& (0+255),f,b
  4346  01004E  2EE8               	decfsz	wreg,f,c
  4347  010050  D7FA               	goto	u6715
  4348  010052  0100               	movlb	0	; () banked
  4349  010054  51EE               	movf	Port_Set@Type& (0+255),w,b
  4350  010056  0100               	movlb	0	; () banked
  4351  010058  6FDE               	movwf	(??_Port_Set+4)& (0+255),b
  4352  01005A  6BDF               	clrf	(??_Port_Set+5)& (0+255),b
  4353  01005C  0E0A               	movlw	10
  4354  01005E                     u6725:
  4355  01005E  90D8               	bcf	status,0,c
  4356  010060  0100               	movlb	0	; () banked
  4357  010062  37DE               	rlcf	(??_Port_Set+4)& (0+255),f,b
  4358  010064  37DF               	rlcf	(??_Port_Set+5)& (0+255),f,b
  4359  010066  2EE8               	decfsz	wreg,f,c
  4360  010068  D7FA               	goto	u6725
  4361  01006A  0100               	movlb	0	; () banked
  4362  01006C  51EE               	movf	Port_Set@Type& (0+255),w,b
  4363  01006E  0100               	movlb	0	; () banked
  4364  010070  6FE1               	movwf	(??_Port_Set+7)& (0+255),b
  4365  010072  6BE0               	clrf	(??_Port_Set+6)& (0+255),b
  4366  010074  0100               	movlb	0	; () banked
  4367  010076  51EE               	movf	Port_Set@Type& (0+255),w,b
  4368  010078  0100               	movlb	0	; () banked
  4369  01007A  6FE2               	movwf	(??_Port_Set+8)& (0+255),b
  4370  01007C  6BE3               	clrf	(??_Port_Set+9)& (0+255),b
  4371  01007E  0E06               	movlw	6
  4372  010080                     u6735:
  4373  010080  90D8               	bcf	status,0,c
  4374  010082  0100               	movlb	0	; () banked
  4375  010084  37E2               	rlcf	(??_Port_Set+8)& (0+255),f,b
  4376  010086  37E3               	rlcf	(??_Port_Set+9)& (0+255),f,b
  4377  010088  2EE8               	decfsz	wreg,f,c
  4378  01008A  D7FA               	goto	u6735
  4379  01008C  0100               	movlb	0	; () banked
  4380  01008E  51EE               	movf	Port_Set@Type& (0+255),w,b
  4381  010090  0100               	movlb	0	; () banked
  4382  010092  6FE4               	movwf	(??_Port_Set+10)& (0+255),b
  4383  010094  6BE5               	clrf	(??_Port_Set+11)& (0+255),b
  4384  010096  0100               	movlb	0	; () banked
  4385  010098  3BE4               	swapf	(??_Port_Set+10)& (0+255),f,b
  4386  01009A  3BE5               	swapf	(??_Port_Set+11)& (0+255),f,b
  4387  01009C  0EF0               	movlw	240
  4388  01009E  17E5               	andwf	(??_Port_Set+11)& (0+255),f,b
  4389  0100A0  51E4               	movf	(??_Port_Set+10)& (0+255),w,b
  4390  0100A2  0B0F               	andlw	15
  4391  0100A4  13E5               	iorwf	(??_Port_Set+11)& (0+255),f,b
  4392  0100A6  0EF0               	movlw	240
  4393  0100A8  17E4               	andwf	(??_Port_Set+10)& (0+255),f,b
  4394  0100AA  0100               	movlb	0	; () banked
  4395  0100AC  51EE               	movf	Port_Set@Type& (0+255),w,b
  4396  0100AE  0100               	movlb	0	; () banked
  4397  0100B0  6FE6               	movwf	(??_Port_Set+12)& (0+255),b
  4398  0100B2  6BE7               	clrf	(??_Port_Set+13)& (0+255),b
  4399  0100B4  0100               	movlb	0	; () banked
  4400  0100B6  90D8               	bcf	status,0,c
  4401  0100B8  37E6               	rlcf	(??_Port_Set+12)& (0+255),f,b
  4402  0100BA  37E7               	rlcf	(??_Port_Set+13)& (0+255),f,b
  4403  0100BC  0100               	movlb	0	; () banked
  4404  0100BE  90D8               	bcf	status,0,c
  4405  0100C0  37E6               	rlcf	(??_Port_Set+12)& (0+255),f,b
  4406  0100C2  37E7               	rlcf	(??_Port_Set+13)& (0+255),f,b
  4407  0100C4  0100               	movlb	0	; () banked
  4408  0100C6  51EE               	movf	Port_Set@Type& (0+255),w,b
  4409  0100C8  0100               	movlb	0	; () banked
  4410  0100CA  6FE8               	movwf	(??_Port_Set+14)& (0+255),b
  4411  0100CC  6BE9               	clrf	(??_Port_Set+15)& (0+255),b
  4412  0100CE  0100               	movlb	0	; () banked
  4413  0100D0  51E6               	movf	(??_Port_Set+12)& (0+255),w,b
  4414  0100D2  0100               	movlb	0	; () banked
  4415  0100D4  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  4416  0100D6  0100               	movlb	0	; () banked
  4417  0100D8  51E7               	movf	(??_Port_Set+13)& (0+255),w,b
  4418  0100DA  0100               	movlb	0	; () banked
  4419  0100DC  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  4420  0100DE  0100               	movlb	0	; () banked
  4421  0100E0  51E4               	movf	(??_Port_Set+10)& (0+255),w,b
  4422  0100E2  0100               	movlb	0	; () banked
  4423  0100E4  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  4424  0100E6  0100               	movlb	0	; () banked
  4425  0100E8  51E5               	movf	(??_Port_Set+11)& (0+255),w,b
  4426  0100EA  0100               	movlb	0	; () banked
  4427  0100EC  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  4428  0100EE  0100               	movlb	0	; () banked
  4429  0100F0  51E2               	movf	(??_Port_Set+8)& (0+255),w,b
  4430  0100F2  0100               	movlb	0	; () banked
  4431  0100F4  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  4432  0100F6  0100               	movlb	0	; () banked
  4433  0100F8  51E3               	movf	(??_Port_Set+9)& (0+255),w,b
  4434  0100FA  0100               	movlb	0	; () banked
  4435  0100FC  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  4436  0100FE  0100               	movlb	0	; () banked
  4437  010100  51E0               	movf	(??_Port_Set+6)& (0+255),w,b
  4438  010102  0100               	movlb	0	; () banked
  4439  010104  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  4440  010106  0100               	movlb	0	; () banked
  4441  010108  51E1               	movf	(??_Port_Set+7)& (0+255),w,b
  4442  01010A  0100               	movlb	0	; () banked
  4443  01010C  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  4444  01010E  0100               	movlb	0	; () banked
  4445  010110  51DE               	movf	(??_Port_Set+4)& (0+255),w,b
  4446  010112  0100               	movlb	0	; () banked
  4447  010114  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  4448  010116  0100               	movlb	0	; () banked
  4449  010118  51DF               	movf	(??_Port_Set+5)& (0+255),w,b
  4450  01011A  0100               	movlb	0	; () banked
  4451  01011C  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  4452  01011E  0100               	movlb	0	; () banked
  4453  010120  51DC               	movf	(??_Port_Set+2)& (0+255),w,b
  4454  010122  0100               	movlb	0	; () banked
  4455  010124  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  4456  010126  0100               	movlb	0	; () banked
  4457  010128  51DD               	movf	(??_Port_Set+3)& (0+255),w,b
  4458  01012A  0100               	movlb	0	; () banked
  4459  01012C  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  4460  01012E  0100               	movlb	0	; () banked
  4461  010130  51DA               	movf	??_Port_Set& (0+255),w,b
  4462  010132  0100               	movlb	0	; () banked
  4463  010134  11E8               	iorwf	(??_Port_Set+14)& (0+255),w,b
  4464  010136  0100               	movlb	0	; () banked
  4465  010138  6FEA               	movwf	Port_Set@TypeRequired& (0+255),b
  4466  01013A  0100               	movlb	0	; () banked
  4467  01013C  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4468  01013E  0100               	movlb	0	; () banked
  4469  010140  11E9               	iorwf	(??_Port_Set+15)& (0+255),w,b
  4470  010142  0100               	movlb	0	; () banked
  4471  010144  6FEB               	movwf	(Port_Set@TypeRequired+1)& (0+255),b
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;Port.c: 574: UINT16 TypeActual = Type;
  4475  010146  C0EE  F0EC         	movff	Port_Set@Type,Port_Set@TypeActual
  4476  01014A  0100               	movlb	0	; () banked
  4477  01014C  6BED               	clrf	(Port_Set@TypeActual+1)& (0+255),b
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;Port.c: 575: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 1) << 2;
  4481  01014E  0E08               	movlw	8
  4482  010150  0100               	movlb	0	; () banked
  4483  010152  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4484  010154  0100               	movlb	0	; () banked
  4485  010156  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4486  010158  0E00               	movlw	0
  4487  01015A  0100               	movlb	0	; () banked
  4488  01015C  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4489  01015E  0100               	movlb	0	; () banked
  4490  010160  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4491  010162  0E01               	movlw	1
  4492  010164  0100               	movlb	0	; () banked
  4493  010166  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4494  010168  EC56  F08E         	call	_Word_GetPair	;wreg free
  4495  01016C  0100               	movlb	0	; () banked
  4496  01016E  6FDA               	movwf	??_Port_Set& (0+255),b
  4497  010170  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4498  010172  0100               	movlb	0	; () banked
  4499  010174  90D8               	bcf	status,0,c
  4500  010176  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4501  010178  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4502  01017A  0100               	movlb	0	; () banked
  4503  01017C  90D8               	bcf	status,0,c
  4504  01017E  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4505  010180  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4506  010182  0100               	movlb	0	; () banked
  4507  010184  51DA               	movf	??_Port_Set& (0+255),w,b
  4508  010186  0100               	movlb	0	; () banked
  4509  010188  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4510  01018A  0100               	movlb	0	; () banked
  4511  01018C  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4512  01018E  0100               	movlb	0	; () banked
  4513  010190  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;Port.c: 576: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 2) << 4;
  4517  010192  0E08               	movlw	8
  4518  010194  0100               	movlb	0	; () banked
  4519  010196  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4520  010198  0100               	movlb	0	; () banked
  4521  01019A  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4522  01019C  0E00               	movlw	0
  4523  01019E  0100               	movlb	0	; () banked
  4524  0101A0  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4525  0101A2  0100               	movlb	0	; () banked
  4526  0101A4  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4527  0101A6  0E02               	movlw	2
  4528  0101A8  0100               	movlb	0	; () banked
  4529  0101AA  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4530  0101AC  EC56  F08E         	call	_Word_GetPair	;wreg free
  4531  0101B0  0100               	movlb	0	; () banked
  4532  0101B2  6FDA               	movwf	??_Port_Set& (0+255),b
  4533  0101B4  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4534  0101B6  0100               	movlb	0	; () banked
  4535  0101B8  3BDA               	swapf	??_Port_Set& (0+255),f,b
  4536  0101BA  3BDB               	swapf	(??_Port_Set+1)& (0+255),f,b
  4537  0101BC  0EF0               	movlw	240
  4538  0101BE  17DB               	andwf	(??_Port_Set+1)& (0+255),f,b
  4539  0101C0  51DA               	movf	??_Port_Set& (0+255),w,b
  4540  0101C2  0B0F               	andlw	15
  4541  0101C4  13DB               	iorwf	(??_Port_Set+1)& (0+255),f,b
  4542  0101C6  0EF0               	movlw	240
  4543  0101C8  17DA               	andwf	??_Port_Set& (0+255),f,b
  4544  0101CA  0100               	movlb	0	; () banked
  4545  0101CC  51DA               	movf	??_Port_Set& (0+255),w,b
  4546  0101CE  0100               	movlb	0	; () banked
  4547  0101D0  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4548  0101D2  0100               	movlb	0	; () banked
  4549  0101D4  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4550  0101D6  0100               	movlb	0	; () banked
  4551  0101D8  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;Port.c: 577: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 3) << 6;
  4555  0101DA  0E08               	movlw	8
  4556  0101DC  0100               	movlb	0	; () banked
  4557  0101DE  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4558  0101E0  0100               	movlb	0	; () banked
  4559  0101E2  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4560  0101E4  0E00               	movlw	0
  4561  0101E6  0100               	movlb	0	; () banked
  4562  0101E8  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4563  0101EA  0100               	movlb	0	; () banked
  4564  0101EC  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4565  0101EE  0E03               	movlw	3
  4566  0101F0  0100               	movlb	0	; () banked
  4567  0101F2  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4568  0101F4  EC56  F08E         	call	_Word_GetPair	;wreg free
  4569  0101F8  0100               	movlb	0	; () banked
  4570  0101FA  6FDA               	movwf	??_Port_Set& (0+255),b
  4571  0101FC  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4572  0101FE  0E06               	movlw	6
  4573  010200                     u6745:
  4574  010200  90D8               	bcf	status,0,c
  4575  010202  0100               	movlb	0	; () banked
  4576  010204  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4577  010206  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4578  010208  2EE8               	decfsz	wreg,f,c
  4579  01020A  D7FA               	goto	u6745
  4580  01020C  0100               	movlb	0	; () banked
  4581  01020E  51DA               	movf	??_Port_Set& (0+255),w,b
  4582  010210  0100               	movlb	0	; () banked
  4583  010212  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4584  010214  0100               	movlb	0	; () banked
  4585  010216  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4586  010218  0100               	movlb	0	; () banked
  4587  01021A  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;Port.c: 578: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 4) << 8;
  4591  01021C  0E08               	movlw	8
  4592  01021E  0100               	movlb	0	; () banked
  4593  010220  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4594  010222  0100               	movlb	0	; () banked
  4595  010224  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4596  010226  0E00               	movlw	0
  4597  010228  0100               	movlb	0	; () banked
  4598  01022A  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4599  01022C  0100               	movlb	0	; () banked
  4600  01022E  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4601  010230  0E04               	movlw	4
  4602  010232  0100               	movlb	0	; () banked
  4603  010234  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4604  010236  EC56  F08E         	call	_Word_GetPair	;wreg free
  4605  01023A  0100               	movlb	0	; () banked
  4606  01023C  6FDA               	movwf	??_Port_Set& (0+255),b
  4607  01023E  0100               	movlb	0	; () banked
  4608  010240  51DA               	movf	??_Port_Set& (0+255),w,b
  4609  010242  0100               	movlb	0	; () banked
  4610  010244  6FDC               	movwf	(??_Port_Set+2)& (0+255),b
  4611  010246  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4612  010248  0100               	movlb	0	; () banked
  4613  01024A  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4614  01024C  0100               	movlb	0	; () banked
  4615  01024E  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4616  010250  0100               	movlb	0	; () banked
  4617  010252  51DC               	movf	(??_Port_Set+2)& (0+255),w,b
  4618  010254  0100               	movlb	0	; () banked
  4619  010256  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;Port.c: 579: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 5) << 10;
  4623  010258  0E08               	movlw	8
  4624  01025A  0100               	movlb	0	; () banked
  4625  01025C  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4626  01025E  0100               	movlb	0	; () banked
  4627  010260  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4628  010262  0E00               	movlw	0
  4629  010264  0100               	movlb	0	; () banked
  4630  010266  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4631  010268  0100               	movlb	0	; () banked
  4632  01026A  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4633  01026C  0E05               	movlw	5
  4634  01026E  0100               	movlb	0	; () banked
  4635  010270  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4636  010272  EC56  F08E         	call	_Word_GetPair	;wreg free
  4637  010276  0100               	movlb	0	; () banked
  4638  010278  6FDA               	movwf	??_Port_Set& (0+255),b
  4639  01027A  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4640  01027C  0E0A               	movlw	10
  4641  01027E                     u6755:
  4642  01027E  90D8               	bcf	status,0,c
  4643  010280  0100               	movlb	0	; () banked
  4644  010282  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4645  010284  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4646  010286  2EE8               	decfsz	wreg,f,c
  4647  010288  D7FA               	goto	u6755
  4648  01028A  0100               	movlb	0	; () banked
  4649  01028C  51DA               	movf	??_Port_Set& (0+255),w,b
  4650  01028E  0100               	movlb	0	; () banked
  4651  010290  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4652  010292  0100               	movlb	0	; () banked
  4653  010294  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4654  010296  0100               	movlb	0	; () banked
  4655  010298  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;Port.c: 580: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 6) << 12;
  4659  01029A  0E08               	movlw	8
  4660  01029C  0100               	movlb	0	; () banked
  4661  01029E  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4662  0102A0  0100               	movlb	0	; () banked
  4663  0102A2  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4664  0102A4  0E00               	movlw	0
  4665  0102A6  0100               	movlb	0	; () banked
  4666  0102A8  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4667  0102AA  0100               	movlb	0	; () banked
  4668  0102AC  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4669  0102AE  0E06               	movlw	6
  4670  0102B0  0100               	movlb	0	; () banked
  4671  0102B2  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4672  0102B4  EC56  F08E         	call	_Word_GetPair	;wreg free
  4673  0102B8  0100               	movlb	0	; () banked
  4674  0102BA  6FDA               	movwf	??_Port_Set& (0+255),b
  4675  0102BC  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4676  0102BE  0E0C               	movlw	12
  4677  0102C0                     u6765:
  4678  0102C0  90D8               	bcf	status,0,c
  4679  0102C2  0100               	movlb	0	; () banked
  4680  0102C4  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4681  0102C6  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4682  0102C8  2EE8               	decfsz	wreg,f,c
  4683  0102CA  D7FA               	goto	u6765
  4684  0102CC  0100               	movlb	0	; () banked
  4685  0102CE  51DA               	movf	??_Port_Set& (0+255),w,b
  4686  0102D0  0100               	movlb	0	; () banked
  4687  0102D2  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4688  0102D4  0100               	movlb	0	; () banked
  4689  0102D6  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4690  0102D8  0100               	movlb	0	; () banked
  4691  0102DA  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;Port.c: 581: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 7) << 14;
  4695  0102DC  0E08               	movlw	8
  4696  0102DE  0100               	movlb	0	; () banked
  4697  0102E0  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4698  0102E2  0100               	movlb	0	; () banked
  4699  0102E4  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4700  0102E6  0E00               	movlw	0
  4701  0102E8  0100               	movlb	0	; () banked
  4702  0102EA  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4703  0102EC  0100               	movlb	0	; () banked
  4704  0102EE  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4705  0102F0  0E07               	movlw	7
  4706  0102F2  0100               	movlb	0	; () banked
  4707  0102F4  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4708  0102F6  EC56  F08E         	call	_Word_GetPair	;wreg free
  4709  0102FA  0100               	movlb	0	; () banked
  4710  0102FC  6FDA               	movwf	??_Port_Set& (0+255),b
  4711  0102FE  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4712  010300  0E0E               	movlw	14
  4713  010302                     u6775:
  4714  010302  90D8               	bcf	status,0,c
  4715  010304  0100               	movlb	0	; () banked
  4716  010306  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4717  010308  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4718  01030A  2EE8               	decfsz	wreg,f,c
  4719  01030C  D7FA               	goto	u6775
  4720  01030E  0100               	movlb	0	; () banked
  4721  010310  51DA               	movf	??_Port_Set& (0+255),w,b
  4722  010312  0100               	movlb	0	; () banked
  4723  010314  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4724  010316  0100               	movlb	0	; () banked
  4725  010318  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4726  01031A  0100               	movlb	0	; () banked
  4727  01031C  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4728                           
  4729                           ;Port.c: 584: if (TypeRequired == TypeActual)
  4730  01031E  0100               	movlb	0	; () banked
  4731  010320  51EC               	movf	Port_Set@TypeActual& (0+255),w,b
  4732  010322  0100               	movlb	0	; () banked
  4733  010324  19EA               	xorwf	Port_Set@TypeRequired& (0+255),w,b
  4734  010326  E148               	bnz	l528
  4735  010328  0100               	movlb	0	; () banked
  4736  01032A  51ED               	movf	(Port_Set@TypeActual+1)& (0+255),w,b
  4737  01032C  0100               	movlb	0	; () banked
  4738  01032E  19EB               	xorwf	(Port_Set@TypeRequired+1)& (0+255),w,b
  4739  010330  A4D8               	btfss	status,2,c
  4740  010332  0012               	return	
  4741  010334  D032               	goto	l10055
  4742  010336                     l10045:
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;Port.c: 593: Byte_SetByte(pInput->mDirection, pValue);
  4746  010336  0100               	movlb	0	; () banked
  4747  010338  EE20 F002          	lfsr	2,2
  4748  01033C  51D7               	movf	Port_Set@pInput& (0+255),w,b
  4749  01033E  26D9               	addwf	fsr2l,f,c
  4750  010340  51D8               	movf	(Port_Set@pInput+1)& (0+255),w,b
  4751  010342  22DA               	addwfc	fsr2h,f,c
  4752  010344  CFDE F0C8          	movff	postinc2,Byte_SetByte@pInput
  4753  010348  CFDD F0C9          	movff	postdec2,Byte_SetByte@pInput+1
  4754  01034C  C0D9  F0CA         	movff	Port_Set@pValue,Byte_SetByte@pValue
  4755  010350  ECA1  F08F         	call	_Byte_SetByte	;wreg free
  4756                           
  4757                           ;Port.c: 594: break;
  4758  010354  0012               	return	
  4759  010356                     l10047:
  4760                           
  4761                           ;Port.c: 597: pValue = ~pValue;
  4762  010356  0100               	movlb	0	; () banked
  4763  010358  1FD9               	comf	Port_Set@pValue& (0+255),f,b
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;Port.c: 598: Byte_SetByte(pInput->mDirection, pValue);
  4767  01035A  0100               	movlb	0	; () banked
  4768  01035C  EE20 F002          	lfsr	2,2
  4769  010360  51D7               	movf	Port_Set@pInput& (0+255),w,b
  4770  010362  26D9               	addwf	fsr2l,f,c
  4771  010364  51D8               	movf	(Port_Set@pInput+1)& (0+255),w,b
  4772  010366  22DA               	addwfc	fsr2h,f,c
  4773  010368  CFDE F0C8          	movff	postinc2,Byte_SetByte@pInput
  4774  01036C  CFDD F0C9          	movff	postdec2,Byte_SetByte@pInput+1
  4775  010370  C0D9  F0CA         	movff	Port_Set@pValue,Byte_SetByte@pValue
  4776  010374  ECA1  F08F         	call	_Byte_SetByte	;wreg free
  4777                           
  4778                           ;Port.c: 599: break;
  4779  010378  0012               	return	
  4780  01037A                     l10051:
  4781                           
  4782                           ;Port.c: 602: Byte_SetByte(pInput->mOutput, pValue);
  4783  01037A  0100               	movlb	0	; () banked
  4784  01037C  EE20 F004          	lfsr	2,4
  4785  010380  51D7               	movf	Port_Set@pInput& (0+255),w,b
  4786  010382  26D9               	addwf	fsr2l,f,c
  4787  010384  51D8               	movf	(Port_Set@pInput+1)& (0+255),w,b
  4788  010386  22DA               	addwfc	fsr2h,f,c
  4789  010388  CFDE F0C8          	movff	postinc2,Byte_SetByte@pInput
  4790  01038C  CFDD F0C9          	movff	postdec2,Byte_SetByte@pInput+1
  4791  010390  C0D9  F0CA         	movff	Port_Set@pValue,Byte_SetByte@pValue
  4792  010394  ECA1  F08F         	call	_Byte_SetByte	;wreg free
  4793                           
  4794                           ;Port.c: 606: }
  4795                           
  4796                           ;Port.c: 605: break;
  4797                           
  4798                           ;Port.c: 604: default:
  4799                           
  4800                           ;Port.c: 603: break;
  4801  010398  0012               	return	
  4802  01039A                     l10055:
  4803  01039A  0100               	movlb	0	; () banked
  4804  01039C  51EE               	movf	Port_Set@Type& (0+255),w,b
  4805                           
  4806                           ; Switch size 1, requested type "space"
  4807                           ; Number of cases is 4, Range of values is 0 to 3
  4808                           ; switch strategies available:
  4809                           ; Name         Instructions Cycles
  4810                           ; simple_byte           13     7 (average)
  4811                           ;	Chosen strategy is simple_byte
  4812  01039E  0A00               	xorlw	0	; case 0
  4813  0103A0  B4D8               	btfsc	status,2,c
  4814  0103A2  0012               	return	
  4815  0103A4  0A01               	xorlw	1	; case 1
  4816  0103A6  B4D8               	btfsc	status,2,c
  4817  0103A8  D7C6               	goto	l10045
  4818  0103AA  0A03               	xorlw	3	; case 2
  4819  0103AC  B4D8               	btfsc	status,2,c
  4820  0103AE  D7D3               	goto	l10047
  4821  0103B0  0A01               	xorlw	1	; case 3
  4822  0103B2  A4D8               	btfss	status,2,c
  4823                           
  4824                           ; BSR set to: 0
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;Port.c: 607: }
  4828  0103B4  0012               	return	
  4829  0103B6  D7E1               	goto	l10051
  4830  0103B8                     l528:
  4831  0103B8  0012               	return		;funcret
  4832  0103BA                     __end_of_Port_Set:
  4833                           	opt stack 0
  4834                           tblptru	equ	0xFF8
  4835                           tblptrh	equ	0xFF7
  4836                           tblptrl	equ	0xFF6
  4837                           tablat	equ	0xFF5
  4838                           prodl	equ	0xFF3
  4839                           postinc0	equ	0xFEE
  4840                           wreg	equ	0xFE8
  4841                           postdec1	equ	0xFE5
  4842                           fsr1h	equ	0xFE2
  4843                           fsr1l	equ	0xFE1
  4844                           indf2	equ	0xFDF
  4845                           postinc2	equ	0xFDE
  4846                           postdec2	equ	0xFDD
  4847                           fsr2h	equ	0xFDA
  4848                           fsr2l	equ	0xFD9
  4849                           status	equ	0xFD8
  4850                           
  4851 ;; *************** function _Byte_SetByte *****************
  4852 ;; Defined at:
  4853 ;;		line 110 in file "Library/Types.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  pInput          2    0[BANK0 ] PTR struct Byte
  4856 ;;		 -> SSP2CON2(1), SSP1CON2(1), TRISG(1), TRISF(1), 
  4857 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
  4858 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
  4859 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
  4860 ;;		 -> NULL(0), 
  4861 ;;  pValue          1    2[BANK0 ] unsigned char 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;		None
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		fsr2l, fsr2h
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4873 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4876 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;Total ram usage:        3 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; Hardware stack levels required when called:    7
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		_Port_Set
  4884 ;;		_I2C_Init
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text13
  4889  011F42                     __ptext13:
  4890                           	opt stack 0
  4891  011F42                     _Byte_SetByte:
  4892                           	opt stack 19
  4893                           
  4894                           ;Types.c: 112: pInput->mBits = (pValue & 0xFF);
  4895                           
  4896                           ;incstack = 0
  4897  011F42  C0C8  FFD9         	movff	Byte_SetByte@pInput,fsr2l
  4898  011F46  C0C9  FFDA         	movff	Byte_SetByte@pInput+1,fsr2h
  4899  011F4A  C0CA  FFDF         	movff	Byte_SetByte@pValue,indf2
  4900  011F4E  0012               	return		;funcret
  4901  011F50                     __end_of_Byte_SetByte:
  4902                           	opt stack 0
  4903                           tblptru	equ	0xFF8
  4904                           tblptrh	equ	0xFF7
  4905                           tblptrl	equ	0xFF6
  4906                           tablat	equ	0xFF5
  4907                           prodl	equ	0xFF3
  4908                           postinc0	equ	0xFEE
  4909                           wreg	equ	0xFE8
  4910                           postdec1	equ	0xFE5
  4911                           fsr1h	equ	0xFE2
  4912                           fsr1l	equ	0xFE1
  4913                           indf2	equ	0xFDF
  4914                           postinc2	equ	0xFDE
  4915                           postdec2	equ	0xFDD
  4916                           fsr2h	equ	0xFDA
  4917                           fsr2l	equ	0xFD9
  4918                           status	equ	0xFD8
  4919                           
  4920 ;; *************** function _GetPortTRIS *****************
  4921 ;; Defined at:
  4922 ;;		line 67 in file "Library/Port.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;  pInput          1    wreg     enum E6786
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  pInput          1    2[BANK0 ] enum E6786
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  2    0[BANK0 ] PTR struct Byte
  4929 ;; Registers used:
  4930 ;;		wreg, status,2, status,0
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4936 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4939 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4940 ;;Total ram usage:        3 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:    7
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		_Port_Init
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text14
  4951  0114E0                     __ptext14:
  4952                           	opt stack 0
  4953  0114E0                     _GetPortTRIS:
  4954                           	opt stack 20
  4955                           
  4956                           ;incstack = 0
  4957                           ;GetPortTRIS@pInput stored from wreg
  4958  0114E0  0100               	movlb	0	; () banked
  4959  0114E2  6FCA               	movwf	GetPortTRIS@pInput& (0+255),b
  4960                           
  4961                           ;Port.c: 69: switch (pInput)
  4962  0114E4  D038               	goto	l9997
  4963  0114E6                     l9963:
  4964                           
  4965                           ;Port.c: 72: return (BytePtr)&TRISA;
  4966  0114E6  0E92               	movlw	146
  4967  0114E8  0100               	movlb	0	; () banked
  4968  0114EA  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4969  0114EC  0E0F               	movlw	15
  4970  0114EE  0100               	movlb	0	; () banked
  4971  0114F0  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4972                           
  4973                           ; BSR set to: 0
  4974  0114F2  0012               	return	
  4975  0114F4                     l9967:
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;Port.c: 74: return (BytePtr)&TRISB;
  4979  0114F4  0E93               	movlw	147
  4980  0114F6  0100               	movlb	0	; () banked
  4981  0114F8  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4982  0114FA  0E0F               	movlw	15
  4983  0114FC  0100               	movlb	0	; () banked
  4984  0114FE  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4985                           
  4986                           ; BSR set to: 0
  4987  011500  0012               	return	
  4988  011502                     l9971:
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;Port.c: 76: return (BytePtr)&TRISC;
  4992  011502  0E94               	movlw	148
  4993  011504  0100               	movlb	0	; () banked
  4994  011506  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4995  011508  0E0F               	movlw	15
  4996  01150A  0100               	movlb	0	; () banked
  4997  01150C  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4998                           
  4999                           ; BSR set to: 0
  5000  01150E  0012               	return	
  5001  011510                     l9975:
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;Port.c: 78: return (BytePtr)&TRISD;
  5005  011510  0E95               	movlw	149
  5006  011512  0100               	movlb	0	; () banked
  5007  011514  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  5008  011516  0E0F               	movlw	15
  5009  011518  0100               	movlb	0	; () banked
  5010  01151A  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  5011                           
  5012                           ; BSR set to: 0
  5013  01151C  0012               	return	
  5014  01151E                     l9979:
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;Port.c: 80: return (BytePtr)&TRISE;
  5018  01151E  0E96               	movlw	150
  5019  011520  0100               	movlb	0	; () banked
  5020  011522  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  5021  011524  0E0F               	movlw	15
  5022  011526  0100               	movlb	0	; () banked
  5023  011528  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  5024                           
  5025                           ; BSR set to: 0
  5026  01152A  0012               	return	
  5027  01152C                     l9983:
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;Port.c: 82: return (BytePtr)&TRISF;
  5031  01152C  0E97               	movlw	151
  5032  01152E  0100               	movlb	0	; () banked
  5033  011530  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  5034  011532  0E0F               	movlw	15
  5035  011534  0100               	movlb	0	; () banked
  5036  011536  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  5037                           
  5038                           ; BSR set to: 0
  5039  011538  0012               	return	
  5040  01153A                     l9987:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;Port.c: 84: return (BytePtr)&TRISG;
  5044  01153A  0E98               	movlw	152
  5045  01153C  0100               	movlb	0	; () banked
  5046  01153E  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  5047  011540  0E0F               	movlw	15
  5048  011542  0100               	movlb	0	; () banked
  5049  011544  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  5050                           
  5051                           ; BSR set to: 0
  5052  011546  0012               	return	
  5053  011548                     l9991:
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;Port.c: 86: return (void*)0;
  5057  011548  0E00               	movlw	0
  5058  01154A  0100               	movlb	0	; () banked
  5059  01154C  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  5060  01154E  0E00               	movlw	0
  5061  011550  0100               	movlb	0	; () banked
  5062  011552  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;Port.c: 87: }
  5066                           
  5067                           ; BSR set to: 0
  5068  011554  0012               	return	
  5069  011556                     l9997:
  5070  011556  0100               	movlb	0	; () banked
  5071  011558  51CA               	movf	GetPortTRIS@pInput& (0+255),w,b
  5072                           
  5073                           ; Switch size 1, requested type "space"
  5074                           ; Number of cases is 7, Range of values is 0 to 6
  5075                           ; switch strategies available:
  5076                           ; Name         Instructions Cycles
  5077                           ; simple_byte           22    12 (average)
  5078                           ;	Chosen strategy is simple_byte
  5079  01155A  0A00               	xorlw	0	; case 0
  5080  01155C  B4D8               	btfsc	status,2,c
  5081  01155E  D7C3               	goto	l9963
  5082  011560  0A01               	xorlw	1	; case 1
  5083  011562  B4D8               	btfsc	status,2,c
  5084  011564  D7C7               	goto	l9967
  5085  011566  0A03               	xorlw	3	; case 2
  5086  011568  B4D8               	btfsc	status,2,c
  5087  01156A  D7CB               	goto	l9971
  5088  01156C  0A01               	xorlw	1	; case 3
  5089  01156E  B4D8               	btfsc	status,2,c
  5090  011570  D7CF               	goto	l9975
  5091  011572  0A07               	xorlw	7	; case 4
  5092  011574  B4D8               	btfsc	status,2,c
  5093  011576  D7D3               	goto	l9979
  5094  011578  0A01               	xorlw	1	; case 5
  5095  01157A  B4D8               	btfsc	status,2,c
  5096  01157C  D7D7               	goto	l9983
  5097  01157E  0A03               	xorlw	3	; case 6
  5098  011580  B4D8               	btfsc	status,2,c
  5099  011582  D7DB               	goto	l9987
  5100  011584  D7E1               	goto	l9991
  5101  011586                     __end_of_GetPortTRIS:
  5102                           	opt stack 0
  5103                           tblptru	equ	0xFF8
  5104                           tblptrh	equ	0xFF7
  5105                           tblptrl	equ	0xFF6
  5106                           tablat	equ	0xFF5
  5107                           prodl	equ	0xFF3
  5108                           postinc0	equ	0xFEE
  5109                           wreg	equ	0xFE8
  5110                           postdec1	equ	0xFE5
  5111                           fsr1h	equ	0xFE2
  5112                           fsr1l	equ	0xFE1
  5113                           indf2	equ	0xFDF
  5114                           postinc2	equ	0xFDE
  5115                           postdec2	equ	0xFDD
  5116                           fsr2h	equ	0xFDA
  5117                           fsr2l	equ	0xFD9
  5118                           status	equ	0xFD8
  5119                           
  5120 ;; *************** function _GetPortProperties *****************
  5121 ;; Defined at:
  5122 ;;		line 21 in file "Library/Port.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;  pInput          1    wreg     enum E6786
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  pInput          1    2[BANK0 ] enum E6786
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  2    0[BANK0 ] PTR struct PortProperty
  5129 ;; Registers used:
  5130 ;;		wreg, status,2, status,0
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;Total ram usage:        3 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    7
  5143 ;; This function calls:
  5144 ;;		Nothing
  5145 ;; This function is called by:
  5146 ;;		_Port_Init
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text15
  5151  011586                     __ptext15:
  5152                           	opt stack 0
  5153  011586                     _GetPortProperties:
  5154                           	opt stack 20
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;incstack = 0
  5158                           ;GetPortProperties@pInput stored from wreg
  5159  011586  0100               	movlb	0	; () banked
  5160  011588  6FCA               	movwf	GetPortProperties@pInput& (0+255),b
  5161                           
  5162                           ;Port.c: 23: switch (pInput)
  5163  01158A  D038               	goto	l9921
  5164  01158C                     l9887:
  5165                           
  5166                           ;Port.c: 26: return (PortPropertyPtr)&PortA_Property;
  5167  01158C  0E73               	movlw	low _PortA_Property
  5168  01158E  0100               	movlb	0	; () banked
  5169  011590  6FC8               	movwf	?_GetPortProperties& (0+255),b
  5170  011592  0EFF               	movlw	high _PortA_Property
  5171  011594  0100               	movlb	0	; () banked
  5172  011596  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  5173                           
  5174                           ; BSR set to: 0
  5175  011598  0012               	return	
  5176  01159A                     l9891:
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;Port.c: 28: return (PortPropertyPtr)&PortB_Property;
  5180  01159A  0E71               	movlw	low _PortB_Property
  5181  01159C  0100               	movlb	0	; () banked
  5182  01159E  6FC8               	movwf	?_GetPortProperties& (0+255),b
  5183  0115A0  0EFF               	movlw	high _PortB_Property
  5184  0115A2  0100               	movlb	0	; () banked
  5185  0115A4  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  5186                           
  5187                           ; BSR set to: 0
  5188  0115A6  0012               	return	
  5189  0115A8                     l9895:
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;Port.c: 30: return (PortPropertyPtr)&PortC_Property;
  5193  0115A8  0E6F               	movlw	low _PortC_Property
  5194  0115AA  0100               	movlb	0	; () banked
  5195  0115AC  6FC8               	movwf	?_GetPortProperties& (0+255),b
  5196  0115AE  0EFF               	movlw	high _PortC_Property
  5197  0115B0  0100               	movlb	0	; () banked
  5198  0115B2  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  5199                           
  5200                           ; BSR set to: 0
  5201  0115B4  0012               	return	
  5202  0115B6                     l9899:
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;Port.c: 32: return (PortPropertyPtr)&PortD_Property;
  5206  0115B6  0E6D               	movlw	low _PortD_Property
  5207  0115B8  0100               	movlb	0	; () banked
  5208  0115BA  6FC8               	movwf	?_GetPortProperties& (0+255),b
  5209  0115BC  0EFF               	movlw	high _PortD_Property
  5210  0115BE  0100               	movlb	0	; () banked
  5211  0115C0  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  5212                           
  5213                           ; BSR set to: 0
  5214  0115C2  0012               	return	
  5215  0115C4                     l9903:
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;Port.c: 34: return (PortPropertyPtr)&PortE_Property;
  5219  0115C4  0E6B               	movlw	low _PortE_Property
  5220  0115C6  0100               	movlb	0	; () banked
  5221  0115C8  6FC8               	movwf	?_GetPortProperties& (0+255),b
  5222  0115CA  0EFF               	movlw	high _PortE_Property
  5223  0115CC  0100               	movlb	0	; () banked
  5224  0115CE  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  5225                           
  5226                           ; BSR set to: 0
  5227  0115D0  0012               	return	
  5228  0115D2                     l9907:
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;Port.c: 36: return (PortPropertyPtr)&PortF_Property;
  5232  0115D2  0E69               	movlw	low _PortF_Property
  5233  0115D4  0100               	movlb	0	; () banked
  5234  0115D6  6FC8               	movwf	?_GetPortProperties& (0+255),b
  5235  0115D8  0EFF               	movlw	high _PortF_Property
  5236  0115DA  0100               	movlb	0	; () banked
  5237  0115DC  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  5238                           
  5239                           ; BSR set to: 0
  5240  0115DE  0012               	return	
  5241  0115E0                     l9911:
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;Port.c: 38: return (PortPropertyPtr)&PortG_Property;
  5245  0115E0  0E67               	movlw	low _PortG_Property
  5246  0115E2  0100               	movlb	0	; () banked
  5247  0115E4  6FC8               	movwf	?_GetPortProperties& (0+255),b
  5248  0115E6  0EFF               	movlw	high _PortG_Property
  5249  0115E8  0100               	movlb	0	; () banked
  5250  0115EA  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  5251                           
  5252                           ; BSR set to: 0
  5253  0115EC  0012               	return	
  5254  0115EE                     l9915:
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;Port.c: 40: return (void*)0;
  5258  0115EE  0E00               	movlw	0
  5259  0115F0  0100               	movlb	0	; () banked
  5260  0115F2  6FC8               	movwf	?_GetPortProperties& (0+255),b
  5261  0115F4  0E00               	movlw	0
  5262  0115F6  0100               	movlb	0	; () banked
  5263  0115F8  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;Port.c: 41: }
  5267                           
  5268                           ; BSR set to: 0
  5269  0115FA  0012               	return	
  5270  0115FC                     l9921:
  5271  0115FC  0100               	movlb	0	; () banked
  5272  0115FE  51CA               	movf	GetPortProperties@pInput& (0+255),w,b
  5273                           
  5274                           ; Switch size 1, requested type "space"
  5275                           ; Number of cases is 7, Range of values is 0 to 6
  5276                           ; switch strategies available:
  5277                           ; Name         Instructions Cycles
  5278                           ; simple_byte           22    12 (average)
  5279                           ;	Chosen strategy is simple_byte
  5280  011600  0A00               	xorlw	0	; case 0
  5281  011602  B4D8               	btfsc	status,2,c
  5282  011604  D7C3               	goto	l9887
  5283  011606  0A01               	xorlw	1	; case 1
  5284  011608  B4D8               	btfsc	status,2,c
  5285  01160A  D7C7               	goto	l9891
  5286  01160C  0A03               	xorlw	3	; case 2
  5287  01160E  B4D8               	btfsc	status,2,c
  5288  011610  D7CB               	goto	l9895
  5289  011612  0A01               	xorlw	1	; case 3
  5290  011614  B4D8               	btfsc	status,2,c
  5291  011616  D7CF               	goto	l9899
  5292  011618  0A07               	xorlw	7	; case 4
  5293  01161A  B4D8               	btfsc	status,2,c
  5294  01161C  D7D3               	goto	l9903
  5295  01161E  0A01               	xorlw	1	; case 5
  5296  011620  B4D8               	btfsc	status,2,c
  5297  011622  D7D7               	goto	l9907
  5298  011624  0A03               	xorlw	3	; case 6
  5299  011626  B4D8               	btfsc	status,2,c
  5300  011628  D7DB               	goto	l9911
  5301  01162A  D7E1               	goto	l9915
  5302  01162C                     __end_of_GetPortProperties:
  5303                           	opt stack 0
  5304                           tblptru	equ	0xFF8
  5305                           tblptrh	equ	0xFF7
  5306                           tblptrl	equ	0xFF6
  5307                           tablat	equ	0xFF5
  5308                           prodl	equ	0xFF3
  5309                           postinc0	equ	0xFEE
  5310                           wreg	equ	0xFE8
  5311                           postdec1	equ	0xFE5
  5312                           fsr1h	equ	0xFE2
  5313                           fsr1l	equ	0xFE1
  5314                           indf2	equ	0xFDF
  5315                           postinc2	equ	0xFDE
  5316                           postdec2	equ	0xFDD
  5317                           fsr2h	equ	0xFDA
  5318                           fsr2l	equ	0xFD9
  5319                           status	equ	0xFD8
  5320                           
  5321 ;; *************** function _GetPortPORT *****************
  5322 ;; Defined at:
  5323 ;;		line 44 in file "Library/Port.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  pInput          1    wreg     enum E6786
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  pInput          1    2[BANK0 ] enum E6786
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  2    0[BANK0 ] PTR struct Byte
  5330 ;; Registers used:
  5331 ;;		wreg, status,2, status,0
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5337 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5340 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5341 ;;Total ram usage:        3 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    7
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_Port_Init
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text16
  5352  01162C                     __ptext16:
  5353                           	opt stack 0
  5354  01162C                     _GetPortPORT:
  5355                           	opt stack 20
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;incstack = 0
  5359                           ;GetPortPORT@pInput stored from wreg
  5360  01162C  0100               	movlb	0	; () banked
  5361  01162E  6FCA               	movwf	GetPortPORT@pInput& (0+255),b
  5362                           
  5363                           ;Port.c: 46: switch (pInput)
  5364  011630  D038               	goto	l9959
  5365  011632                     l9925:
  5366                           
  5367                           ;Port.c: 49: return (BytePtr)&PORTA;
  5368  011632  0E80               	movlw	128
  5369  011634  0100               	movlb	0	; () banked
  5370  011636  6FC8               	movwf	?_GetPortPORT& (0+255),b
  5371  011638  0E0F               	movlw	15
  5372  01163A  0100               	movlb	0	; () banked
  5373  01163C  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  5374                           
  5375                           ; BSR set to: 0
  5376  01163E  0012               	return	
  5377  011640                     l9929:
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;Port.c: 51: return (BytePtr)&PORTB;
  5381  011640  0E81               	movlw	129
  5382  011642  0100               	movlb	0	; () banked
  5383  011644  6FC8               	movwf	?_GetPortPORT& (0+255),b
  5384  011646  0E0F               	movlw	15
  5385  011648  0100               	movlb	0	; () banked
  5386  01164A  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  5387                           
  5388                           ; BSR set to: 0
  5389  01164C  0012               	return	
  5390  01164E                     l9933:
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;Port.c: 53: return (BytePtr)&PORTC;
  5394  01164E  0E82               	movlw	130
  5395  011650  0100               	movlb	0	; () banked
  5396  011652  6FC8               	movwf	?_GetPortPORT& (0+255),b
  5397  011654  0E0F               	movlw	15
  5398  011656  0100               	movlb	0	; () banked
  5399  011658  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  5400                           
  5401                           ; BSR set to: 0
  5402  01165A  0012               	return	
  5403  01165C                     l9937:
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;Port.c: 55: return (BytePtr)&PORTD;
  5407  01165C  0E83               	movlw	131
  5408  01165E  0100               	movlb	0	; () banked
  5409  011660  6FC8               	movwf	?_GetPortPORT& (0+255),b
  5410  011662  0E0F               	movlw	15
  5411  011664  0100               	movlb	0	; () banked
  5412  011666  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  5413                           
  5414                           ; BSR set to: 0
  5415  011668  0012               	return	
  5416  01166A                     l9941:
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;Port.c: 57: return (BytePtr)&PORTE;
  5420  01166A  0E84               	movlw	132
  5421  01166C  0100               	movlb	0	; () banked
  5422  01166E  6FC8               	movwf	?_GetPortPORT& (0+255),b
  5423  011670  0E0F               	movlw	15
  5424  011672  0100               	movlb	0	; () banked
  5425  011674  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  5426                           
  5427                           ; BSR set to: 0
  5428  011676  0012               	return	
  5429  011678                     l9945:
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;Port.c: 59: return (BytePtr)&PORTF;
  5433  011678  0E85               	movlw	133
  5434  01167A  0100               	movlb	0	; () banked
  5435  01167C  6FC8               	movwf	?_GetPortPORT& (0+255),b
  5436  01167E  0E0F               	movlw	15
  5437  011680  0100               	movlb	0	; () banked
  5438  011682  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  5439                           
  5440                           ; BSR set to: 0
  5441  011684  0012               	return	
  5442  011686                     l9949:
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;Port.c: 61: return (BytePtr)&PORTG;
  5446  011686  0E86               	movlw	134
  5447  011688  0100               	movlb	0	; () banked
  5448  01168A  6FC8               	movwf	?_GetPortPORT& (0+255),b
  5449  01168C  0E0F               	movlw	15
  5450  01168E  0100               	movlb	0	; () banked
  5451  011690  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  5452                           
  5453                           ; BSR set to: 0
  5454  011692  0012               	return	
  5455  011694                     l9953:
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;Port.c: 63: return (void*)0;
  5459  011694  0E00               	movlw	0
  5460  011696  0100               	movlb	0	; () banked
  5461  011698  6FC8               	movwf	?_GetPortPORT& (0+255),b
  5462  01169A  0E00               	movlw	0
  5463  01169C  0100               	movlb	0	; () banked
  5464  01169E  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;Port.c: 64: }
  5468                           
  5469                           ; BSR set to: 0
  5470  0116A0  0012               	return	
  5471  0116A2                     l9959:
  5472  0116A2  0100               	movlb	0	; () banked
  5473  0116A4  51CA               	movf	GetPortPORT@pInput& (0+255),w,b
  5474                           
  5475                           ; Switch size 1, requested type "space"
  5476                           ; Number of cases is 7, Range of values is 0 to 6
  5477                           ; switch strategies available:
  5478                           ; Name         Instructions Cycles
  5479                           ; simple_byte           22    12 (average)
  5480                           ;	Chosen strategy is simple_byte
  5481  0116A6  0A00               	xorlw	0	; case 0
  5482  0116A8  B4D8               	btfsc	status,2,c
  5483  0116AA  D7C3               	goto	l9925
  5484  0116AC  0A01               	xorlw	1	; case 1
  5485  0116AE  B4D8               	btfsc	status,2,c
  5486  0116B0  D7C7               	goto	l9929
  5487  0116B2  0A03               	xorlw	3	; case 2
  5488  0116B4  B4D8               	btfsc	status,2,c
  5489  0116B6  D7CB               	goto	l9933
  5490  0116B8  0A01               	xorlw	1	; case 3
  5491  0116BA  B4D8               	btfsc	status,2,c
  5492  0116BC  D7CF               	goto	l9937
  5493  0116BE  0A07               	xorlw	7	; case 4
  5494  0116C0  B4D8               	btfsc	status,2,c
  5495  0116C2  D7D3               	goto	l9941
  5496  0116C4  0A01               	xorlw	1	; case 5
  5497  0116C6  B4D8               	btfsc	status,2,c
  5498  0116C8  D7D7               	goto	l9945
  5499  0116CA  0A03               	xorlw	3	; case 6
  5500  0116CC  B4D8               	btfsc	status,2,c
  5501  0116CE  D7DB               	goto	l9949
  5502  0116D0  D7E1               	goto	l9953
  5503  0116D2                     __end_of_GetPortPORT:
  5504                           	opt stack 0
  5505                           tblptru	equ	0xFF8
  5506                           tblptrh	equ	0xFF7
  5507                           tblptrl	equ	0xFF6
  5508                           tablat	equ	0xFF5
  5509                           prodl	equ	0xFF3
  5510                           postinc0	equ	0xFEE
  5511                           wreg	equ	0xFE8
  5512                           postdec1	equ	0xFE5
  5513                           fsr1h	equ	0xFE2
  5514                           fsr1l	equ	0xFE1
  5515                           indf2	equ	0xFDF
  5516                           postinc2	equ	0xFDE
  5517                           postdec2	equ	0xFDD
  5518                           fsr2h	equ	0xFDA
  5519                           fsr2l	equ	0xFD9
  5520                           status	equ	0xFD8
  5521                           
  5522 ;; *************** function _LED_Init *****************
  5523 ;; Defined at:
  5524 ;;		line 15 in file "Library/LED.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;  pLED            1    wreg     enum E6739
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;  pLED            1   45[BANK0 ] enum E6739
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      void 
  5531 ;; Registers used:
  5532 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;Total ram usage:        1 bytes
  5543 ;; Hardware stack levels used:    1
  5544 ;; Hardware stack levels required when called:   12
  5545 ;; This function calls:
  5546 ;;		_LED_Set
  5547 ;;		_Port_SetPinType
  5548 ;; This function is called by:
  5549 ;;		_MXK_Init
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           	psect	text17
  5554  011998                     __ptext17:
  5555                           	opt stack 0
  5556  011998                     _LED_Init:
  5557                           	opt stack 16
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;incstack = 0
  5561                           ;LED_Init@pLED stored from wreg
  5562  011998  0100               	movlb	0	; () banked
  5563  01199A  6FF5               	movwf	LED_Init@pLED& (0+255),b
  5564                           
  5565                           ;LED.c: 17: switch (pLED)
  5566  01199C  D01E               	goto	l10175
  5567  01199E                     l10169:
  5568                           
  5569                           ;LED.c: 20: Port_SetPinType(&PortC, eP0, eTypeOutputPushPull);
  5570  01199E  0E93               	movlw	low _PortC
  5571  0119A0  0100               	movlb	0	; () banked
  5572  0119A2  6FEE               	movwf	Port_SetPinType@pInput& (0+255),b
  5573  0119A4  0E00               	movlw	high _PortC
  5574  0119A6  0100               	movlb	0	; () banked
  5575  0119A8  6FEF               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  5576  0119AA  0E00               	movlw	0
  5577  0119AC  0100               	movlb	0	; () banked
  5578  0119AE  6FF0               	movwf	Port_SetPinType@pPin& (0+255),b
  5579  0119B0  0E03               	movlw	3
  5580  0119B2  0100               	movlb	0	; () banked
  5581  0119B4  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  5582  0119B6  EC1D  F084         	call	_Port_SetPinType	;wreg free
  5583                           
  5584                           ;LED.c: 21: break;
  5585  0119BA  D017               	goto	l10177
  5586  0119BC                     l10171:
  5587                           
  5588                           ;LED.c: 23: Port_SetPinType(&PortC, eP1, eTypeOutputPushPull);
  5589  0119BC  0E93               	movlw	low _PortC
  5590  0119BE  0100               	movlb	0	; () banked
  5591  0119C0  6FEE               	movwf	Port_SetPinType@pInput& (0+255),b
  5592  0119C2  0E00               	movlw	high _PortC
  5593  0119C4  0100               	movlb	0	; () banked
  5594  0119C6  6FEF               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  5595  0119C8  0E01               	movlw	1
  5596  0119CA  0100               	movlb	0	; () banked
  5597  0119CC  6FF0               	movwf	Port_SetPinType@pPin& (0+255),b
  5598  0119CE  0E03               	movlw	3
  5599  0119D0  0100               	movlb	0	; () banked
  5600  0119D2  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  5601  0119D4  EC1D  F084         	call	_Port_SetPinType	;wreg free
  5602                           
  5603                           ;LED.c: 25: }
  5604                           
  5605                           ;LED.c: 24: break;
  5606  0119D8  D008               	goto	l10177
  5607  0119DA                     l10175:
  5608  0119DA  0100               	movlb	0	; () banked
  5609  0119DC  51F5               	movf	LED_Init@pLED& (0+255),w,b
  5610                           
  5611                           ; Switch size 1, requested type "space"
  5612                           ; Number of cases is 2, Range of values is 0 to 1
  5613                           ; switch strategies available:
  5614                           ; Name         Instructions Cycles
  5615                           ; simple_byte            7     4 (average)
  5616                           ;	Chosen strategy is simple_byte
  5617  0119DE  0A00               	xorlw	0	; case 0
  5618  0119E0  B4D8               	btfsc	status,2,c
  5619  0119E2  D7DD               	goto	l10169
  5620  0119E4  0A01               	xorlw	1	; case 1
  5621  0119E6  B4D8               	btfsc	status,2,c
  5622  0119E8  D7E9               	goto	l10171
  5623  0119EA                     l10177:
  5624                           
  5625                           ;LED.c: 26: LED_Set(pLED, 0);
  5626  0119EA  0E00               	movlw	0
  5627  0119EC  0100               	movlb	0	; () banked
  5628  0119EE  6FDC               	movwf	LED_Set@pValue& (0+255),b
  5629  0119F0  0100               	movlb	0	; () banked
  5630  0119F2  51F5               	movf	LED_Init@pLED& (0+255),w,b
  5631  0119F4  EC80  F08D         	call	_LED_Set
  5632  0119F8  0012               	return		;funcret
  5633  0119FA                     __end_of_LED_Init:
  5634                           	opt stack 0
  5635                           tblptru	equ	0xFF8
  5636                           tblptrh	equ	0xFF7
  5637                           tblptrl	equ	0xFF6
  5638                           tablat	equ	0xFF5
  5639                           prodl	equ	0xFF3
  5640                           postinc0	equ	0xFEE
  5641                           wreg	equ	0xFE8
  5642                           postdec1	equ	0xFE5
  5643                           fsr1h	equ	0xFE2
  5644                           fsr1l	equ	0xFE1
  5645                           indf2	equ	0xFDF
  5646                           postinc2	equ	0xFDE
  5647                           postdec2	equ	0xFDD
  5648                           fsr2h	equ	0xFDA
  5649                           fsr2l	equ	0xFD9
  5650                           status	equ	0xFD8
  5651                           
  5652 ;; *************** function _Port_SetPinType *****************
  5653 ;; Defined at:
  5654 ;;		line 189 in file "Library/Port.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  pInput          2   38[BANK0 ] const PTR struct Port
  5657 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  5658 ;;		 -> PortD(10), PortC(10), PortF(10), 
  5659 ;;  pPin            1   40[BANK0 ] enum E6750
  5660 ;;  pType           1   41[BANK0 ] enum E6795
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;  Props           2   43[BANK0 ] PTR struct PortProperty
  5663 ;;		 -> PortG_Property(2), PortF_Property(2), PortE_Property(2), PortD_Property(2), 
  5664 ;;		 -> PortC_Property(2), PortB_Property(2), PortA_Property(2), NULL(0), 
  5665 ;;  Output          1   42[BANK0 ] enum E6475
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  1    wreg      enum E6475
  5668 ;; Registers used:
  5669 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5675 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;Total ram usage:        7 bytes
  5680 ;; Hardware stack levels used:    1
  5681 ;; Hardware stack levels required when called:   11
  5682 ;; This function calls:
  5683 ;;		_Byte_SetBit
  5684 ;;		_PortProperty_Valid
  5685 ;;		_Word_SetPair
  5686 ;; This function is called by:
  5687 ;;		_LED_Init
  5688 ;;		_Port_Init
  5689 ;;		_Motor_Init
  5690 ;;		_MXK_Init
  5691 ;;		_Configure_GPIOs
  5692 ;;		_SPI_Init
  5693 ;;		_I2C_Init
  5694 ;;		_MXK_InitTestButton
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           	psect	text18
  5699  01083A                     __ptext18:
  5700                           	opt stack 0
  5701  01083A                     _Port_SetPinType:
  5702                           	opt stack 17
  5703                           
  5704                           ;Port.c: 191: PortProperty * Props = pInput->mProperties;
  5705                           
  5706                           ;incstack = 0
  5707  01083A  C0EE  FFD9         	movff	Port_SetPinType@pInput,fsr2l
  5708  01083E  C0EF  FFDA         	movff	Port_SetPinType@pInput+1,fsr2h
  5709  010842  CFDE F0F3          	movff	postinc2,Port_SetPinType@Props
  5710  010846  CFDD F0F4          	movff	postdec2,Port_SetPinType@Props+1
  5711                           
  5712                           ;Port.c: 192: ePinError Output = ePinErrorState;
  5713  01084A  0E05               	movlw	5
  5714  01084C  0100               	movlb	0	; () banked
  5715  01084E  6FF2               	movwf	Port_SetPinType@Output& (0+255),b
  5716                           
  5717                           ;Port.c: 193: switch (pType)
  5718  010850  D0B5               	goto	l9869
  5719  010852                     l9849:
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;Port.c: 197: {
  5723                           ;Port.c: 199: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)1);
  5724  010852  0100               	movlb	0	; () banked
  5725  010854  EE20 F002          	lfsr	2,2
  5726  010858  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5727  01085A  26D9               	addwf	fsr2l,f,c
  5728  01085C  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5729  01085E  22DA               	addwfc	fsr2h,f,c
  5730  010860  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5731  010864  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5732  010868  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5733  01086C  0E01               	movlw	1
  5734  01086E  0100               	movlb	0	; () banked
  5735  010870  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5736  010872  EC9A  F08C         	call	_Byte_SetBit	;wreg free
  5737                           
  5738                           ;Port.c: 203: break;
  5739  010876  D0B0               	goto	l9871
  5740  010878                     l9851:
  5741                           
  5742                           ;Port.c: 207: if ((Output = PortProperty_Valid(Props, eLow, pPin)) == ePinErrorNone)
  5743  010878  C0F3  F0D7         	movff	Port_SetPinType@Props,PortProperty_Valid@pInput
  5744  01087C  C0F4  F0D8         	movff	Port_SetPinType@Props+1,PortProperty_Valid@pInput+1
  5745  010880  0E01               	movlw	1
  5746  010882  0100               	movlb	0	; () banked
  5747  010884  6FD9               	movwf	PortProperty_Valid@pPinDrive& (0+255),b
  5748  010886  C0F0  F0DA         	movff	Port_SetPinType@pPin,PortProperty_Valid@pPin
  5749  01088A  ECB7  F08B         	call	_PortProperty_Valid	;wreg free
  5750  01088E  0100               	movlb	0	; () banked
  5751  010890  6FF2               	movwf	Port_SetPinType@Output& (0+255),b
  5752  010892  0100               	movlb	0	; () banked
  5753  010894  51F2               	movf	Port_SetPinType@Output& (0+255),w,b
  5754  010896  A4D8               	btfss	status,2,c
  5755  010898  0012               	return	
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;Port.c: 208: {
  5759                           ;Port.c: 210: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)0);
  5760  01089A  0100               	movlb	0	; () banked
  5761  01089C  EE20 F002          	lfsr	2,2
  5762  0108A0  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5763  0108A2  26D9               	addwf	fsr2l,f,c
  5764  0108A4  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5765  0108A6  22DA               	addwfc	fsr2h,f,c
  5766  0108A8  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5767  0108AC  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5768  0108B0  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5769  0108B4  0E00               	movlw	0
  5770  0108B6  0100               	movlb	0	; () banked
  5771  0108B8  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5772  0108BA  EC9A  F08C         	call	_Byte_SetBit	;wreg free
  5773                           
  5774                           ;Port.c: 213: Byte_SetBit(pInput->mOutput, (UINT8)pPin, 0);
  5775  0108BE  0100               	movlb	0	; () banked
  5776  0108C0  EE20 F004          	lfsr	2,4
  5777  0108C4  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5778  0108C6  26D9               	addwf	fsr2l,f,c
  5779  0108C8  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5780  0108CA  22DA               	addwfc	fsr2h,f,c
  5781  0108CC  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5782  0108D0  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5783  0108D4  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5784  0108D8  0E00               	movlw	0
  5785  0108DA  0100               	movlb	0	; () banked
  5786  0108DC  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5787  0108DE  EC9A  F08C         	call	_Byte_SetBit	;wreg free
  5788                           
  5789                           ;Port.c: 214: break;
  5790  0108E2  D07A               	goto	l9871
  5791  0108E4                     l9857:
  5792                           
  5793                           ;Port.c: 219: if ((Output = PortProperty_Valid(Props, eHigh, pPin)) == ePinErrorNone)
  5794  0108E4  C0F3  F0D7         	movff	Port_SetPinType@Props,PortProperty_Valid@pInput
  5795  0108E8  C0F4  F0D8         	movff	Port_SetPinType@Props+1,PortProperty_Valid@pInput+1
  5796  0108EC  0E02               	movlw	2
  5797  0108EE  0100               	movlb	0	; () banked
  5798  0108F0  6FD9               	movwf	PortProperty_Valid@pPinDrive& (0+255),b
  5799  0108F2  C0F0  F0DA         	movff	Port_SetPinType@pPin,PortProperty_Valid@pPin
  5800  0108F6  ECB7  F08B         	call	_PortProperty_Valid	;wreg free
  5801  0108FA  0100               	movlb	0	; () banked
  5802  0108FC  6FF2               	movwf	Port_SetPinType@Output& (0+255),b
  5803  0108FE  0100               	movlb	0	; () banked
  5804  010900  51F2               	movf	Port_SetPinType@Output& (0+255),w,b
  5805  010902  A4D8               	btfss	status,2,c
  5806  010904  0012               	return	
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;Port.c: 220: {
  5810                           ;Port.c: 222: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)1);
  5811  010906  0100               	movlb	0	; () banked
  5812  010908  EE20 F002          	lfsr	2,2
  5813  01090C  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5814  01090E  26D9               	addwf	fsr2l,f,c
  5815  010910  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5816  010912  22DA               	addwfc	fsr2h,f,c
  5817  010914  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5818  010918  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5819  01091C  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5820  010920  0E01               	movlw	1
  5821  010922  0100               	movlb	0	; () banked
  5822  010924  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5823  010926  EC9A  F08C         	call	_Byte_SetBit	;wreg free
  5824                           
  5825                           ;Port.c: 225: Byte_SetBit(pInput->mOutput, (UINT8)pPin, 1);
  5826  01092A  0100               	movlb	0	; () banked
  5827  01092C  EE20 F004          	lfsr	2,4
  5828  010930  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5829  010932  26D9               	addwf	fsr2l,f,c
  5830  010934  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5831  010936  22DA               	addwfc	fsr2h,f,c
  5832  010938  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5833  01093C  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5834  010940  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5835  010944  0E01               	movlw	1
  5836  010946  0100               	movlb	0	; () banked
  5837  010948  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5838  01094A  EC9A  F08C         	call	_Byte_SetBit	;wreg free
  5839                           
  5840                           ;Port.c: 226: break;
  5841  01094E  D044               	goto	l9871
  5842  010950                     l9863:
  5843                           
  5844                           ;Port.c: 231: if ((Output = PortProperty_Valid(Props, eHL, pPin)) == ePinErrorNone)
  5845  010950  C0F3  F0D7         	movff	Port_SetPinType@Props,PortProperty_Valid@pInput
  5846  010954  C0F4  F0D8         	movff	Port_SetPinType@Props+1,PortProperty_Valid@pInput+1
  5847  010958  0E00               	movlw	0
  5848  01095A  0100               	movlb	0	; () banked
  5849  01095C  6FD9               	movwf	PortProperty_Valid@pPinDrive& (0+255),b
  5850  01095E  C0F0  F0DA         	movff	Port_SetPinType@pPin,PortProperty_Valid@pPin
  5851  010962  ECB7  F08B         	call	_PortProperty_Valid	;wreg free
  5852  010966  0100               	movlb	0	; () banked
  5853  010968  6FF2               	movwf	Port_SetPinType@Output& (0+255),b
  5854  01096A  0100               	movlb	0	; () banked
  5855  01096C  51F2               	movf	Port_SetPinType@Output& (0+255),w,b
  5856  01096E  A4D8               	btfss	status,2,c
  5857  010970  0012               	return	
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;Port.c: 232: {
  5861                           ;Port.c: 234: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)0);
  5862  010972  0100               	movlb	0	; () banked
  5863  010974  EE20 F002          	lfsr	2,2
  5864  010978  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5865  01097A  26D9               	addwf	fsr2l,f,c
  5866  01097C  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5867  01097E  22DA               	addwfc	fsr2h,f,c
  5868  010980  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5869  010984  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5870  010988  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5871  01098C  0E00               	movlw	0
  5872  01098E  0100               	movlb	0	; () banked
  5873  010990  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5874  010992  EC9A  F08C         	call	_Byte_SetBit	;wreg free
  5875                           
  5876                           ;Port.c: 237: Byte_SetBit(pInput->mOutput, (UINT8)pPin, 0);
  5877  010996  0100               	movlb	0	; () banked
  5878  010998  EE20 F004          	lfsr	2,4
  5879  01099C  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5880  01099E  26D9               	addwf	fsr2l,f,c
  5881  0109A0  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5882  0109A2  22DA               	addwfc	fsr2h,f,c
  5883  0109A4  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5884  0109A8  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5885  0109AC  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5886  0109B0  0E00               	movlw	0
  5887  0109B2  0100               	movlb	0	; () banked
  5888  0109B4  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5889  0109B6  EC9A  F08C         	call	_Byte_SetBit	;wreg free
  5890                           
  5891                           ;Port.c: 239: }
  5892                           
  5893                           ;Port.c: 238: break;
  5894  0109BA  D00E               	goto	l9871
  5895  0109BC                     l9869:
  5896  0109BC  0100               	movlb	0	; () banked
  5897  0109BE  51F1               	movf	Port_SetPinType@pType& (0+255),w,b
  5898                           
  5899                           ; Switch size 1, requested type "space"
  5900                           ; Number of cases is 4, Range of values is 0 to 3
  5901                           ; switch strategies available:
  5902                           ; Name         Instructions Cycles
  5903                           ; simple_byte           13     7 (average)
  5904                           ;	Chosen strategy is simple_byte
  5905  0109C0  0A00               	xorlw	0	; case 0
  5906  0109C2  B4D8               	btfsc	status,2,c
  5907  0109C4  D746               	goto	l9849
  5908  0109C6  0A01               	xorlw	1	; case 1
  5909  0109C8  B4D8               	btfsc	status,2,c
  5910  0109CA  D756               	goto	l9851
  5911  0109CC  0A03               	xorlw	3	; case 2
  5912  0109CE  B4D8               	btfsc	status,2,c
  5913  0109D0  D789               	goto	l9857
  5914  0109D2  0A01               	xorlw	1	; case 3
  5915  0109D4  B4D8               	btfsc	status,2,c
  5916  0109D6  D7BC               	goto	l9863
  5917  0109D8                     l9871:
  5918                           
  5919                           ;Port.c: 244: Word_SetPair(&pInput->mType, (UINT8)pPin, (UINT8)pType);
  5920  0109D8  0E08               	movlw	8
  5921  0109DA  0100               	movlb	0	; () banked
  5922  0109DC  25EE               	addwf	Port_SetPinType@pInput& (0+255),w,b
  5923  0109DE  0100               	movlb	0	; () banked
  5924  0109E0  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  5925  0109E2  0E00               	movlw	0
  5926  0109E4  0100               	movlb	0	; () banked
  5927  0109E6  21EF               	addwfc	(Port_SetPinType@pInput+1)& (0+255),w,b
  5928  0109E8  0100               	movlb	0	; () banked
  5929  0109EA  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  5930  0109EC  C0F0  F0D9         	movff	Port_SetPinType@pPin,Word_SetPair@pPair
  5931  0109F0  C0F1  F0DA         	movff	Port_SetPinType@pType,Word_SetPair@pValue
  5932  0109F4  ECF2  F08D         	call	_Word_SetPair	;wreg free
  5933  0109F8  0012               	return	
  5934  0109FA                     __end_of_Port_SetPinType:
  5935                           	opt stack 0
  5936                           tblptru	equ	0xFF8
  5937                           tblptrh	equ	0xFF7
  5938                           tblptrl	equ	0xFF6
  5939                           tablat	equ	0xFF5
  5940                           prodl	equ	0xFF3
  5941                           postinc0	equ	0xFEE
  5942                           wreg	equ	0xFE8
  5943                           postdec1	equ	0xFE5
  5944                           fsr1h	equ	0xFE2
  5945                           fsr1l	equ	0xFE1
  5946                           indf2	equ	0xFDF
  5947                           postinc2	equ	0xFDE
  5948                           postdec2	equ	0xFDD
  5949                           fsr2h	equ	0xFDA
  5950                           fsr2l	equ	0xFD9
  5951                           status	equ	0xFD8
  5952                           
  5953 ;; *************** function _Word_SetPair *****************
  5954 ;; Defined at:
  5955 ;;		line 149 in file "Library/Types.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;  pInput          2   15[BANK0 ] PTR struct Word
  5958 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  5959 ;;		 -> PortD(10), PortC(10), PortF(10), 
  5960 ;;  pPair           1   17[BANK0 ] unsigned char 
  5961 ;;  pValue          1   18[BANK0 ] unsigned char 
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;		None
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  1    wreg      void 
  5966 ;; Registers used:
  5967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5973 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;Total ram usage:        4 bytes
  5978 ;; Hardware stack levels used:    1
  5979 ;; Hardware stack levels required when called:    9
  5980 ;; This function calls:
  5981 ;;		_Byte_SetPair
  5982 ;; This function is called by:
  5983 ;;		_Port_SetPinType
  5984 ;;		_Port_SetQuadType
  5985 ;;		_Port_SetType
  5986 ;;		_Port_SetPairType
  5987 ;;		_PortProperty_Init
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           	psect	text19
  5992  011BE4                     __ptext19:
  5993                           	opt stack 0
  5994  011BE4                     _Word_SetPair:
  5995                           	opt stack 18
  5996                           
  5997                           ;Types.c: 151: if (pPair >= 4)
  5998                           
  5999                           ;incstack = 0
  6000  011BE4  0E03               	movlw	3
  6001  011BE6  0100               	movlb	0	; () banked
  6002  011BE8  65D9               	cpfsgt	Word_SetPair@pPair& (0+255),b
  6003  011BEA  D014               	goto	l9817
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;Types.c: 152: Byte_SetPair(&(pInput->MS_Byte), pPair - 4, pValue);
  6007  011BEC  0E01               	movlw	1
  6008  011BEE  0100               	movlb	0	; () banked
  6009  011BF0  25D7               	addwf	Word_SetPair@pInput& (0+255),w,b
  6010  011BF2  0100               	movlb	0	; () banked
  6011  011BF4  6FD3               	movwf	Byte_SetPair@pInput& (0+255),b
  6012  011BF6  0E00               	movlw	0
  6013  011BF8  0100               	movlb	0	; () banked
  6014  011BFA  21D8               	addwfc	(Word_SetPair@pInput+1)& (0+255),w,b
  6015  011BFC  0100               	movlb	0	; () banked
  6016  011BFE  6FD4               	movwf	(Byte_SetPair@pInput+1)& (0+255),b
  6017  011C00  0100               	movlb	0	; () banked
  6018  011C02  51D9               	movf	Word_SetPair@pPair& (0+255),w,b
  6019  011C04  0FFC               	addlw	252
  6020  011C06  0100               	movlb	0	; () banked
  6021  011C08  6FD5               	movwf	Byte_SetPair@pPair& (0+255),b
  6022  011C0A  C0DA  F0D6         	movff	Word_SetPair@pValue,Byte_SetPair@pValue
  6023  011C0E  EC69  F08F         	call	_Byte_SetPair	;wreg free
  6024  011C12  0012               	return	
  6025  011C14                     l9817:
  6026                           
  6027                           ;Types.c: 153: else
  6028                           ;Types.c: 154: Byte_SetPair(&(pInput->LS_Byte), pPair, pValue);
  6029  011C14  C0D7  F0D3         	movff	Word_SetPair@pInput,Byte_SetPair@pInput
  6030  011C18  C0D8  F0D4         	movff	Word_SetPair@pInput+1,Byte_SetPair@pInput+1
  6031  011C1C  C0D9  F0D5         	movff	Word_SetPair@pPair,Byte_SetPair@pPair
  6032  011C20  C0DA  F0D6         	movff	Word_SetPair@pValue,Byte_SetPair@pValue
  6033  011C24  EC69  F08F         	call	_Byte_SetPair	;wreg free
  6034  011C28  0012               	return	
  6035  011C2A                     __end_of_Word_SetPair:
  6036                           	opt stack 0
  6037                           tblptru	equ	0xFF8
  6038                           tblptrh	equ	0xFF7
  6039                           tblptrl	equ	0xFF6
  6040                           tablat	equ	0xFF5
  6041                           prodl	equ	0xFF3
  6042                           postinc0	equ	0xFEE
  6043                           wreg	equ	0xFE8
  6044                           postdec1	equ	0xFE5
  6045                           fsr1h	equ	0xFE2
  6046                           fsr1l	equ	0xFE1
  6047                           indf2	equ	0xFDF
  6048                           postinc2	equ	0xFDE
  6049                           postdec2	equ	0xFDD
  6050                           fsr2h	equ	0xFDA
  6051                           fsr2l	equ	0xFD9
  6052                           status	equ	0xFD8
  6053                           
  6054 ;; *************** function _Byte_SetPair *****************
  6055 ;; Defined at:
  6056 ;;		line 83 in file "Library/Types.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;  pInput          2   11[BANK0 ] PTR struct Byte
  6059 ;;		 -> PortF..(2), PortC..(2), PortD..(2), PortE..(2), 
  6060 ;;		 -> PortB..(2), PortA..(2), PortG..(2), PortG(10), 
  6061 ;;		 -> PortA(10), PortB(10), PortE(10), PortD(10), 
  6062 ;;		 -> TRISG(1), TRISF(1), TRISE(1), TRISD(1), 
  6063 ;;		 -> TRISC(1), TRISB(1), TRISA(1), PORTG(1), 
  6064 ;;		 -> PORTF(1), PORTE(1), PORTD(1), PORTC(1), 
  6065 ;;		 -> PORTB(1), PORTA(1), PortC(10), PortF(10), 
  6066 ;;		 -> NULL(0), 
  6067 ;;  pPair           1   13[BANK0 ] unsigned char 
  6068 ;;  pValue          1   14[BANK0 ] unsigned char 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;		None
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6080 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;Total ram usage:        4 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:    8
  6087 ;; This function calls:
  6088 ;;		_Byte_SetZone
  6089 ;; This function is called by:
  6090 ;;		_Word_SetPair
  6091 ;;		_Port_SetPairType
  6092 ;;		_Port_SetPair
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           	psect	text20
  6097  011ED2                     __ptext20:
  6098                           	opt stack 0
  6099  011ED2                     _Byte_SetPair:
  6100                           	opt stack 18
  6101                           
  6102                           ;Types.c: 85: Byte_SetZone(pInput, 4, pPair, 2, pValue);
  6103                           
  6104                           ;incstack = 0
  6105  011ED2  C0D3  F0C8         	movff	Byte_SetPair@pInput,Byte_SetZone@pInput
  6106  011ED6  C0D4  F0C9         	movff	Byte_SetPair@pInput+1,Byte_SetZone@pInput+1
  6107  011EDA  0E04               	movlw	4
  6108  011EDC  0100               	movlb	0	; () banked
  6109  011EDE  6FCA               	movwf	Byte_SetZone@pMax& (0+255),b
  6110  011EE0  C0D5  F0CB         	movff	Byte_SetPair@pPair,Byte_SetZone@pChunk
  6111  011EE4  0E02               	movlw	2
  6112  011EE6  0100               	movlb	0	; () banked
  6113  011EE8  6FCC               	movwf	Byte_SetZone@pChunkSize& (0+255),b
  6114  011EEA  C0D6  F0CD         	movff	Byte_SetPair@pValue,Byte_SetZone@pValue
  6115  011EEE  EC69  F089         	call	_Byte_SetZone	;wreg free
  6116  011EF2  0012               	return		;funcret
  6117  011EF4                     __end_of_Byte_SetPair:
  6118                           	opt stack 0
  6119                           tblptru	equ	0xFF8
  6120                           tblptrh	equ	0xFF7
  6121                           tblptrl	equ	0xFF6
  6122                           tablat	equ	0xFF5
  6123                           prodl	equ	0xFF3
  6124                           postinc0	equ	0xFEE
  6125                           wreg	equ	0xFE8
  6126                           postdec1	equ	0xFE5
  6127                           fsr1h	equ	0xFE2
  6128                           fsr1l	equ	0xFE1
  6129                           indf2	equ	0xFDF
  6130                           postinc2	equ	0xFDE
  6131                           postdec2	equ	0xFDD
  6132                           fsr2h	equ	0xFDA
  6133                           fsr2l	equ	0xFD9
  6134                           status	equ	0xFD8
  6135                           
  6136 ;; *************** function _Byte_SetZone *****************
  6137 ;; Defined at:
  6138 ;;		line 47 in file "Library/Types.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  pInput          2    0[BANK0 ] PTR struct Byte
  6141 ;;		 -> PortF..(2), PortC..(2), PortD..(2), PortE..(2), 
  6142 ;;		 -> PortB..(2), PortA..(2), PortG..(2), PortG(10), 
  6143 ;;		 -> PortA(10), PortB(10), PortE(10), SSP2CON1(1), 
  6144 ;;		 -> PortD(10), SSP1CON1(1), TRISG(1), TRISF(1), 
  6145 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
  6146 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
  6147 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
  6148 ;;		 -> PortC(10), PortF(10), NULL(0), 
  6149 ;;  pMax            1    2[BANK0 ] unsigned char 
  6150 ;;  pChunk          1    3[BANK0 ] unsigned char 
  6151 ;;  pChunkSize      1    4[BANK0 ] unsigned char 
  6152 ;;  pValue          1    5[BANK0 ] unsigned char 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  MASK            1   10[BANK0 ] unsigned char 
  6155 ;;  Offset          1    9[BANK0 ] unsigned char 
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  1    wreg      void 
  6158 ;; Registers used:
  6159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6165 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6166 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6167 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6168 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6169 ;;Total ram usage:       11 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; Hardware stack levels required when called:    7
  6172 ;; This function calls:
  6173 ;;		Nothing
  6174 ;; This function is called by:
  6175 ;;		_Byte_SetPair
  6176 ;;		_Byte_SetQuad
  6177 ;;		_Byte_SetTriple
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           	psect	text21
  6182  0112D2                     __ptext21:
  6183                           	opt stack 0
  6184  0112D2                     _Byte_SetZone:
  6185                           	opt stack 18
  6186                           
  6187                           ;Types.c: 49: UINT8 MASK = MASKS[pChunkSize];
  6188                           
  6189                           ;incstack = 0
  6190  0112D2  0100               	movlb	0	; () banked
  6191  0112D4  51CC               	movf	Byte_SetZone@pChunkSize& (0+255),w,b
  6192  0112D6  0D01               	mullw	1
  6193  0112D8  0E77               	movlw	low _MASKS
  6194  0112DA  24F3               	addwf	prodl,w,c
  6195  0112DC  6EF6               	movwf	tblptrl,c
  6196  0112DE  0EFD               	movlw	high _MASKS
  6197  0112E0  20F4               	addwfc	prodh,w,c
  6198  0112E2  6EF7               	movwf	tblptrh,c
  6199  0112E4                     	if	1	;There are 3 active tblptr bytes
  6200  0112E4  6AF8               	clrf	tblptru,c
  6201  0112E6  0E00               	movlw	low (__mediumconst shr (0+16))
  6202  0112E8  22F8               	addwfc	tblptru,f,c
  6203  0112EA                     	endif
  6204  0112EA  0008               	tblrd		*
  6205  0112EC  CFF5 F0D2          	movff	tablat,Byte_SetZone@MASK
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;Types.c: 50: UINT8 Offset = 0;
  6209  0112F0  0E00               	movlw	0
  6210  0112F2  0100               	movlb	0	; () banked
  6211  0112F4  6FD1               	movwf	Byte_SetZone@Offset& (0+255),b
  6212                           
  6213                           ;Types.c: 52: while (pChunk >= pMax)
  6214  0112F6  D006               	goto	l9643
  6215  0112F8                     l9639:
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;Types.c: 53: {
  6219                           ;Types.c: 54: pChunk -= pMax;
  6220  0112F8  0100               	movlb	0	; () banked
  6221  0112FA  51CA               	movf	Byte_SetZone@pMax& (0+255),w,b
  6222  0112FC  0100               	movlb	0	; () banked
  6223  0112FE  5FCB               	subwf	Byte_SetZone@pChunk& (0+255),f,b
  6224                           
  6225                           ; BSR set to: 0
  6226                           ;Types.c: 55: Offset += 1;
  6227  011300  0100               	movlb	0	; () banked
  6228  011302  2BD1               	incf	Byte_SetZone@Offset& (0+255),f,b
  6229  011304                     l9643:
  6230                           
  6231                           ; BSR set to: 0
  6232  011304  0100               	movlb	0	; () banked
  6233  011306  51CA               	movf	Byte_SetZone@pMax& (0+255),w,b
  6234  011308  0100               	movlb	0	; () banked
  6235  01130A  5DCB               	subwf	Byte_SetZone@pChunk& (0+255),w,b
  6236  01130C  B0D8               	btfsc	status,0,c
  6237  01130E  D7F4               	goto	l9639
  6238                           
  6239                           ; BSR set to: 0
  6240                           ;Types.c: 56: }
  6241                           ;Types.c: 57: pChunk *= pChunkSize;
  6242                           
  6243                           ; BSR set to: 0
  6244  011310  0100               	movlb	0	; () banked
  6245  011312  51CC               	movf	Byte_SetZone@pChunkSize& (0+255),w,b
  6246  011314  0100               	movlb	0	; () banked
  6247  011316  03CB               	mulwf	Byte_SetZone@pChunk& (0+255),b
  6248  011318  50F3               	movf	prodl,w,c
  6249  01131A  6FCB               	movwf	Byte_SetZone@pChunk& (0+255),b
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;Types.c: 58: pChunk += Offset;
  6253  01131C  0100               	movlb	0	; () banked
  6254  01131E  51D1               	movf	Byte_SetZone@Offset& (0+255),w,b
  6255  011320  0100               	movlb	0	; () banked
  6256  011322  27CB               	addwf	Byte_SetZone@pChunk& (0+255),f,b
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;Types.c: 60: pValue &= MASK;
  6260  011324  0100               	movlb	0	; () banked
  6261  011326  51D2               	movf	Byte_SetZone@MASK& (0+255),w,b
  6262  011328  0100               	movlb	0	; () banked
  6263  01132A  17CD               	andwf	Byte_SetZone@pValue& (0+255),f,b
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;Types.c: 61: pInput->mBits &= ~(MASK << pChunk);
  6267  01132C  C0CB  F0CE         	movff	Byte_SetZone@pChunk,??_Byte_SetZone
  6268  011330  C0D2  F0CF         	movff	Byte_SetZone@MASK,??_Byte_SetZone+1
  6269  011334  0100               	movlb	0	; () banked
  6270  011336  2BCE               	incf	??_Byte_SetZone& (0+255),f,b
  6271  011338  D003               	goto	u6404
  6272  01133A                     u6405:
  6273  01133A  0100               	movlb	0	; () banked
  6274  01133C  90D8               	bcf	status,0,c
  6275  01133E  37CF               	rlcf	(??_Byte_SetZone+1)& (0+255),f,b
  6276  011340                     u6404:
  6277  011340  0100               	movlb	0	; () banked
  6278  011342  2FCE               	decfsz	??_Byte_SetZone& (0+255),f,b
  6279  011344  D7FA               	goto	u6405
  6280  011346  0100               	movlb	0	; () banked
  6281  011348  51CF               	movf	(??_Byte_SetZone+1)& (0+255),w,b
  6282  01134A  0AFF               	xorlw	255
  6283  01134C  0100               	movlb	0	; () banked
  6284  01134E  6FD0               	movwf	(??_Byte_SetZone+2)& (0+255),b
  6285  011350  C0C8  FFD9         	movff	Byte_SetZone@pInput,fsr2l
  6286  011354  C0C9  FFDA         	movff	Byte_SetZone@pInput+1,fsr2h
  6287  011358  0100               	movlb	0	; () banked
  6288  01135A  51D0               	movf	(??_Byte_SetZone+2)& (0+255),w,b
  6289  01135C  16DF               	andwf	indf2,f,c
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;Types.c: 62: pInput->mBits |= pValue << pChunk;
  6293  01135E  C0CB  F0CE         	movff	Byte_SetZone@pChunk,??_Byte_SetZone
  6294  011362  C0CD  F0CF         	movff	Byte_SetZone@pValue,??_Byte_SetZone+1
  6295  011366  0100               	movlb	0	; () banked
  6296  011368  2BCE               	incf	??_Byte_SetZone& (0+255),f,b
  6297  01136A  D003               	goto	u6414
  6298  01136C                     u6415:
  6299  01136C  0100               	movlb	0	; () banked
  6300  01136E  90D8               	bcf	status,0,c
  6301  011370  37CF               	rlcf	(??_Byte_SetZone+1)& (0+255),f,b
  6302  011372                     u6414:
  6303  011372  0100               	movlb	0	; () banked
  6304  011374  2FCE               	decfsz	??_Byte_SetZone& (0+255),f,b
  6305  011376  D7FA               	goto	u6415
  6306  011378  C0C8  FFD9         	movff	Byte_SetZone@pInput,fsr2l
  6307  01137C  C0C9  FFDA         	movff	Byte_SetZone@pInput+1,fsr2h
  6308  011380  0100               	movlb	0	; () banked
  6309  011382  51CF               	movf	(??_Byte_SetZone+1)& (0+255),w,b
  6310  011384  12DF               	iorwf	indf2,f,c
  6311                           
  6312                           ; BSR set to: 0
  6313  011386  0012               	return		;funcret
  6314  011388                     __end_of_Byte_SetZone:
  6315                           	opt stack 0
  6316                           tblptru	equ	0xFF8
  6317                           tblptrh	equ	0xFF7
  6318                           tblptrl	equ	0xFF6
  6319                           tablat	equ	0xFF5
  6320                           prodh	equ	0xFF4
  6321                           prodl	equ	0xFF3
  6322                           postinc0	equ	0xFEE
  6323                           wreg	equ	0xFE8
  6324                           postdec1	equ	0xFE5
  6325                           fsr1h	equ	0xFE2
  6326                           fsr1l	equ	0xFE1
  6327                           indf2	equ	0xFDF
  6328                           postinc2	equ	0xFDE
  6329                           postdec2	equ	0xFDD
  6330                           fsr2h	equ	0xFDA
  6331                           fsr2l	equ	0xFD9
  6332                           status	equ	0xFD8
  6333                           
  6334 ;; *************** function _PortProperty_Valid *****************
  6335 ;; Defined at:
  6336 ;;		line 220 in file "Library/Types.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  pInput          2   15[BANK0 ] PTR struct PortProperty
  6339 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  6340 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
  6341 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
  6342 ;;		 -> PortC(10), PortF(10), NULL(0), 
  6343 ;;  pPinDrive       1   17[BANK0 ] enum E6469
  6344 ;;  pPin            1   18[BANK0 ] unsigned char 
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;  Errors         16   21[BANK0 ] const enum E6475[4][4]
  6347 ;;  Pair            1   37[BANK0 ] enum E6469
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  1    wreg      enum E6475
  6350 ;; Registers used:
  6351 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6357 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6358 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6359 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6360 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6361 ;;Total ram usage:       23 bytes
  6362 ;; Hardware stack levels used:    1
  6363 ;; Hardware stack levels required when called:   10
  6364 ;; This function calls:
  6365 ;;		_Word_GetPair
  6366 ;; This function is called by:
  6367 ;;		_Port_CheckPairType
  6368 ;;		_Port_SetPinType
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           	psect	text22
  6373  01176E                     __ptext22:
  6374                           	opt stack 0
  6375  01176E                     _PortProperty_Valid:
  6376                           	opt stack 17
  6377                           
  6378                           ;Types.c: 222: ePinDrive Pair;
  6379                           ;Types.c: 223: const ePinError Errors[4][4] =
  6380                           ;Types.c: 224: {
  6381                           ;Types.c: 226: { ePinErrorNone, ePinErrorCannotDriveHigh, ePinErrorCannotDriveLow, ePinE
      +                          rrorNone },
  6382                           ;Types.c: 227: { ePinErrorCannotDriveHigh, ePinErrorNone, ePinErrorCannotDriveHigh, ePin
      +                          ErrorNone },
  6383                           ;Types.c: 228: { ePinErrorCannotDriveLow, ePinErrorCannotDriveLow, ePinErrorNone, ePinEr
      +                          rorNone },
  6384                           ;Types.c: 229: { ePinErrorCannotDrive, ePinErrorCannotDrive, ePinErrorCannotDrive, ePinE
      +                          rrorNone }
  6385                           ;Types.c: 230: };
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;incstack = 0
  6389  01176E  0E5D               	movlw	low PortProperty_Valid@F6830
  6390  011770  6EF6               	movwf	tblptrl,c
  6391  011772                     	if	1	;There is more than 1 active tblptr byte
  6392  011772  0EFD               	movlw	high PortProperty_Valid@F6830
  6393  011774  6EF7               	movwf	tblptrh,c
  6394  011776                     	endif
  6395  011776                     	if	1	;There are 3 active tblptr bytes
  6396  011776  0E00               	movlw	low (PortProperty_Valid@F6830 shr (0+16))
  6397  011778  6EF8               	movwf	tblptru,c
  6398  01177A                     	endif
  6399  01177A  EE20  F0DD         	lfsr	2,PortProperty_Valid@Errors
  6400  01177E  0E0F               	movlw	15
  6401  011780                     u6350:
  6402  011780  0009               	tblrd		*+
  6403  011782  CFF5 FFDE          	movff	tablat,postinc2
  6404  011786  06E8               	decf	wreg,f,c
  6405  011788  E2FB               	bc	u6350
  6406                           
  6407                           ;Types.c: 232: Pair = (ePinDrive)Word_GetPair(&(pInput->mType), pPin);
  6408  01178A  C0D7  F0D4         	movff	PortProperty_Valid@pInput,Word_GetPair@pInput
  6409  01178E  C0D8  F0D5         	movff	PortProperty_Valid@pInput+1,Word_GetPair@pInput+1
  6410  011792  C0DA  F0D6         	movff	PortProperty_Valid@pPin,Word_GetPair@pPair
  6411  011796  EC56  F08E         	call	_Word_GetPair	;wreg free
  6412  01179A  0100               	movlb	0	; () banked
  6413  01179C  6FED               	movwf	PortProperty_Valid@Pair& (0+255),b
  6414                           
  6415                           ; BSR set to: 0
  6416                           ;Types.c: 234: if (pPinDrive < 4 && Pair < 4)
  6417  01179E  0E04               	movlw	4
  6418  0117A0  0100               	movlb	0	; () banked
  6419  0117A2  61D9               	cpfslt	PortProperty_Valid@pPinDrive& (0+255),b
  6420  0117A4  D020               	goto	l9615
  6421                           
  6422                           ; BSR set to: 0
  6423  0117A6  0E04               	movlw	4
  6424  0117A8  0100               	movlb	0	; () banked
  6425  0117AA  61ED               	cpfslt	PortProperty_Valid@Pair& (0+255),b
  6426  0117AC  D01C               	goto	l9615
  6427                           
  6428                           ; BSR set to: 0
  6429                           ;Types.c: 235: return Errors[pPinDrive][Pair];
  6430  0117AE  0100               	movlb	0	; () banked
  6431  0117B0  51D9               	movf	PortProperty_Valid@pPinDrive& (0+255),w,b
  6432  0117B2  0D04               	mullw	4
  6433  0117B4  0EDD               	movlw	low PortProperty_Valid@Errors
  6434  0117B6  0100               	movlb	0	; () banked
  6435  0117B8  6FDB               	movwf	??_PortProperty_Valid& (0+255),b
  6436  0117BA  0E00               	movlw	high PortProperty_Valid@Errors
  6437  0117BC  0100               	movlb	0	; () banked
  6438  0117BE  6FDC               	movwf	(??_PortProperty_Valid+1)& (0+255),b
  6439  0117C0  50F3               	movf	prodl,w,c
  6440  0117C2  0100               	movlb	0	; () banked
  6441  0117C4  27DB               	addwf	??_PortProperty_Valid& (0+255),f,b
  6442  0117C6  50F4               	movf	prodh,w,c
  6443  0117C8  0100               	movlb	0	; () banked
  6444  0117CA  23DC               	addwfc	(??_PortProperty_Valid+1)& (0+255),f,b
  6445  0117CC  0100               	movlb	0	; () banked
  6446  0117CE  51ED               	movf	PortProperty_Valid@Pair& (0+255),w,b
  6447  0117D0  0D01               	mullw	1
  6448  0117D2  50F3               	movf	prodl,w,c
  6449  0117D4  0100               	movlb	0	; () banked
  6450  0117D6  25DB               	addwf	??_PortProperty_Valid& (0+255),w,b
  6451  0117D8  6ED9               	movwf	fsr2l,c
  6452  0117DA  50F4               	movf	prodh,w,c
  6453  0117DC  0100               	movlb	0	; () banked
  6454  0117DE  21DC               	addwfc	(??_PortProperty_Valid+1)& (0+255),w,b
  6455  0117E0  6EDA               	movwf	fsr2h,c
  6456  0117E2  50DF               	movf	indf2,w,c
  6457                           
  6458                           ; BSR set to: 0
  6459  0117E4  0012               	return	
  6460  0117E6                     l9615:
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;Types.c: 237: return ePinErrorState;
  6464  0117E6  0E05               	movlw	5
  6465  0117E8  0012               	return	
  6466  0117EA                     __end_of_PortProperty_Valid:
  6467                           	opt stack 0
  6468                           tblptru	equ	0xFF8
  6469                           tblptrh	equ	0xFF7
  6470                           tblptrl	equ	0xFF6
  6471                           tablat	equ	0xFF5
  6472                           prodh	equ	0xFF4
  6473                           prodl	equ	0xFF3
  6474                           postinc0	equ	0xFEE
  6475                           wreg	equ	0xFE8
  6476                           postdec1	equ	0xFE5
  6477                           fsr1h	equ	0xFE2
  6478                           fsr1l	equ	0xFE1
  6479                           indf2	equ	0xFDF
  6480                           postinc2	equ	0xFDE
  6481                           postdec2	equ	0xFDD
  6482                           fsr2h	equ	0xFDA
  6483                           fsr2l	equ	0xFD9
  6484                           status	equ	0xFD8
  6485                           
  6486 ;; *************** function _LED_Set *****************
  6487 ;; Defined at:
  6488 ;;		line 33 in file "Library/LED.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;  pLED            1    wreg     enum E6739
  6491 ;;  pValue          1   20[BANK0 ] unsigned char 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;  pLED            1   21[BANK0 ] enum E6739
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  1    wreg      void 
  6496 ;; Registers used:
  6497 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6503 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;Total ram usage:        2 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; Hardware stack levels required when called:   11
  6510 ;; This function calls:
  6511 ;;		_Port_SetPin
  6512 ;; This function is called by:
  6513 ;;		_LED_Init
  6514 ;;		_SYSTEM_Initialize
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518                           	psect	text23
  6519  011B00                     __ptext23:
  6520                           	opt stack 0
  6521  011B00                     _LED_Set:
  6522                           	opt stack 16
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;incstack = 0
  6526                           ;LED_Set@pLED stored from wreg
  6527  011B00  0100               	movlb	0	; () banked
  6528  011B02  6FDD               	movwf	LED_Set@pLED& (0+255),b
  6529                           
  6530                           ;LED.c: 35: switch (pLED)
  6531  011B04  D01C               	goto	l9883
  6532  011B06                     l9877:
  6533                           
  6534                           ;LED.c: 38: Port_SetPin(&PortC, eP0, pValue);
  6535  011B06  0E93               	movlw	low _PortC
  6536  011B08  0100               	movlb	0	; () banked
  6537  011B0A  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6538  011B0C  0E00               	movlw	high _PortC
  6539  011B0E  0100               	movlb	0	; () banked
  6540  011B10  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6541  011B12  0E00               	movlw	0
  6542  011B14  0100               	movlb	0	; () banked
  6543  011B16  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6544  011B18  C0DC  F0DA         	movff	LED_Set@pValue,Port_SetPin@pValue
  6545  011B1C  ECA9  F088         	call	_Port_SetPin	;wreg free
  6546                           
  6547                           ;LED.c: 39: break;
  6548  011B20  0012               	return	
  6549  011B22                     l9879:
  6550                           
  6551                           ;LED.c: 41: Port_SetPin(&PortC, eP1, pValue);
  6552  011B22  0E93               	movlw	low _PortC
  6553  011B24  0100               	movlb	0	; () banked
  6554  011B26  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6555  011B28  0E00               	movlw	high _PortC
  6556  011B2A  0100               	movlb	0	; () banked
  6557  011B2C  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6558  011B2E  0E01               	movlw	1
  6559  011B30  0100               	movlb	0	; () banked
  6560  011B32  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6561  011B34  C0DC  F0DA         	movff	LED_Set@pValue,Port_SetPin@pValue
  6562  011B38  ECA9  F088         	call	_Port_SetPin	;wreg free
  6563                           
  6564                           ;LED.c: 43: }
  6565                           
  6566                           ;LED.c: 42: break;
  6567  011B3C  0012               	return	
  6568  011B3E                     l9883:
  6569  011B3E  0100               	movlb	0	; () banked
  6570  011B40  51DD               	movf	LED_Set@pLED& (0+255),w,b
  6571                           
  6572                           ; Switch size 1, requested type "space"
  6573                           ; Number of cases is 2, Range of values is 0 to 1
  6574                           ; switch strategies available:
  6575                           ; Name         Instructions Cycles
  6576                           ; simple_byte            7     4 (average)
  6577                           ;	Chosen strategy is simple_byte
  6578  011B42  0A00               	xorlw	0	; case 0
  6579  011B44  B4D8               	btfsc	status,2,c
  6580  011B46  D7DF               	goto	l9877
  6581  011B48  0A01               	xorlw	1	; case 1
  6582  011B4A  A4D8               	btfss	status,2,c
  6583  011B4C  0012               	return	
  6584  011B4E  D7E9               	goto	l9879
  6585  011B50                     __end_of_LED_Set:
  6586                           	opt stack 0
  6587                           tblptru	equ	0xFF8
  6588                           tblptrh	equ	0xFF7
  6589                           tblptrl	equ	0xFF6
  6590                           tablat	equ	0xFF5
  6591                           prodh	equ	0xFF4
  6592                           prodl	equ	0xFF3
  6593                           postinc0	equ	0xFEE
  6594                           wreg	equ	0xFE8
  6595                           postdec1	equ	0xFE5
  6596                           fsr1h	equ	0xFE2
  6597                           fsr1l	equ	0xFE1
  6598                           indf2	equ	0xFDF
  6599                           postinc2	equ	0xFDE
  6600                           postdec2	equ	0xFDD
  6601                           fsr2h	equ	0xFDA
  6602                           fsr2l	equ	0xFD9
  6603                           status	equ	0xFD8
  6604                           
  6605 ;; *************** function _MXK_Dequeue *****************
  6606 ;; Defined at:
  6607 ;;		line 153 in file "Library/MXK.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;		None
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;		None
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1    wreg      void 
  6614 ;; Registers used:
  6615 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6625 ;;Total ram usage:        0 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; Hardware stack levels required when called:   12
  6628 ;; This function calls:
  6629 ;;		Absolute function
  6630 ;;		_Motor_Step
  6631 ;; This function is called by:
  6632 ;;		_initialise
  6633 ;;		_main
  6634 ;;		_continuousMode
  6635 ;;		_nullMode
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           	psect	text24
  6640  011DD4                     __ptext24:
  6641                           	opt stack 0
  6642  011DD4                     _MXK_Dequeue:
  6643                           	opt stack 17
  6644                           
  6645                           ;MXK.c: 155: if (lQueue)
  6646                           
  6647                           ;incstack = 0
  6648  011DD4  5025               	movf	_lQueue,w,c	;volatile
  6649  011DD6  1026               	iorwf	_lQueue+1,w,c	;volatile
  6650  011DD8  1027               	iorwf	_lQueue+2,w,c	;volatile
  6651  011DDA  B4D8               	btfsc	status,2,c
  6652  011DDC  D00C               	goto	l11285
  6653                           
  6654                           ;MXK.c: 156: lQueue();
  6655  011DDE  D801               	call	u8518
  6656  011DE0  D00A               	goto	l11285
  6657  011DE2                     u8518:
  6658  011DE2  0005               	push	
  6659  011DE4  6EFA               	movwf	pclath,c
  6660  011DE6  5025               	movf	_lQueue,w,c	;volatile
  6661  011DE8  6EFD               	movwf	tosl,c
  6662  011DEA  5026               	movf	_lQueue+1,w,c	;volatile
  6663  011DEC  6EFE               	movwf	tosh,c
  6664  011DEE  5027               	movf	_lQueue+2,w,c	;volatile
  6665  011DF0  6EFF               	movwf	tosu,c
  6666  011DF2  50FA               	movf	pclath,w,c
  6667  011DF4  0012               	return		;indir
  6668  011DF6                     l11285:
  6669                           
  6670                           ;MXK.c: 157: lQueue = 0;
  6671  011DF6  0E00               	movlw	0
  6672  011DF8  6E25               	movwf	_lQueue,c	;volatile
  6673  011DFA  0E00               	movlw	0
  6674  011DFC  6E26               	movwf	_lQueue+1,c	;volatile
  6675  011DFE  0E00               	movlw	0
  6676  011E00  6E27               	movwf	_lQueue+2,c	;volatile
  6677  011E02  0012               	return		;funcret
  6678  011E04                     __end_of_MXK_Dequeue:
  6679                           	opt stack 0
  6680                           tosu	equ	0xFFF
  6681                           tosh	equ	0xFFE
  6682                           tosl	equ	0xFFD
  6683                           pclath	equ	0xFFA
  6684                           tblptru	equ	0xFF8
  6685                           tblptrh	equ	0xFF7
  6686                           tblptrl	equ	0xFF6
  6687                           tablat	equ	0xFF5
  6688                           prodh	equ	0xFF4
  6689                           prodl	equ	0xFF3
  6690                           postinc0	equ	0xFEE
  6691                           wreg	equ	0xFE8
  6692                           postdec1	equ	0xFE5
  6693                           fsr1h	equ	0xFE2
  6694                           fsr1l	equ	0xFE1
  6695                           indf2	equ	0xFDF
  6696                           postinc2	equ	0xFDE
  6697                           postdec2	equ	0xFDD
  6698                           fsr2h	equ	0xFDA
  6699                           fsr2l	equ	0xFD9
  6700                           status	equ	0xFD8
  6701                           
  6702 ;; *************** function _Motor_Step *****************
  6703 ;; Defined at:
  6704 ;;		line 75 in file "Library/Motor.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;		None
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;		None
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  1    wreg      void 
  6711 ;; Registers used:
  6712 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6720 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;Total ram usage:        2 bytes
  6723 ;; Hardware stack levels used:    1
  6724 ;; Hardware stack levels required when called:   11
  6725 ;; This function calls:
  6726 ;;		_MXK_Queue
  6727 ;;		_MXK_Release
  6728 ;;		_MXK_SwitchTo
  6729 ;;		_Port_SetPin
  6730 ;;		_Timer0_Restart
  6731 ;;		_Timer0_Stop
  6732 ;; This function is called by:
  6733 ;;		_Motor_Init
  6734 ;;		_MXK_Dequeue
  6735 ;;		_Timer0_ISR
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739                           	psect	text25
  6740  010E5A                     __ptext25:
  6741                           	opt stack 0
  6742  010E5A                     _Motor_Step:
  6743                           	opt stack 0
  6744                           
  6745                           ;Skip over the trampoline to the duplicate function for level 2
  6746  010E5A  B249               	btfsc	btemp,1,c
  6747  010E5C  EFBF  F087         	goto	i2_Motor_Step
  6748  010E60                     _Motor_Step$intlevel0:
  6749                           	opt stack 17
  6750                           
  6751                           ;Motor.c: 77: if (MXK_SwitchTo(lMotor->mAddress))
  6752                           
  6753                           ;incstack = 0
  6754  010E60  EE20 F004          	lfsr	2,4
  6755  010E64  502C               	movf	_lMotor,w,c
  6756  010E66  26D9               	addwf	fsr2l,f,c
  6757  010E68  502D               	movf	_lMotor+1,w,c
  6758  010E6A  22DA               	addwfc	fsr2h,f,c
  6759  010E6C  50DF               	movf	indf2,w,c
  6760  010E6E  EC15  F08E         	call	_MXK_SwitchTo
  6761  010E72  0900               	iorlw	0
  6762  010E74  B4D8               	btfsc	status,2,c
  6763  010E76  D07A               	goto	l10301
  6764                           
  6765                           ;Motor.c: 78: {
  6766                           ;Motor.c: 79: if (lMotor->mDelta != 0)
  6767  010E78  C02C  FFD9         	movff	_lMotor,fsr2l
  6768  010E7C  C02D  FFDA         	movff	_lMotor+1,fsr2h
  6769  010E80  50DE               	movf	postinc2,w,c
  6770  010E82  10DE               	iorwf	postinc2,w,c
  6771  010E84  B4D8               	btfsc	status,2,c
  6772  010E86  D06D               	goto	l10295
  6773                           
  6774                           ;Motor.c: 80: {
  6775                           ;Motor.c: 82: if (lMotor->mDelta > 0)
  6776  010E88  C02C  FFD9         	movff	_lMotor,fsr2l
  6777  010E8C  C02D  FFDA         	movff	_lMotor+1,fsr2h
  6778  010E90  0E01               	movlw	1
  6779  010E92  BEDB               	btfsc	plusw2,7,c
  6780  010E94  D026               	goto	l10279
  6781  010E96  0E01               	movlw	1
  6782  010E98  50DB               	movf	plusw2,w,c
  6783  010E9A  E103               	bnz	u7000
  6784  010E9C  04DE               	decf	postinc2,w,c
  6785  010E9E  A0D8               	btfss	status,0,c
  6786  010EA0  D020               	goto	l10279
  6787  010EA2                     u7000:
  6788                           
  6789                           ;Motor.c: 83: {
  6790                           ;Motor.c: 84: if (lMotor->mDelta != 32767)
  6791  010EA2  C02C  FFD9         	movff	_lMotor,fsr2l
  6792  010EA6  C02D  FFDA         	movff	_lMotor+1,fsr2h
  6793  010EAA  28DE               	incf	postinc2,w,c
  6794  010EAC  E104               	bnz	u7010
  6795  010EAE  0E7F               	movlw	127
  6796  010EB0  18DE               	xorwf	postinc2,w,c
  6797  010EB2  B4D8               	btfsc	status,2,c
  6798  010EB4  D007               	goto	l10277
  6799  010EB6                     u7010:
  6800                           
  6801                           ;Motor.c: 85: lMotor->mDelta --;
  6802  010EB6  C02C  FFD9         	movff	_lMotor,fsr2l
  6803  010EBA  C02D  FFDA         	movff	_lMotor+1,fsr2h
  6804  010EBE  06DE               	decf	postinc2,f,c
  6805  010EC0  0E00               	movlw	0
  6806  010EC2  5ADD               	subwfb	postdec2,f,c
  6807  010EC4                     l10277:
  6808                           
  6809                           ;Motor.c: 87: Port_SetPin(&PortE, eP0, 1);
  6810  010EC4  0E7F               	movlw	low _PortE
  6811  010EC6  0100               	movlb	0	; () banked
  6812  010EC8  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6813  010ECA  0E00               	movlw	high _PortE
  6814  010ECC  0100               	movlb	0	; () banked
  6815  010ECE  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6816  010ED0  0E00               	movlw	0
  6817  010ED2  0100               	movlb	0	; () banked
  6818  010ED4  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6819  010ED6  0E01               	movlw	1
  6820  010ED8  0100               	movlb	0	; () banked
  6821  010EDA  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  6822  010EDC  ECA9  F088         	call	_Port_SetPin	;wreg free
  6823                           
  6824                           ;Motor.c: 88: }
  6825  010EE0  D01F               	goto	l10285
  6826  010EE2                     l10279:
  6827                           
  6828                           ;Motor.c: 89: else
  6829                           ;Motor.c: 90: {
  6830                           ;Motor.c: 91: if (lMotor->mDelta != -32767)
  6831  010EE2  C02C  FFD9         	movff	_lMotor,fsr2l
  6832  010EE6  C02D  FFDA         	movff	_lMotor+1,fsr2h
  6833  010EEA  04DE               	decf	postinc2,w,c
  6834  010EEC  E104               	bnz	u7020
  6835  010EEE  0E80               	movlw	128
  6836  010EF0  18DE               	xorwf	postinc2,w,c
  6837  010EF2  B4D8               	btfsc	status,2,c
  6838  010EF4  D007               	goto	l10283
  6839  010EF6                     u7020:
  6840                           
  6841                           ;Motor.c: 92: lMotor->mDelta ++;
  6842  010EF6  C02C  FFD9         	movff	_lMotor,fsr2l
  6843  010EFA  C02D  FFDA         	movff	_lMotor+1,fsr2h
  6844  010EFE  2ADE               	incf	postinc2,f,c
  6845  010F00  0E00               	movlw	0
  6846  010F02  22DD               	addwfc	postdec2,f,c
  6847  010F04                     l10283:
  6848                           
  6849                           ;Motor.c: 94: Port_SetPin(&PortE, eP0, 0);
  6850  010F04  0E7F               	movlw	low _PortE
  6851  010F06  0100               	movlb	0	; () banked
  6852  010F08  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6853  010F0A  0E00               	movlw	high _PortE
  6854  010F0C  0100               	movlb	0	; () banked
  6855  010F0E  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6856  010F10  0E00               	movlw	0
  6857  010F12  0100               	movlb	0	; () banked
  6858  010F14  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6859  010F16  0E00               	movlw	0
  6860  010F18  0100               	movlb	0	; () banked
  6861  010F1A  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  6862  010F1C  ECA9  F088         	call	_Port_SetPin	;wreg free
  6863  010F20                     l10285:
  6864                           
  6865                           ;Motor.c: 95: }
  6866                           ;Motor.c: 98: Port_SetPin(&PortE, eP1, 1);
  6867  010F20  0E7F               	movlw	low _PortE
  6868  010F22  0100               	movlb	0	; () banked
  6869  010F24  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6870  010F26  0E00               	movlw	high _PortE
  6871  010F28  0100               	movlb	0	; () banked
  6872  010F2A  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6873  010F2C  0E01               	movlw	1
  6874  010F2E  0100               	movlb	0	; () banked
  6875  010F30  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6876  010F32  0E01               	movlw	1
  6877  010F34  0100               	movlb	0	; () banked
  6878  010F36  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  6879  010F38  ECA9  F088         	call	_Port_SetPin	;wreg free
  6880                           
  6881                           ;Motor.c: 99: Port_SetPin(&PortE, eP1, 0);
  6882  010F3C  0E7F               	movlw	low _PortE
  6883  010F3E  0100               	movlb	0	; () banked
  6884  010F40  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6885  010F42  0E00               	movlw	high _PortE
  6886  010F44  0100               	movlb	0	; () banked
  6887  010F46  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6888  010F48  0E01               	movlw	1
  6889  010F4A  0100               	movlb	0	; () banked
  6890  010F4C  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6891  010F4E  0E00               	movlw	0
  6892  010F50  0100               	movlb	0	; () banked
  6893  010F52  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  6894  010F54  ECA9  F088         	call	_Port_SetPin	;wreg free
  6895                           
  6896                           ;Motor.c: 101: MXK_Release();
  6897  010F58  EC96  F08F         	call	_MXK_Release	;wreg free
  6898                           
  6899                           ;Motor.c: 102: Timer0_Restart();
  6900  010F5C  ECB6  F08F         	call	_Timer0_Restart	;wreg free
  6901                           
  6902                           ;Motor.c: 103: return;
  6903  010F60  0012               	return	
  6904  010F62                     l10295:
  6905                           
  6906                           ;Motor.c: 104: }
  6907                           ;Motor.c: 105: MXK_Release();
  6908  010F62  EC96  F08F         	call	_MXK_Release	;wreg free
  6909                           
  6910                           ;Motor.c: 106: Timer0_Stop();
  6911  010F66  ECDA  F08F         	call	_Timer0_Stop	;wreg free
  6912                           
  6913                           ;Motor.c: 107: return;
  6914  010F6A  0012               	return	
  6915  010F6C                     l10301:
  6916                           
  6917                           ;Motor.c: 108: }
  6918                           ;Motor.c: 111: MXK_Queue(lStepFunction);
  6919  010F6C  C06B  F0C8         	movff	_lStepFunction,MXK_Queue@pCallback
  6920  010F70  C06C  F0C9         	movff	_lStepFunction+1,MXK_Queue@pCallback+1
  6921  010F74  C06D  F0CA         	movff	_lStepFunction+2,MXK_Queue@pCallback+2
  6922  010F78  ECA8  F08F         	call	_MXK_Queue	;wreg free
  6923  010F7C  0012               	return		;funcret
  6924  010F7E                     __end_of_Motor_Step:
  6925                           	opt stack 0
  6926                           tosu	equ	0xFFF
  6927                           tosh	equ	0xFFE
  6928                           tosl	equ	0xFFD
  6929                           pclath	equ	0xFFA
  6930                           tblptru	equ	0xFF8
  6931                           tblptrh	equ	0xFF7
  6932                           tblptrl	equ	0xFF6
  6933                           tablat	equ	0xFF5
  6934                           prodh	equ	0xFF4
  6935                           prodl	equ	0xFF3
  6936                           postinc0	equ	0xFEE
  6937                           wreg	equ	0xFE8
  6938                           postdec1	equ	0xFE5
  6939                           fsr1h	equ	0xFE2
  6940                           fsr1l	equ	0xFE1
  6941                           indf2	equ	0xFDF
  6942                           postinc2	equ	0xFDE
  6943                           postdec2	equ	0xFDD
  6944                           plusw2	equ	0xFDB
  6945                           fsr2h	equ	0xFDA
  6946                           fsr2l	equ	0xFD9
  6947                           status	equ	0xFD8
  6948                           
  6949 ;; *************** function _Timer0_Stop *****************
  6950 ;; Defined at:
  6951 ;;		line 89 in file "Library/Timer0.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;		None
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;		None
  6956 ;; Return value:  Size  Location     Type
  6957 ;;                  1    wreg      void 
  6958 ;; Registers used:
  6959 ;;		None
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6969 ;;Total ram usage:        0 bytes
  6970 ;; Hardware stack levels used:    1
  6971 ;; Hardware stack levels required when called:    7
  6972 ;; This function calls:
  6973 ;;		Nothing
  6974 ;; This function is called by:
  6975 ;;		_Motor_Step
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text26
  6980  011FB4                     __ptext26:
  6981                           	opt stack 0
  6982  011FB4                     _Timer0_Stop:
  6983                           	opt stack 20
  6984                           
  6985                           ;Timer0.c: 91: INTCONbits.TMR0IE = 0;
  6986                           
  6987                           ;incstack = 0
  6988  011FB4  9AF2               	bcf	intcon,5,c	;volatile
  6989                           
  6990                           ;Timer0.c: 92: INTCONbits.TMR0IF = 0;
  6991  011FB6  94F2               	bcf	intcon,2,c	;volatile
  6992  011FB8  0012               	return		;funcret
  6993  011FBA                     __end_of_Timer0_Stop:
  6994                           	opt stack 0
  6995                           tosu	equ	0xFFF
  6996                           tosh	equ	0xFFE
  6997                           tosl	equ	0xFFD
  6998                           pclath	equ	0xFFA
  6999                           tblptru	equ	0xFF8
  7000                           tblptrh	equ	0xFF7
  7001                           tblptrl	equ	0xFF6
  7002                           tablat	equ	0xFF5
  7003                           prodh	equ	0xFF4
  7004                           prodl	equ	0xFF3
  7005                           intcon	equ	0xFF2
  7006                           postinc0	equ	0xFEE
  7007                           wreg	equ	0xFE8
  7008                           postdec1	equ	0xFE5
  7009                           fsr1h	equ	0xFE2
  7010                           fsr1l	equ	0xFE1
  7011                           indf2	equ	0xFDF
  7012                           postinc2	equ	0xFDE
  7013                           postdec2	equ	0xFDD
  7014                           plusw2	equ	0xFDB
  7015                           fsr2h	equ	0xFDA
  7016                           fsr2l	equ	0xFD9
  7017                           status	equ	0xFD8
  7018                           
  7019 ;; *************** function _Timer0_Restart *****************
  7020 ;; Defined at:
  7021 ;;		line 83 in file "Library/Timer0.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;		None
  7024 ;; Auto vars:     Size  Location     Type
  7025 ;;		None
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  1    wreg      void 
  7028 ;; Registers used:
  7029 ;;		None
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;Total ram usage:        0 bytes
  7040 ;; Hardware stack levels used:    1
  7041 ;; Hardware stack levels required when called:    7
  7042 ;; This function calls:
  7043 ;;		Nothing
  7044 ;; This function is called by:
  7045 ;;		_Motor_Step
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049                           	psect	text27
  7050  011F6C                     __ptext27:
  7051                           	opt stack 0
  7052  011F6C                     _Timer0_Restart:
  7053                           	opt stack 20
  7054                           
  7055                           ;Timer0.c: 85: TMR0 = COUNTER;
  7056                           
  7057                           ;incstack = 0
  7058  011F6C  C02A  FFD6         	movff	_COUNTER,4054	;volatile
  7059  011F70  C02B  FFD7         	movff	_COUNTER+1,4055	;volatile
  7060                           
  7061                           ;Timer0.c: 87: INTCONbits.TMR0IE = 1;
  7062  011F74  8AF2               	bsf	intcon,5,c	;volatile
  7063  011F76  0012               	return		;funcret
  7064  011F78                     __end_of_Timer0_Restart:
  7065                           	opt stack 0
  7066                           tosu	equ	0xFFF
  7067                           tosh	equ	0xFFE
  7068                           tosl	equ	0xFFD
  7069                           pclath	equ	0xFFA
  7070                           tblptru	equ	0xFF8
  7071                           tblptrh	equ	0xFF7
  7072                           tblptrl	equ	0xFF6
  7073                           tablat	equ	0xFF5
  7074                           prodh	equ	0xFF4
  7075                           prodl	equ	0xFF3
  7076                           intcon	equ	0xFF2
  7077                           postinc0	equ	0xFEE
  7078                           wreg	equ	0xFE8
  7079                           postdec1	equ	0xFE5
  7080                           fsr1h	equ	0xFE2
  7081                           fsr1l	equ	0xFE1
  7082                           indf2	equ	0xFDF
  7083                           postinc2	equ	0xFDE
  7084                           postdec2	equ	0xFDD
  7085                           plusw2	equ	0xFDB
  7086                           fsr2h	equ	0xFDA
  7087                           fsr2l	equ	0xFD9
  7088                           status	equ	0xFD8
  7089                           
  7090 ;; *************** function _Port_SetPin *****************
  7091 ;; Defined at:
  7092 ;;		line 247 in file "Library/Port.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  pInput          2   15[BANK0 ] const PTR struct Port
  7095 ;;		 -> PortG(10), PortE(10), PortC(10), PortF(10), 
  7096 ;;  pPin            1   17[BANK0 ] enum E6750
  7097 ;;  pValue          1   18[BANK0 ] unsigned char 
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;  Type            1   19[BANK0 ] enum E6795
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  1    wreg      void 
  7102 ;; Registers used:
  7103 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7109 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7112 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7113 ;;Total ram usage:        5 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:   10
  7116 ;; This function calls:
  7117 ;;		_Byte_SetBit
  7118 ;;		_Word_GetPair
  7119 ;; This function is called by:
  7120 ;;		_LED_Set
  7121 ;;		_Motor_Init
  7122 ;;		_Motor_Step
  7123 ;;		_MXK_Init
  7124 ;;		_Reset_Low
  7125 ;;		_Reset_High
  7126 ;;		_Port_TogglePin
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text28
  7131  011152                     __ptext28:
  7132                           	opt stack 0
  7133  011152                     _Port_SetPin:
  7134                           	opt stack 18
  7135                           
  7136                           ;Port.c: 249: ePinType Type = (ePinType)Word_GetPair(&pInput->mType, (UINT8)pPin);
  7137                           
  7138                           ;incstack = 0
  7139  011152  0E08               	movlw	8
  7140  011154  0100               	movlb	0	; () banked
  7141  011156  25D7               	addwf	Port_SetPin@pInput& (0+255),w,b
  7142  011158  0100               	movlb	0	; () banked
  7143  01115A  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  7144  01115C  0E00               	movlw	0
  7145  01115E  0100               	movlb	0	; () banked
  7146  011160  21D8               	addwfc	(Port_SetPin@pInput+1)& (0+255),w,b
  7147  011162  0100               	movlb	0	; () banked
  7148  011164  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  7149  011166  C0D9  F0D6         	movff	Port_SetPin@pPin,Word_GetPair@pPair
  7150  01116A  EC56  F08E         	call	_Word_GetPair	;wreg free
  7151  01116E  0100               	movlb	0	; () banked
  7152  011170  6FDB               	movwf	Port_SetPin@Type& (0+255),b
  7153                           
  7154                           ;Port.c: 250: switch (Type)
  7155  011172  D042               	goto	l9801
  7156  011174                     l9787:
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;Port.c: 256: pValue &= 1;
  7160  011174  0E01               	movlw	1
  7161  011176  0100               	movlb	0	; () banked
  7162  011178  17DA               	andwf	Port_SetPin@pValue& (0+255),f,b
  7163                           
  7164                           ; BSR set to: 0
  7165                           ;Port.c: 257: Byte_SetBit(pInput->mDirection, pPin, pValue);
  7166  01117A  0100               	movlb	0	; () banked
  7167  01117C  EE20 F002          	lfsr	2,2
  7168  011180  51D7               	movf	Port_SetPin@pInput& (0+255),w,b
  7169  011182  26D9               	addwf	fsr2l,f,c
  7170  011184  51D8               	movf	(Port_SetPin@pInput+1)& (0+255),w,b
  7171  011186  22DA               	addwfc	fsr2h,f,c
  7172  011188  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  7173  01118C  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  7174  011190  C0D9  F0CA         	movff	Port_SetPin@pPin,Byte_SetBit@pBit
  7175  011194  C0DA  F0CB         	movff	Port_SetPin@pValue,Byte_SetBit@pValue
  7176  011198  EC9A  F08C         	call	_Byte_SetBit	;wreg free
  7177                           
  7178                           ;Port.c: 258: break;
  7179  01119C  0012               	return	
  7180  01119E                     l9791:
  7181                           
  7182                           ;Port.c: 261: pValue &= 1;
  7183  01119E  0E01               	movlw	1
  7184  0111A0  0100               	movlb	0	; () banked
  7185  0111A2  17DA               	andwf	Port_SetPin@pValue& (0+255),f,b
  7186                           
  7187                           ;Port.c: 262: pValue ^= 1;
  7188  0111A4  0E01               	movlw	1
  7189  0111A6  0100               	movlb	0	; () banked
  7190  0111A8  1BDA               	xorwf	Port_SetPin@pValue& (0+255),f,b
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;Port.c: 263: Byte_SetBit(pInput->mDirection, pPin, pValue);
  7194  0111AA  0100               	movlb	0	; () banked
  7195  0111AC  EE20 F002          	lfsr	2,2
  7196  0111B0  51D7               	movf	Port_SetPin@pInput& (0+255),w,b
  7197  0111B2  26D9               	addwf	fsr2l,f,c
  7198  0111B4  51D8               	movf	(Port_SetPin@pInput+1)& (0+255),w,b
  7199  0111B6  22DA               	addwfc	fsr2h,f,c
  7200  0111B8  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  7201  0111BC  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  7202  0111C0  C0D9  F0CA         	movff	Port_SetPin@pPin,Byte_SetBit@pBit
  7203  0111C4  C0DA  F0CB         	movff	Port_SetPin@pValue,Byte_SetBit@pValue
  7204  0111C8  EC9A  F08C         	call	_Byte_SetBit	;wreg free
  7205                           
  7206                           ;Port.c: 264: break;
  7207  0111CC  0012               	return	
  7208  0111CE                     l9795:
  7209                           
  7210                           ;Port.c: 266: pValue &= 1;
  7211  0111CE  0E01               	movlw	1
  7212  0111D0  0100               	movlb	0	; () banked
  7213  0111D2  17DA               	andwf	Port_SetPin@pValue& (0+255),f,b
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;Port.c: 267: Byte_SetBit(pInput->mOutput, pPin, pValue);
  7217  0111D4  0100               	movlb	0	; () banked
  7218  0111D6  EE20 F004          	lfsr	2,4
  7219  0111DA  51D7               	movf	Port_SetPin@pInput& (0+255),w,b
  7220  0111DC  26D9               	addwf	fsr2l,f,c
  7221  0111DE  51D8               	movf	(Port_SetPin@pInput+1)& (0+255),w,b
  7222  0111E0  22DA               	addwfc	fsr2h,f,c
  7223  0111E2  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  7224  0111E6  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  7225  0111EA  C0D9  F0CA         	movff	Port_SetPin@pPin,Byte_SetBit@pBit
  7226  0111EE  C0DA  F0CB         	movff	Port_SetPin@pValue,Byte_SetBit@pValue
  7227  0111F2  EC9A  F08C         	call	_Byte_SetBit	;wreg free
  7228                           
  7229                           ;Port.c: 269: }
  7230                           
  7231                           ;Port.c: 268: break;
  7232  0111F6  0012               	return	
  7233  0111F8                     l9801:
  7234  0111F8  0100               	movlb	0	; () banked
  7235  0111FA  51DB               	movf	Port_SetPin@Type& (0+255),w,b
  7236                           
  7237                           ; Switch size 1, requested type "space"
  7238                           ; Number of cases is 4, Range of values is 0 to 3
  7239                           ; switch strategies available:
  7240                           ; Name         Instructions Cycles
  7241                           ; simple_byte           13     7 (average)
  7242                           ;	Chosen strategy is simple_byte
  7243  0111FC  0A00               	xorlw	0	; case 0
  7244  0111FE  B4D8               	btfsc	status,2,c
  7245  011200  0012               	return	
  7246  011202  0A01               	xorlw	1	; case 1
  7247  011204  B4D8               	btfsc	status,2,c
  7248  011206  D7B6               	goto	l9787
  7249  011208  0A03               	xorlw	3	; case 2
  7250  01120A  B4D8               	btfsc	status,2,c
  7251  01120C  D7C8               	goto	l9791
  7252  01120E  0A01               	xorlw	1	; case 3
  7253  011210  A4D8               	btfss	status,2,c
  7254  011212  0012               	return	
  7255  011214  D7DC               	goto	l9795
  7256  011216                     __end_of_Port_SetPin:
  7257                           	opt stack 0
  7258                           tosu	equ	0xFFF
  7259                           tosh	equ	0xFFE
  7260                           tosl	equ	0xFFD
  7261                           pclath	equ	0xFFA
  7262                           tblptru	equ	0xFF8
  7263                           tblptrh	equ	0xFF7
  7264                           tblptrl	equ	0xFF6
  7265                           tablat	equ	0xFF5
  7266                           prodh	equ	0xFF4
  7267                           prodl	equ	0xFF3
  7268                           intcon	equ	0xFF2
  7269                           postinc0	equ	0xFEE
  7270                           wreg	equ	0xFE8
  7271                           postdec1	equ	0xFE5
  7272                           fsr1h	equ	0xFE2
  7273                           fsr1l	equ	0xFE1
  7274                           indf2	equ	0xFDF
  7275                           postinc2	equ	0xFDE
  7276                           postdec2	equ	0xFDD
  7277                           plusw2	equ	0xFDB
  7278                           fsr2h	equ	0xFDA
  7279                           fsr2l	equ	0xFD9
  7280                           status	equ	0xFD8
  7281                           
  7282 ;; *************** function _Word_GetPair *****************
  7283 ;; Defined at:
  7284 ;;		line 156 in file "Library/Types.c"
  7285 ;; Parameters:    Size  Location     Type
  7286 ;;  pInput          2   12[BANK0 ] PTR struct Word
  7287 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  7288 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
  7289 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
  7290 ;;		 -> PortC(10), PortF(10), NULL(0), 
  7291 ;;  pPair           1   14[BANK0 ] unsigned char 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;		None
  7294 ;; Return value:  Size  Location     Type
  7295 ;;                  1    wreg      unsigned char 
  7296 ;; Registers used:
  7297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7298 ;; Tracked objects:
  7299 ;;		On entry : 0/0
  7300 ;;		On exit  : 0/0
  7301 ;;		Unchanged: 0/0
  7302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7303 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7306 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7307 ;;Total ram usage:        3 bytes
  7308 ;; Hardware stack levels used:    1
  7309 ;; Hardware stack levels required when called:    9
  7310 ;; This function calls:
  7311 ;;		_Byte_GetPair
  7312 ;; This function is called by:
  7313 ;;		_Port_Init
  7314 ;;		_Port_SetPin
  7315 ;;		_Port_Set
  7316 ;;		_PortProperty_Valid
  7317 ;;		_Port_SetPair
  7318 ;;		_Port_SetQuad
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text29
  7323  011CAC                     __ptext29:
  7324                           	opt stack 0
  7325  011CAC                     _Word_GetPair:
  7326                           	opt stack 17
  7327                           
  7328                           ;Types.c: 158: if (pPair >= 4)
  7329                           
  7330                           ;incstack = 0
  7331  011CAC  0E03               	movlw	3
  7332  011CAE  0100               	movlb	0	; () banked
  7333  011CB0  65D6               	cpfsgt	Word_GetPair@pPair& (0+255),b
  7334  011CB2  D012               	goto	l9589
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;Types.c: 159: return Byte_GetPair(&(pInput->MS_Byte), pPair - 4);
  7338  011CB4  0E01               	movlw	1
  7339  011CB6  0100               	movlb	0	; () banked
  7340  011CB8  25D4               	addwf	Word_GetPair@pInput& (0+255),w,b
  7341  011CBA  0100               	movlb	0	; () banked
  7342  011CBC  6FD1               	movwf	Byte_GetPair@pInput& (0+255),b
  7343  011CBE  0E00               	movlw	0
  7344  011CC0  0100               	movlb	0	; () banked
  7345  011CC2  21D5               	addwfc	(Word_GetPair@pInput+1)& (0+255),w,b
  7346  011CC4  0100               	movlb	0	; () banked
  7347  011CC6  6FD2               	movwf	(Byte_GetPair@pInput+1)& (0+255),b
  7348  011CC8  0100               	movlb	0	; () banked
  7349  011CCA  51D6               	movf	Word_GetPair@pPair& (0+255),w,b
  7350  011CCC  0FFC               	addlw	252
  7351  011CCE  0100               	movlb	0	; () banked
  7352  011CD0  6FD3               	movwf	Byte_GetPair@pPair& (0+255),b
  7353  011CD2  EC7A  F08F         	call	_Byte_GetPair	;wreg free
  7354  011CD6  0012               	return	
  7355  011CD8                     l9589:
  7356                           
  7357                           ;Types.c: 160: else
  7358                           ;Types.c: 161: return Byte_GetPair(&(pInput->LS_Byte), pPair);
  7359  011CD8  C0D4  F0D1         	movff	Word_GetPair@pInput,Byte_GetPair@pInput
  7360  011CDC  C0D5  F0D2         	movff	Word_GetPair@pInput+1,Byte_GetPair@pInput+1
  7361  011CE0  C0D6  F0D3         	movff	Word_GetPair@pPair,Byte_GetPair@pPair
  7362  011CE4  EC7A  F08F         	call	_Byte_GetPair	;wreg free
  7363  011CE8  0012               	return	
  7364  011CEA                     __end_of_Word_GetPair:
  7365                           	opt stack 0
  7366                           tosu	equ	0xFFF
  7367                           tosh	equ	0xFFE
  7368                           tosl	equ	0xFFD
  7369                           pclath	equ	0xFFA
  7370                           tblptru	equ	0xFF8
  7371                           tblptrh	equ	0xFF7
  7372                           tblptrl	equ	0xFF6
  7373                           tablat	equ	0xFF5
  7374                           prodh	equ	0xFF4
  7375                           prodl	equ	0xFF3
  7376                           intcon	equ	0xFF2
  7377                           postinc0	equ	0xFEE
  7378                           wreg	equ	0xFE8
  7379                           postdec1	equ	0xFE5
  7380                           fsr1h	equ	0xFE2
  7381                           fsr1l	equ	0xFE1
  7382                           indf2	equ	0xFDF
  7383                           postinc2	equ	0xFDE
  7384                           postdec2	equ	0xFDD
  7385                           plusw2	equ	0xFDB
  7386                           fsr2h	equ	0xFDA
  7387                           fsr2l	equ	0xFD9
  7388                           status	equ	0xFD8
  7389                           
  7390 ;; *************** function _Byte_GetPair *****************
  7391 ;; Defined at:
  7392 ;;		line 87 in file "Library/Types.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;  pInput          2    9[BANK0 ] PTR struct Byte
  7395 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
  7396 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
  7397 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
  7398 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
  7399 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
  7400 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
  7401 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
  7402 ;;		 -> NULL(0), 
  7403 ;;  pPair           1   11[BANK0 ] unsigned char 
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;		None
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  1    wreg      unsigned char 
  7408 ;; Registers used:
  7409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7415 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7418 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7419 ;;Total ram usage:        3 bytes
  7420 ;; Hardware stack levels used:    1
  7421 ;; Hardware stack levels required when called:    8
  7422 ;; This function calls:
  7423 ;;		_Byte_GetZone
  7424 ;; This function is called by:
  7425 ;;		_Word_GetPair
  7426 ;; This function uses a non-reentrant model
  7427 ;;
  7428                           
  7429                           	psect	text30
  7430  011EF4                     __ptext30:
  7431                           	opt stack 0
  7432  011EF4                     _Byte_GetPair:
  7433                           	opt stack 17
  7434                           
  7435                           ;Types.c: 89: return Byte_GetZone(pInput, 4, pPair, 2);
  7436                           
  7437                           ;incstack = 0
  7438  011EF4  C0D1  F0C8         	movff	Byte_GetPair@pInput,Byte_GetZone@pInput
  7439  011EF8  C0D2  F0C9         	movff	Byte_GetPair@pInput+1,Byte_GetZone@pInput+1
  7440  011EFC  0E04               	movlw	4
  7441  011EFE  0100               	movlb	0	; () banked
  7442  011F00  6FCA               	movwf	Byte_GetZone@pMax& (0+255),b
  7443  011F02  C0D3  F0CB         	movff	Byte_GetPair@pPair,Byte_GetZone@pChunk
  7444  011F06  0E02               	movlw	2
  7445  011F08  0100               	movlb	0	; () banked
  7446  011F0A  6FCC               	movwf	Byte_GetZone@pChunkSize& (0+255),b
  7447  011F0C  EC69  F08B         	call	_Byte_GetZone	;wreg free
  7448  011F10  0012               	return	
  7449  011F12                     __end_of_Byte_GetPair:
  7450                           	opt stack 0
  7451                           tosu	equ	0xFFF
  7452                           tosh	equ	0xFFE
  7453                           tosl	equ	0xFFD
  7454                           pclath	equ	0xFFA
  7455                           tblptru	equ	0xFF8
  7456                           tblptrh	equ	0xFF7
  7457                           tblptrl	equ	0xFF6
  7458                           tablat	equ	0xFF5
  7459                           prodh	equ	0xFF4
  7460                           prodl	equ	0xFF3
  7461                           intcon	equ	0xFF2
  7462                           postinc0	equ	0xFEE
  7463                           wreg	equ	0xFE8
  7464                           postdec1	equ	0xFE5
  7465                           fsr1h	equ	0xFE2
  7466                           fsr1l	equ	0xFE1
  7467                           indf2	equ	0xFDF
  7468                           postinc2	equ	0xFDE
  7469                           postdec2	equ	0xFDD
  7470                           plusw2	equ	0xFDB
  7471                           fsr2h	equ	0xFDA
  7472                           fsr2l	equ	0xFD9
  7473                           status	equ	0xFD8
  7474                           
  7475 ;; *************** function _Byte_GetZone *****************
  7476 ;; Defined at:
  7477 ;;		line 64 in file "Library/Types.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  pInput          2    0[BANK0 ] PTR struct Byte
  7480 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
  7481 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
  7482 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
  7483 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
  7484 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
  7485 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
  7486 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
  7487 ;;		 -> NULL(0), 
  7488 ;;  pMax            1    2[BANK0 ] unsigned char 
  7489 ;;  pChunk          1    3[BANK0 ] unsigned char 
  7490 ;;  pChunkSize      1    4[BANK0 ] unsigned char 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  Output          1    8[BANK0 ] unsigned char 
  7493 ;;  Offset          1    7[BANK0 ] unsigned char 
  7494 ;;  MASK            1    6[BANK0 ] unsigned char 
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  1    wreg      unsigned char 
  7497 ;; Registers used:
  7498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7504 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7505 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7506 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7507 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7508 ;;Total ram usage:        9 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:    7
  7511 ;; This function calls:
  7512 ;;		Nothing
  7513 ;; This function is called by:
  7514 ;;		_Byte_GetPair
  7515 ;;		_Byte_GetTriple
  7516 ;;		_Byte_GetQuad
  7517 ;; This function uses a non-reentrant model
  7518 ;;
  7519                           
  7520                           	psect	text31
  7521  0116D2                     __ptext31:
  7522                           	opt stack 0
  7523  0116D2                     _Byte_GetZone:
  7524                           	opt stack 17
  7525                           
  7526                           ;Types.c: 66: UINT8 Output = pInput->mBits;
  7527                           
  7528                           ;incstack = 0
  7529  0116D2  C0C8  FFF6         	movff	Byte_GetZone@pInput,tblptrl
  7530  0116D6  C0C9  FFF7         	movff	Byte_GetZone@pInput+1,tblptrh
  7531  0116DA  0E00               	movlw	low (__mediumconst shr (0+16))
  7532  0116DC  6EF8               	movwf	tblptru,c
  7533  0116DE  0E0F               	movlw	(high __ramtop+-1)
  7534  0116E0  64F7               	cpfsgt	tblptrh,c
  7535  0116E2  D003               	bra	u6317
  7536  0116E4  0008               	tblrd		*
  7537  0116E6  50F5               	movf	tablat,w,c
  7538  0116E8  D005               	bra	u6310
  7539  0116EA                     u6317:
  7540  0116EA  CFF6 FFE9          	movff	tblptrl,fsr0l
  7541  0116EE  CFF7 FFEA          	movff	tblptrh,fsr0h
  7542  0116F2  50EF               	movf	indf0,w,c
  7543  0116F4                     u6310:
  7544  0116F4  0100               	movlb	0	; () banked
  7545  0116F6  6FD0               	movwf	Byte_GetZone@Output& (0+255),b
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;Types.c: 67: UINT8 MASK = MASKS[pChunkSize];
  7549  0116F8  0100               	movlb	0	; () banked
  7550  0116FA  51CC               	movf	Byte_GetZone@pChunkSize& (0+255),w,b
  7551  0116FC  0D01               	mullw	1
  7552  0116FE  0E77               	movlw	low _MASKS
  7553  011700  24F3               	addwf	prodl,w,c
  7554  011702  6EF6               	movwf	tblptrl,c
  7555  011704  0EFD               	movlw	high _MASKS
  7556  011706  20F4               	addwfc	prodh,w,c
  7557  011708  6EF7               	movwf	tblptrh,c
  7558  01170A                     	if	1	;There are 3 active tblptr bytes
  7559  01170A  6AF8               	clrf	tblptru,c
  7560  01170C  0E00               	movlw	low (__mediumconst shr (0+16))
  7561  01170E  22F8               	addwfc	tblptru,f,c
  7562  011710                     	endif
  7563  011710  0008               	tblrd		*
  7564  011712  CFF5 F0CE          	movff	tablat,Byte_GetZone@MASK
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;Types.c: 68: UINT8 Offset = 0;
  7568  011716  0E00               	movlw	0
  7569  011718  0100               	movlb	0	; () banked
  7570  01171A  6FCF               	movwf	Byte_GetZone@Offset& (0+255),b
  7571                           
  7572                           ;Types.c: 70: while (pChunk >= pMax)
  7573  01171C  D006               	goto	l9557
  7574  01171E                     l9553:
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;Types.c: 71: {
  7578                           ;Types.c: 72: pChunk -= pMax;
  7579  01171E  0100               	movlb	0	; () banked
  7580  011720  51CA               	movf	Byte_GetZone@pMax& (0+255),w,b
  7581  011722  0100               	movlb	0	; () banked
  7582  011724  5FCB               	subwf	Byte_GetZone@pChunk& (0+255),f,b
  7583                           
  7584                           ; BSR set to: 0
  7585                           ;Types.c: 73: Offset += 1;
  7586  011726  0100               	movlb	0	; () banked
  7587  011728  2BCF               	incf	Byte_GetZone@Offset& (0+255),f,b
  7588  01172A                     l9557:
  7589                           
  7590                           ; BSR set to: 0
  7591  01172A  0100               	movlb	0	; () banked
  7592  01172C  51CA               	movf	Byte_GetZone@pMax& (0+255),w,b
  7593  01172E  0100               	movlb	0	; () banked
  7594  011730  5DCB               	subwf	Byte_GetZone@pChunk& (0+255),w,b
  7595  011732  B0D8               	btfsc	status,0,c
  7596  011734  D7F4               	goto	l9553
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;Types.c: 74: }
  7600                           ;Types.c: 75: pChunk *= pChunkSize;
  7601                           
  7602                           ; BSR set to: 0
  7603  011736  0100               	movlb	0	; () banked
  7604  011738  51CC               	movf	Byte_GetZone@pChunkSize& (0+255),w,b
  7605  01173A  0100               	movlb	0	; () banked
  7606  01173C  03CB               	mulwf	Byte_GetZone@pChunk& (0+255),b
  7607  01173E  50F3               	movf	prodl,w,c
  7608  011740  6FCB               	movwf	Byte_GetZone@pChunk& (0+255),b
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;Types.c: 76: pChunk += Offset;
  7612  011742  0100               	movlb	0	; () banked
  7613  011744  51CF               	movf	Byte_GetZone@Offset& (0+255),w,b
  7614  011746  0100               	movlb	0	; () banked
  7615  011748  27CB               	addwf	Byte_GetZone@pChunk& (0+255),f,b
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;Types.c: 78: Output >>= pChunk;
  7619  01174A  0100               	movlb	0	; () banked
  7620  01174C  29CB               	incf	Byte_GetZone@pChunk& (0+255),w,b
  7621  01174E  0100               	movlb	0	; () banked
  7622  011750  6FCD               	movwf	??_Byte_GetZone& (0+255),b
  7623  011752  D003               	goto	u6330
  7624  011754                     u6335:
  7625  011754  0100               	movlb	0	; () banked
  7626  011756  90D8               	bcf	status,0,c
  7627  011758  33D0               	rrcf	Byte_GetZone@Output& (0+255),f,b
  7628  01175A                     u6330:
  7629  01175A  0100               	movlb	0	; () banked
  7630  01175C  2FCD               	decfsz	??_Byte_GetZone& (0+255),f,b
  7631  01175E  D7FA               	goto	u6335
  7632                           
  7633                           ;Types.c: 79: Output &= MASK;
  7634  011760  0100               	movlb	0	; () banked
  7635  011762  51CE               	movf	Byte_GetZone@MASK& (0+255),w,b
  7636  011764  0100               	movlb	0	; () banked
  7637  011766  17D0               	andwf	Byte_GetZone@Output& (0+255),f,b
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;Types.c: 80: return Output;
  7641  011768  0100               	movlb	0	; () banked
  7642  01176A  51D0               	movf	Byte_GetZone@Output& (0+255),w,b
  7643  01176C  0012               	return	
  7644  01176E                     __end_of_Byte_GetZone:
  7645                           	opt stack 0
  7646                           tosu	equ	0xFFF
  7647                           tosh	equ	0xFFE
  7648                           tosl	equ	0xFFD
  7649                           pclath	equ	0xFFA
  7650                           tblptru	equ	0xFF8
  7651                           tblptrh	equ	0xFF7
  7652                           tblptrl	equ	0xFF6
  7653                           tablat	equ	0xFF5
  7654                           prodh	equ	0xFF4
  7655                           prodl	equ	0xFF3
  7656                           intcon	equ	0xFF2
  7657                           indf0	equ	0xFEF
  7658                           postinc0	equ	0xFEE
  7659                           fsr0h	equ	0xFEA
  7660                           fsr0l	equ	0xFE9
  7661                           wreg	equ	0xFE8
  7662                           postdec1	equ	0xFE5
  7663                           fsr1h	equ	0xFE2
  7664                           fsr1l	equ	0xFE1
  7665                           indf2	equ	0xFDF
  7666                           postinc2	equ	0xFDE
  7667                           postdec2	equ	0xFDD
  7668                           plusw2	equ	0xFDB
  7669                           fsr2h	equ	0xFDA
  7670                           fsr2l	equ	0xFD9
  7671                           status	equ	0xFD8
  7672                           
  7673 ;; *************** function _Byte_SetBit *****************
  7674 ;; Defined at:
  7675 ;;		line 32 in file "Library/Types.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;  pInput          2    0[BANK0 ] PTR struct Byte
  7678 ;;		 -> SSP2CON2(1), SSP1CON2(1), SSP2CON1(1), SSP2STAT(1), 
  7679 ;;		 -> SSP1CON1(1), SSP1STAT(1), TRISG(1), TRISF(1), 
  7680 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
  7681 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
  7682 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
  7683 ;;		 -> NULL(0), 
  7684 ;;  pBit            1    2[BANK0 ] unsigned char 
  7685 ;;  pValue          1    3[BANK0 ] unsigned char 
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;		None
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  1    wreg      void 
  7690 ;; Registers used:
  7691 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7697 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7699 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7700 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7701 ;;Total ram usage:        7 bytes
  7702 ;; Hardware stack levels used:    1
  7703 ;; Hardware stack levels required when called:    7
  7704 ;; This function calls:
  7705 ;;		Nothing
  7706 ;; This function is called by:
  7707 ;;		_Port_SetPinType
  7708 ;;		_Port_SetPin
  7709 ;;		_SPI_Init
  7710 ;;		_SPI_MinSpeed
  7711 ;;		_SPI_MaxSpeed
  7712 ;;		_Word_SetBit
  7713 ;;		_I2C_Init
  7714 ;; This function uses a non-reentrant model
  7715 ;;
  7716                           
  7717                           	psect	text32
  7718  011934                     __ptext32:
  7719                           	opt stack 0
  7720  011934                     _Byte_SetBit:
  7721                           	opt stack 20
  7722                           
  7723                           ;Types.c: 34: pValue &= 1;
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;incstack = 0
  7727  011934  0E01               	movlw	1
  7728  011936  0100               	movlb	0	; () banked
  7729  011938  17CB               	andwf	Byte_SetBit@pValue& (0+255),f,b
  7730                           
  7731                           ; BSR set to: 0
  7732                           ;Types.c: 35: pInput->mBits &= ~(1 << pBit);
  7733  01193A  C0CA  F0CC         	movff	Byte_SetBit@pBit,??_Byte_SetBit
  7734  01193E  0E01               	movlw	1
  7735  011940  0100               	movlb	0	; () banked
  7736  011942  6FCD               	movwf	(??_Byte_SetBit+1)& (0+255),b
  7737  011944  0100               	movlb	0	; () banked
  7738  011946  2BCC               	incf	??_Byte_SetBit& (0+255),f,b
  7739  011948  D003               	goto	u6574
  7740  01194A                     u6575:
  7741  01194A  0100               	movlb	0	; () banked
  7742  01194C  90D8               	bcf	status,0,c
  7743  01194E  37CD               	rlcf	(??_Byte_SetBit+1)& (0+255),f,b
  7744  011950                     u6574:
  7745  011950  0100               	movlb	0	; () banked
  7746  011952  2FCC               	decfsz	??_Byte_SetBit& (0+255),f,b
  7747  011954  D7FA               	goto	u6575
  7748  011956  0100               	movlb	0	; () banked
  7749  011958  51CD               	movf	(??_Byte_SetBit+1)& (0+255),w,b
  7750  01195A  0AFF               	xorlw	255
  7751  01195C  0100               	movlb	0	; () banked
  7752  01195E  6FCE               	movwf	(??_Byte_SetBit+2)& (0+255),b
  7753  011960  C0C8  FFD9         	movff	Byte_SetBit@pInput,fsr2l
  7754  011964  C0C9  FFDA         	movff	Byte_SetBit@pInput+1,fsr2h
  7755  011968  0100               	movlb	0	; () banked
  7756  01196A  51CE               	movf	(??_Byte_SetBit+2)& (0+255),w,b
  7757  01196C  16DF               	andwf	indf2,f,c
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;Types.c: 36: pInput->mBits |= pValue << pBit;
  7761  01196E  C0CA  F0CC         	movff	Byte_SetBit@pBit,??_Byte_SetBit
  7762  011972  C0CB  F0CD         	movff	Byte_SetBit@pValue,??_Byte_SetBit+1
  7763  011976  0100               	movlb	0	; () banked
  7764  011978  2BCC               	incf	??_Byte_SetBit& (0+255),f,b
  7765  01197A  D003               	goto	u6584
  7766  01197C                     u6585:
  7767  01197C  0100               	movlb	0	; () banked
  7768  01197E  90D8               	bcf	status,0,c
  7769  011980  37CD               	rlcf	(??_Byte_SetBit+1)& (0+255),f,b
  7770  011982                     u6584:
  7771  011982  0100               	movlb	0	; () banked
  7772  011984  2FCC               	decfsz	??_Byte_SetBit& (0+255),f,b
  7773  011986  D7FA               	goto	u6585
  7774  011988  C0C8  FFD9         	movff	Byte_SetBit@pInput,fsr2l
  7775  01198C  C0C9  FFDA         	movff	Byte_SetBit@pInput+1,fsr2h
  7776  011990  0100               	movlb	0	; () banked
  7777  011992  51CD               	movf	(??_Byte_SetBit+1)& (0+255),w,b
  7778  011994  12DF               	iorwf	indf2,f,c
  7779                           
  7780                           ; BSR set to: 0
  7781  011996  0012               	return		;funcret
  7782  011998                     __end_of_Byte_SetBit:
  7783                           	opt stack 0
  7784                           tosu	equ	0xFFF
  7785                           tosh	equ	0xFFE
  7786                           tosl	equ	0xFFD
  7787                           pclath	equ	0xFFA
  7788                           tblptru	equ	0xFF8
  7789                           tblptrh	equ	0xFF7
  7790                           tblptrl	equ	0xFF6
  7791                           tablat	equ	0xFF5
  7792                           prodh	equ	0xFF4
  7793                           prodl	equ	0xFF3
  7794                           intcon	equ	0xFF2
  7795                           indf0	equ	0xFEF
  7796                           postinc0	equ	0xFEE
  7797                           fsr0h	equ	0xFEA
  7798                           fsr0l	equ	0xFE9
  7799                           wreg	equ	0xFE8
  7800                           postdec1	equ	0xFE5
  7801                           fsr1h	equ	0xFE2
  7802                           fsr1l	equ	0xFE1
  7803                           indf2	equ	0xFDF
  7804                           postinc2	equ	0xFDE
  7805                           postdec2	equ	0xFDD
  7806                           plusw2	equ	0xFDB
  7807                           fsr2h	equ	0xFDA
  7808                           fsr2l	equ	0xFD9
  7809                           status	equ	0xFD8
  7810                           
  7811 ;; *************** function _MXK_SwitchTo *****************
  7812 ;; Defined at:
  7813 ;;		line 105 in file "Library/MXK.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;  pModule         1    wreg     enum E6925
  7816 ;; Auto vars:     Size  Location     Type
  7817 ;;  pModule         1    7[BANK0 ] enum E6925
  7818 ;;  CUR             1    6[BANK0 ] unsigned char 
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  1    wreg      unsigned char 
  7821 ;; Registers used:
  7822 ;;		wreg, status,2, status,0, cstack
  7823 ;; Tracked objects:
  7824 ;;		On entry : 0/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7829 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7831 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7832 ;;Total ram usage:        2 bytes
  7833 ;; Hardware stack levels used:    1
  7834 ;; Hardware stack levels required when called:    8
  7835 ;; This function calls:
  7836 ;;		_delay_us
  7837 ;; This function is called by:
  7838 ;;		_Motor_Step
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	text33
  7843  011C2A                     __ptext33:
  7844                           	opt stack 0
  7845  011C2A                     _MXK_SwitchTo:
  7846                           	opt stack 19
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;incstack = 0
  7850                           ;MXK_SwitchTo@pModule stored from wreg
  7851  011C2A  0100               	movlb	0	; () banked
  7852  011C2C  6FCF               	movwf	MXK_SwitchTo@pModule& (0+255),b
  7853                           
  7854                           ;MXK.c: 107: UINT8 CUR = 0xF & PORTG;
  7855  011C2E  5086               	movf	3974,w,c	;volatile
  7856  011C30  0B0F               	andlw	15
  7857  011C32  0100               	movlb	0	; () banked
  7858  011C34  6FCE               	movwf	MXK_SwitchTo@CUR& (0+255),b
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;MXK.c: 109: if (Bus_State == eMXK_Busy)
  7862  011C36  5044               	movf	_Bus_State,w,c
  7863  011C38  A4D8               	btfss	status,2,c
  7864  011C3A  D002               	goto	l10067
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;MXK.c: 110: return 0;
  7868  011C3C  0E00               	movlw	0
  7869                           
  7870                           ; BSR set to: 0
  7871  011C3E  0012               	return	
  7872  011C40                     l10067:
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;MXK.c: 112: Bus_State = eMXK_Busy;
  7876  011C40  0E00               	movlw	0
  7877  011C42  6E44               	movwf	_Bus_State,c
  7878                           
  7879                           ; BSR set to: 0
  7880                           ;MXK.c: 114: if (CUR != pModule)
  7881  011C44  0100               	movlb	0	; () banked
  7882  011C46  51CF               	movf	MXK_SwitchTo@pModule& (0+255),w,b
  7883  011C48  0100               	movlb	0	; () banked
  7884  011C4A  19CE               	xorwf	MXK_SwitchTo@CUR& (0+255),w,b
  7885  011C4C  B4D8               	btfsc	status,2,c
  7886  011C4E  D00C               	goto	l10075
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;MXK.c: 115: {
  7890                           ;MXK.c: 116: PORTG &= ~(0xF);
  7891  011C50  0EF0               	movlw	240
  7892  011C52  1686               	andwf	3974,f,c	;volatile
  7893                           
  7894                           ;MXK.c: 117: PORTG |= pModule;
  7895  011C54  0100               	movlb	0	; () banked
  7896  011C56  51CF               	movf	MXK_SwitchTo@pModule& (0+255),w,b
  7897  011C58  1286               	iorwf	3974,f,c	;volatile
  7898                           
  7899                           ; BSR set to: 0
  7900                           ;MXK.c: 120: delay_us(10);
  7901  011C5A  0E00               	movlw	0
  7902  011C5C  0100               	movlb	0	; () banked
  7903  011C5E  6FC9               	movwf	(delay_us@us+1)& (0+255),b
  7904  011C60  0E0A               	movlw	10
  7905  011C62  6FC8               	movwf	delay_us@us& (0+255),b
  7906  011C64  EC57  F08D         	call	_delay_us	;wreg free
  7907  011C68                     l10075:
  7908                           
  7909                           ;MXK.c: 121: }
  7910                           ;MXK.c: 122: return 1;
  7911  011C68  0E01               	movlw	1
  7912  011C6A  0012               	return	
  7913  011C6C                     __end_of_MXK_SwitchTo:
  7914                           	opt stack 0
  7915                           tosu	equ	0xFFF
  7916                           tosh	equ	0xFFE
  7917                           tosl	equ	0xFFD
  7918                           pclath	equ	0xFFA
  7919                           tblptru	equ	0xFF8
  7920                           tblptrh	equ	0xFF7
  7921                           tblptrl	equ	0xFF6
  7922                           tablat	equ	0xFF5
  7923                           prodh	equ	0xFF4
  7924                           prodl	equ	0xFF3
  7925                           intcon	equ	0xFF2
  7926                           indf0	equ	0xFEF
  7927                           postinc0	equ	0xFEE
  7928                           fsr0h	equ	0xFEA
  7929                           fsr0l	equ	0xFE9
  7930                           wreg	equ	0xFE8
  7931                           postdec1	equ	0xFE5
  7932                           fsr1h	equ	0xFE2
  7933                           fsr1l	equ	0xFE1
  7934                           indf2	equ	0xFDF
  7935                           postinc2	equ	0xFDE
  7936                           postdec2	equ	0xFDD
  7937                           plusw2	equ	0xFDB
  7938                           fsr2h	equ	0xFDA
  7939                           fsr2l	equ	0xFD9
  7940                           status	equ	0xFD8
  7941                           
  7942 ;; *************** function _MXK_Release *****************
  7943 ;; Defined at:
  7944 ;;		line 130 in file "Library/MXK.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;		None
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;		None
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  1    wreg      unsigned char 
  7951 ;; Registers used:
  7952 ;;		wreg, status,2, status,0
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7962 ;;Total ram usage:        0 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    7
  7965 ;; This function calls:
  7966 ;;		Nothing
  7967 ;; This function is called by:
  7968 ;;		_Motor_Step
  7969 ;;		_initialise
  7970 ;;		_main
  7971 ;;		_continuousMode
  7972 ;;		_nullMode
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text34
  7977  011F2C                     __ptext34:
  7978                           	opt stack 0
  7979  011F2C                     _MXK_Release:
  7980                           	opt stack 22
  7981                           
  7982                           ;MXK.c: 132: Bus_State = eMXK_Idle;
  7983                           
  7984                           ;incstack = 0
  7985  011F2C  0E01               	movlw	1
  7986  011F2E  6E44               	movwf	_Bus_State,c
  7987                           
  7988                           ;MXK.c: 134: if (lQueue != 0)
  7989  011F30  5025               	movf	_lQueue,w,c	;volatile
  7990  011F32  1026               	iorwf	_lQueue+1,w,c	;volatile
  7991  011F34  1027               	iorwf	_lQueue+2,w,c	;volatile
  7992  011F36  B4D8               	btfsc	status,2,c
  7993  011F38  D002               	goto	l10087
  7994                           
  7995                           ;MXK.c: 135: return 1;
  7996  011F3A  0E01               	movlw	1
  7997  011F3C  0012               	return	
  7998  011F3E                     l10087:
  7999                           
  8000                           ;MXK.c: 137: return 0;
  8001  011F3E  0E00               	movlw	0
  8002  011F40  0012               	return	
  8003  011F42                     __end_of_MXK_Release:
  8004                           	opt stack 0
  8005                           tosu	equ	0xFFF
  8006                           tosh	equ	0xFFE
  8007                           tosl	equ	0xFFD
  8008                           pclath	equ	0xFFA
  8009                           tblptru	equ	0xFF8
  8010                           tblptrh	equ	0xFF7
  8011                           tblptrl	equ	0xFF6
  8012                           tablat	equ	0xFF5
  8013                           prodh	equ	0xFF4
  8014                           prodl	equ	0xFF3
  8015                           intcon	equ	0xFF2
  8016                           indf0	equ	0xFEF
  8017                           postinc0	equ	0xFEE
  8018                           fsr0h	equ	0xFEA
  8019                           fsr0l	equ	0xFE9
  8020                           wreg	equ	0xFE8
  8021                           postdec1	equ	0xFE5
  8022                           fsr1h	equ	0xFE2
  8023                           fsr1l	equ	0xFE1
  8024                           indf2	equ	0xFDF
  8025                           postinc2	equ	0xFDE
  8026                           postdec2	equ	0xFDD
  8027                           plusw2	equ	0xFDB
  8028                           fsr2h	equ	0xFDA
  8029                           fsr2l	equ	0xFD9
  8030                           status	equ	0xFD8
  8031                           
  8032 ;; *************** function _MXK_Queue *****************
  8033 ;; Defined at:
  8034 ;;		line 144 in file "Library/MXK.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  pCallback       3    0[BANK0 ] PTR FTN()void 
  8037 ;;		 -> Absolute function(1), Motor_Step(1), 
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;		None
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1    wreg      void 
  8042 ;; Registers used:
  8043 ;;		wreg, status,2, status,0
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8049 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8052 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8053 ;;Total ram usage:        3 bytes
  8054 ;; Hardware stack levels used:    1
  8055 ;; Hardware stack levels required when called:    7
  8056 ;; This function calls:
  8057 ;;		Nothing
  8058 ;; This function is called by:
  8059 ;;		_Motor_Step
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           	psect	text35
  8064  011F50                     __ptext35:
  8065                           	opt stack 0
  8066  011F50                     _MXK_Queue:
  8067                           	opt stack 20
  8068                           
  8069                           ;MXK.c: 146: lQueue = pCallback;
  8070                           
  8071                           ;incstack = 0
  8072  011F50  C0C8  F025         	movff	MXK_Queue@pCallback,_lQueue	;volatile
  8073  011F54  C0C9  F026         	movff	MXK_Queue@pCallback+1,_lQueue+1	;volatile
  8074  011F58  C0CA  F027         	movff	MXK_Queue@pCallback+2,_lQueue+2	;volatile
  8075  011F5C  0012               	return		;funcret
  8076  011F5E                     __end_of_MXK_Queue:
  8077                           	opt stack 0
  8078                           tosu	equ	0xFFF
  8079                           tosh	equ	0xFFE
  8080                           tosl	equ	0xFFD
  8081                           pclath	equ	0xFFA
  8082                           tblptru	equ	0xFF8
  8083                           tblptrh	equ	0xFF7
  8084                           tblptrl	equ	0xFF6
  8085                           tablat	equ	0xFF5
  8086                           prodh	equ	0xFF4
  8087                           prodl	equ	0xFF3
  8088                           intcon	equ	0xFF2
  8089                           indf0	equ	0xFEF
  8090                           postinc0	equ	0xFEE
  8091                           fsr0h	equ	0xFEA
  8092                           fsr0l	equ	0xFE9
  8093                           wreg	equ	0xFE8
  8094                           postdec1	equ	0xFE5
  8095                           fsr1h	equ	0xFE2
  8096                           fsr1l	equ	0xFE1
  8097                           indf2	equ	0xFDF
  8098                           postinc2	equ	0xFDE
  8099                           postdec2	equ	0xFDD
  8100                           plusw2	equ	0xFDB
  8101                           fsr2h	equ	0xFDA
  8102                           fsr2l	equ	0xFD9
  8103                           status	equ	0xFD8
  8104                           
  8105 ;; *************** function _MXK_BlockSwitchTo *****************
  8106 ;; Defined at:
  8107 ;;		line 82 in file "Library/MXK.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  pModule         1    wreg     enum E6925
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;  pModule         1    7[BANK0 ] enum E6925
  8112 ;;  CUR             1    6[BANK0 ] unsigned char 
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  1    wreg      unsigned char 
  8115 ;; Registers used:
  8116 ;;		wreg, status,2, status,0, cstack
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8123 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8125 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;Total ram usage:        2 bytes
  8127 ;; Hardware stack levels used:    1
  8128 ;; Hardware stack levels required when called:    8
  8129 ;; This function calls:
  8130 ;;		_delay_us
  8131 ;; This function is called by:
  8132 ;;		_initialise
  8133 ;;		_main
  8134 ;;		_continuousMode
  8135 ;;		_nullMode
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           	psect	text36
  8140  011CEA                     __ptext36:
  8141                           	opt stack 0
  8142  011CEA                     _MXK_BlockSwitchTo:
  8143                           	opt stack 21
  8144                           
  8145                           ;incstack = 0
  8146                           ;MXK_BlockSwitchTo@pModule stored from wreg
  8147  011CEA  0100               	movlb	0	; () banked
  8148  011CEC  6FCF               	movwf	MXK_BlockSwitchTo@pModule& (0+255),b
  8149                           
  8150                           ;MXK.c: 85: UINT8 CUR = 0xF & PORTG;
  8151  011CEE  5086               	movf	3974,w,c	;volatile
  8152  011CF0  0B0F               	andlw	15
  8153  011CF2  0100               	movlb	0	; () banked
  8154  011CF4  6FCE               	movwf	MXK_BlockSwitchTo@CUR& (0+255),b
  8155  011CF6                     l10421:
  8156  011CF6  5044               	movf	_Bus_State,w,c
  8157  011CF8  B4D8               	btfsc	status,2,c
  8158  011CFA  D7FD               	goto	l10421
  8159                           
  8160                           ;MXK.c: 88: Bus_State = eMXK_Busy;
  8161  011CFC  0E00               	movlw	0
  8162  011CFE  6E44               	movwf	_Bus_State,c
  8163                           
  8164                           ;MXK.c: 90: if (CUR != pModule)
  8165  011D00  0100               	movlb	0	; () banked
  8166  011D02  51CF               	movf	MXK_BlockSwitchTo@pModule& (0+255),w,b
  8167  011D04  0100               	movlb	0	; () banked
  8168  011D06  19CE               	xorwf	MXK_BlockSwitchTo@CUR& (0+255),w,b
  8169  011D08  B4D8               	btfsc	status,2,c
  8170  011D0A  D00C               	goto	l10431
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;MXK.c: 91: {
  8174                           ;MXK.c: 92: PORTG &= ~(0xF);
  8175  011D0C  0EF0               	movlw	240
  8176  011D0E  1686               	andwf	3974,f,c	;volatile
  8177                           
  8178                           ;MXK.c: 93: PORTG |= pModule;
  8179  011D10  0100               	movlb	0	; () banked
  8180  011D12  51CF               	movf	MXK_BlockSwitchTo@pModule& (0+255),w,b
  8181  011D14  1286               	iorwf	3974,f,c	;volatile
  8182                           
  8183                           ; BSR set to: 0
  8184                           ;MXK.c: 96: delay_us(10);
  8185  011D16  0E00               	movlw	0
  8186  011D18  0100               	movlb	0	; () banked
  8187  011D1A  6FC9               	movwf	(delay_us@us+1)& (0+255),b
  8188  011D1C  0E0A               	movlw	10
  8189  011D1E  6FC8               	movwf	delay_us@us& (0+255),b
  8190  011D20  EC57  F08D         	call	_delay_us	;wreg free
  8191  011D24                     l10431:
  8192                           
  8193                           ;MXK.c: 97: }
  8194                           ;MXK.c: 98: return 1;
  8195  011D24  0E01               	movlw	1
  8196  011D26  0012               	return	
  8197  011D28                     __end_of_MXK_BlockSwitchTo:
  8198                           	opt stack 0
  8199                           tosu	equ	0xFFF
  8200                           tosh	equ	0xFFE
  8201                           tosl	equ	0xFFD
  8202                           pclath	equ	0xFFA
  8203                           tblptru	equ	0xFF8
  8204                           tblptrh	equ	0xFF7
  8205                           tblptrl	equ	0xFF6
  8206                           tablat	equ	0xFF5
  8207                           prodh	equ	0xFF4
  8208                           prodl	equ	0xFF3
  8209                           intcon	equ	0xFF2
  8210                           indf0	equ	0xFEF
  8211                           postinc0	equ	0xFEE
  8212                           fsr0h	equ	0xFEA
  8213                           fsr0l	equ	0xFE9
  8214                           wreg	equ	0xFE8
  8215                           postdec1	equ	0xFE5
  8216                           fsr1h	equ	0xFE2
  8217                           fsr1l	equ	0xFE1
  8218                           indf2	equ	0xFDF
  8219                           postinc2	equ	0xFDE
  8220                           postdec2	equ	0xFDD
  8221                           plusw2	equ	0xFDB
  8222                           fsr2h	equ	0xFDA
  8223                           fsr2l	equ	0xFD9
  8224                           status	equ	0xFD8
  8225                           
  8226 ;; *************** function _delay_us *****************
  8227 ;; Defined at:
  8228 ;;		line 255 in file "Library/Types.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  us              2    0[BANK0 ] unsigned short 
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;  u               4    2[BANK0 ] unsigned long 
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      void 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8242 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8243 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8245 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8246 ;;Total ram usage:        6 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:    7
  8249 ;; This function calls:
  8250 ;;		Nothing
  8251 ;; This function is called by:
  8252 ;;		_MXK_BlockSwitchTo
  8253 ;;		_MXK_SwitchTo
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           	psect	text37
  8258  011AAE                     __ptext37:
  8259                           	opt stack 0
  8260  011AAE                     _delay_us:
  8261                           	opt stack 19
  8262                           
  8263                           ;Types.c: 256: unsigned long u;
  8264                           ;Types.c: 257: while (us--) {
  8265                           
  8266                           ;incstack = 0
  8267  011AAE  D01C               	goto	l9831
  8268  011AB0                     l9823:
  8269                           
  8270                           ;Types.c: 259: for (u = 0; u < ((((48*1000000L) / 4000UL) / 10UL)/1000UL); u++) {
  8271  011AB0  0E00               	movlw	0
  8272  011AB2  0100               	movlb	0	; () banked
  8273  011AB4  6FCA               	movwf	delay_us@u& (0+255),b
  8274  011AB6  0E00               	movlw	0
  8275  011AB8  6FCB               	movwf	(delay_us@u+1)& (0+255),b
  8276  011ABA  0E00               	movlw	0
  8277  011ABC  6FCC               	movwf	(delay_us@u+2)& (0+255),b
  8278  011ABE  0E00               	movlw	0
  8279  011AC0  6FCD               	movwf	(delay_us@u+3)& (0+255),b
  8280  011AC2                     l9825:
  8281                           
  8282                           ; BSR set to: 0
  8283  011AC2  0100               	movlb	0	; () banked
  8284  011AC4  51CA               	movf	delay_us@u& (0+255),w,b
  8285  011AC6  0100               	movlb	0	; () banked
  8286  011AC8  11CB               	iorwf	(delay_us@u+1)& (0+255),w,b
  8287  011ACA  0100               	movlb	0	; () banked
  8288  011ACC  11CC               	iorwf	(delay_us@u+2)& (0+255),w,b
  8289  011ACE  0100               	movlb	0	; () banked
  8290  011AD0  11CD               	iorwf	(delay_us@u+3)& (0+255),w,b
  8291  011AD2  A4D8               	btfss	status,2,c
  8292  011AD4  D009               	goto	l9831
  8293                           
  8294                           ; BSR set to: 0
  8295                           
  8296                           ; BSR set to: 0
  8297  011AD6  F000               	nop		; ;# 
  8298  011AD8  0E01               	movlw	1
  8299  011ADA  0100               	movlb	0	; () banked
  8300  011ADC  27CA               	addwf	delay_us@u& (0+255),f,b
  8301  011ADE  0E00               	movlw	0
  8302  011AE0  23CB               	addwfc	(delay_us@u+1)& (0+255),f,b
  8303  011AE2  23CC               	addwfc	(delay_us@u+2)& (0+255),f,b
  8304  011AE4  23CD               	addwfc	(delay_us@u+3)& (0+255),f,b
  8305  011AE6  D7ED               	goto	l9825
  8306  011AE8                     l9831:
  8307  011AE8  0100               	movlb	0	; () banked
  8308  011AEA  07C8               	decf	delay_us@us& (0+255),f,b
  8309  011AEC  A0D8               	btfss	status,0,c
  8310  011AEE  07C9               	decf	(delay_us@us+1)& (0+255),f,b
  8311  011AF0  0100               	movlb	0	; () banked
  8312  011AF2  29C8               	incf	delay_us@us& (0+255),w,b
  8313  011AF4  E1DD               	bnz	l9823
  8314  011AF6  0100               	movlb	0	; () banked
  8315  011AF8  29C9               	incf	(delay_us@us+1)& (0+255),w,b
  8316  011AFA  B4D8               	btfsc	status,2,c
  8317  011AFC  0012               	return	
  8318  011AFE  D7D8               	goto	l9823
  8319  011B00                     __end_of_delay_us:
  8320                           	opt stack 0
  8321                           tosu	equ	0xFFF
  8322                           tosh	equ	0xFFE
  8323                           tosl	equ	0xFFD
  8324                           pclath	equ	0xFFA
  8325                           tblptru	equ	0xFF8
  8326                           tblptrh	equ	0xFF7
  8327                           tblptrl	equ	0xFF6
  8328                           tablat	equ	0xFF5
  8329                           prodh	equ	0xFF4
  8330                           prodl	equ	0xFF3
  8331                           intcon	equ	0xFF2
  8332                           indf0	equ	0xFEF
  8333                           postinc0	equ	0xFEE
  8334                           fsr0h	equ	0xFEA
  8335                           fsr0l	equ	0xFE9
  8336                           wreg	equ	0xFE8
  8337                           postdec1	equ	0xFE5
  8338                           fsr1h	equ	0xFE2
  8339                           fsr1l	equ	0xFE1
  8340                           indf2	equ	0xFDF
  8341                           postinc2	equ	0xFDE
  8342                           postdec2	equ	0xFDD
  8343                           plusw2	equ	0xFDB
  8344                           fsr2h	equ	0xFDA
  8345                           fsr2l	equ	0xFD9
  8346                           status	equ	0xFD8
  8347                           
  8348 ;; *************** function _ISR_Enable *****************
  8349 ;; Defined at:
  8350 ;;		line 27 in file "Library/ISR.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;		None
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;		None
  8355 ;; Return value:  Size  Location     Type
  8356 ;;                  1    wreg      void 
  8357 ;; Registers used:
  8358 ;;		None
  8359 ;; Tracked objects:
  8360 ;;		On entry : 0/0
  8361 ;;		On exit  : 0/0
  8362 ;;		Unchanged: 0/0
  8363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8368 ;;Total ram usage:        0 bytes
  8369 ;; Hardware stack levels used:    1
  8370 ;; Hardware stack levels required when called:    7
  8371 ;; This function calls:
  8372 ;;		Nothing
  8373 ;; This function is called by:
  8374 ;;		_initialise
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           	psect	text38
  8379  011F90                     __ptext38:
  8380                           	opt stack 0
  8381  011F90                     _ISR_Enable:
  8382                           	opt stack 22
  8383                           
  8384                           ;ISR.c: 29: INTCONbits.PEIE = 1;
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;incstack = 0
  8388  011F90  8CF2               	bsf	intcon,6,c	;volatile
  8389                           
  8390                           ;ISR.c: 30: INTCONbits.GIE = 1;
  8391  011F92  8EF2               	bsf	intcon,7,c	;volatile
  8392                           
  8393                           ;ISR.c: 31: INTCONbits.INT0IE = 1;
  8394  011F94  88F2               	bsf	intcon,4,c	;volatile
  8395                           
  8396                           ;ISR.c: 32: INTCONbits.INT0IF = 0;
  8397  011F96  92F2               	bcf	intcon,1,c	;volatile
  8398  011F98  0012               	return		;funcret
  8399  011F9A                     __end_of_ISR_Enable:
  8400                           	opt stack 0
  8401                           tosu	equ	0xFFF
  8402                           tosh	equ	0xFFE
  8403                           tosl	equ	0xFFD
  8404                           pclath	equ	0xFFA
  8405                           tblptru	equ	0xFF8
  8406                           tblptrh	equ	0xFF7
  8407                           tblptrl	equ	0xFF6
  8408                           tablat	equ	0xFF5
  8409                           prodh	equ	0xFF4
  8410                           prodl	equ	0xFF3
  8411                           intcon	equ	0xFF2
  8412                           indf0	equ	0xFEF
  8413                           postinc0	equ	0xFEE
  8414                           fsr0h	equ	0xFEA
  8415                           fsr0l	equ	0xFE9
  8416                           wreg	equ	0xFE8
  8417                           postdec1	equ	0xFE5
  8418                           fsr1h	equ	0xFE2
  8419                           fsr1l	equ	0xFE1
  8420                           indf2	equ	0xFDF
  8421                           postinc2	equ	0xFDE
  8422                           postdec2	equ	0xFDD
  8423                           plusw2	equ	0xFDB
  8424                           fsr2h	equ	0xFDA
  8425                           fsr2l	equ	0xFD9
  8426                           status	equ	0xFD8
  8427                           
  8428 ;; *************** function _Motor_Speed *****************
  8429 ;; Defined at:
  8430 ;;		line 117 in file "Library/Motor.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;  pMotor          2   27[BANK0 ] PTR struct Motor
  8433 ;;		 -> Stepper(6), 
  8434 ;;  pFrequency      2   29[BANK0 ] unsigned short 
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;		None
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1    wreg      unsigned char 
  8439 ;; Registers used:
  8440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8446 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;Total ram usage:        4 bytes
  8451 ;; Hardware stack levels used:    1
  8452 ;; Hardware stack levels required when called:    9
  8453 ;; This function calls:
  8454 ;;		_Timer0_Init
  8455 ;; This function is called by:
  8456 ;;		_main
  8457 ;;		_continuousMode
  8458 ;; This function uses a non-reentrant model
  8459 ;;
  8460                           
  8461                           	psect	text39
  8462  011E62                     __ptext39:
  8463                           	opt stack 0
  8464  011E62                     _Motor_Speed:
  8465                           	opt stack 21
  8466                           
  8467                           ;Motor.c: 119: pMotor->mFrequency = pFrequency;
  8468                           
  8469                           ;incstack = 0
  8470  011E62  0100               	movlb	0	; () banked
  8471  011E64  EE20 F002          	lfsr	2,2
  8472  011E68  51E3               	movf	Motor_Speed@pMotor& (0+255),w,b
  8473  011E6A  26D9               	addwf	fsr2l,f,c
  8474  011E6C  51E4               	movf	(Motor_Speed@pMotor+1)& (0+255),w,b
  8475  011E6E  22DA               	addwfc	fsr2h,f,c
  8476  011E70  C0E5  FFDE         	movff	Motor_Speed@pFrequency,postinc2
  8477  011E74  C0E6  FFDD         	movff	Motor_Speed@pFrequency+1,postdec2
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;Motor.c: 120: Timer0_Init(pFrequency);
  8481  011E78  C0E5  F0D5         	movff	Motor_Speed@pFrequency,Timer0_Init@pFrequency
  8482  011E7C  C0E6  F0D6         	movff	Motor_Speed@pFrequency+1,Timer0_Init@pFrequency+1
  8483  011E80  0100               	movlb	0	; () banked
  8484  011E82  6BD7               	clrf	(Timer0_Init@pFrequency+2)& (0+255),b
  8485  011E84  6BD8               	clrf	(Timer0_Init@pFrequency+3)& (0+255),b
  8486  011E86  EC83  F086         	call	_Timer0_Init	;wreg free
  8487  011E8A  0012               	return	
  8488  011E8C                     __end_of_Motor_Speed:
  8489                           	opt stack 0
  8490                           tosu	equ	0xFFF
  8491                           tosh	equ	0xFFE
  8492                           tosl	equ	0xFFD
  8493                           pclath	equ	0xFFA
  8494                           tblptru	equ	0xFF8
  8495                           tblptrh	equ	0xFF7
  8496                           tblptrl	equ	0xFF6
  8497                           tablat	equ	0xFF5
  8498                           prodh	equ	0xFF4
  8499                           prodl	equ	0xFF3
  8500                           intcon	equ	0xFF2
  8501                           indf0	equ	0xFEF
  8502                           postinc0	equ	0xFEE
  8503                           fsr0h	equ	0xFEA
  8504                           fsr0l	equ	0xFE9
  8505                           wreg	equ	0xFE8
  8506                           postdec1	equ	0xFE5
  8507                           fsr1h	equ	0xFE2
  8508                           fsr1l	equ	0xFE1
  8509                           indf2	equ	0xFDF
  8510                           postinc2	equ	0xFDE
  8511                           postdec2	equ	0xFDD
  8512                           plusw2	equ	0xFDB
  8513                           fsr2h	equ	0xFDA
  8514                           fsr2l	equ	0xFD9
  8515                           status	equ	0xFD8
  8516                           
  8517 ;; *************** function _Timer0_Init *****************
  8518 ;; Defined at:
  8519 ;;		line 25 in file "Library/Timer0.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;  pFrequency      4   13[BANK0 ] unsigned long 
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;  DIVIDE          4   23[BANK0 ] unsigned long 
  8524 ;;  pCPUClock       4   19[BANK0 ] unsigned long 
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  1    wreg      void 
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8534 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8535 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8536 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8537 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8538 ;;Total ram usage:       14 bytes
  8539 ;; Hardware stack levels used:    1
  8540 ;; Hardware stack levels required when called:    8
  8541 ;; This function calls:
  8542 ;;		_Timer0_Clear
  8543 ;;		___lldiv
  8544 ;; This function is called by:
  8545 ;;		_Motor_Init
  8546 ;;		_Motor_Speed
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text40
  8551  010D06                     __ptext40:
  8552                           	opt stack 0
  8553  010D06                     _Timer0_Init:
  8554                           	opt stack 20
  8555                           
  8556                           ;Timer0.c: 27: UINT32 pCPUClock = (48*1000000L)/8;
  8557                           
  8558                           ;incstack = 0
  8559  010D06  0E80               	movlw	128
  8560  010D08  0100               	movlb	0	; () banked
  8561  010D0A  6FDB               	movwf	Timer0_Init@pCPUClock& (0+255),b
  8562  010D0C  0E8D               	movlw	141
  8563  010D0E  6FDC               	movwf	(Timer0_Init@pCPUClock+1)& (0+255),b
  8564  010D10  0E5B               	movlw	91
  8565  010D12  6FDD               	movwf	(Timer0_Init@pCPUClock+2)& (0+255),b
  8566  010D14  0E00               	movlw	0
  8567  010D16  6FDE               	movwf	(Timer0_Init@pCPUClock+3)& (0+255),b
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;Timer0.c: 29: static const UINT16 PRESCALE[] = {2, 4, 8, 16, 32, 64 ,128, 256};
  8571                           ;Timer0.c: 31: static UINT8 PRE = 0;
  8572                           ;Timer0.c: 32: static UINT32 DIV = 0;
  8573                           ;Timer0.c: 34: UINT32 DIVIDE;
  8574                           ;Timer0.c: 37: T0CONbits.TMR0ON = 0;
  8575  010D18  9ED5               	bcf	4053,7,c	;volatile
  8576                           
  8577                           ; BSR set to: 0
  8578                           ;Timer0.c: 38: if (pFrequency == 0)
  8579  010D1A  0100               	movlb	0	; () banked
  8580  010D1C  51D5               	movf	Timer0_Init@pFrequency& (0+255),w,b
  8581  010D1E  0100               	movlb	0	; () banked
  8582  010D20  11D6               	iorwf	(Timer0_Init@pFrequency+1)& (0+255),w,b
  8583  010D22  0100               	movlb	0	; () banked
  8584  010D24  11D7               	iorwf	(Timer0_Init@pFrequency+2)& (0+255),w,b
  8585  010D26  0100               	movlb	0	; () banked
  8586  010D28  11D8               	iorwf	(Timer0_Init@pFrequency+3)& (0+255),w,b
  8587  010D2A  B4D8               	btfsc	status,2,c
  8588  010D2C  0012               	return	
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;Timer0.c: 41: T0CONbits.PSA = 0;
  8592                           
  8593                           ; BSR set to: 0
  8594                           ;Timer0.c: 39: return;
  8595  010D2E  96D5               	bcf	4053,3,c	;volatile
  8596                           
  8597                           ;Timer0.c: 42: T0CONbits.T08BIT = 0;
  8598  010D30  9CD5               	bcf	4053,6,c	;volatile
  8599                           
  8600                           ;Timer0.c: 43: T0CONbits.T0CS = 0;
  8601  010D32  9AD5               	bcf	4053,5,c	;volatile
  8602                           
  8603                           ;Timer0.c: 44: T0CONbits.T0SE = 0;
  8604  010D34  98D5               	bcf	4053,4,c	;volatile
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;Timer0.c: 46: DIVIDE = pCPUClock / pFrequency;
  8608  010D36  C0DB  F0C8         	movff	Timer0_Init@pCPUClock,___lldiv@dividend
  8609  010D3A  C0DC  F0C9         	movff	Timer0_Init@pCPUClock+1,___lldiv@dividend+1
  8610  010D3E  C0DD  F0CA         	movff	Timer0_Init@pCPUClock+2,___lldiv@dividend+2
  8611  010D42  C0DE  F0CB         	movff	Timer0_Init@pCPUClock+3,___lldiv@dividend+3
  8612  010D46  C0D5  F0CC         	movff	Timer0_Init@pFrequency,___lldiv@divisor
  8613  010D4A  C0D6  F0CD         	movff	Timer0_Init@pFrequency+1,___lldiv@divisor+1
  8614  010D4E  C0D7  F0CE         	movff	Timer0_Init@pFrequency+2,___lldiv@divisor+2
  8615  010D52  C0D8  F0CF         	movff	Timer0_Init@pFrequency+3,___lldiv@divisor+3
  8616  010D56  EC0B  F089         	call	___lldiv	;wreg free
  8617  010D5A  C0C8  F0DF         	movff	?___lldiv,Timer0_Init@DIVIDE
  8618  010D5E  C0C9  F0E0         	movff	?___lldiv+1,Timer0_Init@DIVIDE+1
  8619  010D62  C0CA  F0E1         	movff	?___lldiv+2,Timer0_Init@DIVIDE+2
  8620  010D66  C0CB  F0E2         	movff	?___lldiv+3,Timer0_Init@DIVIDE+3
  8621                           
  8622                           ;Timer0.c: 49: while ((DIVIDE/PRESCALE[INDEX]) > 0xFFFF)
  8623  010D6A  D009               	goto	l10255
  8624  010D6C                     l10245:
  8625                           
  8626                           ;Timer0.c: 50: {
  8627                           ;Timer0.c: 51: INDEX ++;
  8628  010D6C  2A38               	incf	_INDEX,f,c
  8629                           
  8630                           ;Timer0.c: 52: if (INDEX >= 3)
  8631  010D6E  0E02               	movlw	2
  8632  010D70  6438               	cpfsgt	_INDEX,c
  8633  010D72  D001               	goto	l10251
  8634  010D74  D02D               	goto	l10257
  8635  010D76                     l10251:
  8636                           
  8637                           ;Timer0.c: 56: if (INDEX >= 8)
  8638  010D76  0E07               	movlw	7
  8639  010D78  6438               	cpfsgt	_INDEX,c
  8640  010D7A  D001               	goto	l10255
  8641  010D7C  0012               	return	
  8642  010D7E                     l10255:
  8643  010D7E  C0DF  F0C8         	movff	Timer0_Init@DIVIDE,___lldiv@dividend
  8644  010D82  C0E0  F0C9         	movff	Timer0_Init@DIVIDE+1,___lldiv@dividend+1
  8645  010D86  C0E1  F0CA         	movff	Timer0_Init@DIVIDE+2,___lldiv@dividend+2
  8646  010D8A  C0E2  F0CB         	movff	Timer0_Init@DIVIDE+3,___lldiv@dividend+3
  8647  010D8E  5038               	movf	_INDEX,w,c
  8648  010D90  0D02               	mullw	2
  8649  010D92  0E4D               	movlw	low Timer0_Init@PRESCALE
  8650  010D94  24F3               	addwf	prodl,w,c
  8651  010D96  6EF6               	movwf	tblptrl,c
  8652  010D98  0EFD               	movlw	high Timer0_Init@PRESCALE
  8653  010D9A  20F4               	addwfc	prodh,w,c
  8654  010D9C  6EF7               	movwf	tblptrh,c
  8655  010D9E                     	if	1	;There are 3 active tblptr bytes
  8656  010D9E  6AF8               	clrf	tblptru,c
  8657  010DA0  0E00               	movlw	low (__mediumconst shr (0+16))
  8658  010DA2  22F8               	addwfc	tblptru,f,c
  8659  010DA4                     	endif
  8660  010DA4  0009               	tblrd		*+
  8661  010DA6  CFF5 F0D9          	movff	tablat,??_Timer0_Init
  8662  010DAA  0009               	tblrd		*+
  8663  010DAC  CFF5 F0DA          	movff	tablat,??_Timer0_Init+1
  8664  010DB0  C0D9  F0CC         	movff	??_Timer0_Init,___lldiv@divisor
  8665  010DB4  C0DA  F0CD         	movff	??_Timer0_Init+1,___lldiv@divisor+1
  8666  010DB8  0100               	movlb	0	; () banked
  8667  010DBA  6BCE               	clrf	(___lldiv@divisor+2)& (0+255),b
  8668  010DBC  6BCF               	clrf	(___lldiv@divisor+3)& (0+255),b
  8669  010DBE  EC0B  F089         	call	___lldiv	;wreg free
  8670  010DC2  0100               	movlb	0	; () banked
  8671  010DC4  51CB               	movf	(?___lldiv+3)& (0+255),w,b
  8672  010DC6  E1D2               	bnz	l10245
  8673  010DC8  0100               	movlb	0	; () banked
  8674  010DCA  05CA               	decf	(?___lldiv+2)& (0+255),w,b
  8675  010DCC  B0D8               	btfsc	status,0,c
  8676  010DCE  D7CE               	goto	l10245
  8677  010DD0                     l10257:
  8678                           
  8679                           ;Timer0.c: 58: }
  8680                           ;Timer0.c: 62: PRE = PRESCALE[INDEX];
  8681  010DD0  5038               	movf	_INDEX,w,c
  8682  010DD2  0D02               	mullw	2
  8683  010DD4  0E4D               	movlw	low Timer0_Init@PRESCALE
  8684  010DD6  24F3               	addwf	prodl,w,c
  8685  010DD8  6EF6               	movwf	tblptrl,c
  8686  010DDA  0EFD               	movlw	high Timer0_Init@PRESCALE
  8687  010DDC  20F4               	addwfc	prodh,w,c
  8688  010DDE  6EF7               	movwf	tblptrh,c
  8689  010DE0                     	if	1	;There are 3 active tblptr bytes
  8690  010DE0  6AF8               	clrf	tblptru,c
  8691  010DE2  0E00               	movlw	low (__mediumconst shr (0+16))
  8692  010DE4  22F8               	addwfc	tblptru,f,c
  8693  010DE6                     	endif
  8694  010DE6  0008               	tblrd		*
  8695  010DE8  CFF5 F037          	movff	tablat,Timer0_Init@PRE
  8696                           
  8697                           ;Timer0.c: 63: DIV = (DIVIDE-1);
  8698  010DEC  0EFF               	movlw	255
  8699  010DEE  0100               	movlb	0	; () banked
  8700  010DF0  25DF               	addwf	Timer0_Init@DIVIDE& (0+255),w,b
  8701  010DF2  0100               	movlb	0	; () banked
  8702  010DF4  6F64               	movwf	Timer0_Init@DIV& (0+255),b
  8703  010DF6  0EFF               	movlw	255
  8704  010DF8  0100               	movlb	0	; () banked
  8705  010DFA  21E0               	addwfc	(Timer0_Init@DIVIDE+1)& (0+255),w,b
  8706  010DFC  0100               	movlb	0	; () banked
  8707  010DFE  6F65               	movwf	(Timer0_Init@DIV+1)& (0+255),b
  8708  010E00  0EFF               	movlw	255
  8709  010E02  0100               	movlb	0	; () banked
  8710  010E04  21E1               	addwfc	(Timer0_Init@DIVIDE+2)& (0+255),w,b
  8711  010E06  0100               	movlb	0	; () banked
  8712  010E08  6F66               	movwf	(Timer0_Init@DIV+2)& (0+255),b
  8713  010E0A  0EFF               	movlw	255
  8714  010E0C  0100               	movlb	0	; () banked
  8715  010E0E  21E2               	addwfc	(Timer0_Init@DIVIDE+3)& (0+255),w,b
  8716  010E10  0100               	movlb	0	; () banked
  8717  010E12  6F67               	movwf	(Timer0_Init@DIV+3)& (0+255),b
  8718                           
  8719                           ; BSR set to: 0
  8720                           ;Timer0.c: 65: COUNTER = 0xFFFF-DIV/PRE;
  8721  010E14  C064  F0C8         	movff	Timer0_Init@DIV,___lldiv@dividend
  8722  010E18  C065  F0C9         	movff	Timer0_Init@DIV+1,___lldiv@dividend+1
  8723  010E1C  C066  F0CA         	movff	Timer0_Init@DIV+2,___lldiv@dividend+2
  8724  010E20  C067  F0CB         	movff	Timer0_Init@DIV+3,___lldiv@dividend+3
  8725  010E24  5037               	movf	Timer0_Init@PRE,w,c
  8726  010E26  0100               	movlb	0	; () banked
  8727  010E28  6FCC               	movwf	___lldiv@divisor& (0+255),b
  8728  010E2A  6BCD               	clrf	(___lldiv@divisor+1)& (0+255),b
  8729  010E2C  6BCE               	clrf	(___lldiv@divisor+2)& (0+255),b
  8730  010E2E  6BCF               	clrf	(___lldiv@divisor+3)& (0+255),b
  8731  010E30  EC0B  F089         	call	___lldiv	;wreg free
  8732  010E34  0100               	movlb	0	; () banked
  8733  010E36  1FC8               	comf	?___lldiv& (0+255),f,b
  8734  010E38  0100               	movlb	0	; () banked
  8735  010E3A  1FC9               	comf	(?___lldiv+1)& (0+255),f,b
  8736  010E3C  0100               	movlb	0	; () banked
  8737  010E3E  4BC8               	infsnz	?___lldiv& (0+255),f,b
  8738  010E40  2BC9               	incf	(?___lldiv+1)& (0+255),f,b
  8739  010E42  0EFF               	movlw	255
  8740  010E44  0100               	movlb	0	; () banked
  8741  010E46  25C8               	addwf	?___lldiv& (0+255),w,b
  8742  010E48  6E2A               	movwf	_COUNTER,c
  8743  010E4A  0EFF               	movlw	255
  8744  010E4C  0100               	movlb	0	; () banked
  8745  010E4E  21C9               	addwfc	(?___lldiv+1)& (0+255),w,b
  8746  010E50  6E2B               	movwf	_COUNTER+1,c
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;Timer0.c: 68: Timer0_Clear();
  8750  010E52  ECBC  F08F         	call	_Timer0_Clear	;wreg free
  8751                           
  8752                           ;Timer0.c: 71: T0CONbits.TMR0ON = 1;
  8753  010E56  8ED5               	bsf	4053,7,c	;volatile
  8754  010E58  0012               	return		;funcret
  8755  010E5A                     __end_of_Timer0_Init:
  8756                           	opt stack 0
  8757                           tosu	equ	0xFFF
  8758                           tosh	equ	0xFFE
  8759                           tosl	equ	0xFFD
  8760                           pclath	equ	0xFFA
  8761                           tblptru	equ	0xFF8
  8762                           tblptrh	equ	0xFF7
  8763                           tblptrl	equ	0xFF6
  8764                           tablat	equ	0xFF5
  8765                           prodh	equ	0xFF4
  8766                           prodl	equ	0xFF3
  8767                           intcon	equ	0xFF2
  8768                           indf0	equ	0xFEF
  8769                           postinc0	equ	0xFEE
  8770                           fsr0h	equ	0xFEA
  8771                           fsr0l	equ	0xFE9
  8772                           wreg	equ	0xFE8
  8773                           postdec1	equ	0xFE5
  8774                           fsr1h	equ	0xFE2
  8775                           fsr1l	equ	0xFE1
  8776                           indf2	equ	0xFDF
  8777                           postinc2	equ	0xFDE
  8778                           postdec2	equ	0xFDD
  8779                           plusw2	equ	0xFDB
  8780                           fsr2h	equ	0xFDA
  8781                           fsr2l	equ	0xFD9
  8782                           status	equ	0xFD8
  8783                           
  8784 ;; *************** function ___lldiv *****************
  8785 ;; Defined at:
  8786 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
  8787 ;; Parameters:    Size  Location     Type
  8788 ;;  dividend        4    0[BANK0 ] unsigned long 
  8789 ;;  divisor         4    4[BANK0 ] unsigned long 
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;  quotient        4    8[BANK0 ] unsigned long 
  8792 ;;  counter         1   12[BANK0 ] unsigned char 
  8793 ;; Return value:  Size  Location     Type
  8794 ;;                  4    0[BANK0 ] unsigned long 
  8795 ;; Registers used:
  8796 ;;		wreg, status,2, status,0
  8797 ;; Tracked objects:
  8798 ;;		On entry : 0/0
  8799 ;;		On exit  : 0/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8802 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8803 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8805 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8806 ;;Total ram usage:       13 bytes
  8807 ;; Hardware stack levels used:    1
  8808 ;; Hardware stack levels required when called:    7
  8809 ;; This function calls:
  8810 ;;		Nothing
  8811 ;; This function is called by:
  8812 ;;		_Timer0_Init
  8813 ;;		_rand_between
  8814 ;;		_I2C_Init
  8815 ;;		_Timer2_Init
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text41
  8820  011216                     __ptext41:
  8821                           	opt stack 0
  8822  011216                     ___lldiv:
  8823                           	opt stack 20
  8824                           
  8825                           ;incstack = 0
  8826  011216  0E00               	movlw	0
  8827  011218  0100               	movlb	0	; () banked
  8828  01121A  6FD0               	movwf	___lldiv@quotient& (0+255),b
  8829  01121C  0E00               	movlw	0
  8830  01121E  6FD1               	movwf	(___lldiv@quotient+1)& (0+255),b
  8831  011220  0E00               	movlw	0
  8832  011222  6FD2               	movwf	(___lldiv@quotient+2)& (0+255),b
  8833  011224  0E00               	movlw	0
  8834  011226  6FD3               	movwf	(___lldiv@quotient+3)& (0+255),b
  8835                           
  8836                           ; BSR set to: 0
  8837  011228  0100               	movlb	0	; () banked
  8838  01122A  51CC               	movf	___lldiv@divisor& (0+255),w,b
  8839  01122C  0100               	movlb	0	; () banked
  8840  01122E  11CD               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  8841  011230  0100               	movlb	0	; () banked
  8842  011232  11CE               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  8843  011234  0100               	movlb	0	; () banked
  8844  011236  11CF               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  8845  011238  B4D8               	btfsc	status,2,c
  8846  01123A  D042               	goto	l2449
  8847                           
  8848                           ; BSR set to: 0
  8849  01123C  0E01               	movlw	1
  8850  01123E  0100               	movlb	0	; () banked
  8851  011240  6FD4               	movwf	___lldiv@counter& (0+255),b
  8852  011242  D008               	goto	l10135
  8853  011244                     l10133:
  8854                           
  8855                           ; BSR set to: 0
  8856  011244  0100               	movlb	0	; () banked
  8857  011246  90D8               	bcf	status,0,c
  8858  011248  37CC               	rlcf	___lldiv@divisor& (0+255),f,b
  8859  01124A  37CD               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  8860  01124C  37CE               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  8861  01124E  37CF               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  8862  011250  0100               	movlb	0	; () banked
  8863  011252  2BD4               	incf	___lldiv@counter& (0+255),f,b
  8864  011254                     l10135:
  8865                           
  8866                           ; BSR set to: 0
  8867  011254  0100               	movlb	0	; () banked
  8868  011256  AFCF               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  8869  011258  D7F5               	goto	l10133
  8870  01125A                     l10137:
  8871                           
  8872                           ; BSR set to: 0
  8873  01125A  0100               	movlb	0	; () banked
  8874  01125C  90D8               	bcf	status,0,c
  8875  01125E  37D0               	rlcf	___lldiv@quotient& (0+255),f,b
  8876  011260  37D1               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  8877  011262  37D2               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  8878  011264  37D3               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  8879                           
  8880                           ; BSR set to: 0
  8881  011266  0100               	movlb	0	; () banked
  8882  011268  51CC               	movf	___lldiv@divisor& (0+255),w,b
  8883  01126A  0100               	movlb	0	; () banked
  8884  01126C  5DC8               	subwf	___lldiv@dividend& (0+255),w,b
  8885  01126E  0100               	movlb	0	; () banked
  8886  011270  51CD               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8887  011272  0100               	movlb	0	; () banked
  8888  011274  59C9               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  8889  011276  0100               	movlb	0	; () banked
  8890  011278  51CE               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8891  01127A  0100               	movlb	0	; () banked
  8892  01127C  59CA               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  8893  01127E  0100               	movlb	0	; () banked
  8894  011280  51CF               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8895  011282  0100               	movlb	0	; () banked
  8896  011284  59CB               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  8897  011286  A0D8               	btfss	status,0,c
  8898  011288  D012               	goto	l10145
  8899                           
  8900                           ; BSR set to: 0
  8901  01128A  0100               	movlb	0	; () banked
  8902  01128C  51CC               	movf	___lldiv@divisor& (0+255),w,b
  8903  01128E  0100               	movlb	0	; () banked
  8904  011290  5FC8               	subwf	___lldiv@dividend& (0+255),f,b
  8905  011292  0100               	movlb	0	; () banked
  8906  011294  51CD               	movf	(___lldiv@divisor+1)& (0+255),w,b
  8907  011296  0100               	movlb	0	; () banked
  8908  011298  5BC9               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  8909  01129A  0100               	movlb	0	; () banked
  8910  01129C  51CE               	movf	(___lldiv@divisor+2)& (0+255),w,b
  8911  01129E  0100               	movlb	0	; () banked
  8912  0112A0  5BCA               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  8913  0112A2  0100               	movlb	0	; () banked
  8914  0112A4  51CF               	movf	(___lldiv@divisor+3)& (0+255),w,b
  8915  0112A6  0100               	movlb	0	; () banked
  8916  0112A8  5BCB               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  8917                           
  8918                           ; BSR set to: 0
  8919  0112AA  0100               	movlb	0	; () banked
  8920  0112AC  81D0               	bsf	___lldiv@quotient& (0+255),0,b
  8921  0112AE                     l10145:
  8922                           
  8923                           ; BSR set to: 0
  8924  0112AE  0100               	movlb	0	; () banked
  8925  0112B0  90D8               	bcf	status,0,c
  8926  0112B2  33CF               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  8927  0112B4  33CE               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  8928  0112B6  33CD               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  8929  0112B8  33CC               	rrcf	___lldiv@divisor& (0+255),f,b
  8930                           
  8931                           ; BSR set to: 0
  8932  0112BA  0100               	movlb	0	; () banked
  8933  0112BC  2FD4               	decfsz	___lldiv@counter& (0+255),f,b
  8934  0112BE  D7CD               	goto	l10137
  8935  0112C0                     l2449:
  8936                           
  8937                           ; BSR set to: 0
  8938  0112C0  C0D0  F0C8         	movff	___lldiv@quotient,?___lldiv
  8939  0112C4  C0D1  F0C9         	movff	___lldiv@quotient+1,?___lldiv+1
  8940  0112C8  C0D2  F0CA         	movff	___lldiv@quotient+2,?___lldiv+2
  8941  0112CC  C0D3  F0CB         	movff	___lldiv@quotient+3,?___lldiv+3
  8942                           
  8943                           ; BSR set to: 0
  8944  0112D0  0012               	return		;funcret
  8945  0112D2                     __end_of___lldiv:
  8946                           	opt stack 0
  8947                           tosu	equ	0xFFF
  8948                           tosh	equ	0xFFE
  8949                           tosl	equ	0xFFD
  8950                           pclath	equ	0xFFA
  8951                           tblptru	equ	0xFF8
  8952                           tblptrh	equ	0xFF7
  8953                           tblptrl	equ	0xFF6
  8954                           tablat	equ	0xFF5
  8955                           prodh	equ	0xFF4
  8956                           prodl	equ	0xFF3
  8957                           intcon	equ	0xFF2
  8958                           indf0	equ	0xFEF
  8959                           postinc0	equ	0xFEE
  8960                           fsr0h	equ	0xFEA
  8961                           fsr0l	equ	0xFE9
  8962                           wreg	equ	0xFE8
  8963                           postdec1	equ	0xFE5
  8964                           fsr1h	equ	0xFE2
  8965                           fsr1l	equ	0xFE1
  8966                           indf2	equ	0xFDF
  8967                           postinc2	equ	0xFDE
  8968                           postdec2	equ	0xFDD
  8969                           plusw2	equ	0xFDB
  8970                           fsr2h	equ	0xFDA
  8971                           fsr2l	equ	0xFD9
  8972                           status	equ	0xFD8
  8973                           
  8974 ;; *************** function _Timer0_Clear *****************
  8975 ;; Defined at:
  8976 ;;		line 20 in file "Library/Timer0.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;		None
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;		None
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  1    wreg      void 
  8983 ;; Registers used:
  8984 ;;		None
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8994 ;;Total ram usage:        0 bytes
  8995 ;; Hardware stack levels used:    1
  8996 ;; Hardware stack levels required when called:    7
  8997 ;; This function calls:
  8998 ;;		Nothing
  8999 ;; This function is called by:
  9000 ;;		_Timer0_Init
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	text42
  9005  011F78                     __ptext42:
  9006                           	opt stack 0
  9007  011F78                     _Timer0_Clear:
  9008                           	opt stack 20
  9009                           
  9010                           ;Timer0.c: 22: TMR0 = COUNTER;
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;incstack = 0
  9014  011F78  C02A  FFD6         	movff	_COUNTER,4054	;volatile
  9015  011F7C  C02B  FFD7         	movff	_COUNTER+1,4055	;volatile
  9016                           
  9017                           ;Timer0.c: 23: INTCONbits.TMR0IF = 0;
  9018  011F80  94F2               	bcf	intcon,2,c	;volatile
  9019  011F82  0012               	return		;funcret
  9020  011F84                     __end_of_Timer0_Clear:
  9021                           	opt stack 0
  9022                           tosu	equ	0xFFF
  9023                           tosh	equ	0xFFE
  9024                           tosl	equ	0xFFD
  9025                           pclath	equ	0xFFA
  9026                           tblptru	equ	0xFF8
  9027                           tblptrh	equ	0xFF7
  9028                           tblptrl	equ	0xFF6
  9029                           tablat	equ	0xFF5
  9030                           prodh	equ	0xFF4
  9031                           prodl	equ	0xFF3
  9032                           intcon	equ	0xFF2
  9033                           indf0	equ	0xFEF
  9034                           postinc0	equ	0xFEE
  9035                           fsr0h	equ	0xFEA
  9036                           fsr0l	equ	0xFE9
  9037                           wreg	equ	0xFE8
  9038                           postdec1	equ	0xFE5
  9039                           fsr1h	equ	0xFE2
  9040                           fsr1l	equ	0xFE1
  9041                           indf2	equ	0xFDF
  9042                           postinc2	equ	0xFDE
  9043                           postdec2	equ	0xFDD
  9044                           plusw2	equ	0xFDB
  9045                           fsr2h	equ	0xFDA
  9046                           fsr2l	equ	0xFD9
  9047                           status	equ	0xFD8
  9048                           
  9049 ;; *************** function _Motor_Move *****************
  9050 ;; Defined at:
  9051 ;;		line 51 in file "Library/Motor.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;  pMotor          2    3[BANK0 ] PTR struct Motor
  9054 ;;		 -> Stepper(6), 
  9055 ;;  pDelta          2    5[BANK0 ] short 
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;		None
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      unsigned char 
  9060 ;; Registers used:
  9061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9067 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9069 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9070 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9071 ;;Total ram usage:        6 bytes
  9072 ;; Hardware stack levels used:    1
  9073 ;; Hardware stack levels required when called:    8
  9074 ;; This function calls:
  9075 ;;		_Timer0_Start
  9076 ;; This function is called by:
  9077 ;;		_main
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           	psect	text43
  9082  011D64                     __ptext43:
  9083                           	opt stack 0
  9084  011D64                     _Motor_Move:
  9085                           	opt stack 22
  9086                           
  9087                           ;Motor.c: 54: lMotor = pMotor;
  9088                           
  9089                           ;incstack = 0
  9090  011D64  C0CB  F02C         	movff	Motor_Move@pMotor,_lMotor
  9091  011D68  C0CC  F02D         	movff	Motor_Move@pMotor+1,_lMotor+1
  9092                           
  9093                           ;Motor.c: 58: if (pMotor->mDelta != 0)
  9094  011D6C  C0CB  FFD9         	movff	Motor_Move@pMotor,fsr2l
  9095  011D70  C0CC  FFDA         	movff	Motor_Move@pMotor+1,fsr2h
  9096  011D74  50DE               	movf	postinc2,w,c
  9097  011D76  10DE               	iorwf	postinc2,w,c
  9098  011D78  A4D8               	btfss	status,2,c
  9099  011D7A  0012               	return	
  9100                           
  9101                           ;Motor.c: 63: pMotor->mDelta = pDelta;
  9102                           
  9103                           ;Motor.c: 59: return 0;
  9104                           ;	Return value of _Motor_Move is never used
  9105  011D7C  C0CB  FFD9         	movff	Motor_Move@pMotor,fsr2l
  9106  011D80  C0CC  FFDA         	movff	Motor_Move@pMotor+1,fsr2h
  9107  011D84  C0CD  FFDE         	movff	Motor_Move@pDelta,postinc2
  9108  011D88  C0CE  FFDD         	movff	Motor_Move@pDelta+1,postdec2
  9109                           
  9110                           ;Motor.c: 67: Timer0_Start(lStepFunction);
  9111  011D8C  C06B  F0C8         	movff	_lStepFunction,Timer0_Start@pFunction
  9112  011D90  C06C  F0C9         	movff	_lStepFunction+1,Timer0_Start@pFunction+1
  9113  011D94  C06D  F0CA         	movff	_lStepFunction+2,Timer0_Start@pFunction+2
  9114  011D98  EC46  F08F         	call	_Timer0_Start	;wreg free
  9115  011D9C  0012               	return	
  9116  011D9E                     __end_of_Motor_Move:
  9117                           	opt stack 0
  9118                           tosu	equ	0xFFF
  9119                           tosh	equ	0xFFE
  9120                           tosl	equ	0xFFD
  9121                           pclath	equ	0xFFA
  9122                           tblptru	equ	0xFF8
  9123                           tblptrh	equ	0xFF7
  9124                           tblptrl	equ	0xFF6
  9125                           tablat	equ	0xFF5
  9126                           prodh	equ	0xFF4
  9127                           prodl	equ	0xFF3
  9128                           intcon	equ	0xFF2
  9129                           indf0	equ	0xFEF
  9130                           postinc0	equ	0xFEE
  9131                           fsr0h	equ	0xFEA
  9132                           fsr0l	equ	0xFE9
  9133                           wreg	equ	0xFE8
  9134                           postdec1	equ	0xFE5
  9135                           fsr1h	equ	0xFE2
  9136                           fsr1l	equ	0xFE1
  9137                           indf2	equ	0xFDF
  9138                           postinc2	equ	0xFDE
  9139                           postdec2	equ	0xFDD
  9140                           plusw2	equ	0xFDB
  9141                           fsr2h	equ	0xFDA
  9142                           fsr2l	equ	0xFD9
  9143                           status	equ	0xFD8
  9144                           
  9145 ;; *************** function _Timer0_Start *****************
  9146 ;; Defined at:
  9147 ;;		line 75 in file "Library/Timer0.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;  pFunction       3    0[BANK0 ] PTR FTN()void 
  9150 ;;		 -> Absolute function(1), Motor_Step(1), 
  9151 ;; Auto vars:     Size  Location     Type
  9152 ;;		None
  9153 ;; Return value:  Size  Location     Type
  9154 ;;                  1    wreg      void 
  9155 ;; Registers used:
  9156 ;;		wreg, status,2, status,0
  9157 ;; Tracked objects:
  9158 ;;		On entry : 0/0
  9159 ;;		On exit  : 0/0
  9160 ;;		Unchanged: 0/0
  9161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9162 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9165 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9166 ;;Total ram usage:        3 bytes
  9167 ;; Hardware stack levels used:    1
  9168 ;; Hardware stack levels required when called:    7
  9169 ;; This function calls:
  9170 ;;		Nothing
  9171 ;; This function is called by:
  9172 ;;		_Motor_Move
  9173 ;; This function uses a non-reentrant model
  9174 ;;
  9175                           
  9176                           	psect	text44
  9177  011E8C                     __ptext44:
  9178                           	opt stack 0
  9179  011E8C                     _Timer0_Start:
  9180                           	opt stack 22
  9181                           
  9182                           ;Timer0.c: 77: gISR = pFunction;
  9183                           
  9184                           ;incstack = 0
  9185  011E8C  C0C8  F068         	movff	Timer0_Start@pFunction,_gISR
  9186  011E90  C0C9  F069         	movff	Timer0_Start@pFunction+1,_gISR+1
  9187  011E94  C0CA  F06A         	movff	Timer0_Start@pFunction+2,_gISR+2
  9188                           
  9189                           ;Timer0.c: 78: TMR0 = COUNTER;
  9190  011E98  C02A  FFD6         	movff	_COUNTER,4054	;volatile
  9191  011E9C  C02B  FFD7         	movff	_COUNTER+1,4055	;volatile
  9192                           
  9193                           ;Timer0.c: 79: T0CONbits.T0PS = INDEX;
  9194  011EA0  50D5               	movf	4053,w,c	;volatile
  9195  011EA2  1838               	xorwf	_INDEX,w,c
  9196  011EA4  0BF8               	andlw	-8
  9197  011EA6  1838               	xorwf	_INDEX,w,c
  9198  011EA8  6ED5               	movwf	4053,c	;volatile
  9199                           
  9200                           ;Timer0.c: 80: INTCONbits.TMR0IF = 0;
  9201  011EAA  94F2               	bcf	intcon,2,c	;volatile
  9202                           
  9203                           ;Timer0.c: 81: INTCONbits.TMR0IE = 1;
  9204  011EAC  8AF2               	bsf	intcon,5,c	;volatile
  9205  011EAE  0012               	return		;funcret
  9206  011EB0                     __end_of_Timer0_Start:
  9207                           	opt stack 0
  9208                           tosu	equ	0xFFF
  9209                           tosh	equ	0xFFE
  9210                           tosl	equ	0xFFD
  9211                           pclath	equ	0xFFA
  9212                           tblptru	equ	0xFF8
  9213                           tblptrh	equ	0xFF7
  9214                           tblptrl	equ	0xFF6
  9215                           tablat	equ	0xFF5
  9216                           prodh	equ	0xFF4
  9217                           prodl	equ	0xFF3
  9218                           intcon	equ	0xFF2
  9219                           indf0	equ	0xFEF
  9220                           postinc0	equ	0xFEE
  9221                           fsr0h	equ	0xFEA
  9222                           fsr0l	equ	0xFE9
  9223                           wreg	equ	0xFE8
  9224                           postdec1	equ	0xFE5
  9225                           fsr1h	equ	0xFE2
  9226                           fsr1l	equ	0xFE1
  9227                           indf2	equ	0xFDF
  9228                           postinc2	equ	0xFDE
  9229                           postdec2	equ	0xFDD
  9230                           plusw2	equ	0xFDB
  9231                           fsr2h	equ	0xFDA
  9232                           fsr2l	equ	0xFD9
  9233                           status	equ	0xFD8
  9234                           
  9235 ;; *************** function _ISR_Function *****************
  9236 ;; Defined at:
  9237 ;;		line 38 in file "Library/ISR.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;		None
  9240 ;; Auto vars:     Size  Location     Type
  9241 ;;		None
  9242 ;; Return value:  Size  Location     Type
  9243 ;;                  1    wreg      void 
  9244 ;; Registers used:
  9245 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9246 ;; Tracked objects:
  9247 ;;		On entry : 0/0
  9248 ;;		On exit  : 0/0
  9249 ;;		Unchanged: 0/0
  9250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9253 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9254 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9255 ;;Total ram usage:       14 bytes
  9256 ;; Hardware stack levels used:    1
  9257 ;; Hardware stack levels required when called:    6
  9258 ;; This function calls:
  9259 ;;		_Timer0_ISR
  9260 ;; This function is called by:
  9261 ;;		Interrupt level 2
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           	psect	intcode
  9266  001408                     __pintcode:
  9267                           	opt stack 0
  9268  001408                     _ISR_Function:
  9269                           	opt stack 13
  9270                           
  9271                           ;incstack = 0
  9272  001408  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9273  00140A  CFFA F017          	movff	pclath,??_ISR_Function
  9274  00140E  CFFB F018          	movff	pclatu,??_ISR_Function+1
  9275  001412  CFE9 F019          	movff	fsr0l,??_ISR_Function+2
  9276  001416  CFEA F01A          	movff	fsr0h,??_ISR_Function+3
  9277  00141A  CFE1 F01B          	movff	fsr1l,??_ISR_Function+4
  9278  00141E  CFE2 F01C          	movff	fsr1h,??_ISR_Function+5
  9279  001422  CFD9 F01D          	movff	fsr2l,??_ISR_Function+6
  9280  001426  CFDA F01E          	movff	fsr2h,??_ISR_Function+7
  9281  00142A  CFF3 F01F          	movff	prodl,??_ISR_Function+8
  9282  00142E  CFF4 F020          	movff	prodh,??_ISR_Function+9
  9283  001432  CFF6 F021          	movff	tblptrl,??_ISR_Function+10
  9284  001436  CFF7 F022          	movff	tblptrh,??_ISR_Function+11
  9285  00143A  CFF8 F023          	movff	tblptru,??_ISR_Function+12
  9286  00143E  CFF5 F024          	movff	tablat,??_ISR_Function+13
  9287                           
  9288                           ;ISR.c: 41: INTCONbits.INT0IF = 0;
  9289  001442  92F2               	bcf	intcon,1,c	;volatile
  9290                           
  9291                           ;ISR.c: 67: if (((INTCONbits.TMR0IF) && (INTCONbits.TMR0IE)))
  9292  001444  B4F2               	btfsc	intcon,2,c	;volatile
  9293  001446  AAF2               	btfss	intcon,5,c	;volatile
  9294  001448  D002               	goto	i2l1599
  9295                           
  9296                           ;ISR.c: 68: Timer0_ISR();
  9297  00144A  EC1A  F08F         	call	_Timer0_ISR	;wreg free
  9298  00144E                     i2l1599:
  9299  00144E  C024  FFF5         	movff	??_ISR_Function+13,tablat
  9300  001452  C023  FFF8         	movff	??_ISR_Function+12,tblptru
  9301  001456  C022  FFF7         	movff	??_ISR_Function+11,tblptrh
  9302  00145A  C021  FFF6         	movff	??_ISR_Function+10,tblptrl
  9303  00145E  C020  FFF4         	movff	??_ISR_Function+9,prodh
  9304  001462  C01F  FFF3         	movff	??_ISR_Function+8,prodl
  9305  001466  C01E  FFDA         	movff	??_ISR_Function+7,fsr2h
  9306  00146A  C01D  FFD9         	movff	??_ISR_Function+6,fsr2l
  9307  00146E  C01C  FFE2         	movff	??_ISR_Function+5,fsr1h
  9308  001472  C01B  FFE1         	movff	??_ISR_Function+4,fsr1l
  9309  001476  C01A  FFEA         	movff	??_ISR_Function+3,fsr0h
  9310  00147A  C019  FFE9         	movff	??_ISR_Function+2,fsr0l
  9311  00147E  C018  FFFB         	movff	??_ISR_Function+1,pclatu
  9312  001482  C017  FFFA         	movff	??_ISR_Function,pclath
  9313  001486  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9314  001488  0011               	retfie		f
  9315  00148A                     __end_of_ISR_Function:
  9316                           	opt stack 0
  9317                           tosu	equ	0xFFF
  9318                           tosh	equ	0xFFE
  9319                           tosl	equ	0xFFD
  9320                           pclatu	equ	0xFFB
  9321                           pclath	equ	0xFFA
  9322                           tblptru	equ	0xFF8
  9323                           tblptrh	equ	0xFF7
  9324                           tblptrl	equ	0xFF6
  9325                           tablat	equ	0xFF5
  9326                           prodh	equ	0xFF4
  9327                           prodl	equ	0xFF3
  9328                           intcon	equ	0xFF2
  9329                           indf0	equ	0xFEF
  9330                           postinc0	equ	0xFEE
  9331                           fsr0h	equ	0xFEA
  9332                           fsr0l	equ	0xFE9
  9333                           wreg	equ	0xFE8
  9334                           postdec1	equ	0xFE5
  9335                           fsr1h	equ	0xFE2
  9336                           fsr1l	equ	0xFE1
  9337                           indf2	equ	0xFDF
  9338                           postinc2	equ	0xFDE
  9339                           postdec2	equ	0xFDD
  9340                           plusw2	equ	0xFDB
  9341                           fsr2h	equ	0xFDA
  9342                           fsr2l	equ	0xFD9
  9343                           status	equ	0xFD8
  9344                           
  9345 ;; *************** function _Timer0_ISR *****************
  9346 ;; Defined at:
  9347 ;;		line 94 in file "Library/Timer0.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;		None
  9350 ;; Auto vars:     Size  Location     Type
  9351 ;;		None
  9352 ;; Return value:  Size  Location     Type
  9353 ;;                  1    wreg      void 
  9354 ;; Registers used:
  9355 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9356 ;; Tracked objects:
  9357 ;;		On entry : 0/0
  9358 ;;		On exit  : 0/0
  9359 ;;		Unchanged: 0/0
  9360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9365 ;;Total ram usage:        0 bytes
  9366 ;; Hardware stack levels used:    1
  9367 ;; Hardware stack levels required when called:    5
  9368 ;; This function calls:
  9369 ;;		Absolute function
  9370 ;;		i2_Motor_Step
  9371 ;;		i2_Timer0_Stop
  9372 ;; This function is called by:
  9373 ;;		_ISR_Function
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           	psect	text46
  9378  011E34                     __ptext46:
  9379                           	opt stack 0
  9380  011E34                     _Timer0_ISR:
  9381                           	opt stack 13
  9382                           
  9383                           ;Timer0.c: 96: Timer0_Stop();
  9384                           
  9385                           ;incstack = 0
  9386  011E34  ECDD  F08F         	call	i2_Timer0_Stop	;wreg free
  9387                           
  9388                           ;Timer0.c: 99: if (gISR != 0)
  9389  011E38  0100               	movlb	0	; () banked
  9390  011E3A  5168               	movf	_gISR& (0+255),w,b
  9391  011E3C  0100               	movlb	0	; () banked
  9392  011E3E  1169               	iorwf	(_gISR+1)& (0+255),w,b
  9393  011E40  0100               	movlb	0	; () banked
  9394  011E42  116A               	iorwf	(_gISR+2)& (0+255),w,b
  9395  011E44  B4D8               	btfsc	status,2,c
  9396  011E46  0012               	return	
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;Timer0.c: 100: gISR();
  9400  011E48  D801               	call	i2u853_48
  9401  011E4A  0012               	return	
  9402  011E4C                     i2u853_48:
  9403  011E4C  0005               	push	
  9404  011E4E  6EFA               	movwf	pclath,c
  9405  011E50  0100               	movlb	0	; () banked
  9406  011E52  5168               	movf	_gISR& (0+255),w,b
  9407  011E54  6EFD               	movwf	tosl,c
  9408  011E56  5169               	movf	(_gISR+1)& (0+255),w,b
  9409  011E58  6EFE               	movwf	tosh,c
  9410  011E5A  516A               	movf	(_gISR+2)& (0+255),w,b
  9411  011E5C  6EFF               	movwf	tosu,c
  9412  011E5E  50FA               	movf	pclath,w,c
  9413  011E60  0012               	return		;indir
  9414  011E62                     __end_of_Timer0_ISR:
  9415                           	opt stack 0
  9416                           tosu	equ	0xFFF
  9417                           tosh	equ	0xFFE
  9418                           tosl	equ	0xFFD
  9419                           pclatu	equ	0xFFB
  9420                           pclath	equ	0xFFA
  9421                           tblptru	equ	0xFF8
  9422                           tblptrh	equ	0xFF7
  9423                           tblptrl	equ	0xFF6
  9424                           tablat	equ	0xFF5
  9425                           prodh	equ	0xFF4
  9426                           prodl	equ	0xFF3
  9427                           intcon	equ	0xFF2
  9428                           indf0	equ	0xFEF
  9429                           postinc0	equ	0xFEE
  9430                           fsr0h	equ	0xFEA
  9431                           fsr0l	equ	0xFE9
  9432                           wreg	equ	0xFE8
  9433                           postdec1	equ	0xFE5
  9434                           fsr1h	equ	0xFE2
  9435                           fsr1l	equ	0xFE1
  9436                           indf2	equ	0xFDF
  9437                           postinc2	equ	0xFDE
  9438                           postdec2	equ	0xFDD
  9439                           plusw2	equ	0xFDB
  9440                           fsr2h	equ	0xFDA
  9441                           fsr2l	equ	0xFD9
  9442                           status	equ	0xFD8
  9443                           
  9444 ;; *************** function i2_Motor_Step *****************
  9445 ;; Defined at:
  9446 ;;		line 75 in file "Library/Motor.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;		None
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;		None
  9451 ;; Return value:  Size  Location     Type
  9452 ;;                  1    wreg      void 
  9453 ;; Registers used:
  9454 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9462 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9464 ;;Total ram usage:        2 bytes
  9465 ;; Hardware stack levels used:    1
  9466 ;; Hardware stack levels required when called:    4
  9467 ;; This function calls:
  9468 ;;		i2_MXK_Queue
  9469 ;;		i2_MXK_Release
  9470 ;;		i2_MXK_SwitchTo
  9471 ;;		i2_Port_SetPin
  9472 ;;		i2_Timer0_Restart
  9473 ;;		i2_Timer0_Stop
  9474 ;; This function is called by:
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text47
  9479  010F7E                     __ptext47:
  9480                           	opt stack 0
  9481  010F7E                     i2_Motor_Step:
  9482                           	opt stack 13
  9483                           
  9484                           ;Motor.c: 77: if (MXK_SwitchTo(lMotor->mAddress))
  9485                           
  9486                           ;incstack = 0
  9487  010F7E  EE20 F004          	lfsr	2,4
  9488  010F82  502C               	movf	_lMotor,w,c
  9489  010F84  26D9               	addwf	fsr2l,f,c
  9490  010F86  502D               	movf	_lMotor+1,w,c
  9491  010F88  22DA               	addwfc	fsr2h,f,c
  9492  010F8A  50DF               	movf	indf2,w,c
  9493  010F8C  ECCF  F08E         	call	i2_MXK_SwitchTo
  9494  010F90  0900               	iorlw	0
  9495  010F92  B4D8               	btfsc	status,2,c
  9496  010F94  D06A               	goto	i2l8067
  9497                           
  9498                           ;Motor.c: 78: {
  9499                           ;Motor.c: 79: if (lMotor->mDelta != 0)
  9500  010F96  C02C  FFD9         	movff	_lMotor,fsr2l
  9501  010F9A  C02D  FFDA         	movff	_lMotor+1,fsr2h
  9502  010F9E  50DE               	movf	postinc2,w,c
  9503  010FA0  10DE               	iorwf	postinc2,w,c
  9504  010FA2  B4D8               	btfsc	status,2,c
  9505  010FA4  D05D               	goto	i2l8061
  9506                           
  9507                           ;Motor.c: 80: {
  9508                           ;Motor.c: 82: if (lMotor->mDelta > 0)
  9509  010FA6  C02C  FFD9         	movff	_lMotor,fsr2l
  9510  010FAA  C02D  FFDA         	movff	_lMotor+1,fsr2h
  9511  010FAE  0E01               	movlw	1
  9512  010FB0  BEDB               	btfsc	plusw2,7,c
  9513  010FB2  D022               	goto	i2l8045
  9514  010FB4  0E01               	movlw	1
  9515  010FB6  50DB               	movf	plusw2,w,c
  9516  010FB8  E103               	bnz	i2u463_40
  9517  010FBA  04DE               	decf	postinc2,w,c
  9518  010FBC  A0D8               	btfss	status,0,c
  9519  010FBE  D01C               	goto	i2l8045
  9520  010FC0                     i2u463_40:
  9521                           
  9522                           ;Motor.c: 83: {
  9523                           ;Motor.c: 84: if (lMotor->mDelta != 32767)
  9524  010FC0  C02C  FFD9         	movff	_lMotor,fsr2l
  9525  010FC4  C02D  FFDA         	movff	_lMotor+1,fsr2h
  9526  010FC8  28DE               	incf	postinc2,w,c
  9527  010FCA  E104               	bnz	i2u464_40
  9528  010FCC  0E7F               	movlw	127
  9529  010FCE  18DE               	xorwf	postinc2,w,c
  9530  010FD0  B4D8               	btfsc	status,2,c
  9531  010FD2  D007               	goto	i2l8043
  9532  010FD4                     i2u464_40:
  9533                           
  9534                           ;Motor.c: 85: lMotor->mDelta --;
  9535  010FD4  C02C  FFD9         	movff	_lMotor,fsr2l
  9536  010FD8  C02D  FFDA         	movff	_lMotor+1,fsr2h
  9537  010FDC  06DE               	decf	postinc2,f,c
  9538  010FDE  0E00               	movlw	0
  9539  010FE0  5ADD               	subwfb	postdec2,f,c
  9540  010FE2                     i2l8043:
  9541                           
  9542                           ;Motor.c: 87: Port_SetPin(&PortE, eP0, 1);
  9543  010FE2  0E7F               	movlw	low _PortE
  9544  010FE4  6E10               	movwf	i2Port_SetPin@pInput,c
  9545  010FE6  0E00               	movlw	high _PortE
  9546  010FE8  6E11               	movwf	i2Port_SetPin@pInput+1,c
  9547  010FEA  0E00               	movlw	0
  9548  010FEC  6E12               	movwf	i2Port_SetPin@pPin,c
  9549  010FEE  0E01               	movlw	1
  9550  010FF0  6E13               	movwf	i2Port_SetPin@pValue,c
  9551  010FF2  EC1B  F08A         	call	i2_Port_SetPin	;wreg free
  9552                           
  9553                           ;Motor.c: 88: }
  9554  010FF6  D01B               	goto	i2l8051
  9555  010FF8                     i2l8045:
  9556                           
  9557                           ;Motor.c: 89: else
  9558                           ;Motor.c: 90: {
  9559                           ;Motor.c: 91: if (lMotor->mDelta != -32767)
  9560  010FF8  C02C  FFD9         	movff	_lMotor,fsr2l
  9561  010FFC  C02D  FFDA         	movff	_lMotor+1,fsr2h
  9562  011000  04DE               	decf	postinc2,w,c
  9563  011002  E104               	bnz	i2u465_40
  9564  011004  0E80               	movlw	128
  9565  011006  18DE               	xorwf	postinc2,w,c
  9566  011008  B4D8               	btfsc	status,2,c
  9567  01100A  D007               	goto	i2l8049
  9568  01100C                     i2u465_40:
  9569                           
  9570                           ;Motor.c: 92: lMotor->mDelta ++;
  9571  01100C  C02C  FFD9         	movff	_lMotor,fsr2l
  9572  011010  C02D  FFDA         	movff	_lMotor+1,fsr2h
  9573  011014  2ADE               	incf	postinc2,f,c
  9574  011016  0E00               	movlw	0
  9575  011018  22DD               	addwfc	postdec2,f,c
  9576  01101A                     i2l8049:
  9577                           
  9578                           ;Motor.c: 94: Port_SetPin(&PortE, eP0, 0);
  9579  01101A  0E7F               	movlw	low _PortE
  9580  01101C  6E10               	movwf	i2Port_SetPin@pInput,c
  9581  01101E  0E00               	movlw	high _PortE
  9582  011020  6E11               	movwf	i2Port_SetPin@pInput+1,c
  9583  011022  0E00               	movlw	0
  9584  011024  6E12               	movwf	i2Port_SetPin@pPin,c
  9585  011026  0E00               	movlw	0
  9586  011028  6E13               	movwf	i2Port_SetPin@pValue,c
  9587  01102A  EC1B  F08A         	call	i2_Port_SetPin	;wreg free
  9588  01102E                     i2l8051:
  9589                           
  9590                           ;Motor.c: 95: }
  9591                           ;Motor.c: 98: Port_SetPin(&PortE, eP1, 1);
  9592  01102E  0E7F               	movlw	low _PortE
  9593  011030  6E10               	movwf	i2Port_SetPin@pInput,c
  9594  011032  0E00               	movlw	high _PortE
  9595  011034  6E11               	movwf	i2Port_SetPin@pInput+1,c
  9596  011036  0E01               	movlw	1
  9597  011038  6E12               	movwf	i2Port_SetPin@pPin,c
  9598  01103A  0E01               	movlw	1
  9599  01103C  6E13               	movwf	i2Port_SetPin@pValue,c
  9600  01103E  EC1B  F08A         	call	i2_Port_SetPin	;wreg free
  9601                           
  9602                           ;Motor.c: 99: Port_SetPin(&PortE, eP1, 0);
  9603  011042  0E7F               	movlw	low _PortE
  9604  011044  6E10               	movwf	i2Port_SetPin@pInput,c
  9605  011046  0E00               	movlw	high _PortE
  9606  011048  6E11               	movwf	i2Port_SetPin@pInput+1,c
  9607  01104A  0E01               	movlw	1
  9608  01104C  6E12               	movwf	i2Port_SetPin@pPin,c
  9609  01104E  0E00               	movlw	0
  9610  011050  6E13               	movwf	i2Port_SetPin@pValue,c
  9611  011052  EC1B  F08A         	call	i2_Port_SetPin	;wreg free
  9612                           
  9613                           ;Motor.c: 101: MXK_Release();
  9614  011056  ECE0  F08F         	call	i2_MXK_Release	;wreg free
  9615                           
  9616                           ;Motor.c: 102: Timer0_Restart();
  9617  01105A  ECC2  F08F         	call	i2_Timer0_Restart	;wreg free
  9618                           
  9619                           ;Motor.c: 103: return;
  9620  01105E  0012               	return	
  9621  011060                     i2l8061:
  9622                           
  9623                           ;Motor.c: 104: }
  9624                           ;Motor.c: 105: MXK_Release();
  9625  011060  ECE0  F08F         	call	i2_MXK_Release	;wreg free
  9626                           
  9627                           ;Motor.c: 106: Timer0_Stop();
  9628  011064  ECDD  F08F         	call	i2_Timer0_Stop	;wreg free
  9629                           
  9630                           ;Motor.c: 107: return;
  9631  011068  0012               	return	
  9632  01106A                     i2l8067:
  9633                           
  9634                           ;Motor.c: 108: }
  9635                           ;Motor.c: 111: MXK_Queue(lStepFunction);
  9636  01106A  C06B  F001         	movff	_lStepFunction,i2MXK_Queue@pCallback
  9637  01106E  C06C  F002         	movff	_lStepFunction+1,i2MXK_Queue@pCallback+1
  9638  011072  C06D  F003         	movff	_lStepFunction+2,i2MXK_Queue@pCallback+2
  9639  011076  ECAF  F08F         	call	i2_MXK_Queue	;wreg free
  9640  01107A  0012               	return		;funcret
  9641  01107C                     __end_ofi2_Motor_Step:
  9642                           	opt stack 0
  9643                           tosu	equ	0xFFF
  9644                           tosh	equ	0xFFE
  9645                           tosl	equ	0xFFD
  9646                           pclatu	equ	0xFFB
  9647                           pclath	equ	0xFFA
  9648                           tblptru	equ	0xFF8
  9649                           tblptrh	equ	0xFF7
  9650                           tblptrl	equ	0xFF6
  9651                           tablat	equ	0xFF5
  9652                           prodh	equ	0xFF4
  9653                           prodl	equ	0xFF3
  9654                           intcon	equ	0xFF2
  9655                           indf0	equ	0xFEF
  9656                           postinc0	equ	0xFEE
  9657                           fsr0h	equ	0xFEA
  9658                           fsr0l	equ	0xFE9
  9659                           wreg	equ	0xFE8
  9660                           postdec1	equ	0xFE5
  9661                           fsr1h	equ	0xFE2
  9662                           fsr1l	equ	0xFE1
  9663                           indf2	equ	0xFDF
  9664                           postinc2	equ	0xFDE
  9665                           postdec2	equ	0xFDD
  9666                           plusw2	equ	0xFDB
  9667                           fsr2h	equ	0xFDA
  9668                           fsr2l	equ	0xFD9
  9669                           status	equ	0xFD8
  9670                           
  9671 ;; *************** function i2_Timer0_Stop *****************
  9672 ;; Defined at:
  9673 ;;		line 89 in file "Library/Timer0.c"
  9674 ;; Parameters:    Size  Location     Type
  9675 ;;		None
  9676 ;; Auto vars:     Size  Location     Type
  9677 ;;		None
  9678 ;; Return value:  Size  Location     Type
  9679 ;;                  1    wreg      void 
  9680 ;; Registers used:
  9681 ;;		None
  9682 ;; Tracked objects:
  9683 ;;		On entry : 0/0
  9684 ;;		On exit  : 0/0
  9685 ;;		Unchanged: 0/0
  9686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9691 ;;Total ram usage:        0 bytes
  9692 ;; Hardware stack levels used:    1
  9693 ;; This function calls:
  9694 ;;		Nothing
  9695 ;; This function is called by:
  9696 ;;		_Timer0_ISR
  9697 ;;		i2_Motor_Step
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701                           	psect	text48
  9702  011FBA                     __ptext48:
  9703                           	opt stack 0
  9704  011FBA                     i2_Timer0_Stop:
  9705                           	opt stack 17
  9706                           
  9707                           ;Timer0.c: 91: INTCONbits.TMR0IE = 0;
  9708                           
  9709                           ;incstack = 0
  9710  011FBA  9AF2               	bcf	intcon,5,c	;volatile
  9711                           
  9712                           ;Timer0.c: 92: INTCONbits.TMR0IF = 0;
  9713  011FBC  94F2               	bcf	intcon,2,c	;volatile
  9714  011FBE  0012               	return		;funcret
  9715  011FC0                     __end_ofi2_Timer0_Stop:
  9716                           	opt stack 0
  9717                           tosu	equ	0xFFF
  9718                           tosh	equ	0xFFE
  9719                           tosl	equ	0xFFD
  9720                           pclatu	equ	0xFFB
  9721                           pclath	equ	0xFFA
  9722                           tblptru	equ	0xFF8
  9723                           tblptrh	equ	0xFF7
  9724                           tblptrl	equ	0xFF6
  9725                           tablat	equ	0xFF5
  9726                           prodh	equ	0xFF4
  9727                           prodl	equ	0xFF3
  9728                           intcon	equ	0xFF2
  9729                           indf0	equ	0xFEF
  9730                           postinc0	equ	0xFEE
  9731                           fsr0h	equ	0xFEA
  9732                           fsr0l	equ	0xFE9
  9733                           wreg	equ	0xFE8
  9734                           postdec1	equ	0xFE5
  9735                           fsr1h	equ	0xFE2
  9736                           fsr1l	equ	0xFE1
  9737                           indf2	equ	0xFDF
  9738                           postinc2	equ	0xFDE
  9739                           postdec2	equ	0xFDD
  9740                           plusw2	equ	0xFDB
  9741                           fsr2h	equ	0xFDA
  9742                           fsr2l	equ	0xFD9
  9743                           status	equ	0xFD8
  9744                           
  9745 ;; *************** function i2_Timer0_Restart *****************
  9746 ;; Defined at:
  9747 ;;		line 83 in file "Library/Timer0.c"
  9748 ;; Parameters:    Size  Location     Type
  9749 ;;		None
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;		None
  9752 ;; Return value:  Size  Location     Type
  9753 ;;                  1    wreg      void 
  9754 ;; Registers used:
  9755 ;;		None
  9756 ;; Tracked objects:
  9757 ;;		On entry : 0/0
  9758 ;;		On exit  : 0/0
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9765 ;;Total ram usage:        0 bytes
  9766 ;; Hardware stack levels used:    1
  9767 ;; This function calls:
  9768 ;;		Nothing
  9769 ;; This function is called by:
  9770 ;;		i2_Motor_Step
  9771 ;; This function uses a non-reentrant model
  9772 ;;
  9773                           
  9774                           	psect	text49
  9775  011F84                     __ptext49:
  9776                           	opt stack 0
  9777  011F84                     i2_Timer0_Restart:
  9778                           	opt stack 16
  9779                           
  9780                           ;Timer0.c: 85: TMR0 = COUNTER;
  9781                           
  9782                           ;incstack = 0
  9783  011F84  C02A  FFD6         	movff	_COUNTER,4054	;volatile
  9784  011F88  C02B  FFD7         	movff	_COUNTER+1,4055	;volatile
  9785                           
  9786                           ;Timer0.c: 87: INTCONbits.TMR0IE = 1;
  9787  011F8C  8AF2               	bsf	intcon,5,c	;volatile
  9788  011F8E  0012               	return		;funcret
  9789  011F90                     __end_ofi2_Timer0_Restart:
  9790                           	opt stack 0
  9791                           tosu	equ	0xFFF
  9792                           tosh	equ	0xFFE
  9793                           tosl	equ	0xFFD
  9794                           pclatu	equ	0xFFB
  9795                           pclath	equ	0xFFA
  9796                           tblptru	equ	0xFF8
  9797                           tblptrh	equ	0xFF7
  9798                           tblptrl	equ	0xFF6
  9799                           tablat	equ	0xFF5
  9800                           prodh	equ	0xFF4
  9801                           prodl	equ	0xFF3
  9802                           intcon	equ	0xFF2
  9803                           indf0	equ	0xFEF
  9804                           postinc0	equ	0xFEE
  9805                           fsr0h	equ	0xFEA
  9806                           fsr0l	equ	0xFE9
  9807                           wreg	equ	0xFE8
  9808                           postdec1	equ	0xFE5
  9809                           fsr1h	equ	0xFE2
  9810                           fsr1l	equ	0xFE1
  9811                           indf2	equ	0xFDF
  9812                           postinc2	equ	0xFDE
  9813                           postdec2	equ	0xFDD
  9814                           plusw2	equ	0xFDB
  9815                           fsr2h	equ	0xFDA
  9816                           fsr2l	equ	0xFD9
  9817                           status	equ	0xFD8
  9818                           
  9819 ;; *************** function i2_Port_SetPin *****************
  9820 ;; Defined at:
  9821 ;;		line 247 in file "Library/Port.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;  pInput          2   15[COMRAM] const PTR struct Port
  9824 ;;		 -> PortG(10), PortE(10), PortC(10), PortF(10), 
  9825 ;;  pPin            1   17[COMRAM] enum E6750
  9826 ;;  pValue          1   18[COMRAM] unsigned char 
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;  Port_SetPin     1   19[COMRAM] enum E6795
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  1    wreg      void 
  9831 ;; Registers used:
  9832 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9838 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9841 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9842 ;;Total ram usage:        5 bytes
  9843 ;; Hardware stack levels used:    1
  9844 ;; Hardware stack levels required when called:    3
  9845 ;; This function calls:
  9846 ;;		i2_Byte_SetBit
  9847 ;;		i2_Word_GetPair
  9848 ;; This function is called by:
  9849 ;;		i2_Motor_Step
  9850 ;; This function uses a non-reentrant model
  9851 ;;
  9852                           
  9853                           	psect	text50
  9854  011436                     __ptext50:
  9855                           	opt stack 0
  9856  011436                     i2_Port_SetPin:
  9857                           	opt stack 13
  9858                           
  9859                           ;Port.c: 249: ePinType Type = (ePinType)Word_GetPair(&pInput->mType, (UINT8)pPin);
  9860                           
  9861                           ;incstack = 0
  9862  011436  0E08               	movlw	8
  9863  011438  2410               	addwf	i2Port_SetPin@pInput,w,c
  9864  01143A  6E0D               	movwf	i2Word_GetPair@pInput,c
  9865  01143C  0E00               	movlw	0
  9866  01143E  2011               	addwfc	i2Port_SetPin@pInput+1,w,c
  9867  011440  6E0E               	movwf	i2Word_GetPair@pInput+1,c
  9868  011442  C012  F00F         	movff	i2Port_SetPin@pPin,i2Word_GetPair@pPair
  9869  011446  EC02  F08F         	call	i2_Word_GetPair	;wreg free
  9870  01144A  6E14               	movwf	i2Port_SetPin@Type,c
  9871                           
  9872                           ;Port.c: 250: switch (Type)
  9873  01144C  D03B               	goto	i2l7731
  9874  01144E                     i2l7717:
  9875                           
  9876                           ;Port.c: 256: pValue &= 1;
  9877  01144E  0E01               	movlw	1
  9878  011450  1613               	andwf	i2Port_SetPin@pValue,f,c
  9879                           
  9880                           ;Port.c: 257: Byte_SetBit(pInput->mDirection, pPin, pValue);
  9881  011452  EE20 F002          	lfsr	2,2
  9882  011456  5010               	movf	i2Port_SetPin@pInput,w,c
  9883  011458  26D9               	addwf	fsr2l,f,c
  9884  01145A  5011               	movf	i2Port_SetPin@pInput+1,w,c
  9885  01145C  22DA               	addwfc	fsr2h,f,c
  9886  01145E  CFDE F001          	movff	postinc2,i2Byte_SetBit@pInput
  9887  011462  CFDD F002          	movff	postdec2,i2Byte_SetBit@pInput+1
  9888  011466  C012  F003         	movff	i2Port_SetPin@pPin,i2Byte_SetBit@pBit
  9889  01146A  C013  F004         	movff	i2Port_SetPin@pValue,i2Byte_SetBit@pValue
  9890  01146E  ECA8  F08D         	call	i2_Byte_SetBit	;wreg free
  9891                           
  9892                           ;Port.c: 258: break;
  9893  011472  0012               	return	
  9894  011474                     i2l7721:
  9895                           
  9896                           ;Port.c: 261: pValue &= 1;
  9897  011474  0E01               	movlw	1
  9898  011476  1613               	andwf	i2Port_SetPin@pValue,f,c
  9899                           
  9900                           ;Port.c: 262: pValue ^= 1;
  9901  011478  0E01               	movlw	1
  9902  01147A  1A13               	xorwf	i2Port_SetPin@pValue,f,c
  9903                           
  9904                           ;Port.c: 263: Byte_SetBit(pInput->mDirection, pPin, pValue);
  9905  01147C  EE20 F002          	lfsr	2,2
  9906  011480  5010               	movf	i2Port_SetPin@pInput,w,c
  9907  011482  26D9               	addwf	fsr2l,f,c
  9908  011484  5011               	movf	i2Port_SetPin@pInput+1,w,c
  9909  011486  22DA               	addwfc	fsr2h,f,c
  9910  011488  CFDE F001          	movff	postinc2,i2Byte_SetBit@pInput
  9911  01148C  CFDD F002          	movff	postdec2,i2Byte_SetBit@pInput+1
  9912  011490  C012  F003         	movff	i2Port_SetPin@pPin,i2Byte_SetBit@pBit
  9913  011494  C013  F004         	movff	i2Port_SetPin@pValue,i2Byte_SetBit@pValue
  9914  011498  ECA8  F08D         	call	i2_Byte_SetBit	;wreg free
  9915                           
  9916                           ;Port.c: 264: break;
  9917  01149C  0012               	return	
  9918  01149E                     i2l7725:
  9919                           
  9920                           ;Port.c: 266: pValue &= 1;
  9921  01149E  0E01               	movlw	1
  9922  0114A0  1613               	andwf	i2Port_SetPin@pValue,f,c
  9923                           
  9924                           ;Port.c: 267: Byte_SetBit(pInput->mOutput, pPin, pValue);
  9925  0114A2  EE20 F004          	lfsr	2,4
  9926  0114A6  5010               	movf	i2Port_SetPin@pInput,w,c
  9927  0114A8  26D9               	addwf	fsr2l,f,c
  9928  0114AA  5011               	movf	i2Port_SetPin@pInput+1,w,c
  9929  0114AC  22DA               	addwfc	fsr2h,f,c
  9930  0114AE  CFDE F001          	movff	postinc2,i2Byte_SetBit@pInput
  9931  0114B2  CFDD F002          	movff	postdec2,i2Byte_SetBit@pInput+1
  9932  0114B6  C012  F003         	movff	i2Port_SetPin@pPin,i2Byte_SetBit@pBit
  9933  0114BA  C013  F004         	movff	i2Port_SetPin@pValue,i2Byte_SetBit@pValue
  9934  0114BE  ECA8  F08D         	call	i2_Byte_SetBit	;wreg free
  9935                           
  9936                           ;Port.c: 269: }
  9937                           
  9938                           ;Port.c: 268: break;
  9939  0114C2  0012               	return	
  9940  0114C4                     i2l7731:
  9941  0114C4  5014               	movf	i2Port_SetPin@Type,w,c
  9942                           
  9943                           ; Switch size 1, requested type "space"
  9944                           ; Number of cases is 4, Range of values is 0 to 3
  9945                           ; switch strategies available:
  9946                           ; Name         Instructions Cycles
  9947                           ; simple_byte           13     7 (average)
  9948                           ;	Chosen strategy is simple_byte
  9949  0114C6  0A00               	xorlw	0	; case 0
  9950  0114C8  B4D8               	btfsc	status,2,c
  9951  0114CA  0012               	return	
  9952  0114CC  0A01               	xorlw	1	; case 1
  9953  0114CE  B4D8               	btfsc	status,2,c
  9954  0114D0  D7BE               	goto	i2l7717
  9955  0114D2  0A03               	xorlw	3	; case 2
  9956  0114D4  B4D8               	btfsc	status,2,c
  9957  0114D6  D7CE               	goto	i2l7721
  9958  0114D8  0A01               	xorlw	1	; case 3
  9959  0114DA  A4D8               	btfss	status,2,c
  9960  0114DC  0012               	return	
  9961  0114DE  D7DF               	goto	i2l7725
  9962  0114E0                     __end_ofi2_Port_SetPin:
  9963                           	opt stack 0
  9964                           tosu	equ	0xFFF
  9965                           tosh	equ	0xFFE
  9966                           tosl	equ	0xFFD
  9967                           pclatu	equ	0xFFB
  9968                           pclath	equ	0xFFA
  9969                           tblptru	equ	0xFF8
  9970                           tblptrh	equ	0xFF7
  9971                           tblptrl	equ	0xFF6
  9972                           tablat	equ	0xFF5
  9973                           prodh	equ	0xFF4
  9974                           prodl	equ	0xFF3
  9975                           intcon	equ	0xFF2
  9976                           indf0	equ	0xFEF
  9977                           postinc0	equ	0xFEE
  9978                           fsr0h	equ	0xFEA
  9979                           fsr0l	equ	0xFE9
  9980                           wreg	equ	0xFE8
  9981                           postdec1	equ	0xFE5
  9982                           fsr1h	equ	0xFE2
  9983                           fsr1l	equ	0xFE1
  9984                           indf2	equ	0xFDF
  9985                           postinc2	equ	0xFDE
  9986                           postdec2	equ	0xFDD
  9987                           plusw2	equ	0xFDB
  9988                           fsr2h	equ	0xFDA
  9989                           fsr2l	equ	0xFD9
  9990                           status	equ	0xFD8
  9991                           
  9992 ;; *************** function i2_Word_GetPair *****************
  9993 ;; Defined at:
  9994 ;;		line 156 in file "Library/Types.c"
  9995 ;; Parameters:    Size  Location     Type
  9996 ;;  pInput          2   12[COMRAM] PTR struct Word
  9997 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  9998 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
  9999 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
 10000 ;;		 -> PortC(10), PortF(10), NULL(0), 
 10001 ;;  pPair           1   14[COMRAM] unsigned char 
 10002 ;; Auto vars:     Size  Location     Type
 10003 ;;		None
 10004 ;; Return value:  Size  Location     Type
 10005 ;;                  1    wreg      unsigned char 
 10006 ;; Registers used:
 10007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10008 ;; Tracked objects:
 10009 ;;		On entry : 0/0
 10010 ;;		On exit  : 0/0
 10011 ;;		Unchanged: 0/0
 10012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10013 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10016 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10017 ;;Total ram usage:        3 bytes
 10018 ;; Hardware stack levels used:    1
 10019 ;; Hardware stack levels required when called:    2
 10020 ;; This function calls:
 10021 ;;		i2_Byte_GetPair
 10022 ;; This function is called by:
 10023 ;;		i2_Port_SetPin
 10024 ;; This function uses a non-reentrant model
 10025 ;;
 10026                           
 10027                           	psect	text51
 10028  011E04                     __ptext51:
 10029                           	opt stack 0
 10030  011E04                     i2_Word_GetPair:
 10031                           	opt stack 13
 10032                           
 10033                           ;Types.c: 158: if (pPair >= 4)
 10034                           
 10035                           ;incstack = 0
 10036  011E04  0E03               	movlw	3
 10037  011E06  640F               	cpfsgt	i2Word_GetPair@pPair,c
 10038  011E08  D00C               	goto	i2l7437
 10039                           
 10040                           ;Types.c: 159: return Byte_GetPair(&(pInput->MS_Byte), pPair - 4);
 10041  011E0A  0E01               	movlw	1
 10042  011E0C  240D               	addwf	i2Word_GetPair@pInput,w,c
 10043  011E0E  6E0A               	movwf	i2Byte_GetPair@pInput,c
 10044  011E10  0E00               	movlw	0
 10045  011E12  200E               	addwfc	i2Word_GetPair@pInput+1,w,c
 10046  011E14  6E0B               	movwf	i2Byte_GetPair@pInput+1,c
 10047  011E16  500F               	movf	i2Word_GetPair@pPair,w,c
 10048  011E18  0FFC               	addlw	252
 10049  011E1A  6E0C               	movwf	i2Byte_GetPair@pPair,c
 10050  011E1C  EC89  F08F         	call	i2_Byte_GetPair	;wreg free
 10051  011E20  0012               	return	
 10052  011E22                     i2l7437:
 10053                           
 10054                           ;Types.c: 160: else
 10055                           ;Types.c: 161: return Byte_GetPair(&(pInput->LS_Byte), pPair);
 10056  011E22  C00D  F00A         	movff	i2Word_GetPair@pInput,i2Byte_GetPair@pInput
 10057  011E26  C00E  F00B         	movff	i2Word_GetPair@pInput+1,i2Byte_GetPair@pInput+1
 10058  011E2A  C00F  F00C         	movff	i2Word_GetPair@pPair,i2Byte_GetPair@pPair
 10059  011E2E  EC89  F08F         	call	i2_Byte_GetPair	;wreg free
 10060  011E32  0012               	return	
 10061  011E34                     __end_ofi2_Word_GetPair:
 10062                           	opt stack 0
 10063                           tosu	equ	0xFFF
 10064                           tosh	equ	0xFFE
 10065                           tosl	equ	0xFFD
 10066                           pclatu	equ	0xFFB
 10067                           pclath	equ	0xFFA
 10068                           tblptru	equ	0xFF8
 10069                           tblptrh	equ	0xFF7
 10070                           tblptrl	equ	0xFF6
 10071                           tablat	equ	0xFF5
 10072                           prodh	equ	0xFF4
 10073                           prodl	equ	0xFF3
 10074                           intcon	equ	0xFF2
 10075                           indf0	equ	0xFEF
 10076                           postinc0	equ	0xFEE
 10077                           fsr0h	equ	0xFEA
 10078                           fsr0l	equ	0xFE9
 10079                           wreg	equ	0xFE8
 10080                           postdec1	equ	0xFE5
 10081                           fsr1h	equ	0xFE2
 10082                           fsr1l	equ	0xFE1
 10083                           indf2	equ	0xFDF
 10084                           postinc2	equ	0xFDE
 10085                           postdec2	equ	0xFDD
 10086                           plusw2	equ	0xFDB
 10087                           fsr2h	equ	0xFDA
 10088                           fsr2l	equ	0xFD9
 10089                           status	equ	0xFD8
 10090                           
 10091 ;; *************** function i2_Byte_GetPair *****************
 10092 ;; Defined at:
 10093 ;;		line 87 in file "Library/Types.c"
 10094 ;; Parameters:    Size  Location     Type
 10095 ;;  pInput          2    9[COMRAM] PTR struct Byte
 10096 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
 10097 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
 10098 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
 10099 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
 10100 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
 10101 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
 10102 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
 10103 ;;		 -> NULL(0), 
 10104 ;;  pPair           1   11[COMRAM] unsigned char 
 10105 ;; Auto vars:     Size  Location     Type
 10106 ;;		None
 10107 ;; Return value:  Size  Location     Type
 10108 ;;                  1    wreg      unsigned char 
 10109 ;; Registers used:
 10110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10111 ;; Tracked objects:
 10112 ;;		On entry : 0/0
 10113 ;;		On exit  : 0/0
 10114 ;;		Unchanged: 0/0
 10115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10116 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10119 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10120 ;;Total ram usage:        3 bytes
 10121 ;; Hardware stack levels used:    1
 10122 ;; Hardware stack levels required when called:    1
 10123 ;; This function calls:
 10124 ;;		i2_Byte_GetZone
 10125 ;; This function is called by:
 10126 ;;		i2_Word_GetPair
 10127 ;; This function uses a non-reentrant model
 10128 ;;
 10129                           
 10130                           	psect	text52
 10131  011F12                     __ptext52:
 10132                           	opt stack 0
 10133  011F12                     i2_Byte_GetPair:
 10134                           	opt stack 13
 10135                           
 10136                           ;Types.c: 89: return Byte_GetZone(pInput, 4, pPair, 2);
 10137                           
 10138                           ;incstack = 0
 10139  011F12  C00A  F001         	movff	i2Byte_GetPair@pInput,i2Byte_GetZone@pInput
 10140  011F16  C00B  F002         	movff	i2Byte_GetPair@pInput+1,i2Byte_GetZone@pInput+1
 10141  011F1A  0E04               	movlw	4
 10142  011F1C  6E03               	movwf	i2Byte_GetZone@pMax,c
 10143  011F1E  C00C  F004         	movff	i2Byte_GetPair@pPair,i2Byte_GetZone@pChunk
 10144  011F22  0E02               	movlw	2
 10145  011F24  6E05               	movwf	i2Byte_GetZone@pChunkSize,c
 10146  011F26  ECF5  F08B         	call	i2_Byte_GetZone	;wreg free
 10147  011F2A  0012               	return	
 10148  011F2C                     __end_ofi2_Byte_GetPair:
 10149                           	opt stack 0
 10150                           tosu	equ	0xFFF
 10151                           tosh	equ	0xFFE
 10152                           tosl	equ	0xFFD
 10153                           pclatu	equ	0xFFB
 10154                           pclath	equ	0xFFA
 10155                           tblptru	equ	0xFF8
 10156                           tblptrh	equ	0xFF7
 10157                           tblptrl	equ	0xFF6
 10158                           tablat	equ	0xFF5
 10159                           prodh	equ	0xFF4
 10160                           prodl	equ	0xFF3
 10161                           intcon	equ	0xFF2
 10162                           indf0	equ	0xFEF
 10163                           postinc0	equ	0xFEE
 10164                           fsr0h	equ	0xFEA
 10165                           fsr0l	equ	0xFE9
 10166                           wreg	equ	0xFE8
 10167                           postdec1	equ	0xFE5
 10168                           fsr1h	equ	0xFE2
 10169                           fsr1l	equ	0xFE1
 10170                           indf2	equ	0xFDF
 10171                           postinc2	equ	0xFDE
 10172                           postdec2	equ	0xFDD
 10173                           plusw2	equ	0xFDB
 10174                           fsr2h	equ	0xFDA
 10175                           fsr2l	equ	0xFD9
 10176                           status	equ	0xFD8
 10177                           
 10178 ;; *************** function i2_Byte_GetZone *****************
 10179 ;; Defined at:
 10180 ;;		line 64 in file "Library/Types.c"
 10181 ;; Parameters:    Size  Location     Type
 10182 ;;  pInput          2    0[COMRAM] PTR struct Byte
 10183 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
 10184 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
 10185 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
 10186 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
 10187 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
 10188 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
 10189 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
 10190 ;;		 -> NULL(0), 
 10191 ;;  pMax            1    2[COMRAM] unsigned char 
 10192 ;;  pChunk          1    3[COMRAM] unsigned char 
 10193 ;;  pChunkSize      1    4[COMRAM] unsigned char 
 10194 ;; Auto vars:     Size  Location     Type
 10195 ;;  Byte_GetZone    1    8[COMRAM] unsigned char 
 10196 ;;  Byte_GetZone    1    7[COMRAM] unsigned char 
 10197 ;;  Byte_GetZone    1    6[COMRAM] unsigned char 
 10198 ;; Return value:  Size  Location     Type
 10199 ;;                  1    wreg      unsigned char 
 10200 ;; Registers used:
 10201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10202 ;; Tracked objects:
 10203 ;;		On entry : 0/0
 10204 ;;		On exit  : 0/0
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10207 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10208 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10210 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10211 ;;Total ram usage:        9 bytes
 10212 ;; Hardware stack levels used:    1
 10213 ;; This function calls:
 10214 ;;		Nothing
 10215 ;; This function is called by:
 10216 ;;		i2_Byte_GetPair
 10217 ;; This function uses a non-reentrant model
 10218 ;;
 10219                           
 10220                           	psect	text53
 10221  0117EA                     __ptext53:
 10222                           	opt stack 0
 10223  0117EA                     i2_Byte_GetZone:
 10224                           	opt stack 13
 10225                           
 10226                           ;Types.c: 66: UINT8 Output = pInput->mBits;
 10227                           
 10228                           ;incstack = 0
 10229  0117EA  C001  FFF6         	movff	i2Byte_GetZone@pInput,tblptrl
 10230  0117EE  C002  FFF7         	movff	i2Byte_GetZone@pInput+1,tblptrh
 10231  0117F2  0E00               	movlw	low (__mediumconst shr (0+16))
 10232  0117F4  6EF8               	movwf	tblptru,c
 10233  0117F6  0E0F               	movlw	(high __ramtop+-1)
 10234  0117F8  64F7               	cpfsgt	tblptrh,c
 10235  0117FA  D003               	bra	i2u356_47
 10236  0117FC  0008               	tblrd		*
 10237  0117FE  50F5               	movf	tablat,w,c
 10238  011800  D005               	bra	i2u356_40
 10239  011802                     i2u356_47:
 10240  011802  CFF6 FFE9          	movff	tblptrl,fsr0l
 10241  011806  CFF7 FFEA          	movff	tblptrh,fsr0h
 10242  01180A  50EF               	movf	indf0,w,c
 10243  01180C                     i2u356_40:
 10244  01180C  6E09               	movwf	i2Byte_GetZone@Output,c
 10245                           
 10246                           ;Types.c: 67: UINT8 MASK = MASKS[pChunkSize];
 10247  01180E  5005               	movf	i2Byte_GetZone@pChunkSize,w,c
 10248  011810  0D01               	mullw	1
 10249  011812  0E77               	movlw	low _MASKS
 10250  011814  24F3               	addwf	prodl,w,c
 10251  011816  6EF6               	movwf	tblptrl,c
 10252  011818  0EFD               	movlw	high _MASKS
 10253  01181A  20F4               	addwfc	prodh,w,c
 10254  01181C  6EF7               	movwf	tblptrh,c
 10255  01181E                     	if	1	;There are 3 active tblptr bytes
 10256  01181E  6AF8               	clrf	tblptru,c
 10257  011820  0E00               	movlw	low (__mediumconst shr (0+16))
 10258  011822  22F8               	addwfc	tblptru,f,c
 10259  011824                     	endif
 10260  011824  0008               	tblrd		*
 10261  011826  CFF5 F007          	movff	tablat,i2Byte_GetZone@MASK
 10262                           
 10263                           ;Types.c: 68: UINT8 Offset = 0;
 10264  01182A  0E00               	movlw	0
 10265  01182C  6E08               	movwf	i2Byte_GetZone@Offset,c
 10266                           
 10267                           ;Types.c: 70: while (pChunk >= pMax)
 10268  01182E  D003               	goto	i2l6855
 10269  011830                     i2l6851:
 10270                           
 10271                           ;Types.c: 71: {
 10272                           ;Types.c: 72: pChunk -= pMax;
 10273  011830  5003               	movf	i2Byte_GetZone@pMax,w,c
 10274  011832  5E04               	subwf	i2Byte_GetZone@pChunk,f,c
 10275                           
 10276                           ;Types.c: 73: Offset += 1;
 10277  011834  2A08               	incf	i2Byte_GetZone@Offset,f,c
 10278  011836                     i2l6855:
 10279  011836  5003               	movf	i2Byte_GetZone@pMax,w,c
 10280  011838  5C04               	subwf	i2Byte_GetZone@pChunk,w,c
 10281  01183A  B0D8               	btfsc	status,0,c
 10282  01183C  D7F9               	goto	i2l6851
 10283                           
 10284                           ;Types.c: 74: }
 10285                           ;Types.c: 75: pChunk *= pChunkSize;
 10286  01183E  5005               	movf	i2Byte_GetZone@pChunkSize,w,c
 10287  011840  0204               	mulwf	i2Byte_GetZone@pChunk,c
 10288  011842  50F3               	movf	prodl,w,c
 10289  011844  6E04               	movwf	i2Byte_GetZone@pChunk,c
 10290                           
 10291                           ;Types.c: 76: pChunk += Offset;
 10292  011846  5008               	movf	i2Byte_GetZone@Offset,w,c
 10293  011848  2604               	addwf	i2Byte_GetZone@pChunk,f,c
 10294                           
 10295                           ;Types.c: 78: Output >>= pChunk;
 10296  01184A  2804               	incf	i2Byte_GetZone@pChunk,w,c
 10297  01184C  6E06               	movwf	??i2_Byte_GetZone& (0+255),c
 10298  01184E  D002               	goto	i2u358_40
 10299  011850                     i2u358_45:
 10300  011850  90D8               	bcf	status,0,c
 10301  011852  3209               	rrcf	i2Byte_GetZone@Output,f,c
 10302  011854                     i2u358_40:
 10303  011854  2E06               	decfsz	??i2_Byte_GetZone& (0+255),f,c
 10304  011856  D7FC               	goto	i2u358_45
 10305                           
 10306                           ;Types.c: 79: Output &= MASK;
 10307  011858  5007               	movf	i2Byte_GetZone@MASK,w,c
 10308  01185A  1609               	andwf	i2Byte_GetZone@Output,f,c
 10309                           
 10310                           ;Types.c: 80: return Output;
 10311  01185C  5009               	movf	i2Byte_GetZone@Output,w,c
 10312  01185E  0012               	return	
 10313  011860                     __end_ofi2_Byte_GetZone:
 10314                           	opt stack 0
 10315                           tosu	equ	0xFFF
 10316                           tosh	equ	0xFFE
 10317                           tosl	equ	0xFFD
 10318                           pclatu	equ	0xFFB
 10319                           pclath	equ	0xFFA
 10320                           tblptru	equ	0xFF8
 10321                           tblptrh	equ	0xFF7
 10322                           tblptrl	equ	0xFF6
 10323                           tablat	equ	0xFF5
 10324                           prodh	equ	0xFF4
 10325                           prodl	equ	0xFF3
 10326                           intcon	equ	0xFF2
 10327                           indf0	equ	0xFEF
 10328                           postinc0	equ	0xFEE
 10329                           fsr0h	equ	0xFEA
 10330                           fsr0l	equ	0xFE9
 10331                           wreg	equ	0xFE8
 10332                           postdec1	equ	0xFE5
 10333                           fsr1h	equ	0xFE2
 10334                           fsr1l	equ	0xFE1
 10335                           indf2	equ	0xFDF
 10336                           postinc2	equ	0xFDE
 10337                           postdec2	equ	0xFDD
 10338                           plusw2	equ	0xFDB
 10339                           fsr2h	equ	0xFDA
 10340                           fsr2l	equ	0xFD9
 10341                           status	equ	0xFD8
 10342                           
 10343 ;; *************** function i2_Byte_SetBit *****************
 10344 ;; Defined at:
 10345 ;;		line 32 in file "Library/Types.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;  pInput          2    0[COMRAM] PTR struct Byte
 10348 ;;		 -> SSP2CON2(1), SSP1CON2(1), SSP2CON1(1), SSP2STAT(1), 
 10349 ;;		 -> SSP1CON1(1), SSP1STAT(1), TRISG(1), TRISF(1), 
 10350 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
 10351 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
 10352 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
 10353 ;;		 -> NULL(0), 
 10354 ;;  pBit            1    2[COMRAM] unsigned char 
 10355 ;;  pValue          1    3[COMRAM] unsigned char 
 10356 ;; Auto vars:     Size  Location     Type
 10357 ;;		None
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  1    wreg      void 
 10360 ;; Registers used:
 10361 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10369 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10370 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10371 ;;Total ram usage:        7 bytes
 10372 ;; Hardware stack levels used:    1
 10373 ;; This function calls:
 10374 ;;		Nothing
 10375 ;; This function is called by:
 10376 ;;		i2_Port_SetPin
 10377 ;; This function uses a non-reentrant model
 10378 ;;
 10379                           
 10380                           	psect	text54
 10381  011B50                     __ptext54:
 10382                           	opt stack 0
 10383  011B50                     i2_Byte_SetBit:
 10384                           	opt stack 15
 10385                           
 10386                           ;Types.c: 34: pValue &= 1;
 10387                           
 10388                           ;incstack = 0
 10389  011B50  0E01               	movlw	1
 10390  011B52  1604               	andwf	i2Byte_SetBit@pValue,f,c
 10391                           
 10392                           ;Types.c: 35: pInput->mBits &= ~(1 << pBit);
 10393  011B54  C003  F005         	movff	i2Byte_SetBit@pBit,??i2_Byte_SetBit
 10394  011B58  0E01               	movlw	1
 10395  011B5A  6E06               	movwf	(??i2_Byte_SetBit+1)& (0+255),c
 10396  011B5C  2A05               	incf	??i2_Byte_SetBit,f,c
 10397  011B5E  D002               	goto	i2u405_44
 10398  011B60                     i2u405_45:
 10399  011B60  90D8               	bcf	status,0,c
 10400  011B62  3606               	rlcf	??i2_Byte_SetBit+1,f,c
 10401  011B64                     i2u405_44:
 10402  011B64  2E05               	decfsz	??i2_Byte_SetBit,f,c
 10403  011B66  D7FC               	goto	i2u405_45
 10404  011B68  5006               	movf	??i2_Byte_SetBit+1,w,c
 10405  011B6A  0AFF               	xorlw	255
 10406  011B6C  6E07               	movwf	(??i2_Byte_SetBit+2)& (0+255),c
 10407  011B6E  C001  FFD9         	movff	i2Byte_SetBit@pInput,fsr2l
 10408  011B72  C002  FFDA         	movff	i2Byte_SetBit@pInput+1,fsr2h
 10409  011B76  5007               	movf	??i2_Byte_SetBit+2,w,c
 10410  011B78  16DF               	andwf	indf2,f,c
 10411                           
 10412                           ;Types.c: 36: pInput->mBits |= pValue << pBit;
 10413  011B7A  C003  F005         	movff	i2Byte_SetBit@pBit,??i2_Byte_SetBit
 10414  011B7E  C004  F006         	movff	i2Byte_SetBit@pValue,??i2_Byte_SetBit+1
 10415  011B82  2A05               	incf	??i2_Byte_SetBit,f,c
 10416  011B84  D002               	goto	i2u406_44
 10417  011B86                     i2u406_45:
 10418  011B86  90D8               	bcf	status,0,c
 10419  011B88  3606               	rlcf	??i2_Byte_SetBit+1,f,c
 10420  011B8A                     i2u406_44:
 10421  011B8A  2E05               	decfsz	??i2_Byte_SetBit,f,c
 10422  011B8C  D7FC               	goto	i2u406_45
 10423  011B8E  C001  FFD9         	movff	i2Byte_SetBit@pInput,fsr2l
 10424  011B92  C002  FFDA         	movff	i2Byte_SetBit@pInput+1,fsr2h
 10425  011B96  5006               	movf	??i2_Byte_SetBit+1,w,c
 10426  011B98  12DF               	iorwf	indf2,f,c
 10427  011B9A  0012               	return		;funcret
 10428  011B9C                     __end_ofi2_Byte_SetBit:
 10429                           	opt stack 0
 10430                           tosu	equ	0xFFF
 10431                           tosh	equ	0xFFE
 10432                           tosl	equ	0xFFD
 10433                           pclatu	equ	0xFFB
 10434                           pclath	equ	0xFFA
 10435                           tblptru	equ	0xFF8
 10436                           tblptrh	equ	0xFF7
 10437                           tblptrl	equ	0xFF6
 10438                           tablat	equ	0xFF5
 10439                           prodh	equ	0xFF4
 10440                           prodl	equ	0xFF3
 10441                           intcon	equ	0xFF2
 10442                           indf0	equ	0xFEF
 10443                           postinc0	equ	0xFEE
 10444                           fsr0h	equ	0xFEA
 10445                           fsr0l	equ	0xFE9
 10446                           wreg	equ	0xFE8
 10447                           postdec1	equ	0xFE5
 10448                           fsr1h	equ	0xFE2
 10449                           fsr1l	equ	0xFE1
 10450                           indf2	equ	0xFDF
 10451                           postinc2	equ	0xFDE
 10452                           postdec2	equ	0xFDD
 10453                           plusw2	equ	0xFDB
 10454                           fsr2h	equ	0xFDA
 10455                           fsr2l	equ	0xFD9
 10456                           status	equ	0xFD8
 10457                           
 10458 ;; *************** function i2_MXK_SwitchTo *****************
 10459 ;; Defined at:
 10460 ;;		line 105 in file "Library/MXK.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;  pModule         1    wreg     enum E6925
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;  pModule         1    7[COMRAM] enum E6925
 10465 ;;  MXK_SwitchTo    1    6[COMRAM] unsigned char 
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  1    wreg      unsigned char 
 10468 ;; Registers used:
 10469 ;;		wreg, status,2, status,0, cstack
 10470 ;; Tracked objects:
 10471 ;;		On entry : 0/0
 10472 ;;		On exit  : 0/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10476 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;Total ram usage:        2 bytes
 10480 ;; Hardware stack levels used:    1
 10481 ;; Hardware stack levels required when called:    1
 10482 ;; This function calls:
 10483 ;;		i2_delay_us
 10484 ;; This function is called by:
 10485 ;;		i2_Motor_Step
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           	psect	text55
 10490  011D9E                     __ptext55:
 10491                           	opt stack 0
 10492  011D9E                     i2_MXK_SwitchTo:
 10493                           	opt stack 15
 10494                           
 10495                           ;incstack = 0
 10496                           ;i2MXK_SwitchTo@pModule stored from wreg
 10497  011D9E  6E08               	movwf	i2MXK_SwitchTo@pModule,c
 10498                           
 10499                           ;MXK.c: 107: UINT8 CUR = 0xF & PORTG;
 10500  011DA0  5086               	movf	3974,w,c	;volatile
 10501  011DA2  0B0F               	andlw	15
 10502  011DA4  6E07               	movwf	i2MXK_SwitchTo@CUR,c
 10503                           
 10504                           ;MXK.c: 109: if (Bus_State == eMXK_Busy)
 10505  011DA6  5044               	movf	_Bus_State,w,c
 10506  011DA8  A4D8               	btfss	status,2,c
 10507  011DAA  D002               	goto	i2l7741
 10508                           
 10509                           ;MXK.c: 110: return 0;
 10510  011DAC  0E00               	movlw	0
 10511  011DAE  0012               	return	
 10512  011DB0                     i2l7741:
 10513                           
 10514                           ;MXK.c: 112: Bus_State = eMXK_Busy;
 10515  011DB0  0E00               	movlw	0
 10516  011DB2  6E44               	movwf	_Bus_State,c
 10517                           
 10518                           ;MXK.c: 114: if (CUR != pModule)
 10519  011DB4  5008               	movf	i2MXK_SwitchTo@pModule,w,c
 10520  011DB6  1807               	xorwf	i2MXK_SwitchTo@CUR,w,c
 10521  011DB8  B4D8               	btfsc	status,2,c
 10522  011DBA  D00A               	goto	i2l7749
 10523                           
 10524                           ;MXK.c: 115: {
 10525                           ;MXK.c: 116: PORTG &= ~(0xF);
 10526  011DBC  0EF0               	movlw	240
 10527  011DBE  1686               	andwf	3974,f,c	;volatile
 10528                           
 10529                           ;MXK.c: 117: PORTG |= pModule;
 10530  011DC0  5008               	movf	i2MXK_SwitchTo@pModule,w,c
 10531  011DC2  1286               	iorwf	3974,f,c	;volatile
 10532                           
 10533                           ;MXK.c: 120: delay_us(10);
 10534  011DC4  0E00               	movlw	0
 10535  011DC6  6E02               	movwf	i2delay_us@us+1,c
 10536  011DC8  0E0A               	movlw	10
 10537  011DCA  6E01               	movwf	i2delay_us@us,c
 10538  011DCC  EC36  F08E         	call	i2_delay_us	;wreg free
 10539  011DD0                     i2l7749:
 10540                           
 10541                           ;MXK.c: 121: }
 10542                           ;MXK.c: 122: return 1;
 10543  011DD0  0E01               	movlw	1
 10544  011DD2  0012               	return	
 10545  011DD4                     __end_ofi2_MXK_SwitchTo:
 10546                           	opt stack 0
 10547                           tosu	equ	0xFFF
 10548                           tosh	equ	0xFFE
 10549                           tosl	equ	0xFFD
 10550                           pclatu	equ	0xFFB
 10551                           pclath	equ	0xFFA
 10552                           tblptru	equ	0xFF8
 10553                           tblptrh	equ	0xFF7
 10554                           tblptrl	equ	0xFF6
 10555                           tablat	equ	0xFF5
 10556                           prodh	equ	0xFF4
 10557                           prodl	equ	0xFF3
 10558                           intcon	equ	0xFF2
 10559                           indf0	equ	0xFEF
 10560                           postinc0	equ	0xFEE
 10561                           fsr0h	equ	0xFEA
 10562                           fsr0l	equ	0xFE9
 10563                           wreg	equ	0xFE8
 10564                           postdec1	equ	0xFE5
 10565                           fsr1h	equ	0xFE2
 10566                           fsr1l	equ	0xFE1
 10567                           indf2	equ	0xFDF
 10568                           postinc2	equ	0xFDE
 10569                           postdec2	equ	0xFDD
 10570                           plusw2	equ	0xFDB
 10571                           fsr2h	equ	0xFDA
 10572                           fsr2l	equ	0xFD9
 10573                           status	equ	0xFD8
 10574                           
 10575 ;; *************** function i2_delay_us *****************
 10576 ;; Defined at:
 10577 ;;		line 255 in file "Library/Types.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;  us              2    0[COMRAM] unsigned short 
 10580 ;; Auto vars:     Size  Location     Type
 10581 ;;  delay_us        4    2[COMRAM] unsigned long 
 10582 ;; Return value:  Size  Location     Type
 10583 ;;                  1    wreg      void 
 10584 ;; Registers used:
 10585 ;;		wreg, status,2, status,0
 10586 ;; Tracked objects:
 10587 ;;		On entry : 0/0
 10588 ;;		On exit  : 0/0
 10589 ;;		Unchanged: 0/0
 10590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10592 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10594 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10595 ;;Total ram usage:        6 bytes
 10596 ;; Hardware stack levels used:    1
 10597 ;; This function calls:
 10598 ;;		Nothing
 10599 ;; This function is called by:
 10600 ;;		i2_MXK_SwitchTo
 10601 ;; This function uses a non-reentrant model
 10602 ;;
 10603                           
 10604                           	psect	text56
 10605  011C6C                     __ptext56:
 10606                           	opt stack 0
 10607  011C6C                     i2_delay_us:
 10608                           	opt stack 15
 10609                           
 10610                           ;Types.c: 256: unsigned long u;
 10611                           ;Types.c: 257: while (us--) {
 10612                           
 10613                           ;incstack = 0
 10614  011C6C  D016               	goto	i2l7451
 10615  011C6E                     i2l7443:
 10616                           
 10617                           ;Types.c: 259: for (u = 0; u < ((((48*1000000L) / 4000UL) / 10UL)/1000UL); u++) {
 10618  011C6E  0E00               	movlw	0
 10619  011C70  6E03               	movwf	i2delay_us@u,c
 10620  011C72  0E00               	movlw	0
 10621  011C74  6E04               	movwf	i2delay_us@u+1,c
 10622  011C76  0E00               	movlw	0
 10623  011C78  6E05               	movwf	i2delay_us@u+2,c
 10624  011C7A  0E00               	movlw	0
 10625  011C7C  6E06               	movwf	i2delay_us@u+3,c
 10626  011C7E                     i2l7445:
 10627  011C7E  5003               	movf	i2delay_us@u,w,c
 10628  011C80  1004               	iorwf	i2delay_us@u+1,w,c
 10629  011C82  1005               	iorwf	i2delay_us@u+2,w,c
 10630  011C84  1006               	iorwf	i2delay_us@u+3,w,c
 10631  011C86  A4D8               	btfss	status,2,c
 10632  011C88  D008               	goto	i2l7451
 10633  011C8A  F000               	nop		; ;# 
 10634  011C8C  0E01               	movlw	1
 10635  011C8E  2603               	addwf	i2delay_us@u,f,c
 10636  011C90  0E00               	movlw	0
 10637  011C92  2204               	addwfc	i2delay_us@u+1,f,c
 10638  011C94  2205               	addwfc	i2delay_us@u+2,f,c
 10639  011C96  2206               	addwfc	i2delay_us@u+3,f,c
 10640  011C98  D7F2               	goto	i2l7445
 10641  011C9A                     i2l7451:
 10642  011C9A  0601               	decf	i2delay_us@us,f,c
 10643  011C9C  A0D8               	btfss	status,0,c
 10644  011C9E  0602               	decf	i2delay_us@us+1,f,c
 10645  011CA0  2801               	incf	i2delay_us@us,w,c
 10646  011CA2  E1E5               	bnz	i2l7443
 10647  011CA4  2802               	incf	i2delay_us@us+1,w,c
 10648  011CA6  B4D8               	btfsc	status,2,c
 10649  011CA8  0012               	return	
 10650  011CAA  D7E1               	goto	i2l7443
 10651  011CAC                     __end_ofi2_delay_us:
 10652                           	opt stack 0
 10653                           tosu	equ	0xFFF
 10654                           tosh	equ	0xFFE
 10655                           tosl	equ	0xFFD
 10656                           pclatu	equ	0xFFB
 10657                           pclath	equ	0xFFA
 10658                           tblptru	equ	0xFF8
 10659                           tblptrh	equ	0xFF7
 10660                           tblptrl	equ	0xFF6
 10661                           tablat	equ	0xFF5
 10662                           prodh	equ	0xFF4
 10663                           prodl	equ	0xFF3
 10664                           intcon	equ	0xFF2
 10665                           indf0	equ	0xFEF
 10666                           postinc0	equ	0xFEE
 10667                           fsr0h	equ	0xFEA
 10668                           fsr0l	equ	0xFE9
 10669                           wreg	equ	0xFE8
 10670                           postdec1	equ	0xFE5
 10671                           fsr1h	equ	0xFE2
 10672                           fsr1l	equ	0xFE1
 10673                           indf2	equ	0xFDF
 10674                           postinc2	equ	0xFDE
 10675                           postdec2	equ	0xFDD
 10676                           plusw2	equ	0xFDB
 10677                           fsr2h	equ	0xFDA
 10678                           fsr2l	equ	0xFD9
 10679                           status	equ	0xFD8
 10680                           
 10681 ;; *************** function i2_MXK_Release *****************
 10682 ;; Defined at:
 10683 ;;		line 130 in file "Library/MXK.c"
 10684 ;; Parameters:    Size  Location     Type
 10685 ;;		None
 10686 ;; Auto vars:     Size  Location     Type
 10687 ;;		None
 10688 ;; Return value:  Size  Location     Type
 10689 ;;                  1    wreg      unsigned char 
 10690 ;; Registers used:
 10691 ;;		wreg, status,2, status,0
 10692 ;; Tracked objects:
 10693 ;;		On entry : 0/0
 10694 ;;		On exit  : 0/0
 10695 ;;		Unchanged: 0/0
 10696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10701 ;;Total ram usage:        0 bytes
 10702 ;; Hardware stack levels used:    1
 10703 ;; This function calls:
 10704 ;;		Nothing
 10705 ;; This function is called by:
 10706 ;;		i2_Motor_Step
 10707 ;; This function uses a non-reentrant model
 10708 ;;
 10709                           
 10710                           	psect	text57
 10711  011FC0                     __ptext57:
 10712                           	opt stack 0
 10713  011FC0                     i2_MXK_Release:
 10714                           	opt stack 16
 10715                           
 10716                           ;MXK.c: 132: Bus_State = eMXK_Idle;
 10717                           
 10718                           ;incstack = 0
 10719  011FC0  0E01               	movlw	1
 10720  011FC2  6E44               	movwf	_Bus_State,c
 10721                           
 10722                           ;MXK.c: 135: return 1;
 10723                           ;	Return value of i2_MXK_Release is never used
 10724  011FC4  0012               	return	
 10725  011FC6                     __end_ofi2_MXK_Release:
 10726                           	opt stack 0
 10727                           tosu	equ	0xFFF
 10728                           tosh	equ	0xFFE
 10729                           tosl	equ	0xFFD
 10730                           pclatu	equ	0xFFB
 10731                           pclath	equ	0xFFA
 10732                           tblptru	equ	0xFF8
 10733                           tblptrh	equ	0xFF7
 10734                           tblptrl	equ	0xFF6
 10735                           tablat	equ	0xFF5
 10736                           prodh	equ	0xFF4
 10737                           prodl	equ	0xFF3
 10738                           intcon	equ	0xFF2
 10739                           indf0	equ	0xFEF
 10740                           postinc0	equ	0xFEE
 10741                           fsr0h	equ	0xFEA
 10742                           fsr0l	equ	0xFE9
 10743                           wreg	equ	0xFE8
 10744                           postdec1	equ	0xFE5
 10745                           fsr1h	equ	0xFE2
 10746                           fsr1l	equ	0xFE1
 10747                           indf2	equ	0xFDF
 10748                           postinc2	equ	0xFDE
 10749                           postdec2	equ	0xFDD
 10750                           plusw2	equ	0xFDB
 10751                           fsr2h	equ	0xFDA
 10752                           fsr2l	equ	0xFD9
 10753                           status	equ	0xFD8
 10754                           
 10755 ;; *************** function i2_MXK_Queue *****************
 10756 ;; Defined at:
 10757 ;;		line 144 in file "Library/MXK.c"
 10758 ;; Parameters:    Size  Location     Type
 10759 ;;  pCallback       3    0[COMRAM] PTR FTN()void 
 10760 ;;		 -> Absolute function(1), Motor_Step(1), 
 10761 ;; Auto vars:     Size  Location     Type
 10762 ;;		None
 10763 ;; Return value:  Size  Location     Type
 10764 ;;                  1    wreg      void 
 10765 ;; Registers used:
 10766 ;;		wreg, status,2, status,0
 10767 ;; Tracked objects:
 10768 ;;		On entry : 0/0
 10769 ;;		On exit  : 0/0
 10770 ;;		Unchanged: 0/0
 10771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10772 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10775 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10776 ;;Total ram usage:        3 bytes
 10777 ;; Hardware stack levels used:    1
 10778 ;; This function calls:
 10779 ;;		Nothing
 10780 ;; This function is called by:
 10781 ;;		i2_Motor_Step
 10782 ;; This function uses a non-reentrant model
 10783 ;;
 10784                           
 10785                           	psect	text58
 10786  011F5E                     __ptext58:
 10787                           	opt stack 0
 10788  011F5E                     i2_MXK_Queue:
 10789                           	opt stack 16
 10790                           
 10791                           ;MXK.c: 146: lQueue = pCallback;
 10792                           
 10793                           ;incstack = 0
 10794  011F5E  C001  F025         	movff	i2MXK_Queue@pCallback,_lQueue	;volatile
 10795  011F62  C002  F026         	movff	i2MXK_Queue@pCallback+1,_lQueue+1	;volatile
 10796  011F66  C003  F027         	movff	i2MXK_Queue@pCallback+2,_lQueue+2	;volatile
 10797  011F6A  0012               	return		;funcret
 10798  011F6C                     __end_ofi2_MXK_Queue:
 10799                           	opt stack 0
 10800                           tosu	equ	0xFFF
 10801                           tosh	equ	0xFFE
 10802                           tosl	equ	0xFFD
 10803                           pclatu	equ	0xFFB
 10804                           pclath	equ	0xFFA
 10805                           tblptru	equ	0xFF8
 10806                           tblptrh	equ	0xFF7
 10807                           tblptrl	equ	0xFF6
 10808                           tablat	equ	0xFF5
 10809                           prodh	equ	0xFF4
 10810                           prodl	equ	0xFF3
 10811                           intcon	equ	0xFF2
 10812                           indf0	equ	0xFEF
 10813                           postinc0	equ	0xFEE
 10814                           fsr0h	equ	0xFEA
 10815                           fsr0l	equ	0xFE9
 10816                           wreg	equ	0xFE8
 10817                           postdec1	equ	0xFE5
 10818                           fsr1h	equ	0xFE2
 10819                           fsr1l	equ	0xFE1
 10820                           indf2	equ	0xFDF
 10821                           postinc2	equ	0xFDE
 10822                           postdec2	equ	0xFDD
 10823                           plusw2	equ	0xFDB
 10824                           fsr2h	equ	0xFDA
 10825                           fsr2l	equ	0xFD9
 10826                           status	equ	0xFD8
 10827                           tosu	equ	0xFFF
 10828                           tosh	equ	0xFFE
 10829                           tosl	equ	0xFFD
 10830                           pclatu	equ	0xFFB
 10831                           pclath	equ	0xFFA
 10832                           tblptru	equ	0xFF8
 10833                           tblptrh	equ	0xFF7
 10834                           tblptrl	equ	0xFF6
 10835                           tablat	equ	0xFF5
 10836                           prodh	equ	0xFF4
 10837                           prodl	equ	0xFF3
 10838                           intcon	equ	0xFF2
 10839                           indf0	equ	0xFEF
 10840                           postinc0	equ	0xFEE
 10841                           fsr0h	equ	0xFEA
 10842                           fsr0l	equ	0xFE9
 10843                           wreg	equ	0xFE8
 10844                           postdec1	equ	0xFE5
 10845                           fsr1h	equ	0xFE2
 10846                           fsr1l	equ	0xFE1
 10847                           indf2	equ	0xFDF
 10848                           postinc2	equ	0xFDE
 10849                           postdec2	equ	0xFDD
 10850                           plusw2	equ	0xFDB
 10851                           fsr2h	equ	0xFDA
 10852                           fsr2l	equ	0xFD9
 10853                           status	equ	0xFD8
 10854                           
 10855                           	psect	text59
 10856  000000                     __ptext59:
 10857                           	opt stack 0
 10858                           tosu	equ	0xFFF
 10859                           tosh	equ	0xFFE
 10860                           tosl	equ	0xFFD
 10861                           pclatu	equ	0xFFB
 10862                           pclath	equ	0xFFA
 10863                           tblptru	equ	0xFF8
 10864                           tblptrh	equ	0xFF7
 10865                           tblptrl	equ	0xFF6
 10866                           tablat	equ	0xFF5
 10867                           prodh	equ	0xFF4
 10868                           prodl	equ	0xFF3
 10869                           intcon	equ	0xFF2
 10870                           indf0	equ	0xFEF
 10871                           postinc0	equ	0xFEE
 10872                           fsr0h	equ	0xFEA
 10873                           fsr0l	equ	0xFE9
 10874                           wreg	equ	0xFE8
 10875                           postdec1	equ	0xFE5
 10876                           fsr1h	equ	0xFE2
 10877                           fsr1l	equ	0xFE1
 10878                           indf2	equ	0xFDF
 10879                           postinc2	equ	0xFDE
 10880                           postdec2	equ	0xFDD
 10881                           plusw2	equ	0xFDB
 10882                           fsr2h	equ	0xFDA
 10883                           fsr2l	equ	0xFD9
 10884                           status	equ	0xFD8
 10885                           
 10886                           	psect	rparam
 10887  0000                     tosu	equ	0xFFF
 10888                           tosh	equ	0xFFE
 10889                           tosl	equ	0xFFD
 10890                           pclatu	equ	0xFFB
 10891                           pclath	equ	0xFFA
 10892                           tblptru	equ	0xFF8
 10893                           tblptrh	equ	0xFF7
 10894                           tblptrl	equ	0xFF6
 10895                           tablat	equ	0xFF5
 10896                           prodh	equ	0xFF4
 10897                           prodl	equ	0xFF3
 10898                           intcon	equ	0xFF2
 10899                           indf0	equ	0xFEF
 10900                           postinc0	equ	0xFEE
 10901                           fsr0h	equ	0xFEA
 10902                           fsr0l	equ	0xFE9
 10903                           wreg	equ	0xFE8
 10904                           postdec1	equ	0xFE5
 10905                           fsr1h	equ	0xFE2
 10906                           fsr1l	equ	0xFE1
 10907                           indf2	equ	0xFDF
 10908                           postinc2	equ	0xFDE
 10909                           postdec2	equ	0xFDD
 10910                           plusw2	equ	0xFDB
 10911                           fsr2h	equ	0xFDA
 10912                           fsr2l	equ	0xFD9
 10913                           status	equ	0xFD8
 10914                           
 10915                           	psect	temp
 10916  000049                     btemp:
 10917                           	opt stack 0
 10918  000049                     	ds	1
 10919  0000                     int$flags	set	btemp
 10920                           tosu	equ	0xFFF
 10921                           tosh	equ	0xFFE
 10922                           tosl	equ	0xFFD
 10923                           pclatu	equ	0xFFB
 10924                           pclath	equ	0xFFA
 10925                           tblptru	equ	0xFF8
 10926                           tblptrh	equ	0xFF7
 10927                           tblptrl	equ	0xFF6
 10928                           tablat	equ	0xFF5
 10929                           prodh	equ	0xFF4
 10930                           prodl	equ	0xFF3
 10931                           intcon	equ	0xFF2
 10932                           indf0	equ	0xFEF
 10933                           postinc0	equ	0xFEE
 10934                           fsr0h	equ	0xFEA
 10935                           fsr0l	equ	0xFE9
 10936                           wreg	equ	0xFE8
 10937                           postdec1	equ	0xFE5
 10938                           fsr1h	equ	0xFE2
 10939                           fsr1l	equ	0xFE1
 10940                           indf2	equ	0xFDF
 10941                           postinc2	equ	0xFDE
 10942                           postdec2	equ	0xFDD
 10943                           plusw2	equ	0xFDB
 10944                           fsr2h	equ	0xFDA
 10945                           fsr2l	equ	0xFD9
 10946                           status	equ	0xFD8


Data Sizes:
    Strings     137
    Constant    730
    Data        25
    BSS         685
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      72
    BANK0           160     48     160
    BANK1           256     22     214
    BANK2           256      0      70
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    ADC_AN0.mNext.mNext	PTR struct ADC size(2) Largest target is 0
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_AN1.mNext.mNext	PTR struct ADC size(2) Largest target is 0
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_AN2.mNext.mNext	PTR struct ADC size(2) Largest target is 0
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    HMIBoard.mGetState	PTR FTN()unsigned char  size(3) Largest target is 0
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    I2C1_More$0	const PTR struct I2CT size(2) Largest target is 7
		 -> I2C1T(BANK0[7]), 

    ADC_AN3.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_AN2.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_AN1.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_AN0.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    Timer0_Start@pFunction	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    gISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    MXK_Queue@pCallback	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    lQueue	volatile PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    DIPSwitch.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    DIPSwitch.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    TestButton.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    TestButton.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    Motor_Speed@pMotor	PTR struct Motor size(2) Largest target is 6
		 -> Stepper(BANK0[6]), 

    Motor_Move@pMotor	PTR struct Motor size(2) Largest target is 6
		 -> Stepper(BANK0[6]), 

    lMotor	PTR struct Motor size(2) Largest target is 6
		 -> Stepper(BANK0[6]), NULL(NULL[0]), 

    lStepFunction	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    Motor_Init@pMotor	PTR struct Motor size(2) Largest target is 6
		 -> Stepper(BANK0[6]), 

    I2C2_More	PTR FTN(const PTR struct I2CT,)unsigned char  size(3) Largest target is 1
		 -> Absolute function(), 

    I2C2_Done	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    I2C1_More	PTR FTN(const PTR struct I2CT,)unsigned char  size(3) Largest target is 1
		 -> Absolute function(), 

    I2C1_Done	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    I2CT_WAddress@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Stop@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Continue@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Next@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_IsWrite@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_IsRead@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_At@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Put@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Get@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Reset@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_InitW@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_InitR@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Init@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2C2T.mData	PTR unsigned char  size(2) Largest target is 0

    S11820I2CT$mData	PTR unsigned char  size(2) Largest target is 0

    I2C1T.mData	PTR unsigned char  size(2) Largest target is 0

    ADC_Voltage@pInput.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_Start@pInput.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_Sequence@pItemB.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_Sequence@pItemA.mNext.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_Sequence@pItemA.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_Init@pInput.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    S11502ADC$mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    lCurrent.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    lCurrent	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), ADC_AN0(BANK0[5]), 
		 -> NULL(NULL[0]), 

    HMIBoard.mDIP.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mDIP.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    HMIBoard.mDown.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mDown.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    HMIBoard.mUp.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mUp.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    HMIBoard.mLeft.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mLeft.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    HMIBoard.mRight.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mRight.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    sp__Console_MakeField	PTR unsigned short  size(2) Largest target is 70
		 -> Console_MakeField@Fill(BANK2[70]), 

    PortProperty_Valid@pInput	PTR struct PortProperty size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), 
		 -> PortD_Property(CODE[2]), PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), 
		 -> PortC(BANK0[10]), PortF(BANK1[10]), NULL(NULL[0]), 

    Word_GetPair@pInput	PTR struct Word size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), 
		 -> PortD_Property(CODE[2]), PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), 
		 -> PortC(BANK0[10]), PortF(BANK1[10]), NULL(NULL[0]), 

    Word_SetPair@pInput	PTR struct Word size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Byte_SetByte@pInput	PTR struct Byte size(2) Largest target is 1
		 -> SSP2CON2(SFR_1[1]), SSP1CON2(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> NULL(NULL[0]), 

    Byte_SetQuad@pInput	PTR struct Byte size(2) Largest target is 1
		 -> SSP2CON1(SFR_1[1]), SSP1CON1(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> NULL(NULL[0]), 

    Byte_GetPair@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortA_Property..(CODE[2]), PortB_Property..(CODE[2]), PortC_Property..(CODE[2]), PortD_Property..(CODE[2]), 
		 -> PortE_Property..(CODE[2]), PortF_Property..(CODE[2]), PortG_Property..(CODE[2]), PortF..(BANK1[2]), 
		 -> PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), PortB..(BANK1[2]), 
		 -> PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), PortA(BANK1[10]), 
		 -> PortB(BANK1[10]), PortE(BANK0[10]), PortD(BANK0[10]), PortG_Property(CODE[2]), 
		 -> PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), PortC_Property(CODE[2]), 
		 -> PortB_Property(CODE[2]), PortA_Property(CODE[2]), PortC(BANK0[10]), PortF(BANK1[10]), 
		 -> NULL(NULL[0]), 

    Byte_SetPair@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortF..(BANK1[2]), PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), 
		 -> PortB..(BANK1[2]), PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), 
		 -> PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), PortD(BANK0[10]), 
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), PORTG(SFR_1[1]), 
		 -> PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), PORTC(SFR_1[1]), 
		 -> PORTB(SFR_1[1]), PORTA(SFR_1[1]), PortC(BANK0[10]), PortF(BANK1[10]), 
		 -> NULL(NULL[0]), 

    Byte_GetZone@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortA_Property..(CODE[2]), PortB_Property..(CODE[2]), PortC_Property..(CODE[2]), PortD_Property..(CODE[2]), 
		 -> PortE_Property..(CODE[2]), PortF_Property..(CODE[2]), PortG_Property..(CODE[2]), PortF..(BANK1[2]), 
		 -> PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), PortB..(BANK1[2]), 
		 -> PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), PortA(BANK1[10]), 
		 -> PortB(BANK1[10]), PortE(BANK0[10]), PortD(BANK0[10]), PortG_Property(CODE[2]), 
		 -> PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), PortC_Property(CODE[2]), 
		 -> PortB_Property(CODE[2]), PortA_Property(CODE[2]), PortC(BANK0[10]), PortF(BANK1[10]), 
		 -> NULL(NULL[0]), 

    Byte_SetZone@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortF..(BANK1[2]), PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), 
		 -> PortB..(BANK1[2]), PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), 
		 -> PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), SSP2CON1(SFR_1[1]), 
		 -> PortD(BANK0[10]), SSP1CON1(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> PortC(BANK0[10]), PortF(BANK1[10]), NULL(NULL[0]), 

    Byte_SetBit@pInput	PTR struct Byte size(2) Largest target is 1
		 -> SSP2CON2(SFR_1[1]), SSP1CON2(SFR_1[1]), SSP2CON1(SFR_1[1]), SSP2STAT(SFR_1[1]), 
		 -> SSP1CON1(SFR_1[1]), SSP1STAT(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> NULL(NULL[0]), 

    SPI_Send9@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Send9@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Send9@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Send9@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_Send@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Send@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Send@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Send@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_DCS@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_DCS@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_DCS@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_DCS@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_CS@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_CS@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_CS@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_CS@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_MaxSpeed@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_MaxSpeed@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_MaxSpeed@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_MaxSpeed@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_MinSpeed@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_MinSpeed@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_MinSpeed@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_MinSpeed@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_DisableISR@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_DisableISR@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_DisableISR@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_DisableISR@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_EnableISR@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_EnableISR@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_EnableISR@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_EnableISR@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_SetFlags@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_SetFlags@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_SetFlags@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_SetFlags@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_ClearFlags@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_ClearFlags@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_ClearFlags@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_ClearFlags@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    sp__SPI_Buffer	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Buffer@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Buffer@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Buffer@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Buffer@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_BF@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_BF@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_BF@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_BF@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_Init@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Init@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Init@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Init@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI1.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI1...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI1...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI1...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    Port_Get@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Get@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Get@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_Get@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Set@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Set@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Set@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_Set@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Set@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_SetType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_GetQuad@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetQuad@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetQuad@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetQuad@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetQuadType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortB(BANK1[10]), PortD(BANK0[10]), 

    Port_GetPair@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPair@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPair@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPair@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPair@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPair@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPair@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPair@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_GetPin@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPin@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPin@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPin@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPin@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPin@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPin@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPin@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPin@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortE(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_SetPinType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPinType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPinType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPinType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPinType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_SetPinType@Props	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Init@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Init@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Init@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_Init@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Init@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_CheckPortType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_CheckQuadType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_CheckPairType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_CheckPairType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_CheckPairType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_CheckPairType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_CheckPairType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_CheckPairType@Props	PTR struct PortProperty size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), 
		 -> PortD_Property(CODE[2]), PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), 
		 -> PortC(BANK0[10]), PortF(BANK1[10]), NULL(NULL[0]), 

    sp__GetPortLAT	PTR struct Byte size(2) Largest target is 1
		 -> LATG(SFR_1[1]), LATF(SFR_1[1]), LATE(SFR_1[1]), LATD(SFR_1[1]), 
		 -> LATC(SFR_1[1]), LATB(SFR_1[1]), LATA(SFR_1[1]), NULL(NULL[0]), 

    sp__GetPortTRIS	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    sp__GetPortPORT	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    sp__GetPortProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortG.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortG.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortG.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortG.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortE.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortE.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortE.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortE.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortD.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortD.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortD.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortD.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortB.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortB.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortB.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortB.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortA.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortA.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortA.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortA.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortC.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortC.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortC.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortC.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    S509SPI$SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI2.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    S506$SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI2...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    S479$SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI2...SSPSTATTb	PTR struct . size(2) Largest target is 0

    S479$SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI2...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    S139Port$mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortF.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    S139Port$mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortF.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    S139Port$mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortF.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    S139Port$mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortF.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Button_Poll@pButton.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    Button_Poll@pButton.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    S23Button$mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    Button_Init@pInput.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    S23Button$mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    Button_Init@pInput.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Function in COMRAM

    _Timer0_ISR->i2_Motor_Step
    i2_Motor_Step->i2_Port_SetPin
    i2_Port_SetPin->i2_Word_GetPair
    i2_Word_GetPair->i2_Byte_GetPair
    i2_Byte_GetPair->i2_Byte_GetZone
    i2_MXK_SwitchTo->i2_delay_us

Critical Paths under _main in BANK0

    _Motor_Init->_Port_SetPinType
    _MXK_Init->_Port_SetQuadType
    _Byte_SetQuad->_Byte_SetZone
    _Port_SetType->_Port_CheckPortType
    _Port_CheckQuadType->_Port_CheckPairType
    _Port_CheckPairType->_PortProperty_Valid
    _Port_Set->_Word_GetPair
    _LED_Init->_Port_SetPinType
    _Port_SetPinType->_PortProperty_Valid
    _Word_SetPair->_Byte_SetPair
    _Byte_SetPair->_Byte_SetZone
    _PortProperty_Valid->_Word_GetPair
    _LED_Set->_Port_SetPin
    _MXK_Dequeue->_Motor_Step
    _Motor_Step->_Port_SetPin
    _Port_SetPin->_Word_GetPair
    _Word_GetPair->_Byte_GetPair
    _Byte_GetPair->_Byte_GetZone
    _MXK_SwitchTo->_delay_us
    _MXK_BlockSwitchTo->_delay_us
    _Motor_Speed->_Timer0_Init
    _Timer0_Init->___lldiv
    _Motor_Move->_Timer0_Start

Critical Paths under _ISR_Function in BANK0

    None.

Critical Paths under _main in BANK1

    _MXK_Init->_Port_Init
    _Port_SetQuadType->_Port_CheckQuadType
    _Port_Init->_Port_SetType
    _Port_SetType->_Port_CheckPortType
    _Port_CheckPortType->_Port_CheckQuadType

Critical Paths under _ISR_Function in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Function in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Function in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Function in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Function in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Function in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Function in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Function in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Function in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Function in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Function in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Function in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR_Function in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR_Function in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR_Function in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  517712
                  _MXK_BlockSwitchTo
                        _MXK_Dequeue
                        _MXK_Release
                         _Motor_Move
                        _Motor_Speed
                         _initialise
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0  481950
                         _ISR_Enable
                  _MXK_BlockSwitchTo
                        _MXK_Dequeue
                           _MXK_Init
                        _MXK_Release
                         _Motor_Init
 ---------------------------------------------------------------------------------
 (2) _Motor_Init                                           4     0      4   88478
                                              0 BANK1      4     0      4
                        _Port_SetPin
                    _Port_SetPinType
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (2) _MXK_Init                                             0     0      0  362160
                           _LED_Init
                          _Port_Init
                        _Port_SetPin
                    _Port_SetPinType
                   _Port_SetQuadType
                       _Port_SetType
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             6     4      2    1166
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _Port_SetQuadType                                     5     1      4   44669
                                             47 BANK0      1     1      0
                                              7 BANK1      4     0      4
                       _Byte_SetQuad
                 _Port_CheckQuadType
                       _Word_SetPair
 ---------------------------------------------------------------------------------
 (4) _Byte_SetQuad                                         4     0      4   10549
                                             11 BANK0      4     0      4
                       _Byte_SetZone
 ---------------------------------------------------------------------------------
 (3) _Port_Init                                            6     3      3  111429
                                             16 BANK1      6     3      3
                        _GetPortPORT
                  _GetPortProperties
                        _GetPortTRIS
                           _Port_Set
                    _Port_SetPinType
                       _Port_SetType
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (3) _Port_SetType                                         6     3      3   34613
                                             10 BANK1      6     3      3
                 _Port_CheckPortType
                       _Word_SetPair
 ---------------------------------------------------------------------------------
 (4) _Port_CheckPortType                                   4     1      3   16921
                                             47 BANK0      1     1      0
                                              7 BANK1      3     0      3
                 _Port_CheckQuadType
 ---------------------------------------------------------------------------------
 (5) _Port_CheckQuadType                                   7     3      4   15845
                                              0 BANK1      7     3      4
                 _Port_CheckPairType
 ---------------------------------------------------------------------------------
 (6) _Port_CheckPairType                                   9     5      4   13271
                                             38 BANK0      9     5      4
                 _PortProperty_Valid
 ---------------------------------------------------------------------------------
 (4) _Port_Set                                            24    21      3   10910
                                             15 BANK0     24    21      3
                       _Byte_SetByte
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (5) _Byte_SetByte                                         3     0      3    1278
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _GetPortTRIS                                          3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _GetPortProperties                                    3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _GetPortPORT                                          3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _LED_Init                                             1     1      0   85371
                                             45 BANK0      1     1      0
                            _LED_Set
                    _Port_SetPinType
 ---------------------------------------------------------------------------------
 (3) _Port_SetPinType                                      7     3      4   54781
                                             38 BANK0      7     3      4
                        _Byte_SetBit
                 _PortProperty_Valid
                       _Word_SetPair
 ---------------------------------------------------------------------------------
 (4) _Word_SetPair                                         4     0      4   16238
                                             15 BANK0      4     0      4
                       _Byte_SetPair
 ---------------------------------------------------------------------------------
 (5) _Byte_SetPair                                         4     0      4    8725
                                             11 BANK0      4     0      4
                       _Byte_SetZone
 ---------------------------------------------------------------------------------
 (6) _Byte_SetZone                                        11     5      6    2704
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _PortProperty_Valid                                  23    19      4   10663
                                             15 BANK0     23    19      4
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (4) _LED_Set                                              2     1      1   30528
                                             20 BANK0      2     1      1
                        _Port_SetPin
 ---------------------------------------------------------------------------------
 (2) _MXK_Dequeue                                          0     0      0   30813
                   Absolute function *
                         _Motor_Step *
 ---------------------------------------------------------------------------------
 (3) _Motor_Step                                           2     2      0   30813
                                             20 BANK0      2     2      0
                          _MXK_Queue
                        _MXK_Release
                       _MXK_SwitchTo
                        _Port_SetPin
                     _Timer0_Restart
                        _Timer0_Stop
 ---------------------------------------------------------------------------------
 (4) _Timer0_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Timer0_Restart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Port_SetPin                                          5     1      4   30131
                                             15 BANK0      5     1      4
                        _Byte_SetBit
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (5) _Word_GetPair                                         3     0      3    8154
                                             12 BANK0      3     0      3
                       _Byte_GetPair
 ---------------------------------------------------------------------------------
 (6) _Byte_GetPair                                         3     0      3    2831
                                              9 BANK0      3     0      3
                       _Byte_GetZone
 ---------------------------------------------------------------------------------
 (7) _Byte_GetZone                                         9     4      5    2161
                                              0 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (4) _Byte_SetBit                                          7     3      4   15662
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _MXK_SwitchTo                                         2     2      0     499
                                              6 BANK0      2     2      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _MXK_Release                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MXK_Queue                                            3     0      3     183
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MXK_BlockSwitchTo                                    2     2      0     499
                                              6 BANK0      2     2      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (5) _delay_us                                             6     4      2     403
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _ISR_Enable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_Speed                                          4     0      4    3839
                                             27 BANK0      4     0      4
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (3) _Timer0_Init                                         14    10      4    3138
                                             13 BANK0     14    10      4
                       _Timer0_Clear
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    2673
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _Timer0_Clear                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Motor_Move                                           6     2      4     611
                                              3 BANK0      6     2      4
                       _Timer0_Start
 ---------------------------------------------------------------------------------
 (2) _Timer0_Start                                         3     0      3     183
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR_Function                                       14    14      0    1778
                                             22 COMRAM    14    14      0
                         _Timer0_ISR
 ---------------------------------------------------------------------------------
 (13) _Timer0_ISR                                          0     0      0    1778
                   Absolute function *
                       i2_Motor_Step *
                      i2_Timer0_Stop
 ---------------------------------------------------------------------------------
 (14) i2_Motor_Step                                        2     2      0    1778
                                             20 COMRAM     2     2      0
                        i2_MXK_Queue
                      i2_MXK_Release
                     i2_MXK_SwitchTo
                      i2_Port_SetPin
                   i2_Timer0_Restart
                      i2_Timer0_Stop
 ---------------------------------------------------------------------------------
 (14) i2_Timer0_Stop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_Timer0_Restart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_Port_SetPin                                       5     1      4    1569
                                             15 COMRAM     5     1      4
                      i2_Byte_SetBit
                     i2_Word_GetPair
 ---------------------------------------------------------------------------------
 (16) i2_Word_GetPair                                      3     0      3     643
                                             12 COMRAM     3     0      3
                     i2_Byte_GetPair
 ---------------------------------------------------------------------------------
 (17) i2_Byte_GetPair                                      3     0      3     481
                                              9 COMRAM     3     0      3
                     i2_Byte_GetZone
 ---------------------------------------------------------------------------------
 (18) i2_Byte_GetZone                                      9     4      5     333
                                              0 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (16) i2_Byte_SetBit                                       7     3      4     345
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) i2_MXK_SwitchTo                                      2     2      0     161
                                              6 COMRAM     2     2      0
                         i2_delay_us
 ---------------------------------------------------------------------------------
 (16) i2_delay_us                                          6     4      2      94
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (15) i2_MXK_Release                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_MXK_Queue                                         3     0      3      48
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MXK_BlockSwitchTo
     _delay_us
   _MXK_Dequeue
     Absolute function(Fake) *
     _Motor_Step *
       _MXK_Queue
       _MXK_Release
       _MXK_SwitchTo
         _delay_us
       _Port_SetPin
         _Byte_SetBit
         _Word_GetPair
           _Byte_GetPair
             _Byte_GetZone
       _Timer0_Restart
       _Timer0_Stop
   _MXK_Release
   _Motor_Move
     _Timer0_Start
   _Motor_Speed
     _Timer0_Init
       _Timer0_Clear
       ___lldiv
   _initialise
     _ISR_Enable
     _MXK_BlockSwitchTo
       _delay_us
     _MXK_Dequeue
       Absolute function(Fake) *
       _Motor_Step *
         _MXK_Queue
         _MXK_Release
         _MXK_SwitchTo
           _delay_us
         _Port_SetPin
           _Byte_SetBit
           _Word_GetPair
             _Byte_GetPair
               _Byte_GetZone
         _Timer0_Restart
         _Timer0_Stop
     _MXK_Init
       _LED_Init
         _LED_Set
           _Port_SetPin
             _Byte_SetBit
             _Word_GetPair
               _Byte_GetPair
                 _Byte_GetZone
         _Port_SetPinType
           _Byte_SetBit
           _PortProperty_Valid
             _Word_GetPair
               _Byte_GetPair
                 _Byte_GetZone
           _Word_SetPair
             _Byte_SetPair
               _Byte_SetZone
       _Port_Init
         _GetPortPORT
         _GetPortProperties
         _GetPortTRIS
         _Port_Set
           _Byte_SetByte
           _Word_GetPair
             _Byte_GetPair
               _Byte_GetZone
         _Port_SetPinType
           _Byte_SetBit
           _PortProperty_Valid
             _Word_GetPair
               _Byte_GetPair
                 _Byte_GetZone
           _Word_SetPair
             _Byte_SetPair
               _Byte_SetZone
         _Port_SetType
           _Port_CheckPortType
             _Port_CheckQuadType
               _Port_CheckPairType
                 _PortProperty_Valid
                   _Word_GetPair
                     _Byte_GetPair
                       _Byte_GetZone
           _Word_SetPair
             _Byte_SetPair
               _Byte_SetZone
         _Word_GetPair
           _Byte_GetPair
             _Byte_GetZone
       _Port_SetPin
         _Byte_SetBit
         _Word_GetPair
           _Byte_GetPair
             _Byte_GetZone
       _Port_SetPinType
         _Byte_SetBit
         _PortProperty_Valid
           _Word_GetPair
             _Byte_GetPair
               _Byte_GetZone
         _Word_SetPair
           _Byte_SetPair
             _Byte_SetZone
       _Port_SetQuadType
         _Byte_SetQuad
           _Byte_SetZone
         _Port_CheckQuadType
           _Port_CheckPairType
             _PortProperty_Valid
               _Word_GetPair
                 _Byte_GetPair
                   _Byte_GetZone
         _Word_SetPair
           _Byte_SetPair
             _Byte_SetZone
       _Port_SetType
         _Port_CheckPortType
           _Port_CheckQuadType
             _Port_CheckPairType
               _PortProperty_Valid
                 _Word_GetPair
                   _Byte_GetPair
                     _Byte_GetZone
         _Word_SetPair
           _Byte_SetPair
             _Byte_SetZone
       _delay_ms
     _MXK_Release
     _Motor_Init
       _Port_SetPin
         _Byte_SetBit
         _Word_GetPair
           _Byte_GetPair
             _Byte_GetZone
       _Port_SetPinType
         _Byte_SetBit
         _PortProperty_Valid
           _Word_GetPair
             _Byte_GetPair
               _Byte_GetZone
         _Word_SetPair
           _Byte_SetPair
             _Byte_SetZone
       _Timer0_Init
         _Timer0_Clear
         ___lldiv

 _ISR_Function (ROOT)
   _Timer0_ISR
     Absolute function(Fake) *
     i2_Motor_Step *
       i2_MXK_Queue
       i2_MXK_Release
       i2_MXK_SwitchTo
         i2_delay_us
       i2_Port_SetPin
         i2_Byte_SetBit
         i2_Word_GetPair
           i2_Byte_GetPair
             i2_Byte_GetZone
       i2_Timer0_Restart
       i2_Timer0_Stop
     i2_Timer0_Stop *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0     12C      37        7.7%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      46       9       27.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     16      D6       7       83.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     30      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      48       1       76.6%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     204      12        0.0%
DATA                 0      0     330       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Aug 14 17:24:16 2017

                  i2_Timer0_Stop 1FBA       __size_of_MXK_BlockSwitchTo 003E  
                   i2_Motor_Step 0F7E                                _A 00FE  
                              _a 00FF                                _i 007D  
                              _j 007C                                _l 0047  
                              _u 007B                                _w 0048  
                  _HMI_DIPSwitch 000000                 i2_Timer0_Restart 1F84  
                            l528 03B8                              _PR2 000FCB  
                            _val 0077                     _Word_GetPair 1CAC  
            MXK_SwitchTo@pModule 00CF                              tosl 000FFD  
                            wreg 000FE8                       i2_delay_us 1C6C  
           Port_Set@TypeRequired 00EA            Port_SetPinType@Output 00F2  
                Port_SetPin@Type 00DB                  Port_SetPin@pPin 00D9  
                  ?_Byte_GetPair 00D1                  __end_of_LED_Set 1B50  
        __size_ofi2_Word_GetPair 0030                    i2_Port_SetPin 1436  
                   _Word_SetPair 1BE4                    ?_Byte_GetZone 00C8  
                           l2449 12C0                             l9615 17E6  
                           l9631 192E            Port_SetPinType@pInput 00EE  
                           l9553 171E                             l9801 11F8  
                           l9643 1304                             l9557 172A  
                           l9823 1AB0                             l9831 1AE8  
                           l9639 12F8                             l9911 15E0  
                           l9903 15C4                             l9825 1AC2  
                           l9817 1C14                             l9921 15FC  
                           l9809 1BDE                             l9851 0878  
                           l9915 15EE                             l9907 15D2  
                           l9589 1CD8                             l9941 166A  
                           l9933 164E                             l9925 1632  
                           l9773 1AA8                             l9791 119E  
                           l9863 0950                             l9871 09D8  
                           STR_1 FF8D                             STR_2 FFFB  
                           l9857 08E4                             l9849 0852  
                           l9953 1694                             l9945 1678  
                           l9937 165C                             l9929 1640  
                           STR_3 FFA3                             STR_4 FFDC  
                           l9795 11CE                             l9787 1174  
                           l9883 1B3E                             l9891 159A  
                           l9971 1502                             l9963 14E6  
                           STR_5 FFF3                             STR_6 FFC1  
                           l9877 1B06                             l9869 09BC  
                           l9949 1686                             STR_7 FFCF  
                           STR_8 FFE8                             l9879 1B22  
                           l9959 16A2                             l9895 15A8  
                           l9887 158C                             l9991 1548  
                           l9983 152C                             l9975 1510  
                           l9967 14F4                             STR_9 FFB2  
                           l9899 15B6                             l9987 153A  
                           l9979 151E                             l9997 1556  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _LATD 000F8C  
                           _LATE 000F8D                             _LATF 000F8E  
                           _LATG 000F8F              __end_of_GetPortPORT 16D2  
                           u7000 0EA2                             u7010 0EB6  
                           u7020 0EF6                             u6310 16F4  
                           u6330 175A                             u6404 1340  
                           u6317 16EA                             u6405 133A  
                           u6350 1780                             u6414 1372  
                           u6335 1754                             u6415 136C  
                           _PIR1 000F9E                             _PIR2 000FA1  
                           _PIR3 000FA4              __end_of_GetPortTRIS 1586  
                           u6705 002E                             u6715 0046  
                           u6725 005E                             u6574 1950  
                           u6575 194A                             u6735 0080  
                           u6584 1982                             u6585 197C  
                           u6745 0200                             u6755 027E  
                           u6765 02C0                             u8518 1DE2  
                           u6775 0302                             _SPI1 0161  
                           _SPI2 016C                             _TMR0 000FD6  
                           _gISR 0068                    ?_Byte_SetByte 00C8  
                  ?_Byte_SetPair 00D3                             _main 19FA  
                           _mode 0071                  ??i2_Byte_SetBit 0005  
                  ?_Byte_SetQuad 00D3                             fsr0h 000FEA  
                           fsr1h 000FE2                             indf0 000FEF  
                           fsr2h 000FDA                             fsr0l 000FE9  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                    ?_Byte_SetZone 00C8  
                           btemp 0049                             _zero 0046  
                  ??_Byte_SetBit 00CC                             prodh 000FF4  
                           prodl 000FF3                 Motor_Move@pDelta 00CD  
                           start 148A                    __CFG_IESO$OFF 000000  
              Timer0_Init@DIVIDE 00DF                 Motor_Move@pMotor 00CB  
                 ?i2_Timer0_Stop 0001                i2Byte_SetBit@pBit 0003  
                   ___param_bank 000000                  __end_of_Font5x7 FF67  
                    ?_ISR_Enable 0001                    __CFG_PLLDIV$3 000000  
               __end_of_LED_Init 19FA          GetPortProperties@pInput 00CA  
                          l10001 0618                            l10011 06CA  
                          l10003 063A                            l10007 0682  
                          l10017 070C                            l10051 037A  
                          l10019 0728                            l10203 0B42  
                          l10133 1244                            l10301 0F6C  
                          l10045 0336                            l10205 0B72  
                          l10213 03C2                            l10135 1254  
                          l10047 0356                            l10055 039A  
                          l10223 04E4                            l10215 040C  
                          l10231 056C                            l10145 12AE  
                          l10137 125A                            l10209 0B78  
                          l10251 0D76                            l10075 1C68  
                          l10067 1C40                            l10171 19BC  
                          l10219 0478                            l10155 1862  
                          l10163 18A0                            l10245 0D6C  
                          l10421 1CF6                            l10229 0550  
                          l10157 1874                            l10255 0D7E  
                          l10431 1D24                            l10087 1F3E  
                          l10175 19DA                            l11303 1D5E  
                          l10257 0DD0                            l10177 19EA  
                          l10169 199E                            l10193 0AE2  
                          l10283 0F04                            l10195 0AFA  
                          l10285 0F20                            l10277 0EC4  
                          l10197 0B12                            l10189 0AD8  
                          l10279 0EE2                            l10295 0F62  
                          l10199 0B2A                            l11285 1DF6  
                          _I2C1T 00A4                            _I2C2T 009D  
                          ?_main 0001                            STR_10 FF75  
                _Event_DIPSwitch 000000                  __end_of___lldiv 12D2  
                          _INDEX 0038                            _MASKS FD77  
                          _PORTA 000F80                            _PORTB 000F81  
                          _PORTC 000F82                            _PORTD 000F83  
                          _PORTE 000F84                            _PORTF 000F85  
                          _PORTG 000F86                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                          _TRISF 000F97                            _TRISG 000F98  
               ??i2_Byte_GetPair 000D                 ??i2_Byte_GetZone 0006  
                 __CFG_FCMEN$OFF 000000                            _PortA 019F  
                          _PortB 0195                            _PortC 0093  
                          _PortD 0089                            _PortE 007F  
                          _PortF 01A9                            _PortG 018B  
        __end_of_Port_SetPinType 09FA                  _ADC_Initialised 007E  
                 ??_Byte_GetPair 00D4                   ?i2_Port_SetPin 0010  
                    LED_Set@pLED 00DD                  __end_of_dpowers FD77  
                 ??_Byte_GetZone 00CD                 __end_of_MXK_Init 0D06  
                          _speed 0073             i2Byte_GetPair@pInput 000A  
          __end_ofi2_MXK_Release 1FC6                            pclath 000FFA  
                          tablat 000FF5               __size_of_MXK_Queue 000E  
                 ??_Byte_SetByte 00CB                   ??_Byte_SetPair 00D7  
                 ??_Byte_SetQuad 00D7                            plusw2 000FDB  
                 ??_Byte_SetZone 00CE                            status 000FD8  
           i2MXK_Queue@pCallback 0001                      i2delay_us@u 0003  
    __size_of_Port_CheckPairType 006A                  __initialization 1388  
                   __end_of_main 1A54                     SPI_Send9@dat 0079  
            __end_of_Byte_SetBit 1998                 __end_of_InitList FD4D  
    __size_of_Port_CheckQuadType 005A      __size_of_Port_CheckPortType 0048  
                         ??_main 00F8                    __activetblptr 000003  
              Port_SetPin@pInput 00D7                Port_SetPin@pValue 00DA  
                      ??_LED_Set 00DD                _MXK_InitDIPSwitch 000000  
              GetPortPORT@pInput 00CA           Port_CheckPairType@Pin1 00F2  
         Port_CheckPairType@Pin2 00F3                      _GetPortPORT 162C  
                   ?i2_MXK_Queue 0001                      _GetPortTRIS 14E0  
     __end_of_PortProperty_Valid 17EA                 __end_of_Port_Set 03BA  
                    ?i2_delay_us 0001                Word_GetPair@pPair 00D6  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
         Port_SetQuadType@Output 00F7                           _ANCON0 000FC1  
         Port_SetQuadType@pInput 01BF                   __CFG_WDTEN$OFF 000000  
                         i2l1599 144E              __size_of_ISR_Enable 000A  
                         i2l8051 102E                           i2l8043 0FE2  
                         i2l8045 0FF8                           i2l8061 1060  
                         i2l8049 101A                           i2l7443 1C6E  
                         i2l7451 1C9A                           i2l8067 106A  
                         i2l7445 1C7E                           i2l7437 1E22  
                         i2l7721 1474                           i2l6851 1830  
                         i2l7731 14C4                           i2l7741 1DB0  
                         i2l7725 149E                           i2l7717 144E  
                         i2l6855 1836                           i2l7749 1DD0  
                 _Timer0_Restart 1F6C                   i2_MXK_SwitchTo 1D9E  
                ??i2_Timer0_Stop 0001                 __end_of_delay_ms 18CA  
                   LED_Init@pLED 00F5                 __end_of_delay_us 1B00  
                  ??_Timer0_Init 00D9                    ??_Timer0_Stop 00C8  
                     _Timer0_ISR 1E34                   __CFG_XINST$OFF 000000  
                     _Motor_Init 107C                       _Motor_Move 1D64  
                  ??_Motor_Speed 00E7                       _Motor_Step 0E5A  
           _Event_HMI_LeftButton 000000                   __CFG_STVREN$ON 000000  
                         _change 0045                           _lMotor 002C  
                      ??___lldiv 00D0                           _lQueue 0025  
                     _TestButton 0181             _Event_HMI_DownButton 000000  
       __end_of_Port_SetQuadType 0610         i2Byte_GetZone@pChunkSize 0005  
                   HMI_GRender@a 0030                GetPortTRIS@pInput 00CA  
                         clear_0 13F0                           clear_1 1402  
                         clear_2 140E                           clear_3 141A  
                         clear_4 1426                       Port_Init@i 01CD  
              __end_of_MXK_Queue 1F5E       __end_ofHMI_SetButton@F7211 FD84  
                   __pdataCOMRAM 0040               __size_of_Port_Init 0192  
       Port_CheckPortType@Output 00F7                  ??i2_Port_SetPin 0014  
                   __mediumconst FC9A      __end_ofTimer2_Init@PRESCALE FD87  
       Port_CheckPortType@pDrive 01C1                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                   ?_MXK_Dequeue 0001         Port_CheckPortType@pInput 01BF  
                  ??_Port_SetPin 00DB            Console_MakeField@Fill 0200  
               ?_Port_SetPinType 00EE                Motor_Speed@pMotor 00E3  
                 i2_Word_GetPair 1E04           __end_of_Timer0_Restart 1F78  
                   ?_MXK_Release 0001                  __CFG_FOSC$HSPLL 000000  
         __end_ofi2_MXK_SwitchTo 1DD4                     i2delay_us@us 0001  
                     __accesstop 0060          __end_of__initialization 142C  
                      ?_LED_Init 0001         __end_ofi2_Timer0_Restart 1F90  
                  ___rparam_used 000001                      _Byte_SetBit 1934  
                  __end_of_MASKS FD80                   _PortA_Property FF73  
                 __pcstackCOMRAM 0001                   _PortB_Property FF71  
            __size_ofi2_delay_us 0040                     __pidataBANK0 1FA3  
                   __pidataBANK1 1FAB              i2Byte_SetBit@pInput 0001  
           __end_of_Byte_GetPair 1F12              i2Byte_SetBit@pValue 0004  
            Timer0_Init@PRESCALE FD4D             __end_of_Byte_GetZone 176E  
                 _PortC_Property FF6F              __end_of_Timer0_Init 0E5A  
                      ?_MXK_Init 0001              __end_of_Timer0_Stop 1FBA  
              Port_SetType@pType 01C4             __end_of_Byte_SetByte 1F50  
           __end_of_Byte_SetPair 1EF4                   _HMI_LeftSwitch 000000  
                 _PortD_Property FF6D             __end_of_Byte_SetQuad 1ED2  
           __end_of_Byte_SetZone 1388              __end_of_Motor_Speed 1E8C  
                 _HMI_DownSwitch 000000                   _PortE_Property FF6B  
         __end_ofi2_Word_GetPair 1E34                   _PortF_Property FF69  
        Port_CheckQuadType@Pair1 01BC          Port_CheckQuadType@Pair2 01BD  
       MXK_BlockSwitchTo@pModule 00CF                  ?_Timer0_Restart 0001  
                 _PortG_Property FF67                       __pbssBANK0 0060  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
        Port_CheckQuadType@pQuad 01BA                  ?i2_MXK_SwitchTo 0001  
            __end_of_Port_SetPin 1216           __end_of_PortA_Property FF75  
             Byte_SetByte@pInput 00C8                       ??_LED_Init 00F5  
             Byte_SetByte@pValue 00CA                    ?_ISR_Function 0001  
                  ?_Timer0_Clear 0001          Port_CheckPairType@Props 00F5  
         __end_of_PortB_Property FF73                    ?_Timer0_Start 00C8  
              __end_of_Port_Init 0B8C                      ?_Timer0_ISR 0001  
        Port_CheckPairType@pPair 00F0                      ?_Motor_Init 01B8  
             Byte_SetPair@pInput 00D3                      ?_Motor_Move 00CB  
                    ?_Motor_Step 0001               Byte_SetPair@pValue 00D6  
         __end_of_PortC_Property FF71               Word_GetPair@pInput 00D4  
                      ?_Port_Set 00D7                     ??_ISR_Enable 00C8  
         __end_of_PortD_Property FF6F                          _ADC_AN0 00BB  
                        _ADC_AN1 00B6                          _ADC_AN2 00B1  
                        _ADC_AN3 01B3                       ??_MXK_Init 00F8  
         __end_of_PortE_Property FF6D              Console_Render@F6956 01CE  
                        _COUNTER 002A                          _LED_Set 1B00  
         __end_of_PortF_Property FF6B                      _gBackcolour 0032  
                      _I2C1_Done 006E                  ?i2_Word_GetPair 000D  
                      _I2C2_Done 0124                        _I2C1_More 0121  
                      _I2C2_More 011E                        ?_delay_ms 00C8  
                      ?_delay_us 00C8                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9                          _SSP2BUF 000F6F  
         __end_of_PortG_Property FF69             __size_ofi2_MXK_Queue 000E  
           i2Byte_GetZone@Offset 0008               __end_of_ISR_Enable 1F9A  
                 ??_ISR_Function 0017             i2Byte_GetZone@Output 0009  
                 ??_Timer0_Clear 00C8                Event_TestButton@j 0034  
                        _Font5x7 FD87             i2Byte_GetZone@pChunk 0004  
           i2Byte_GetZone@pInput 0001                   ??_Timer0_Start 00CB  
                Byte_SetBit@pBit 00CA            __end_ofi2_Byte_SetBit 1B9C  
                        __Hparam 0000                      _Timer0_Init 0D06  
                        __Lparam 0000                      _Timer0_Stop 1FB4  
                        OutSeg@a 003A  __end_ofPortProperty_Valid@F6830 FD6D  
                     ??_Port_Set 00DA                      _Motor_Speed 1E62  
                        _Stepper 00AB                    ?_Port_SetType 01C2  
                        _gCursor 0040                          _lBuffer 0246  
                        ___lldiv 1216                          __pcinit 1388  
                        __ramtop 1000                       _initialise 1D28  
                        __ptext0 19FA                          __ptext1 1D28  
                        __ptext2 107C                          __ptext3 0B8C  
                        __ptext4 1860                          __ptext5 03BA  
                        __ptext6 1EB0                          __ptext7 09FA  
                        __ptext8 0610                          __ptext9 1B9C  
                      _T0CONbits 000FD5                i2MXK_SwitchTo@CUR 0007  
                        _dpowers FD6D                        _T2CONbits 000FCA  
                  LED_Set@pValue 00DC                     ?_GetPortPORT 00C8  
                   ?_GetPortTRIS 00C8                __CFG_MSSPMSK$MSK5 000000  
            LCD_DrawRectangle@p2 00C4              LCD_DrawRectangle@p4 00C0  
                   ??i2_delay_us 0003                       ??_delay_ms 00CA  
                     ??_delay_us 00CA                        _DIPSwitch 0177  
            __size_of_Timer0_ISR 002E                      _Port_SetPin 1152  
            __size_of_Motor_Init 00D6              __size_of_Motor_Move 003A  
            __size_of_Motor_Step 0124             __size_of_MXK_Dequeue 0030  
                     delay_ms@ms 00C8             end_of_initialization 142C  
                     delay_us@us 00C8             __size_of_MXK_Release 0016  
     __end_of_Port_CheckPairType 1934               _PortProperty_Valid 176E  
             Byte_SetQuad@pInput 00D3               Byte_SetQuad@pValue 00D6  
          __size_of_Byte_GetPair 001E                  ___lldiv@divisor 00CC  
          __size_of_Byte_GetZone 009C                  ___lldiv@counter 00D4  
                 ??_Port_SetType 01C5       __end_of_Port_CheckQuadType 1AAE  
                 Port_Init@pPort 01CA                          postdec1 000FE5  
                        postdec2 000FDD            __size_of_Byte_SetByte 000E  
          __size_of_Byte_SetPair 0022                          postinc0 000FEE  
                        postinc2 000FDE              ?_PortProperty_Valid 00D7  
          __size_of_Byte_SetQuad 0022       __end_of_Port_CheckPortType 1BE4  
          __size_of_Byte_SetZone 00B6               __end_ofi2_delay_us 1CAC  
          Timer0_Init@pFrequency 00D5              _Event_HMI_DIPSwitch 000000  
              ?_Port_SetQuadType 01BF                      _gForecolour 00FC  
         __size_ofi2_MXK_Release 0006                        _PORTFbits 000F85  
             ??_Port_SetQuadType 00F7                 Byte_GetZone@MASK 00CE  
                      _MXK_Queue 1F50                 __CFG_CPUDIV$OSC1 000000  
               Byte_GetZone@pMax 00CA                   Port_Set@pInput 00D7  
           ??_PortProperty_Valid 00DB                   Port_Set@pValue 00D9  
                   _Byte_GetPair 1EF4               HMI_SetButton@F7211 FD80  
                   _Byte_GetZone 16D2                    ?_MXK_SwitchTo 0001  
               _Event_TestButton 000000             Port_SetPinType@Props 00F3  
        __size_ofi2_Byte_GetPair 001A                     _Byte_SetByte 1F42  
                   _Byte_SetPair 1ED2                     _Byte_SetQuad 1EB0  
        __size_ofi2_Byte_GetZone 0076                     _Byte_SetZone 12D2  
           Port_SetPinType@pType 00F1                ?i2_Timer0_Restart 0001  
                   ?_Byte_SetBit 00C8                __size_of_LED_Init 0062  
          __end_ofi2_Timer0_Stop 1FC0               ??i2_Timer0_Restart 0001  
                  ?i2_Motor_Step 0001                    __pidataCOMRAM 1F9A  
                    ?_initialise 0001            _Event_HMI_RightButton 000000  
                      _Bus_State 0044              i2Byte_GetPair@pPair 000C  
           __end_of_ISR_Function 148A             __end_of_Timer0_Clear 1F84  
              __size_of_MXK_Init 017A                    ?_Word_GetPair 00D4  
               ??_Timer0_Restart 00C8             __end_of_Timer0_Start 1EB0  
             Port_SetType@Output 01C7              start_initialization 1388  
                     ?_MXK_Queue 00C8         PortProperty_Valid@Errors 00DD  
               ??i2_MXK_SwitchTo 0007               Port_SetType@pInput 01C2  
          __end_ofi2_Port_SetPin 14E0                    ?_Word_SetPair 00D7  
              Byte_SetBit@pInput 00C8                   ??_MXK_SwitchTo 00CE  
              Byte_SetBit@pValue 00CB      PortProperty_Valid@pPinDrive 00D9  
           MXK_BlockSwitchTo@CUR 00CE         PortProperty_Valid@pInput 00D7  
                  i2_MXK_Release 1FC0         __size_of_Port_SetPinType 01C0  
          Port_SetQuadType@pQuad 01C1            Port_SetQuadType@pType 01C2  
                   _HMI_UpSwitch 000000                     ??_Timer0_ISR 0017  
                _HMI_InitButtons 000000                        _gCharSize 00F8  
               Timer2_Init@INDEX 0036                        OutSeg@cur 003C  
                 ??i2_Motor_Step 0015                     ??_Motor_Init 00F5  
                   ??_Motor_Move 00CF                     ??_Motor_Step 00DC  
             Byte_SetZone@Offset 00D1                        _Port_Init 09FA  
                    __pdataBANK0 00F8                      __pdataBANK1 01CE  
              __size_of_Port_Set 03BA               Byte_SetZone@pChunk 00CB  
               ??i2_Word_GetPair 0010               Byte_SetZone@pInput 00C8  
             Byte_SetZone@pValue 00CD         Port_CheckQuadType@Output 01BE  
                      _gLineSize 01D2         Port_CheckQuadType@pDrive 01BB  
                 ??_Word_GetPair 00D7         Port_CheckQuadType@pInput 01B8  
                    __pbssBIGRAM 0246                         ?_LED_Set 00DC  
                    __pbssCOMRAM 0025                    __pcstackBANK0 00C8  
                  __pcstackBANK1 01B8                   ??_Word_SetPair 00DB  
             __end_of_Timer0_ISR 1E62             __size_of_GetPortPORT 00A6  
           __size_of_GetPortTRIS 00A6             __end_of_Port_SetType 083A  
              __size_of_delay_ms 006A                __size_of_delay_us 0052  
             __end_of_Motor_Init 1152              __CFG_CCP2MX$DEFAULT 000000  
             __end_of_Motor_Move 1D9E               __end_of_Motor_Step 0F7E  
                 ?i2_MXK_Release 0001              __size_of_initialise 003C  
       Port_CheckPairType@Output 00F4         Port_CheckPairType@pDrive 00F1  
       Port_CheckPairType@pInput 00EE               _MXK_InitTestButton 000000  
                   ?_Timer0_Init 00D5                     ?_Timer0_Stop 0001  
                  _lStepFunction 006B                Byte_SetPair@pPair 00D5  
                      __pintcode 1408                    __pmediumconst FC9A  
                   ?_Motor_Speed 00E3                        _pShiftVal 0028  
                       ?___lldiv 00C8                       ?_Port_Init 01C8  
           Timer0_Init@pCPUClock 00DB                        _direction 0075  
              _GetPortProperties 1586      __end_ofTimer0_Init@PRESCALE FD5D  
             ?_GetPortProperties 00C8                    ??i2_MXK_Queue 0004  
                    ??_MXK_Queue 00CB                     ?_Port_SetPin 00D7  
                _HMI_RightSwitch 000000              ??_GetPortProperties 00CA  
             Byte_GetPair@pInput 00D1                i2Port_SetPin@Type 0014  
              i2Port_SetPin@pPin 0012                   i2_Byte_GetPair 1F12  
                       _HMIBoard 0127                   i2_Byte_GetZone 17EA  
                       _LED_Init 1998                        delay_ms@u 00CA  
                      delay_us@u 00CA               MXK_Queue@pCallback 00C8  
                       _IPR1bits 000F9F                         _IPR3bits 000FA5  
                       _PIE1bits 000F9D                         _PIE3bits 000FA3  
              Byte_SetQuad@pQuad 00D5                         i2u405_44 1B64  
                       i2u405_45 1B60                         i2u406_44 1B8A  
                       i2u406_45 1B86                         _PIR1bits 000F9E  
                       i2u356_40 180C                         i2u356_47 1802  
                       _PIR3bits 000FA4                         i2u358_40 1854  
                       i2u358_45 1850                         i2u463_40 0FC0  
                       i2u464_40 0FD4                         i2u465_40 100C  
                       i2u853_48 1E4C             __size_of_Byte_SetBit 0064  
                       _RCONbits 000FD0             i2Word_GetPair@pInput 000D  
               __CFG_WDTPS$32768 000000                         _SSP1CON1 000FC6  
              ??_Port_SetPinType 00F2                         _SSP1CON2 000FC5  
                       _SSP2CON1 000F6C                         _SSP2CON2 000F6B  
          __size_of_ISR_Function 0082            __size_of_Timer0_Clear 000C  
                       _SSP1STAT 000FC7        __end_of_GetPortProperties 162C  
                       _SSP2STAT 000F6D             __end_of_MXK_SwitchTo 1C6C  
             _Port_CheckPairType 18CA                         _MXK_Init 0B8C  
          __size_of_Timer0_Start 0024                  MXK_SwitchTo@CUR 00CE  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
          Motor_Speed@pFrequency 00E5              Port_SetPinType@pPin 00F0  
             _Port_CheckQuadType 1A54                    _MXK_DIPSwitch 000000  
            ?_Port_CheckPairType 00EE                    ??_MXK_Dequeue 00DE  
               __size_of_LED_Set 0050           __size_ofi2_Byte_SetBit 004C  
             _Port_CheckPortType 1B9C          PortProperty_Valid@F6830 FD5D  
           __end_ofi2_Motor_Step 107C                  ??i2_MXK_Release 0001  
                      copy_data0 139C                        copy_data1 13BC  
                      copy_data2 13DC                    ??_MXK_Release 00C8  
         __end_ofi2_Byte_GetPair 1F2C        __size_of_Port_SetQuadType 0256  
            ?_Port_CheckQuadType 01B8           __end_ofi2_Byte_GetZone 1860  
            __end_ofi2_MXK_Queue 1F6C              ?_Port_CheckPortType 01BF  
                       _InitList FC9B             _Motor_Step$intlevel0 0E60  
                   _ISR_Function 1408                     _Timer0_Clear 1F78  
           __end_of_Word_GetPair 1CEA                         _lCBuffer 0100  
           ??_Port_CheckPairType 00F2                         __Hrparam 0000  
                   _Timer0_Start 1E8C                         __Lrparam 0000  
                       _Port_Set 0000                     OutSeg@segset 003B  
                      rand@screw 0039             __end_of_Word_SetPair 1C2A  
                    ??_Port_Init 01CB             ??_Port_CheckQuadType 00F7  
               __size_of___lldiv 00BC                _MXK_BlockSwitchTo 1CEA  
           ??_Port_CheckPortType 00F7                     ??_initialise 00F8  
                       _lBufferX 003E                         _lBufferY 003D  
            Timer2_Init@PRESCALE FD84               _Event_HMI_UpButton 000000  
             ?_MXK_BlockSwitchTo 0001        __size_ofi2_Timer0_Restart 000C  
                       _lCurrent 002E           Byte_GetZone@pChunkSize 00CC  
         Byte_SetZone@pChunkSize 00CC            __size_of_Port_SetType 022A  
          i2MXK_SwitchTo@pModule 0008               Motor_Init@pAddress 01BA  
                       _delay_ms 1860                         _delay_us 1AAE  
                       _clearall 003F                         __ptext10 1A54  
                       __ptext11 18CA                         __ptext20 1ED2  
                       __ptext12 0000                         __ptext21 12D2  
                       __ptext13 1F42                         __ptext30 1EF4  
                       __ptext22 176E                         __ptext14 14E0  
                       __ptext31 16D2                         __ptext23 1B00  
                       __ptext15 1586                         __ptext40 0D06  
                       __ptext32 1934                         __ptext24 1DD4  
                       __ptext16 162C                         __ptext41 1216  
                       __ptext33 1C2A                         __ptext25 0E5A  
                       __ptext17 1998                         __ptext50 1436  
                       __ptext42 1F78                         __ptext34 1F2C  
                       __ptext26 1FB4                         __ptext18 083A  
                       __ptext51 1E04                         __ptext43 1D64  
                       __ptext35 1F50                         __ptext27 1F6C  
                       __ptext19 1BE4                         __ptext52 1F12  
                       __ptext44 1E8C                         __ptext36 1CEA  
                       __ptext28 1152                         __ptext53 17EA  
                       __ptext37 1AAE                         __ptext29 1CAC  
                       __ptext54 1B50                         __ptext46 1E34  
                       __ptext38 1F90                         __ptext55 1D9E  
                       __ptext47 0F7E                         __ptext39 1E62  
            ??_MXK_BlockSwitchTo 00CE                         __ptext56 1C6C  
                       __ptext48 1FBA                         __ptext57 1FC0  
                       __ptext49 1F84                         __ptext58 1F5E  
                       __ptext59 0000                     _SSP1CON1bits 000FC6  
                   _SSP1CON2bits 000FC5      __size_of_PortProperty_Valid 007C  
             i2Byte_GetZone@MASK 0007                     _SSP2CON1bits 000F6C  
                   _SSP2CON2bits 000F6B                  ?i2_Byte_GetPair 000A  
                ?i2_Byte_GetZone 0001               i2Byte_GetZone@pMax 0003  
            __end_of_MXK_Dequeue 1E04                    __size_of_main 005A  
              Byte_GetPair@pPair 00D3               __end_of_initialise 1D64  
            i2Port_SetPin@pInput 0010              i2Port_SetPin@pValue 0013  
            __end_of_MXK_Release 1F42                   _MXK_TestButton 000000  
                  i2_Byte_SetBit 1B50              i2Word_GetPair@pPair 000F  
      __end_of_MXK_BlockSwitchTo 1D28             __size_of_Timer0_Init 0154  
                       int$flags 0049             __size_of_Timer0_Stop 0006  
                   _Port_SetType 0610                     Port_Set@Type 00EE  
     __size_of_GetPortProperties 00A6                     _SSP1STATbits 000FC7  
           __size_of_Motor_Speed 002A                   Timer0_Init@DIV 0064  
                 Timer0_Init@PRE 0037                     _SSP2STATbits 000F6D  
         PortProperty_Valid@Pair 00ED                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2           PortProperty_Valid@pPin 00DA  
               Byte_SetZone@MASK 00D2                      i2_MXK_Queue 1F5E  
                 Timer2_Init@DIV 0060                   Timer2_Init@PRE 0035  
               Byte_SetZone@pMax 00CA           __size_ofi2_Timer0_Stop 0006  
           __size_of_Port_SetPin 00C4                         intlevel2 0000  
               ___lldiv@dividend 00C8                   ?i2_Byte_SetBit 0001  
          __size_of_MXK_SwitchTo 0042                  Port_Init@pInput 01C8  
         __size_ofi2_Port_SetPin 00AA                       _ISR_Enable 1F90  
          __size_ofi2_Motor_Step 00FE                 ___lldiv@quotient 00D0  
                  ??_GetPortPORT 00CA                    ??_GetPortTRIS 00CA  
          Timer0_Start@pFunction 00C8               Word_SetPair@pInput 00D7  
             Word_SetPair@pValue 00DA                 Motor_Init@pMotor 01B8  
                    _MXK_Dequeue 1DD4                 _Port_SetQuadType 03BA  
                    _MXK_Release 1F2C                     _MXK_SwitchTo 1C2A  
          __size_of_Word_GetPair 003E               Byte_GetZone@Offset 00CF  
              Word_SetPair@pPair 00D9                  _Port_SetPinType 083A  
        __size_of_Timer0_Restart 000C               Byte_GetZone@Output 00D0  
             Byte_GetZone@pChunk 00CB               Byte_GetZone@pInput 00C8  
        __size_ofi2_MXK_SwitchTo 0036            __size_of_Word_SetPair 0046  
             Port_Set@TypeActual 00EC  
