

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Aug 27 20:54:25 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F67J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,inline
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           ; Version 1.42
    77                           ; Generated 13/04/2017 GMT
    78                           ; 
    79                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F67J50 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     
   111 ;; Function _HMI_InitButtons is unused but had its address taken
   112  0000                     
   113 ;; Function _HMI_LeftSwitch is unused but had its address taken
   114  0000                     
   115 ;; Function _HMI_RightSwitch is unused but had its address taken
   116  0000                     
   117 ;; Function _HMI_UpSwitch is unused but had its address taken
   118  0000                     
   119 ;; Function _HMI_DownSwitch is unused but had its address taken
   120  0000                     
   121 ;; Function _HMI_DIPSwitch is unused but had its address taken
   122  0000                     
   123 ;; Function _MXK_InitTestButton is unused but had its address taken
   124  0000                     
   125 ;; Function _MXK_TestButton is unused but had its address taken
   126  0000                     
   127 ;; Function _MXK_InitDIPSwitch is unused but had its address taken
   128  0000                     
   129 ;; Function _MXK_DIPSwitch is unused but had its address taken
   130  0000                     
   131 ;; Function _Event_NULL is unused but had its address taken
   132  0000                     
   133 ;; Function _Event_DIPSwitch is unused but had its address taken
   134  0000                     
   135 ;; Function _Event_TestButton is unused but had its address taken
   136  0000                     
   137                           	psect	idataCOMRAM
   138  011BAC                     __pidataCOMRAM:
   139                           	opt stack 0
   140                           
   141                           ;initializer for _gCursor
   142  011BAC  0006               	dw	6
   143  011BAE  0006               	dw	6
   144                           
   145                           ;initializer for _Bus_State
   146  011BB0  01                 	db	1
   147                           
   148                           ;initializer for _change
   149  011BB1  01                 	db	1
   150                           
   151                           ;initializer for _zero
   152  011BB2  30                 	db	48
   153                           
   154                           ;initializer for _l
   155  011BB3  80                 	db	128
   156                           
   157                           ;initializer for _w
   158  011BB4  80                 	db	128
   159                           
   160                           	psect	idataBANK0
   161  011BB5                     __pidataBANK0:
   162                           	opt stack 0
   163                           
   164                           ;initializer for _gCharSize
   165  011BB5  0005               	dw	5
   166  011BB7  0007               	dw	7
   167                           
   168                           ;initializer for _gForecolour
   169  011BB9  FFFF               	dw	65535
   170                           
   171                           ;initializer for _A
   172  011BBB  41                 	db	65
   173                           
   174                           ;initializer for _a
   175  011BBC  61                 	db	97
   176                           
   177                           	psect	idataBANK1
   178  011BBD                     __pidataBANK1:
   179                           	opt stack 0
   180                           
   181                           ;initializer for Console_Render@F6956
   182  011BBD  0006               	dw	6
   183  011BBF  0006               	dw	6
   184                           
   185                           ;initializer for _gLineSize
   186  011BC1  0080               	dw	128
   187  011BC3  0007               	dw	7
   188                           
   189                           	psect	mediumconst
   190  00FD2E                     __pmediumconst:
   191                           	opt stack 0
   192  00FD2E  00                 	db	0
   193  00FD2F                     _InitList:
   194                           	opt stack 0
   195  00FD2F  1100               	dw	4352
   196  00FD31  0080               	dw	128
   197  00FD33  012C               	dw	300
   198  00FD35  B100               	dw	45312
   199  00FD37  0002               	dw	2
   200  00FD39  0035               	dw	53
   201  00FD3B  0036               	dw	54
   202  00FD3D  B200               	dw	45568
   203  00FD3F  0002               	dw	2
   204  00FD41  0035               	dw	53
   205  00FD43  0036               	dw	54
   206  00FD45  B300               	dw	45824
   207  00FD47  0002               	dw	2
   208  00FD49  0035               	dw	53
   209  00FD4B  0036               	dw	54
   210  00FD4D  0002               	dw	2
   211  00FD4F  0035               	dw	53
   212  00FD51  0036               	dw	54
   213  00FD53  B400               	dw	46080
   214  00FD55  0000               	dw	0
   215  00FD57  C000               	dw	49152
   216  00FD59  00A2               	dw	162
   217  00FD5B  0002               	dw	2
   218  00FD5D  0084               	dw	132
   219  00FD5F  C100               	dw	49408
   220  00FD61  00C5               	dw	197
   221  00FD63  C200               	dw	49664
   222  00FD65  000D               	dw	13
   223  00FD67  0000               	dw	0
   224  00FD69  C300               	dw	49920
   225  00FD6B  008D               	dw	141
   226  00FD6D  002A               	dw	42
   227  00FD6F  C400               	dw	50176
   228  00FD71  008D               	dw	141
   229  00FD73  00EE               	dw	238
   230  00FD75  C500               	dw	50432
   231  00FD77  000A               	dw	10
   232  00FD79  3600               	dw	13824
   233  00FD7B  00C8               	dw	200
   234  00FD7D  E000               	dw	57344
   235  00FD7F  0012               	dw	18
   236  00FD81  001C               	dw	28
   237  00FD83  0010               	dw	16
   238  00FD85  0018               	dw	24
   239  00FD87  0033               	dw	51
   240  00FD89  002C               	dw	44
   241  00FD8B  0025               	dw	37
   242  00FD8D  0028               	dw	40
   243  00FD8F  0028               	dw	40
   244  00FD91  0027               	dw	39
   245  00FD93  002F               	dw	47
   246  00FD95  003C               	dw	60
   247  00FD97  0000               	dw	0
   248  00FD99  0003               	dw	3
   249  00FD9B  0003               	dw	3
   250  00FD9D  0010               	dw	16
   251  00FD9F  0080               	dw	128
   252  00FDA1  0078               	dw	120
   253  00FDA3  E100               	dw	57600
   254  00FDA5  0012               	dw	18
   255  00FDA7  001C               	dw	28
   256  00FDA9  0010               	dw	16
   257  00FDAB  0018               	dw	24
   258  00FDAD  002D               	dw	45
   259  00FDAF  0028               	dw	40
   260  00FDB1  0023               	dw	35
   261  00FDB3  0028               	dw	40
   262  00FDB5  0028               	dw	40
   263  00FDB7  0026               	dw	38
   264  00FDB9  002F               	dw	47
   265  00FDBB  003B               	dw	59
   266  00FDBD  0000               	dw	0
   267  00FDBF  0003               	dw	3
   268  00FDC1  0003               	dw	3
   269  00FDC3  0010               	dw	16
   270  00FDC5  3A00               	dw	14848
   271  00FDC7  0005               	dw	5
   272  00FDC9  2A00               	dw	10752
   273  00FDCB  0000               	dw	0
   274  00FDCD  0002               	dw	2
   275  00FDCF  0000               	dw	0
   276  00FDD1  0081               	dw	129
   277  00FDD3  2B00               	dw	11008
   278  00FDD5  0000               	dw	0
   279  00FDD7  0003               	dw	3
   280  00FDD9  0000               	dw	0
   281  00FDDB  00A2               	dw	162
   282  00FDDD  2900               	dw	10496
   283  00FDDF  2C00               	dw	11264
   284  00FDE1                     __end_of_InitList:
   285                           	opt stack 0
   286  00FDE1                     Timer0_Init@PRESCALE:
   287                           	opt stack 0
   288  00FDE1  0002               	dw	2
   289  00FDE3  0004               	dw	4
   290  00FDE5  0008               	dw	8
   291  00FDE7  0010               	dw	16
   292  00FDE9  0020               	dw	32
   293  00FDEB  0040               	dw	64
   294  00FDED  0080               	dw	128
   295  00FDEF  0100               	dw	256
   296  00FDF1                     __end_ofTimer0_Init@PRESCALE:
   297                           	opt stack 0
   298  00FDF1                     PortProperty_Valid@F6830:
   299                           	opt stack 0
   300  00FDF1  00                 	db	0
   301  00FDF2  01                 	db	1
   302  00FDF3  02                 	db	2
   303  00FDF4  00                 	db	0
   304  00FDF5  01                 	db	1
   305  00FDF6  00                 	db	0
   306  00FDF7  01                 	db	1
   307  00FDF8  00                 	db	0
   308  00FDF9  02                 	db	2
   309  00FDFA  02                 	db	2
   310  00FDFB  00                 	db	0
   311  00FDFC  00                 	db	0
   312  00FDFD  03                 	db	3
   313  00FDFE  03                 	db	3
   314  00FDFF  03                 	db	3
   315  00FE00  00                 	db	0
   316  00FE01                     __end_ofPortProperty_Valid@F6830:
   317                           	opt stack 0
   318  00FE01                     _MASKS:
   319                           	opt stack 0
   320  00FE01  00                 	db	0
   321  00FE02  01                 	db	1
   322  00FE03  03                 	db	3
   323  00FE04  07                 	db	7
   324  00FE05  0F                 	db	15
   325  00FE06  1F                 	db	31
   326  00FE07  3F                 	db	63
   327  00FE08  7F                 	db	127
   328  00FE09  FF                 	db	255
   329  00FE0A                     __end_of_MASKS:
   330                           	opt stack 0
   331  00FE0A                     HMI_SetButton@F7213:
   332                           	opt stack 0
   333  00FE0A  00                 	db	0
   334  00FE0B  02                 	db	2
   335  00FE0C  01                 	db	1
   336  00FE0D  03                 	db	3
   337  00FE0E                     __end_ofHMI_SetButton@F7213:
   338                           	opt stack 0
   339  00FE0E                     Timer2_Init@PRESCALE:
   340                           	opt stack 0
   341  00FE0E  01                 	db	1
   342  00FE0F  04                 	db	4
   343  00FE10  10                 	db	16
   344  00FE11                     __end_ofTimer2_Init@PRESCALE:
   345                           	opt stack 0
   346  00FE11                     _Font5x7:
   347                           	opt stack 0
   348  00FE11  00                 	db	0
   349  00FE12  00                 	db	0
   350  00FE13  00                 	db	0
   351  00FE14  00                 	db	0
   352  00FE15  00                 	db	0
   353  00FE16  00                 	db	0
   354  00FE17  00                 	db	0
   355  00FE18  5F                 	db	95
   356  00FE19  00                 	db	0
   357  00FE1A  00                 	db	0
   358  00FE1B  00                 	db	0
   359  00FE1C  07                 	db	7
   360  00FE1D  00                 	db	0
   361  00FE1E  07                 	db	7
   362  00FE1F  00                 	db	0
   363  00FE20  14                 	db	20
   364  00FE21  7F                 	db	127
   365  00FE22  14                 	db	20
   366  00FE23  7F                 	db	127
   367  00FE24  14                 	db	20
   368  00FE25  24                 	db	36
   369  00FE26  2A                 	db	42
   370  00FE27  7F                 	db	127
   371  00FE28  2A                 	db	42
   372  00FE29  12                 	db	18
   373  00FE2A  23                 	db	35
   374  00FE2B  13                 	db	19
   375  00FE2C  08                 	db	8
   376  00FE2D  64                 	db	100
   377  00FE2E  62                 	db	98
   378  00FE2F  36                 	db	54
   379  00FE30  49                 	db	73
   380  00FE31  55                 	db	85
   381  00FE32  22                 	db	34
   382  00FE33  50                 	db	80
   383  00FE34  00                 	db	0
   384  00FE35  05                 	db	5
   385  00FE36  03                 	db	3
   386  00FE37  00                 	db	0
   387  00FE38  00                 	db	0
   388  00FE39  00                 	db	0
   389  00FE3A  1C                 	db	28
   390  00FE3B  22                 	db	34
   391  00FE3C  41                 	db	65
   392  00FE3D  00                 	db	0
   393  00FE3E  00                 	db	0
   394  00FE3F  41                 	db	65
   395  00FE40  22                 	db	34
   396  00FE41  1C                 	db	28
   397  00FE42  00                 	db	0
   398  00FE43  08                 	db	8
   399  00FE44  2A                 	db	42
   400  00FE45  1C                 	db	28
   401  00FE46  2A                 	db	42
   402  00FE47  08                 	db	8
   403  00FE48  08                 	db	8
   404  00FE49  08                 	db	8
   405  00FE4A  3E                 	db	62
   406  00FE4B  08                 	db	8
   407  00FE4C  08                 	db	8
   408  00FE4D  00                 	db	0
   409  00FE4E  50                 	db	80
   410  00FE4F  30                 	db	48
   411  00FE50  00                 	db	0
   412  00FE51  00                 	db	0
   413  00FE52  08                 	db	8
   414  00FE53  08                 	db	8
   415  00FE54  08                 	db	8
   416  00FE55  08                 	db	8
   417  00FE56  08                 	db	8
   418  00FE57  00                 	db	0
   419  00FE58  60                 	db	96
   420  00FE59  60                 	db	96
   421  00FE5A  00                 	db	0
   422  00FE5B  00                 	db	0
   423  00FE5C  20                 	db	32
   424  00FE5D  10                 	db	16
   425  00FE5E  08                 	db	8
   426  00FE5F  04                 	db	4
   427  00FE60  02                 	db	2
   428  00FE61  3E                 	db	62
   429  00FE62  51                 	db	81
   430  00FE63  49                 	db	73
   431  00FE64  45                 	db	69
   432  00FE65  3E                 	db	62
   433  00FE66  00                 	db	0
   434  00FE67  42                 	db	66
   435  00FE68  7F                 	db	127
   436  00FE69  40                 	db	64
   437  00FE6A  00                 	db	0
   438  00FE6B  42                 	db	66
   439  00FE6C  61                 	db	97
   440  00FE6D  51                 	db	81
   441  00FE6E  49                 	db	73
   442  00FE6F  46                 	db	70
   443  00FE70  21                 	db	33
   444  00FE71  41                 	db	65
   445  00FE72  45                 	db	69
   446  00FE73  4B                 	db	75
   447  00FE74  31                 	db	49
   448  00FE75  18                 	db	24
   449  00FE76  14                 	db	20
   450  00FE77  12                 	db	18
   451  00FE78  7F                 	db	127
   452  00FE79  10                 	db	16
   453  00FE7A  27                 	db	39
   454  00FE7B  45                 	db	69
   455  00FE7C  45                 	db	69
   456  00FE7D  45                 	db	69
   457  00FE7E  39                 	db	57
   458  00FE7F  3C                 	db	60
   459  00FE80  4A                 	db	74
   460  00FE81  49                 	db	73
   461  00FE82  49                 	db	73
   462  00FE83  30                 	db	48
   463  00FE84  01                 	db	1
   464  00FE85  71                 	db	113
   465  00FE86  09                 	db	9
   466  00FE87  05                 	db	5
   467  00FE88  03                 	db	3
   468  00FE89  36                 	db	54
   469  00FE8A  49                 	db	73
   470  00FE8B  49                 	db	73
   471  00FE8C  49                 	db	73
   472  00FE8D  36                 	db	54
   473  00FE8E  06                 	db	6
   474  00FE8F  49                 	db	73
   475  00FE90  49                 	db	73
   476  00FE91  29                 	db	41
   477  00FE92  1E                 	db	30
   478  00FE93  00                 	db	0
   479  00FE94  36                 	db	54
   480  00FE95  36                 	db	54
   481  00FE96  00                 	db	0
   482  00FE97  00                 	db	0
   483  00FE98  00                 	db	0
   484  00FE99  56                 	db	86
   485  00FE9A  36                 	db	54
   486  00FE9B  00                 	db	0
   487  00FE9C  00                 	db	0
   488  00FE9D  00                 	db	0
   489  00FE9E  08                 	db	8
   490  00FE9F  14                 	db	20
   491  00FEA0  22                 	db	34
   492  00FEA1  41                 	db	65
   493  00FEA2  14                 	db	20
   494  00FEA3  14                 	db	20
   495  00FEA4  14                 	db	20
   496  00FEA5  14                 	db	20
   497  00FEA6  14                 	db	20
   498  00FEA7  41                 	db	65
   499  00FEA8  22                 	db	34
   500  00FEA9  14                 	db	20
   501  00FEAA  08                 	db	8
   502  00FEAB  00                 	db	0
   503  00FEAC  02                 	db	2
   504  00FEAD  01                 	db	1
   505  00FEAE  51                 	db	81
   506  00FEAF  09                 	db	9
   507  00FEB0  06                 	db	6
   508  00FEB1  32                 	db	50
   509  00FEB2  49                 	db	73
   510  00FEB3  79                 	db	121
   511  00FEB4  41                 	db	65
   512  00FEB5  3E                 	db	62
   513  00FEB6  7E                 	db	126
   514  00FEB7  11                 	db	17
   515  00FEB8  11                 	db	17
   516  00FEB9  11                 	db	17
   517  00FEBA  7E                 	db	126
   518  00FEBB  7F                 	db	127
   519  00FEBC  49                 	db	73
   520  00FEBD  49                 	db	73
   521  00FEBE  49                 	db	73
   522  00FEBF  36                 	db	54
   523  00FEC0  3E                 	db	62
   524  00FEC1  41                 	db	65
   525  00FEC2  41                 	db	65
   526  00FEC3  41                 	db	65
   527  00FEC4  22                 	db	34
   528  00FEC5  7F                 	db	127
   529  00FEC6  41                 	db	65
   530  00FEC7  41                 	db	65
   531  00FEC8  22                 	db	34
   532  00FEC9  1C                 	db	28
   533  00FECA  7F                 	db	127
   534  00FECB  49                 	db	73
   535  00FECC  49                 	db	73
   536  00FECD  49                 	db	73
   537  00FECE  41                 	db	65
   538  00FECF  7F                 	db	127
   539  00FED0  09                 	db	9
   540  00FED1  09                 	db	9
   541  00FED2  01                 	db	1
   542  00FED3  01                 	db	1
   543  00FED4  3E                 	db	62
   544  00FED5  41                 	db	65
   545  00FED6  41                 	db	65
   546  00FED7  51                 	db	81
   547  00FED8  32                 	db	50
   548  00FED9  7F                 	db	127
   549  00FEDA  08                 	db	8
   550  00FEDB  08                 	db	8
   551  00FEDC  08                 	db	8
   552  00FEDD  7F                 	db	127
   553  00FEDE  00                 	db	0
   554  00FEDF  41                 	db	65
   555  00FEE0  7F                 	db	127
   556  00FEE1  41                 	db	65
   557  00FEE2  00                 	db	0
   558  00FEE3  20                 	db	32
   559  00FEE4  40                 	db	64
   560  00FEE5  41                 	db	65
   561  00FEE6  3F                 	db	63
   562  00FEE7  01                 	db	1
   563  00FEE8  7F                 	db	127
   564  00FEE9  08                 	db	8
   565  00FEEA  14                 	db	20
   566  00FEEB  22                 	db	34
   567  00FEEC  41                 	db	65
   568  00FEED  7F                 	db	127
   569  00FEEE  40                 	db	64
   570  00FEEF  40                 	db	64
   571  00FEF0  40                 	db	64
   572  00FEF1  40                 	db	64
   573  00FEF2  7F                 	db	127
   574  00FEF3  02                 	db	2
   575  00FEF4  04                 	db	4
   576  00FEF5  02                 	db	2
   577  00FEF6  7F                 	db	127
   578  00FEF7  7F                 	db	127
   579  00FEF8  04                 	db	4
   580  00FEF9  08                 	db	8
   581  00FEFA  10                 	db	16
   582  00FEFB  7F                 	db	127
   583  00FEFC  3E                 	db	62
   584  00FEFD  41                 	db	65
   585  00FEFE  41                 	db	65
   586  00FEFF  41                 	db	65
   587  00FF00  3E                 	db	62
   588  00FF01  7F                 	db	127
   589  00FF02  09                 	db	9
   590  00FF03  09                 	db	9
   591  00FF04  09                 	db	9
   592  00FF05  06                 	db	6
   593  00FF06  3E                 	db	62
   594  00FF07  41                 	db	65
   595  00FF08  51                 	db	81
   596  00FF09  21                 	db	33
   597  00FF0A  5E                 	db	94
   598  00FF0B  7F                 	db	127
   599  00FF0C  09                 	db	9
   600  00FF0D  19                 	db	25
   601  00FF0E  29                 	db	41
   602  00FF0F  46                 	db	70
   603  00FF10  46                 	db	70
   604  00FF11  49                 	db	73
   605  00FF12  49                 	db	73
   606  00FF13  49                 	db	73
   607  00FF14  31                 	db	49
   608  00FF15  01                 	db	1
   609  00FF16  01                 	db	1
   610  00FF17  7F                 	db	127
   611  00FF18  01                 	db	1
   612  00FF19  01                 	db	1
   613  00FF1A  3F                 	db	63
   614  00FF1B  40                 	db	64
   615  00FF1C  40                 	db	64
   616  00FF1D  40                 	db	64
   617  00FF1E  3F                 	db	63
   618  00FF1F  1F                 	db	31
   619  00FF20  20                 	db	32
   620  00FF21  40                 	db	64
   621  00FF22  20                 	db	32
   622  00FF23  1F                 	db	31
   623  00FF24  7F                 	db	127
   624  00FF25  20                 	db	32
   625  00FF26  18                 	db	24
   626  00FF27  20                 	db	32
   627  00FF28  7F                 	db	127
   628  00FF29  63                 	db	99
   629  00FF2A  14                 	db	20
   630  00FF2B  08                 	db	8
   631  00FF2C  14                 	db	20
   632  00FF2D  63                 	db	99
   633  00FF2E  03                 	db	3
   634  00FF2F  04                 	db	4
   635  00FF30  78                 	db	120
   636  00FF31  04                 	db	4
   637  00FF32  03                 	db	3
   638  00FF33  61                 	db	97
   639  00FF34  51                 	db	81
   640  00FF35  49                 	db	73
   641  00FF36  45                 	db	69
   642  00FF37  43                 	db	67
   643  00FF38  00                 	db	0
   644  00FF39  00                 	db	0
   645  00FF3A  7F                 	db	127
   646  00FF3B  41                 	db	65
   647  00FF3C  41                 	db	65
   648  00FF3D  02                 	db	2
   649  00FF3E  04                 	db	4
   650  00FF3F  08                 	db	8
   651  00FF40  10                 	db	16
   652  00FF41  20                 	db	32
   653  00FF42  41                 	db	65
   654  00FF43  41                 	db	65
   655  00FF44  7F                 	db	127
   656  00FF45  00                 	db	0
   657  00FF46  00                 	db	0
   658  00FF47  04                 	db	4
   659  00FF48  02                 	db	2
   660  00FF49  01                 	db	1
   661  00FF4A  02                 	db	2
   662  00FF4B  04                 	db	4
   663  00FF4C  40                 	db	64
   664  00FF4D  40                 	db	64
   665  00FF4E  40                 	db	64
   666  00FF4F  40                 	db	64
   667  00FF50  40                 	db	64
   668  00FF51  00                 	db	0
   669  00FF52  01                 	db	1
   670  00FF53  02                 	db	2
   671  00FF54  04                 	db	4
   672  00FF55  00                 	db	0
   673  00FF56  20                 	db	32
   674  00FF57  54                 	db	84
   675  00FF58  54                 	db	84
   676  00FF59  54                 	db	84
   677  00FF5A  78                 	db	120
   678  00FF5B  7F                 	db	127
   679  00FF5C  48                 	db	72
   680  00FF5D  44                 	db	68
   681  00FF5E  44                 	db	68
   682  00FF5F  38                 	db	56
   683  00FF60  38                 	db	56
   684  00FF61  44                 	db	68
   685  00FF62  44                 	db	68
   686  00FF63  44                 	db	68
   687  00FF64  20                 	db	32
   688  00FF65  38                 	db	56
   689  00FF66  44                 	db	68
   690  00FF67  44                 	db	68
   691  00FF68  48                 	db	72
   692  00FF69  7F                 	db	127
   693  00FF6A  38                 	db	56
   694  00FF6B  54                 	db	84
   695  00FF6C  54                 	db	84
   696  00FF6D  54                 	db	84
   697  00FF6E  18                 	db	24
   698  00FF6F  08                 	db	8
   699  00FF70  7E                 	db	126
   700  00FF71  09                 	db	9
   701  00FF72  01                 	db	1
   702  00FF73  02                 	db	2
   703  00FF74  08                 	db	8
   704  00FF75  14                 	db	20
   705  00FF76  54                 	db	84
   706  00FF77  54                 	db	84
   707  00FF78  3C                 	db	60
   708  00FF79  7F                 	db	127
   709  00FF7A  08                 	db	8
   710  00FF7B  04                 	db	4
   711  00FF7C  04                 	db	4
   712  00FF7D  78                 	db	120
   713  00FF7E  00                 	db	0
   714  00FF7F  44                 	db	68
   715  00FF80  7D                 	db	125
   716  00FF81  40                 	db	64
   717  00FF82  00                 	db	0
   718  00FF83  20                 	db	32
   719  00FF84  40                 	db	64
   720  00FF85  44                 	db	68
   721  00FF86  3D                 	db	61
   722  00FF87  00                 	db	0
   723  00FF88  00                 	db	0
   724  00FF89  7F                 	db	127
   725  00FF8A  10                 	db	16
   726  00FF8B  28                 	db	40
   727  00FF8C  44                 	db	68
   728  00FF8D  00                 	db	0
   729  00FF8E  41                 	db	65
   730  00FF8F  7F                 	db	127
   731  00FF90  40                 	db	64
   732  00FF91  00                 	db	0
   733  00FF92  7C                 	db	124
   734  00FF93  04                 	db	4
   735  00FF94  18                 	db	24
   736  00FF95  04                 	db	4
   737  00FF96  78                 	db	120
   738  00FF97  7C                 	db	124
   739  00FF98  08                 	db	8
   740  00FF99  04                 	db	4
   741  00FF9A  04                 	db	4
   742  00FF9B  78                 	db	120
   743  00FF9C  38                 	db	56
   744  00FF9D  44                 	db	68
   745  00FF9E  44                 	db	68
   746  00FF9F  44                 	db	68
   747  00FFA0  38                 	db	56
   748  00FFA1  7C                 	db	124
   749  00FFA2  14                 	db	20
   750  00FFA3  14                 	db	20
   751  00FFA4  14                 	db	20
   752  00FFA5  08                 	db	8
   753  00FFA6  08                 	db	8
   754  00FFA7  14                 	db	20
   755  00FFA8  14                 	db	20
   756  00FFA9  18                 	db	24
   757  00FFAA  7C                 	db	124
   758  00FFAB  7C                 	db	124
   759  00FFAC  08                 	db	8
   760  00FFAD  04                 	db	4
   761  00FFAE  04                 	db	4
   762  00FFAF  08                 	db	8
   763  00FFB0  48                 	db	72
   764  00FFB1  54                 	db	84
   765  00FFB2  54                 	db	84
   766  00FFB3  54                 	db	84
   767  00FFB4  20                 	db	32
   768  00FFB5  04                 	db	4
   769  00FFB6  3F                 	db	63
   770  00FFB7  44                 	db	68
   771  00FFB8  40                 	db	64
   772  00FFB9  20                 	db	32
   773  00FFBA  3C                 	db	60
   774  00FFBB  40                 	db	64
   775  00FFBC  40                 	db	64
   776  00FFBD  20                 	db	32
   777  00FFBE  7C                 	db	124
   778  00FFBF  1C                 	db	28
   779  00FFC0  20                 	db	32
   780  00FFC1  40                 	db	64
   781  00FFC2  20                 	db	32
   782  00FFC3  1C                 	db	28
   783  00FFC4  3C                 	db	60
   784  00FFC5  40                 	db	64
   785  00FFC6  30                 	db	48
   786  00FFC7  40                 	db	64
   787  00FFC8  3C                 	db	60
   788  00FFC9  44                 	db	68
   789  00FFCA  28                 	db	40
   790  00FFCB  10                 	db	16
   791  00FFCC  28                 	db	40
   792  00FFCD  44                 	db	68
   793  00FFCE  0C                 	db	12
   794  00FFCF  50                 	db	80
   795  00FFD0  50                 	db	80
   796  00FFD1  50                 	db	80
   797  00FFD2  3C                 	db	60
   798  00FFD3  44                 	db	68
   799  00FFD4  64                 	db	100
   800  00FFD5  54                 	db	84
   801  00FFD6  4C                 	db	76
   802  00FFD7  44                 	db	68
   803  00FFD8  00                 	db	0
   804  00FFD9  08                 	db	8
   805  00FFDA  36                 	db	54
   806  00FFDB  41                 	db	65
   807  00FFDC  00                 	db	0
   808  00FFDD  00                 	db	0
   809  00FFDE  00                 	db	0
   810  00FFDF  7F                 	db	127
   811  00FFE0  00                 	db	0
   812  00FFE1  00                 	db	0
   813  00FFE2  00                 	db	0
   814  00FFE3  41                 	db	65
   815  00FFE4  36                 	db	54
   816  00FFE5  08                 	db	8
   817  00FFE6  00                 	db	0
   818  00FFE7  08                 	db	8
   819  00FFE8  08                 	db	8
   820  00FFE9  2A                 	db	42
   821  00FFEA  1C                 	db	28
   822  00FFEB  08                 	db	8
   823  00FFEC  08                 	db	8
   824  00FFED  1C                 	db	28
   825  00FFEE  2A                 	db	42
   826  00FFEF  08                 	db	8
   827  00FFF0  08                 	db	8
   828  00FFF1                     __end_of_Font5x7:
   829                           	opt stack 0
   830  00FFF1                     _PortG_Property:
   831                           	opt stack 0
   832  00FFF1  FC00               	dw	64512
   833  00FFF3                     __end_of_PortG_Property:
   834                           	opt stack 0
   835  00FFF3                     _PortF_Property:
   836                           	opt stack 0
   837  00FFF3  0FFF               	dw	4095
   838  00FFF5                     __end_of_PortF_Property:
   839                           	opt stack 0
   840  00FFF5                     _PortE_Property:
   841                           	opt stack 0
   842  00FFF5  0000               	dw	0
   843  00FFF7                     __end_of_PortE_Property:
   844                           	opt stack 0
   845  00FFF7                     _PortD_Property:
   846                           	opt stack 0
   847  00FFF7  FFFF               	dw	65535
   848  00FFF9                     __end_of_PortD_Property:
   849                           	opt stack 0
   850  00FFF9                     _PortC_Property:
   851                           	opt stack 0
   852  00FFF9  FFF0               	dw	65520
   853  00FFFB                     __end_of_PortC_Property:
   854                           	opt stack 0
   855  00FFFB                     _PortB_Property:
   856                           	opt stack 0
   857  00FFFB  FF00               	dw	65280
   858  00FFFD                     __end_of_PortB_Property:
   859                           	opt stack 0
   860  00FFFD                     _PortA_Property:
   861                           	opt stack 0
   862  00FFFD  00FF               	dw	255
   863  00FFFF                     __end_of_PortA_Property:
   864                           	opt stack 0
   865  0000                     _TMR0	set	4054
   866  0000                     _PR2	set	4043
   867  0000                     _T2CONbits	set	4042
   868  0000                     _T0CONbits	set	4053
   869  0000                     _RCONbits	set	4048
   870  0000                     _OSCTUNEbits	set	3995
   871  0000                     _PIR3	set	4004
   872  0000                     _PIR2	set	4001
   873  0000                     _PIR1	set	3998
   874  0000                     _INTCONbits	set	4082
   875  0000                     _SSP2CON2bits	set	3947
   876  0000                     _SSP1CON2bits	set	4037
   877  0000                     _SSP1ADD	set	4040
   878  0000                     _ANCON0	set	4033
   879  0000                     _ADRESL	set	4035
   880  0000                     _ADRESH	set	4036
   881  0000                     _ADCON1bits	set	4033
   882  0000                     _ADCON0bits	set	4034
   883  0000                     _SSP2CON1bits	set	3948
   884  0000                     _SSP1CON1bits	set	4038
   885  0000                     _SSP2STATbits	set	3949
   886  0000                     _SSP1STATbits	set	4039
   887  0000                     _PIE3bits	set	4003
   888  0000                     _PIE1bits	set	3997
   889  0000                     _PIR3bits	set	4004
   890  0000                     _PIR1bits	set	3998
   891  0000                     _IPR3bits	set	4005
   892  0000                     _IPR1bits	set	3999
   893  0000                     _PORTFbits	set	3973
   894  0000                     _SSP2CON2	set	3947
   895  0000                     _SSP1CON2	set	4037
   896  0000                     _SSP2BUF	set	3951
   897  0000                     _SSP2CON1	set	3948
   898  0000                     _SSP2STAT	set	3949
   899  0000                     _SSP1BUF	set	4041
   900  0000                     _SSP1CON1	set	4038
   901  0000                     _SSP1STAT	set	4039
   902  0000                     _LATG	set	3983
   903  0000                     _LATF	set	3982
   904  0000                     _LATE	set	3981
   905  0000                     _LATD	set	3980
   906  0000                     _LATC	set	3979
   907  0000                     _LATB	set	3978
   908  0000                     _LATA	set	3977
   909  0000                     _TRISG	set	3992
   910  0000                     _TRISF	set	3991
   911  0000                     _TRISE	set	3990
   912  0000                     _TRISD	set	3989
   913  0000                     _TRISC	set	3988
   914  0000                     _TRISB	set	3987
   915  0000                     _TRISA	set	3986
   916  0000                     _PORTG	set	3974
   917  0000                     _PORTF	set	3973
   918  0000                     _PORTE	set	3972
   919  0000                     _PORTD	set	3971
   920  0000                     _PORTC	set	3970
   921  0000                     _PORTB	set	3969
   922  0000                     _PORTA	set	3968
   923                           
   924                           ; #config settings
   925  00FFFF  00                 	db	0	; dummy byte at the end
   926  0000                     
   927                           	psect	cinit
   928  01133E                     __pcinit:
   929                           	opt stack 0
   930  01133E                     start_initialization:
   931                           	opt stack 0
   932  01133E                     __initialization:
   933                           	opt stack 0
   934                           
   935                           ; Initialize objects allocated to BANK1 (8 bytes)
   936                           ; load TBLPTR registers with __pidataBANK1
   937  01133E  0EBD               	movlw	low __pidataBANK1
   938  011340  6EF6               	movwf	tblptrl,c
   939  011342  0E1B               	movlw	high __pidataBANK1
   940  011344  6EF7               	movwf	tblptrh,c
   941  011346  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   942  011348  6EF8               	movwf	tblptru,c
   943  01134A  EE01  F0F2         	lfsr	0,__pdataBANK1
   944  01134E  EE10 F008          	lfsr	1,8
   945  011352                     copy_data0:
   946  011352  0009               	tblrd		*+
   947  011354  CFF5 FFEE          	movff	tablat,postinc0
   948  011358  50E5               	movf	postdec1,w,c
   949  01135A  50E1               	movf	fsr1l,w,c
   950  01135C  E1FA               	bnz	copy_data0
   951                           
   952                           ; Initialize objects allocated to BANK0 (8 bytes)
   953                           ; load TBLPTR registers with __pidataBANK0
   954  01135E  0EB5               	movlw	low __pidataBANK0
   955  011360  6EF6               	movwf	tblptrl,c
   956  011362  0E1B               	movlw	high __pidataBANK0
   957  011364  6EF7               	movwf	tblptrh,c
   958  011366  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   959  011368  6EF8               	movwf	tblptru,c
   960  01136A  EE00  F0F8         	lfsr	0,__pdataBANK0
   961  01136E  EE10 F008          	lfsr	1,8
   962  011372                     copy_data1:
   963  011372  0009               	tblrd		*+
   964  011374  CFF5 FFEE          	movff	tablat,postinc0
   965  011378  50E5               	movf	postdec1,w,c
   966  01137A  50E1               	movf	fsr1l,w,c
   967  01137C  E1FA               	bnz	copy_data1
   968                           
   969                           ; Initialize objects allocated to COMRAM (9 bytes)
   970                           ; load TBLPTR registers with __pidataCOMRAM
   971  01137E  0EAC               	movlw	low __pidataCOMRAM
   972  011380  6EF6               	movwf	tblptrl,c
   973  011382  0E1B               	movlw	high __pidataCOMRAM
   974  011384  6EF7               	movwf	tblptrh,c
   975  011386  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   976  011388  6EF8               	movwf	tblptru,c
   977  01138A  EE00  F040         	lfsr	0,__pdataCOMRAM
   978  01138E  EE10 F009          	lfsr	1,9
   979  011392                     copy_data2:
   980  011392  0009               	tblrd		*+
   981  011394  CFF5 FFEE          	movff	tablat,postinc0
   982  011398  50E5               	movf	postdec1,w,c
   983  01139A  50E1               	movf	fsr1l,w,c
   984  01139C  E1FA               	bnz	copy_data2
   985                           
   986                           ; Clear objects allocated to BIGRAM (300 bytes)
   987  01139E  EE02  F010         	lfsr	0,__pbssBIGRAM
   988  0113A2  EE11 F02C          	lfsr	1,300
   989  0113A6                     clear_0:
   990  0113A6  6AEE               	clrf	postinc0,c
   991  0113A8  50E5               	movf	postdec1,w,c
   992  0113AA  50E1               	movf	fsr1l,w,c
   993  0113AC  E1FC               	bnz	clear_0
   994  0113AE  50E2               	movf	fsr1h,w,c
   995  0113B0  E1FA               	bnz	clear_0
   996                           
   997                           ; Clear objects allocated to BANK1 (242 bytes)
   998  0113B2  EE01  F000         	lfsr	0,__pbssBANK1
   999  0113B6  0EF2               	movlw	242
  1000  0113B8                     clear_1:
  1001  0113B8  6AEE               	clrf	postinc0,c
  1002  0113BA  06E8               	decf	wreg,f,c
  1003  0113BC  E1FD               	bnz	clear_1
  1004                           
  1005                           ; Clear objects allocated to BANK0 (104 bytes)
  1006  0113BE  EE00  F060         	lfsr	0,__pbssBANK0
  1007  0113C2  0E68               	movlw	104
  1008  0113C4                     clear_2:
  1009  0113C4  6AEE               	clrf	postinc0,c
  1010  0113C6  06E8               	decf	wreg,f,c
  1011  0113C8  E1FD               	bnz	clear_2
  1012                           
  1013                           ; Clear objects allocated to COMRAM (27 bytes)
  1014  0113CA  EE00  F025         	lfsr	0,__pbssCOMRAM
  1015  0113CE  0E1B               	movlw	27
  1016  0113D0                     clear_3:
  1017  0113D0  6AEE               	clrf	postinc0,c
  1018  0113D2  06E8               	decf	wreg,f,c
  1019  0113D4  E1FD               	bnz	clear_3
  1020  0113D6                     end_of_initialization:
  1021                           	opt stack 0
  1022  0113D6                     __end_of__initialization:
  1023                           	opt stack 0
  1024  0113D6  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1025  0113D8  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1026  0113DA  0100               	movlb	0
  1027  0113DC  EFEE  F08C         	goto	_main	;jump to C main() function
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           postinc0	equ	0xFEE
  1033                           wreg	equ	0xFE8
  1034                           postdec1	equ	0xFE5
  1035                           fsr1h	equ	0xFE2
  1036                           fsr1l	equ	0xFE1
  1037                           
  1038                           	psect	bssCOMRAM
  1039  000025                     __pbssCOMRAM:
  1040                           	opt stack 0
  1041  000025                     _lQueue:
  1042                           	opt stack 0
  1043  000025                     	ds	3
  1044  000028                     _pShiftVal:
  1045                           	opt stack 0
  1046  000028                     	ds	2
  1047  00002A                     _COUNTER:
  1048                           	opt stack 0
  1049  00002A                     	ds	2
  1050  00002C                     _lMotor:
  1051                           	opt stack 0
  1052  00002C                     	ds	2
  1053  00002E                     _lCurrent:
  1054                           	opt stack 0
  1055  00002E                     	ds	2
  1056  000030                     HMI_GRender@a:
  1057                           	opt stack 0
  1058  000030                     	ds	2
  1059  000032                     _gBackcolour:
  1060                           	opt stack 0
  1061  000032                     	ds	2
  1062  000034                     Event_TestButton@j:
  1063                           	opt stack 0
  1064  000034                     	ds	1
  1065  000035                     Timer2_Init@PRE:
  1066                           	opt stack 0
  1067  000035                     	ds	1
  1068  000036                     Timer2_Init@INDEX:
  1069                           	opt stack 0
  1070  000036                     	ds	1
  1071  000037                     Timer0_Init@PRE:
  1072                           	opt stack 0
  1073  000037                     	ds	1
  1074  000038                     _INDEX:
  1075                           	opt stack 0
  1076  000038                     	ds	1
  1077  000039                     rand@screw:
  1078                           	opt stack 0
  1079  000039                     	ds	1
  1080  00003A                     OutSeg@a:
  1081                           	opt stack 0
  1082  00003A                     	ds	1
  1083  00003B                     OutSeg@segset:
  1084                           	opt stack 0
  1085  00003B                     	ds	1
  1086  00003C                     OutSeg@cur:
  1087                           	opt stack 0
  1088  00003C                     	ds	1
  1089  00003D                     _lBufferY:
  1090                           	opt stack 0
  1091  00003D                     	ds	1
  1092  00003E                     _lBufferX:
  1093                           	opt stack 0
  1094  00003E                     	ds	1
  1095  00003F                     _clearall:
  1096                           	opt stack 0
  1097  00003F                     	ds	1
  1098                           tblptru	equ	0xFF8
  1099                           tblptrh	equ	0xFF7
  1100                           tblptrl	equ	0xFF6
  1101                           tablat	equ	0xFF5
  1102                           postinc0	equ	0xFEE
  1103                           wreg	equ	0xFE8
  1104                           postdec1	equ	0xFE5
  1105                           fsr1h	equ	0xFE2
  1106                           fsr1l	equ	0xFE1
  1107                           
  1108                           	psect	dataCOMRAM
  1109  000040                     __pdataCOMRAM:
  1110                           	opt stack 0
  1111  000040                     _gCursor:
  1112                           	opt stack 0
  1113  000040                     	ds	4
  1114  000044                     _Bus_State:
  1115                           	opt stack 0
  1116  000044                     	ds	1
  1117  000045                     _change:
  1118                           	opt stack 0
  1119  000045                     	ds	1
  1120  000046                     	ds	1
  1121  000047                     _l:
  1122                           	opt stack 0
  1123  000047                     	ds	1
  1124  000048                     _w:
  1125                           	opt stack 0
  1126  000048                     	ds	1
  1127                           tblptru	equ	0xFF8
  1128                           tblptrh	equ	0xFF7
  1129                           tblptrl	equ	0xFF6
  1130                           tablat	equ	0xFF5
  1131                           postinc0	equ	0xFEE
  1132                           wreg	equ	0xFE8
  1133                           postdec1	equ	0xFE5
  1134                           fsr1h	equ	0xFE2
  1135                           fsr1l	equ	0xFE1
  1136                           
  1137                           	psect	bssBANK0
  1138  000060                     __pbssBANK0:
  1139                           	opt stack 0
  1140  000060                     Timer2_Init@DIV:
  1141                           	opt stack 0
  1142  000060                     	ds	4
  1143  000064                     Timer0_Init@DIV:
  1144                           	opt stack 0
  1145  000064                     	ds	4
  1146  000068                     _gISR:
  1147                           	opt stack 0
  1148  000068                     	ds	3
  1149  00006B                     _lStepFunction:
  1150                           	opt stack 0
  1151  00006B                     	ds	3
  1152  00006E                     _val:
  1153                           	opt stack 0
  1154  00006E                     	ds	2
  1155  000070                     SPI_Send9@dat:
  1156                           	opt stack 0
  1157  000070                     	ds	2
  1158  000072                     _u:
  1159                           	opt stack 0
  1160  000072                     	ds	1
  1161  000073                     _j:
  1162                           	opt stack 0
  1163  000073                     	ds	1
  1164  000074                     _i:
  1165                           	opt stack 0
  1166  000074                     	ds	1
  1167  000075                     _ADC_Initialised:
  1168                           	opt stack 0
  1169  000075                     	ds	1
  1170  000076                     _PortE:
  1171                           	opt stack 0
  1172  000076                     	ds	10
  1173  000080                     _PortD:
  1174                           	opt stack 0
  1175  000080                     	ds	10
  1176  00008A                     _PortC:
  1177                           	opt stack 0
  1178  00008A                     	ds	10
  1179  000094                     _PortF:
  1180                           	opt stack 0
  1181  000094                     	ds	10
  1182  00009E                     _I2C2T:
  1183                           	opt stack 0
  1184  00009E                     	ds	7
  1185  0000A5                     _I2C1T:
  1186                           	opt stack 0
  1187  0000A5                     	ds	7
  1188  0000AC                     _ADC_AN3:
  1189                           	opt stack 0
  1190  0000AC                     	ds	5
  1191  0000B1                     _ADC_AN2:
  1192                           	opt stack 0
  1193  0000B1                     	ds	5
  1194  0000B6                     _ADC_AN1:
  1195                           	opt stack 0
  1196  0000B6                     	ds	5
  1197  0000BB                     _ADC_AN0:
  1198                           	opt stack 0
  1199  0000BB                     	ds	5
  1200  0000C0                     LCD_DrawRectangle@p4:
  1201                           	opt stack 0
  1202  0000C0                     	ds	4
  1203  0000C4                     LCD_DrawRectangle@p2:
  1204                           	opt stack 0
  1205  0000C4                     	ds	4
  1206                           tblptru	equ	0xFF8
  1207                           tblptrh	equ	0xFF7
  1208                           tblptrl	equ	0xFF6
  1209                           tablat	equ	0xFF5
  1210                           postinc0	equ	0xFEE
  1211                           wreg	equ	0xFE8
  1212                           postdec1	equ	0xFE5
  1213                           fsr1h	equ	0xFE2
  1214                           fsr1l	equ	0xFE1
  1215                           
  1216                           	psect	dataBANK0
  1217  0000F8                     __pdataBANK0:
  1218                           	opt stack 0
  1219  0000F8                     _gCharSize:
  1220                           	opt stack 0
  1221  0000F8                     	ds	4
  1222  0000FC                     _gForecolour:
  1223                           	opt stack 0
  1224  0000FC                     	ds	2
  1225  0000FE                     	ds	1
  1226  0000FF                     	ds	1
  1227                           tblptru	equ	0xFF8
  1228                           tblptrh	equ	0xFF7
  1229                           tblptrl	equ	0xFF6
  1230                           tablat	equ	0xFF5
  1231                           postinc0	equ	0xFEE
  1232                           wreg	equ	0xFE8
  1233                           postdec1	equ	0xFE5
  1234                           fsr1h	equ	0xFE2
  1235                           fsr1l	equ	0xFE1
  1236                           
  1237                           	psect	bssBANK1
  1238  000100                     __pbssBANK1:
  1239                           	opt stack 0
  1240  000100                     _lCBuffer:
  1241                           	opt stack 0
  1242  000100                     	ds	30
  1243  00011E                     _I2C2_More:
  1244                           	opt stack 0
  1245  00011E                     	ds	3
  1246  000121                     _I2C1_More:
  1247                           	opt stack 0
  1248  000121                     	ds	3
  1249  000124                     _I2C2_Done:
  1250                           	opt stack 0
  1251  000124                     	ds	3
  1252  000127                     _I2C1_Done:
  1253                           	opt stack 0
  1254  000127                     	ds	3
  1255  00012A                     Console_MakeField@Fill:
  1256                           	opt stack 0
  1257  00012A                     	ds	70
  1258  000170                     _HMIBoard:
  1259                           	opt stack 0
  1260  000170                     	ds	58
  1261  0001AA                     _SPI1:
  1262                           	opt stack 0
  1263  0001AA                     	ds	11
  1264  0001B5                     _SPI2:
  1265                           	opt stack 0
  1266  0001B5                     	ds	11
  1267  0001C0                     _DIPSwitch:
  1268                           	opt stack 0
  1269  0001C0                     	ds	10
  1270  0001CA                     _TestButton:
  1271                           	opt stack 0
  1272  0001CA                     	ds	10
  1273  0001D4                     _PortG:
  1274                           	opt stack 0
  1275  0001D4                     	ds	10
  1276  0001DE                     _PortB:
  1277                           	opt stack 0
  1278  0001DE                     	ds	10
  1279  0001E8                     _PortA:
  1280                           	opt stack 0
  1281  0001E8                     	ds	10
  1282                           tblptru	equ	0xFF8
  1283                           tblptrh	equ	0xFF7
  1284                           tblptrl	equ	0xFF6
  1285                           tablat	equ	0xFF5
  1286                           postinc0	equ	0xFEE
  1287                           wreg	equ	0xFE8
  1288                           postdec1	equ	0xFE5
  1289                           fsr1h	equ	0xFE2
  1290                           fsr1l	equ	0xFE1
  1291                           
  1292                           	psect	dataBANK1
  1293  0001F2                     __pdataBANK1:
  1294                           	opt stack 0
  1295  0001F2                     Console_Render@F6956:
  1296                           	opt stack 0
  1297  0001F2                     	ds	4
  1298  0001F6                     _gLineSize:
  1299                           	opt stack 0
  1300  0001F6                     	ds	4
  1301                           tblptru	equ	0xFF8
  1302                           tblptrh	equ	0xFF7
  1303                           tblptrl	equ	0xFF6
  1304                           tablat	equ	0xFF5
  1305                           postinc0	equ	0xFEE
  1306                           wreg	equ	0xFE8
  1307                           postdec1	equ	0xFE5
  1308                           fsr1h	equ	0xFE2
  1309                           fsr1l	equ	0xFE1
  1310                           
  1311                           	psect	bssBIGRAM
  1312  000210                     __pbssBIGRAM:
  1313                           	opt stack 0
  1314  000210                     _lBuffer:
  1315                           	opt stack 0
  1316  000210                     	ds	300
  1317                           tblptru	equ	0xFF8
  1318                           tblptrh	equ	0xFF7
  1319                           tblptrl	equ	0xFF6
  1320                           tablat	equ	0xFF5
  1321                           postinc0	equ	0xFEE
  1322                           wreg	equ	0xFE8
  1323                           postdec1	equ	0xFE5
  1324                           fsr1h	equ	0xFE2
  1325                           fsr1l	equ	0xFE1
  1326                           
  1327                           	psect	cstackBANK2
  1328  000200                     __pcstackBANK2:
  1329                           	opt stack 0
  1330  000200                     Port_CheckQuadType@Pair1:
  1331                           	opt stack 0
  1332                           
  1333                           ; 1 bytes @ 0x0
  1334  000200                     	ds	1
  1335  000201                     Port_CheckQuadType@Pair2:
  1336                           	opt stack 0
  1337                           
  1338                           ; 1 bytes @ 0x1
  1339  000201                     	ds	1
  1340  000202                     Port_CheckQuadType@Output:
  1341                           	opt stack 0
  1342                           
  1343                           ; 1 bytes @ 0x2
  1344  000202                     	ds	1
  1345  000203                     Port_CheckPortType@pInput:
  1346                           	opt stack 0
  1347  000203                     Port_SetQuadType@pInput:
  1348                           	opt stack 0
  1349                           
  1350                           ; 2 bytes @ 0x3
  1351  000203                     	ds	2
  1352  000205                     Port_CheckPortType@pDrive:
  1353                           	opt stack 0
  1354  000205                     Port_SetQuadType@pQuad:
  1355                           	opt stack 0
  1356                           
  1357                           ; 1 bytes @ 0x5
  1358  000205                     	ds	1
  1359  000206                     Port_SetQuadType@pType:
  1360                           	opt stack 0
  1361  000206                     Port_SetType@pInput:
  1362                           	opt stack 0
  1363                           
  1364                           ; 2 bytes @ 0x6
  1365  000206                     	ds	2
  1366  000208                     Port_SetType@pType:
  1367                           	opt stack 0
  1368                           
  1369                           ; 1 bytes @ 0x8
  1370  000208                     	ds	1
  1371  000209                     Port_SetType@Output:
  1372                           	opt stack 0
  1373                           
  1374                           ; 1 bytes @ 0x9
  1375  000209                     	ds	1
  1376  00020A                     Port_Init@pInput:
  1377                           	opt stack 0
  1378                           
  1379                           ; 2 bytes @ 0xA
  1380  00020A                     	ds	2
  1381  00020C                     Port_Init@pPort:
  1382                           	opt stack 0
  1383                           
  1384                           ; 1 bytes @ 0xC
  1385  00020C                     	ds	1
  1386  00020D                     ??_Port_Init:
  1387                           
  1388                           ; 1 bytes @ 0xD
  1389  00020D                     	ds	2
  1390  00020F                     Port_Init@i:
  1391                           	opt stack 0
  1392                           
  1393                           ; 1 bytes @ 0xF
  1394  00020F                     	ds	1
  1395                           tblptru	equ	0xFF8
  1396                           tblptrh	equ	0xFF7
  1397                           tblptrl	equ	0xFF6
  1398                           tablat	equ	0xFF5
  1399                           postinc0	equ	0xFEE
  1400                           wreg	equ	0xFE8
  1401                           postdec1	equ	0xFE5
  1402                           fsr1h	equ	0xFE2
  1403                           fsr1l	equ	0xFE1
  1404                           
  1405                           	psect	cstackBANK1
  1406  0001FA                     __pcstackBANK1:
  1407                           	opt stack 0
  1408  0001FA                     Port_CheckQuadType@pInput:
  1409                           	opt stack 0
  1410                           
  1411                           ; 2 bytes @ 0x0
  1412  0001FA                     	ds	2
  1413  0001FC                     Port_CheckQuadType@pQuad:
  1414                           	opt stack 0
  1415                           
  1416                           ; 1 bytes @ 0x2
  1417  0001FC                     	ds	1
  1418  0001FD                     Port_CheckQuadType@pDrive:
  1419                           	opt stack 0
  1420                           
  1421                           ; 1 bytes @ 0x3
  1422  0001FD                     	ds	1
  1423  0001FE                     ??_Port_SetType:
  1424                           
  1425                           ; 1 bytes @ 0x4
  1426  0001FE                     	ds	2
  1427                           tblptru	equ	0xFF8
  1428                           tblptrh	equ	0xFF7
  1429                           tblptrl	equ	0xFF6
  1430                           tablat	equ	0xFF5
  1431                           postinc0	equ	0xFEE
  1432                           wreg	equ	0xFE8
  1433                           postdec1	equ	0xFE5
  1434                           fsr1h	equ	0xFE2
  1435                           fsr1l	equ	0xFE1
  1436                           
  1437                           	psect	cstackBANK0
  1438  0000C8                     __pcstackBANK0:
  1439                           	opt stack 0
  1440  0000C8                     ?_GetPortProperties:
  1441                           	opt stack 0
  1442  0000C8                     ?_GetPortPORT:
  1443                           	opt stack 0
  1444  0000C8                     ?_GetPortTRIS:
  1445                           	opt stack 0
  1446  0000C8                     Byte_SetBit@pInput:
  1447                           	opt stack 0
  1448  0000C8                     Byte_SetZone@pInput:
  1449                           	opt stack 0
  1450  0000C8                     Byte_GetZone@pInput:
  1451                           	opt stack 0
  1452  0000C8                     Byte_SetByte@pInput:
  1453                           	opt stack 0
  1454  0000C8                     delay_ms@ms:
  1455                           	opt stack 0
  1456  0000C8                     delay_us@us:
  1457                           	opt stack 0
  1458  0000C8                     MXK_Queue@pCallback:
  1459                           	opt stack 0
  1460                           
  1461                           ; 3 bytes @ 0x0
  1462  0000C8                     	ds	2
  1463  0000CA                     GetPortProperties@pInput:
  1464                           	opt stack 0
  1465  0000CA                     GetPortPORT@pInput:
  1466                           	opt stack 0
  1467  0000CA                     GetPortTRIS@pInput:
  1468                           	opt stack 0
  1469  0000CA                     Byte_SetBit@pBit:
  1470                           	opt stack 0
  1471  0000CA                     Byte_SetZone@pMax:
  1472                           	opt stack 0
  1473  0000CA                     Byte_GetZone@pMax:
  1474                           	opt stack 0
  1475  0000CA                     Byte_SetByte@pValue:
  1476                           	opt stack 0
  1477  0000CA                     delay_ms@u:
  1478                           	opt stack 0
  1479  0000CA                     delay_us@u:
  1480                           	opt stack 0
  1481                           
  1482                           ; 4 bytes @ 0x2
  1483  0000CA                     	ds	1
  1484  0000CB                     Byte_SetBit@pValue:
  1485                           	opt stack 0
  1486  0000CB                     Byte_SetZone@pChunk:
  1487                           	opt stack 0
  1488  0000CB                     Byte_GetZone@pChunk:
  1489                           	opt stack 0
  1490                           
  1491                           ; 1 bytes @ 0x3
  1492  0000CB                     	ds	1
  1493  0000CC                     ??_Byte_SetBit:
  1494  0000CC                     Byte_SetZone@pChunkSize:
  1495                           	opt stack 0
  1496  0000CC                     Byte_GetZone@pChunkSize:
  1497                           	opt stack 0
  1498                           
  1499                           ; 1 bytes @ 0x4
  1500  0000CC                     	ds	1
  1501  0000CD                     ??_Byte_GetZone:
  1502  0000CD                     Byte_SetZone@pValue:
  1503                           	opt stack 0
  1504                           
  1505                           ; 1 bytes @ 0x5
  1506  0000CD                     	ds	1
  1507  0000CE                     ??_Byte_SetZone:
  1508  0000CE                     Byte_GetZone@MASK:
  1509                           	opt stack 0
  1510  0000CE                     MXK_BlockSwitchTo@CUR:
  1511                           	opt stack 0
  1512  0000CE                     MXK_SwitchTo@CUR:
  1513                           	opt stack 0
  1514                           
  1515                           ; 1 bytes @ 0x6
  1516  0000CE                     	ds	1
  1517  0000CF                     Byte_GetZone@Offset:
  1518                           	opt stack 0
  1519  0000CF                     MXK_BlockSwitchTo@pModule:
  1520                           	opt stack 0
  1521  0000CF                     MXK_SwitchTo@pModule:
  1522                           	opt stack 0
  1523                           
  1524                           ; 1 bytes @ 0x7
  1525  0000CF                     	ds	1
  1526  0000D0                     Byte_GetZone@Output:
  1527                           	opt stack 0
  1528                           
  1529                           ; 1 bytes @ 0x8
  1530  0000D0                     	ds	1
  1531  0000D1                     Byte_SetZone@Offset:
  1532                           	opt stack 0
  1533  0000D1                     Byte_GetPair@pInput:
  1534                           	opt stack 0
  1535                           
  1536                           ; 2 bytes @ 0x9
  1537  0000D1                     	ds	1
  1538  0000D2                     Byte_SetZone@MASK:
  1539                           	opt stack 0
  1540                           
  1541                           ; 1 bytes @ 0xA
  1542  0000D2                     	ds	1
  1543  0000D3                     Byte_GetPair@pPair:
  1544                           	opt stack 0
  1545  0000D3                     Byte_SetPair@pInput:
  1546                           	opt stack 0
  1547  0000D3                     Byte_SetQuad@pInput:
  1548                           	opt stack 0
  1549                           
  1550                           ; 2 bytes @ 0xB
  1551  0000D3                     	ds	1
  1552  0000D4                     Word_GetPair@pInput:
  1553                           	opt stack 0
  1554                           
  1555                           ; 2 bytes @ 0xC
  1556  0000D4                     	ds	1
  1557  0000D5                     Byte_SetPair@pPair:
  1558                           	opt stack 0
  1559  0000D5                     Byte_SetQuad@pQuad:
  1560                           	opt stack 0
  1561                           
  1562                           ; 1 bytes @ 0xD
  1563  0000D5                     	ds	1
  1564  0000D6                     Byte_SetPair@pValue:
  1565                           	opt stack 0
  1566  0000D6                     Byte_SetQuad@pValue:
  1567                           	opt stack 0
  1568  0000D6                     Word_GetPair@pPair:
  1569                           	opt stack 0
  1570                           
  1571                           ; 1 bytes @ 0xE
  1572  0000D6                     	ds	1
  1573  0000D7                     Port_SetPin@pInput:
  1574                           	opt stack 0
  1575  0000D7                     Port_Set@pInput:
  1576                           	opt stack 0
  1577  0000D7                     Word_SetPair@pInput:
  1578                           	opt stack 0
  1579  0000D7                     PortProperty_Valid@pInput:
  1580                           	opt stack 0
  1581                           
  1582                           ; 2 bytes @ 0xF
  1583  0000D7                     	ds	2
  1584  0000D9                     Port_SetPin@pPin:
  1585                           	opt stack 0
  1586  0000D9                     Port_Set@pValue:
  1587                           	opt stack 0
  1588  0000D9                     Word_SetPair@pPair:
  1589                           	opt stack 0
  1590  0000D9                     PortProperty_Valid@pPinDrive:
  1591                           	opt stack 0
  1592                           
  1593                           ; 1 bytes @ 0x11
  1594  0000D9                     	ds	1
  1595  0000DA                     ??_Port_Set:
  1596  0000DA                     Port_SetPin@pValue:
  1597                           	opt stack 0
  1598  0000DA                     Word_SetPair@pValue:
  1599                           	opt stack 0
  1600  0000DA                     PortProperty_Valid@pPin:
  1601                           	opt stack 0
  1602                           
  1603                           ; 1 bytes @ 0x12
  1604  0000DA                     	ds	1
  1605  0000DB                     ??_PortProperty_Valid:
  1606  0000DB                     Port_SetPin@Type:
  1607                           	opt stack 0
  1608                           
  1609                           ; 1 bytes @ 0x13
  1610  0000DB                     	ds	1
  1611  0000DC                     LED_Set@pValue:
  1612                           	opt stack 0
  1613                           
  1614                           ; 1 bytes @ 0x14
  1615  0000DC                     	ds	1
  1616  0000DD                     LED_Set@pLED:
  1617                           	opt stack 0
  1618  0000DD                     PortProperty_Valid@Errors:
  1619                           	opt stack 0
  1620                           
  1621                           ; 16 bytes @ 0x15
  1622  0000DD                     	ds	1
  1623  0000DE                     
  1624                           ; 1 bytes @ 0x16
  1625  0000DE                     	ds	12
  1626  0000EA                     Port_Set@TypeRequired:
  1627                           	opt stack 0
  1628                           
  1629                           ; 2 bytes @ 0x22
  1630  0000EA                     	ds	2
  1631  0000EC                     Port_Set@TypeActual:
  1632                           	opt stack 0
  1633                           
  1634                           ; 2 bytes @ 0x24
  1635  0000EC                     	ds	1
  1636  0000ED                     PortProperty_Valid@Pair:
  1637                           	opt stack 0
  1638                           
  1639                           ; 1 bytes @ 0x25
  1640  0000ED                     	ds	1
  1641  0000EE                     Port_Set@Type:
  1642                           	opt stack 0
  1643  0000EE                     Port_CheckPairType@pInput:
  1644                           	opt stack 0
  1645  0000EE                     Port_SetPinType@pInput:
  1646                           	opt stack 0
  1647                           
  1648                           ; 2 bytes @ 0x26
  1649  0000EE                     	ds	2
  1650  0000F0                     Port_CheckPairType@pPair:
  1651                           	opt stack 0
  1652  0000F0                     Port_SetPinType@pPin:
  1653                           	opt stack 0
  1654                           
  1655                           ; 1 bytes @ 0x28
  1656  0000F0                     	ds	1
  1657  0000F1                     Port_CheckPairType@pDrive:
  1658                           	opt stack 0
  1659  0000F1                     Port_SetPinType@pType:
  1660                           	opt stack 0
  1661                           
  1662                           ; 1 bytes @ 0x29
  1663  0000F1                     	ds	1
  1664  0000F2                     Port_CheckPairType@Pin1:
  1665                           	opt stack 0
  1666  0000F2                     Port_SetPinType@Output:
  1667                           	opt stack 0
  1668                           
  1669                           ; 1 bytes @ 0x2A
  1670  0000F2                     	ds	1
  1671  0000F3                     Port_CheckPairType@Pin2:
  1672                           	opt stack 0
  1673  0000F3                     Port_SetPinType@Props:
  1674                           	opt stack 0
  1675                           
  1676                           ; 2 bytes @ 0x2B
  1677  0000F3                     	ds	1
  1678  0000F4                     Port_CheckPairType@Output:
  1679                           	opt stack 0
  1680                           
  1681                           ; 1 bytes @ 0x2C
  1682  0000F4                     	ds	1
  1683  0000F5                     LED_Init@pLED:
  1684                           	opt stack 0
  1685  0000F5                     Port_CheckPairType@Props:
  1686                           	opt stack 0
  1687                           
  1688                           ; 2 bytes @ 0x2D
  1689  0000F5                     	ds	2
  1690  0000F7                     Port_CheckPortType@Output:
  1691                           	opt stack 0
  1692  0000F7                     Port_SetQuadType@Output:
  1693                           	opt stack 0
  1694                           
  1695                           ; 1 bytes @ 0x2F
  1696  0000F7                     	ds	1
  1697  0000F8                     tblptru	equ	0xFF8
  1698                           tblptrh	equ	0xFF7
  1699                           tblptrl	equ	0xFF6
  1700                           tablat	equ	0xFF5
  1701                           postinc0	equ	0xFEE
  1702                           wreg	equ	0xFE8
  1703                           postdec1	equ	0xFE5
  1704                           fsr1h	equ	0xFE2
  1705                           fsr1l	equ	0xFE1
  1706                           
  1707                           ; 1 bytes @ 0x30
  1708                           
  1709                           	psect	cstackCOMRAM
  1710  000001                     __pcstackCOMRAM:
  1711                           	opt stack 0
  1712  000001                     i2Byte_SetBit@pInput:
  1713                           	opt stack 0
  1714  000001                     i2Byte_GetZone@pInput:
  1715                           	opt stack 0
  1716  000001                     i2delay_us@us:
  1717                           	opt stack 0
  1718  000001                     i2MXK_Queue@pCallback:
  1719                           	opt stack 0
  1720                           
  1721                           ; 3 bytes @ 0x0
  1722  000001                     	ds	2
  1723  000003                     i2Byte_SetBit@pBit:
  1724                           	opt stack 0
  1725  000003                     i2Byte_GetZone@pMax:
  1726                           	opt stack 0
  1727  000003                     i2delay_us@u:
  1728                           	opt stack 0
  1729                           
  1730                           ; 4 bytes @ 0x2
  1731  000003                     	ds	1
  1732  000004                     i2Byte_SetBit@pValue:
  1733                           	opt stack 0
  1734  000004                     i2Byte_GetZone@pChunk:
  1735                           	opt stack 0
  1736                           
  1737                           ; 1 bytes @ 0x3
  1738  000004                     	ds	1
  1739  000005                     ??i2_Byte_SetBit:
  1740  000005                     i2Byte_GetZone@pChunkSize:
  1741                           	opt stack 0
  1742                           
  1743                           ; 1 bytes @ 0x4
  1744  000005                     	ds	1
  1745  000006                     ??i2_Byte_GetZone:
  1746                           
  1747                           ; 1 bytes @ 0x5
  1748  000006                     	ds	1
  1749  000007                     i2Byte_GetZone@MASK:
  1750                           	opt stack 0
  1751  000007                     i2MXK_SwitchTo@CUR:
  1752                           	opt stack 0
  1753                           
  1754                           ; 1 bytes @ 0x6
  1755  000007                     	ds	1
  1756  000008                     i2Byte_GetZone@Offset:
  1757                           	opt stack 0
  1758  000008                     i2MXK_SwitchTo@pModule:
  1759                           	opt stack 0
  1760                           
  1761                           ; 1 bytes @ 0x7
  1762  000008                     	ds	1
  1763  000009                     i2Byte_GetZone@Output:
  1764                           	opt stack 0
  1765                           
  1766                           ; 1 bytes @ 0x8
  1767  000009                     	ds	1
  1768  00000A                     i2Byte_GetPair@pInput:
  1769                           	opt stack 0
  1770                           
  1771                           ; 2 bytes @ 0x9
  1772  00000A                     	ds	2
  1773  00000C                     i2Byte_GetPair@pPair:
  1774                           	opt stack 0
  1775                           
  1776                           ; 1 bytes @ 0xB
  1777  00000C                     	ds	1
  1778  00000D                     i2Word_GetPair@pInput:
  1779                           	opt stack 0
  1780                           
  1781                           ; 2 bytes @ 0xC
  1782  00000D                     	ds	2
  1783  00000F                     i2Word_GetPair@pPair:
  1784                           	opt stack 0
  1785                           
  1786                           ; 1 bytes @ 0xE
  1787  00000F                     	ds	1
  1788  000010                     i2Port_SetPin@pInput:
  1789                           	opt stack 0
  1790                           
  1791                           ; 2 bytes @ 0xF
  1792  000010                     	ds	2
  1793  000012                     i2Port_SetPin@pPin:
  1794                           	opt stack 0
  1795                           
  1796                           ; 1 bytes @ 0x11
  1797  000012                     	ds	1
  1798  000013                     i2Port_SetPin@pValue:
  1799                           	opt stack 0
  1800                           
  1801                           ; 1 bytes @ 0x12
  1802  000013                     	ds	1
  1803  000014                     i2Port_SetPin@Type:
  1804                           	opt stack 0
  1805                           
  1806                           ; 1 bytes @ 0x13
  1807  000014                     	ds	1
  1808  000015                     
  1809                           ; 1 bytes @ 0x14
  1810  000015                     	ds	2
  1811  000017                     ??_ISR_Function:
  1812                           
  1813                           ; 1 bytes @ 0x16
  1814  000017                     	ds	14
  1815                           tblptru	equ	0xFF8
  1816                           tblptrh	equ	0xFF7
  1817                           tblptrl	equ	0xFF6
  1818                           tablat	equ	0xFF5
  1819                           postinc0	equ	0xFEE
  1820                           wreg	equ	0xFE8
  1821                           postdec1	equ	0xFE5
  1822                           fsr1h	equ	0xFE2
  1823                           fsr1l	equ	0xFE1
  1824                           
  1825 ;;
  1826 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1827 ;;
  1828 ;; *************** function _main *****************
  1829 ;; Defined at:
  1830 ;;		line 22 in file "main.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels required when called:   17
  1850 ;; This function calls:
  1851 ;;		_MXK_BlockSwitchTo
  1852 ;;		_MXK_Dequeue
  1853 ;;		_MXK_Init
  1854 ;;		_MXK_Release
  1855 ;; This function is called by:
  1856 ;;		Startup code after reset
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text0
  1861  0119DC                     __ptext0:
  1862                           	opt stack 0
  1863  0119DC                     _main:
  1864                           	opt stack 14
  1865                           
  1866                           ;main.c: 25: MXK_Init();
  1867                           
  1868                           ;incstack = 0
  1869  0119DC  ECC6  F085         	call	_MXK_Init	;wreg free
  1870                           
  1871                           ;main.c: 28: if (MXK_BlockSwitchTo(eMXK_HMI)) {
  1872  0119E0  0E01               	movlw	1
  1873  0119E2  ECCF  F08C         	call	_MXK_BlockSwitchTo
  1874  0119E6  0900               	iorlw	0
  1875  0119E8  B4D8               	btfsc	status,2,c
  1876  0119EA  D006               	goto	l10227
  1877                           
  1878                           ;main.c: 30: if (MXK_Release())
  1879  0119EC  ECAA  F08D         	call	_MXK_Release	;wreg free
  1880  0119F0  0900               	iorlw	0
  1881  0119F2  A4D8               	btfss	status,2,c
  1882                           
  1883                           ;main.c: 31: MXK_Dequeue();
  1884  0119F4  EC25  F08D         	call	_MXK_Dequeue	;wreg free
  1885  0119F8                     l10227:
  1886                           
  1887                           ;main.c: 60: {
  1888                           ;main.c: 76: if (MXK_BlockSwitchTo(eMXK_HMI)) {
  1889  0119F8  0E01               	movlw	1
  1890  0119FA  ECCF  F08C         	call	_MXK_BlockSwitchTo
  1891  0119FE  0900               	iorlw	0
  1892  011A00  B4D8               	btfsc	status,2,c
  1893  011A02  D7FA               	goto	l10227
  1894                           
  1895                           ;main.c: 78: if (MXK_Release())
  1896  011A04  ECAA  F08D         	call	_MXK_Release	;wreg free
  1897  011A08  0900               	iorlw	0
  1898  011A0A  B4D8               	btfsc	status,2,c
  1899  011A0C  D7F5               	goto	l10227
  1900                           
  1901                           ;main.c: 79: MXK_Dequeue();
  1902  011A0E  EC25  F08D         	call	_MXK_Dequeue	;wreg free
  1903                           
  1904                           ;main.c: 80: }
  1905                           ;main.c: 81: }
  1906  011A12  D7F2               	goto	l10227
  1907  011A14                     __end_of_main:
  1908                           	opt stack 0
  1909                           tblptru	equ	0xFF8
  1910                           tblptrh	equ	0xFF7
  1911                           tblptrl	equ	0xFF6
  1912                           tablat	equ	0xFF5
  1913                           postinc0	equ	0xFEE
  1914                           wreg	equ	0xFE8
  1915                           postdec1	equ	0xFE5
  1916                           fsr1h	equ	0xFE2
  1917                           fsr1l	equ	0xFE1
  1918                           status	equ	0xFD8
  1919                           
  1920 ;; *************** function _MXK_Init *****************
  1921 ;; Defined at:
  1922 ;;		line 33 in file "Library/MXK.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;Total ram usage:        0 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:   16
  1943 ;; This function calls:
  1944 ;;		_LED_Init
  1945 ;;		_Port_Init
  1946 ;;		_Port_SetPin
  1947 ;;		_Port_SetPinType
  1948 ;;		_Port_SetQuadType
  1949 ;;		_Port_SetType
  1950 ;;		_delay_ms
  1951 ;; This function is called by:
  1952 ;;		_main
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text1
  1957  010B8C                     __ptext1:
  1958                           	opt stack 0
  1959  010B8C                     _MXK_Init:
  1960                           	opt stack 14
  1961                           
  1962                           ;MXK.c: 35: Bus_State = eMXK_Idle;
  1963                           
  1964                           ;incstack = 0
  1965  010B8C  0E01               	movlw	1
  1966  010B8E  6E44               	movwf	_Bus_State,c
  1967                           
  1968                           ;MXK.c: 36: lQueue = (Function)0;
  1969  010B90  0E00               	movlw	0
  1970  010B92  6E25               	movwf	_lQueue,c	;volatile
  1971  010B94  0E00               	movlw	0
  1972  010B96  6E26               	movwf	_lQueue+1,c	;volatile
  1973  010B98  0E00               	movlw	0
  1974  010B9A  6E27               	movwf	_lQueue+2,c	;volatile
  1975                           
  1976                           ;MXK.c: 38: Port_Init(&PortA, ePortA);
  1977  010B9C  0EE8               	movlw	low _PortA
  1978  010B9E  0102               	movlb	2	; () banked
  1979  010BA0  6F0A               	movwf	Port_Init@pInput& (0+255),b
  1980  010BA2  0E01               	movlw	high _PortA
  1981  010BA4  0102               	movlb	2	; () banked
  1982  010BA6  6F0B               	movwf	(Port_Init@pInput+1)& (0+255),b
  1983  010BA8  0E00               	movlw	0
  1984  010BAA  0102               	movlb	2	; () banked
  1985  010BAC  6F0C               	movwf	Port_Init@pPort& (0+255),b
  1986  010BAE  ECFD  F084         	call	_Port_Init	;wreg free
  1987                           
  1988                           ;MXK.c: 39: Port_Init(&PortB, ePortB);
  1989  010BB2  0EDE               	movlw	low _PortB
  1990  010BB4  0102               	movlb	2	; () banked
  1991  010BB6  6F0A               	movwf	Port_Init@pInput& (0+255),b
  1992  010BB8  0E01               	movlw	high _PortB
  1993  010BBA  0102               	movlb	2	; () banked
  1994  010BBC  6F0B               	movwf	(Port_Init@pInput+1)& (0+255),b
  1995  010BBE  0E01               	movlw	1
  1996  010BC0  0102               	movlb	2	; () banked
  1997  010BC2  6F0C               	movwf	Port_Init@pPort& (0+255),b
  1998  010BC4  ECFD  F084         	call	_Port_Init	;wreg free
  1999                           
  2000                           ;MXK.c: 40: Port_Init(&PortC, ePortC);
  2001  010BC8  0E8A               	movlw	low _PortC
  2002  010BCA  0102               	movlb	2	; () banked
  2003  010BCC  6F0A               	movwf	Port_Init@pInput& (0+255),b
  2004  010BCE  0E00               	movlw	high _PortC
  2005  010BD0  0102               	movlb	2	; () banked
  2006  010BD2  6F0B               	movwf	(Port_Init@pInput+1)& (0+255),b
  2007  010BD4  0E02               	movlw	2
  2008  010BD6  0102               	movlb	2	; () banked
  2009  010BD8  6F0C               	movwf	Port_Init@pPort& (0+255),b
  2010  010BDA  ECFD  F084         	call	_Port_Init	;wreg free
  2011                           
  2012                           ;MXK.c: 41: Port_Init(&PortD, ePortD);
  2013  010BDE  0E80               	movlw	low _PortD
  2014  010BE0  0102               	movlb	2	; () banked
  2015  010BE2  6F0A               	movwf	Port_Init@pInput& (0+255),b
  2016  010BE4  0E00               	movlw	high _PortD
  2017  010BE6  0102               	movlb	2	; () banked
  2018  010BE8  6F0B               	movwf	(Port_Init@pInput+1)& (0+255),b
  2019  010BEA  0E03               	movlw	3
  2020  010BEC  0102               	movlb	2	; () banked
  2021  010BEE  6F0C               	movwf	Port_Init@pPort& (0+255),b
  2022  010BF0  ECFD  F084         	call	_Port_Init	;wreg free
  2023                           
  2024                           ;MXK.c: 42: Port_Init(&PortE, ePortE);
  2025  010BF4  0E76               	movlw	low _PortE
  2026  010BF6  0102               	movlb	2	; () banked
  2027  010BF8  6F0A               	movwf	Port_Init@pInput& (0+255),b
  2028  010BFA  0E00               	movlw	high _PortE
  2029  010BFC  0102               	movlb	2	; () banked
  2030  010BFE  6F0B               	movwf	(Port_Init@pInput+1)& (0+255),b
  2031  010C00  0E04               	movlw	4
  2032  010C02  0102               	movlb	2	; () banked
  2033  010C04  6F0C               	movwf	Port_Init@pPort& (0+255),b
  2034  010C06  ECFD  F084         	call	_Port_Init	;wreg free
  2035                           
  2036                           ;MXK.c: 43: Port_Init(&PortF, ePortF);
  2037  010C0A  0E94               	movlw	low _PortF
  2038  010C0C  0102               	movlb	2	; () banked
  2039  010C0E  6F0A               	movwf	Port_Init@pInput& (0+255),b
  2040  010C10  0E00               	movlw	high _PortF
  2041  010C12  0102               	movlb	2	; () banked
  2042  010C14  6F0B               	movwf	(Port_Init@pInput+1)& (0+255),b
  2043  010C16  0E05               	movlw	5
  2044  010C18  0102               	movlb	2	; () banked
  2045  010C1A  6F0C               	movwf	Port_Init@pPort& (0+255),b
  2046  010C1C  ECFD  F084         	call	_Port_Init	;wreg free
  2047                           
  2048                           ;MXK.c: 44: Port_Init(&PortG, ePortG);
  2049  010C20  0ED4               	movlw	low _PortG
  2050  010C22  0102               	movlb	2	; () banked
  2051  010C24  6F0A               	movwf	Port_Init@pInput& (0+255),b
  2052  010C26  0E01               	movlw	high _PortG
  2053  010C28  0102               	movlb	2	; () banked
  2054  010C2A  6F0B               	movwf	(Port_Init@pInput+1)& (0+255),b
  2055  010C2C  0E06               	movlw	6
  2056  010C2E  0102               	movlb	2	; () banked
  2057  010C30  6F0C               	movwf	Port_Init@pPort& (0+255),b
  2058  010C32  ECFD  F084         	call	_Port_Init	;wreg free
  2059                           
  2060                           ;MXK.c: 46: Port_SetPinType (&PortF, eP5, eTypeInput);
  2061  010C36  0E94               	movlw	low _PortF
  2062  010C38  0100               	movlb	0	; () banked
  2063  010C3A  6FEE               	movwf	Port_SetPinType@pInput& (0+255),b
  2064  010C3C  0E00               	movlw	high _PortF
  2065  010C3E  0100               	movlb	0	; () banked
  2066  010C40  6FEF               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  2067  010C42  0E05               	movlw	5
  2068  010C44  0100               	movlb	0	; () banked
  2069  010C46  6FF0               	movwf	Port_SetPinType@pPin& (0+255),b
  2070  010C48  0E00               	movlw	0
  2071  010C4A  0100               	movlb	0	; () banked
  2072  010C4C  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2073  010C4E  EC1D  F084         	call	_Port_SetPinType	;wreg free
  2074                           
  2075                           ;MXK.c: 47: Port_SetQuadType (&PortB, eP0_3, eTypeInput);
  2076  010C52  0EDE               	movlw	low _PortB
  2077  010C54  0102               	movlb	2	; () banked
  2078  010C56  6F03               	movwf	Port_SetQuadType@pInput& (0+255),b
  2079  010C58  0E01               	movlw	high _PortB
  2080  010C5A  0102               	movlb	2	; () banked
  2081  010C5C  6F04               	movwf	(Port_SetQuadType@pInput+1)& (0+255),b
  2082  010C5E  0E00               	movlw	0
  2083  010C60  0102               	movlb	2	; () banked
  2084  010C62  6F05               	movwf	Port_SetQuadType@pQuad& (0+255),b
  2085  010C64  0E00               	movlw	0
  2086  010C66  0102               	movlb	2	; () banked
  2087  010C68  6F06               	movwf	Port_SetQuadType@pType& (0+255),b
  2088  010C6A  ECDD  F081         	call	_Port_SetQuadType	;wreg free
  2089                           
  2090                           ;MXK.c: 48: Port_SetPinType (&PortF, eP6, eTypeOutputPushPull);
  2091  010C6E  0E94               	movlw	low _PortF
  2092  010C70  0100               	movlb	0	; () banked
  2093  010C72  6FEE               	movwf	Port_SetPinType@pInput& (0+255),b
  2094  010C74  0E00               	movlw	high _PortF
  2095  010C76  0100               	movlb	0	; () banked
  2096  010C78  6FEF               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  2097  010C7A  0E06               	movlw	6
  2098  010C7C  0100               	movlb	0	; () banked
  2099  010C7E  6FF0               	movwf	Port_SetPinType@pPin& (0+255),b
  2100  010C80  0E03               	movlw	3
  2101  010C82  0100               	movlb	0	; () banked
  2102  010C84  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2103  010C86  EC1D  F084         	call	_Port_SetPinType	;wreg free
  2104                           
  2105                           ;MXK.c: 49: Port_SetType (&PortG, eTypeOutputPushPull);
  2106  010C8A  0ED4               	movlw	low _PortG
  2107  010C8C  0102               	movlb	2	; () banked
  2108  010C8E  6F06               	movwf	Port_SetType@pInput& (0+255),b
  2109  010C90  0E01               	movlw	high _PortG
  2110  010C92  0102               	movlb	2	; () banked
  2111  010C94  6F07               	movwf	(Port_SetType@pInput+1)& (0+255),b
  2112  010C96  0E03               	movlw	3
  2113  010C98  0102               	movlb	2	; () banked
  2114  010C9A  6F08               	movwf	Port_SetType@pType& (0+255),b
  2115  010C9C  EC08  F083         	call	_Port_SetType	;wreg free
  2116                           
  2117                           ;MXK.c: 51: Port_SetPin(&PortG, eP4, 0);
  2118  010CA0  0ED4               	movlw	low _PortG
  2119  010CA2  0100               	movlb	0	; () banked
  2120  010CA4  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  2121  010CA6  0E01               	movlw	high _PortG
  2122  010CA8  0100               	movlb	0	; () banked
  2123  010CAA  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  2124  010CAC  0E04               	movlw	4
  2125  010CAE  0100               	movlb	0	; () banked
  2126  010CB0  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  2127  010CB2  0E00               	movlw	0
  2128  010CB4  0100               	movlb	0	; () banked
  2129  010CB6  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  2130  010CB8  EC94  F087         	call	_Port_SetPin	;wreg free
  2131                           
  2132                           ;MXK.c: 52: Port_SetPin(&PortF, eP6,1);
  2133  010CBC  0E94               	movlw	low _PortF
  2134  010CBE  0100               	movlb	0	; () banked
  2135  010CC0  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  2136  010CC2  0E00               	movlw	high _PortF
  2137  010CC4  0100               	movlb	0	; () banked
  2138  010CC6  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  2139  010CC8  0E06               	movlw	6
  2140  010CCA  0100               	movlb	0	; () banked
  2141  010CCC  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  2142  010CCE  0E01               	movlw	1
  2143  010CD0  0100               	movlb	0	; () banked
  2144  010CD2  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  2145  010CD4  EC94  F087         	call	_Port_SetPin	;wreg free
  2146                           
  2147                           ;MXK.c: 55: LED_Init(eLED1);
  2148  010CD8  0E00               	movlw	0
  2149  010CDA  EC53  F08B         	call	_LED_Init
  2150                           
  2151                           ;MXK.c: 56: LED_Init(eLED2);
  2152  010CDE  0E01               	movlw	1
  2153  010CE0  EC53  F08B         	call	_LED_Init
  2154                           
  2155                           ;MXK.c: 58: PIR1 = 0;
  2156  010CE4  0E00               	movlw	0
  2157  010CE6  6E9E               	movwf	3998,c	;volatile
  2158                           
  2159                           ;MXK.c: 59: PIR2 = 0;
  2160  010CE8  0E00               	movlw	0
  2161  010CEA  6EA1               	movwf	4001,c	;volatile
  2162                           
  2163                           ;MXK.c: 60: PIR3 = 0;
  2164  010CEC  0E00               	movlw	0
  2165  010CEE  6EA4               	movwf	4004,c	;volatile
  2166                           
  2167                           ;MXK.c: 62: OSCTUNEbits.INTSRC = 1;
  2168  010CF0  8E9B               	bsf	3995,7,c	;volatile
  2169                           
  2170                           ;MXK.c: 63: OSCTUNEbits.PLLEN = 1;
  2171  010CF2  8C9B               	bsf	3995,6,c	;volatile
  2172                           
  2173                           ;MXK.c: 66: delay_ms(100);
  2174  010CF4  0E00               	movlw	0
  2175  010CF6  0100               	movlb	0	; () banked
  2176  010CF8  6FC9               	movwf	(delay_ms@ms+1)& (0+255),b
  2177  010CFA  0E64               	movlw	100
  2178  010CFC  6FC8               	movwf	delay_ms@ms& (0+255),b
  2179  010CFE  ECB7  F08A         	call	_delay_ms	;wreg free
  2180                           
  2181                           ;MXK.c: 68: RCONbits.IPEN = 1;
  2182  010D02  8ED0               	bsf	4048,7,c	;volatile
  2183  010D04  0012               	return		;funcret
  2184  010D06                     __end_of_MXK_Init:
  2185                           	opt stack 0
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           postinc0	equ	0xFEE
  2191                           wreg	equ	0xFE8
  2192                           postdec1	equ	0xFE5
  2193                           fsr1h	equ	0xFE2
  2194                           fsr1l	equ	0xFE1
  2195                           status	equ	0xFD8
  2196                           
  2197 ;; *************** function _delay_ms *****************
  2198 ;; Defined at:
  2199 ;;		line 240 in file "Library/Types.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  ms              2    0[BANK0 ] unsigned short 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  u               4    2[BANK0 ] volatile unsigned long 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2213 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;Total ram usage:        6 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    7
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_MXK_Init
  2224 ;;		_LCD_Reset
  2225 ;;		_LCD_Init
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text2
  2230  01156E                     __ptext2:
  2231                           	opt stack 0
  2232  01156E                     _delay_ms:
  2233                           	opt stack 22
  2234                           
  2235                           ;Types.c: 242: volatile unsigned long u;
  2236                           ;Types.c: 243: while (ms--)
  2237                           
  2238                           ;incstack = 0
  2239  01156E  D01F               	goto	l9467
  2240  011570                     l9459:
  2241                           
  2242                           ;Types.c: 244: {
  2243                           ;Types.c: 246: for (u = 0; u < (((48*1000000L) / 4000UL) / 10UL); u++) {
  2244  011570  0E00               	movlw	0
  2245  011572  0100               	movlb	0	; () banked
  2246  011574  6FCA               	movwf	delay_ms@u& (0+255),b	;volatile
  2247  011576  0E00               	movlw	0
  2248  011578  6FCB               	movwf	(delay_ms@u+1)& (0+255),b	;volatile
  2249  01157A  0E00               	movlw	0
  2250  01157C  6FCC               	movwf	(delay_ms@u+2)& (0+255),b	;volatile
  2251  01157E  0E00               	movlw	0
  2252  011580  6FCD               	movwf	(delay_ms@u+3)& (0+255),b	;volatile
  2253  011582                     l9461:
  2254                           
  2255                           ; BSR set to: 0
  2256  011582  0100               	movlb	0	; () banked
  2257  011584  51CD               	movf	(delay_ms@u+3)& (0+255),w,b	;volatile
  2258  011586  0100               	movlb	0	; () banked
  2259  011588  11CC               	iorwf	(delay_ms@u+2)& (0+255),w,b	;volatile
  2260  01158A  E111               	bnz	l9467
  2261  01158C  0EB0               	movlw	176
  2262  01158E  0100               	movlb	0	; () banked
  2263  011590  5DCA               	subwf	delay_ms@u& (0+255),w,b	;volatile
  2264  011592  0E04               	movlw	4
  2265  011594  0100               	movlb	0	; () banked
  2266  011596  59CB               	subwfb	(delay_ms@u+1)& (0+255),w,b	;volatile
  2267  011598  B0D8               	btfsc	status,0,c
  2268  01159A  D009               	goto	l9467
  2269                           
  2270                           ; BSR set to: 0
  2271                           
  2272                           ; BSR set to: 0
  2273  01159C  F000               	nop		; ;# 
  2274  01159E  0E01               	movlw	1
  2275  0115A0  0100               	movlb	0	; () banked
  2276  0115A2  27CA               	addwf	delay_ms@u& (0+255),f,b	;volatile
  2277  0115A4  0E00               	movlw	0
  2278  0115A6  23CB               	addwfc	(delay_ms@u+1)& (0+255),f,b	;volatile
  2279  0115A8  23CC               	addwfc	(delay_ms@u+2)& (0+255),f,b	;volatile
  2280  0115AA  23CD               	addwfc	(delay_ms@u+3)& (0+255),f,b	;volatile
  2281  0115AC  D7EA               	goto	l9461
  2282  0115AE                     l9467:
  2283  0115AE  0100               	movlb	0	; () banked
  2284  0115B0  07C8               	decf	delay_ms@ms& (0+255),f,b
  2285  0115B2  A0D8               	btfss	status,0,c
  2286  0115B4  07C9               	decf	(delay_ms@ms+1)& (0+255),f,b
  2287  0115B6  0100               	movlb	0	; () banked
  2288  0115B8  29C8               	incf	delay_ms@ms& (0+255),w,b
  2289  0115BA  E1DA               	bnz	l9459
  2290  0115BC  0100               	movlb	0	; () banked
  2291  0115BE  29C9               	incf	(delay_ms@ms+1)& (0+255),w,b
  2292  0115C0  A4D8               	btfss	status,2,c
  2293  0115C2  D7D6               	goto	l9459
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;Types.c: 251: }
  2297                           ;Types.c: 252: }
  2298                           ;Types.c: 253: u = 0x8008;
  2299                           
  2300                           ; BSR set to: 0
  2301  0115C4  0E08               	movlw	8
  2302  0115C6  0100               	movlb	0	; () banked
  2303  0115C8  6FCA               	movwf	delay_ms@u& (0+255),b	;volatile
  2304  0115CA  0E80               	movlw	128
  2305  0115CC  6FCB               	movwf	(delay_ms@u+1)& (0+255),b	;volatile
  2306  0115CE  0E00               	movlw	0
  2307  0115D0  6FCC               	movwf	(delay_ms@u+2)& (0+255),b	;volatile
  2308  0115D2  0E00               	movlw	0
  2309  0115D4  6FCD               	movwf	(delay_ms@u+3)& (0+255),b	;volatile
  2310                           
  2311                           ; BSR set to: 0
  2312  0115D6  0012               	return		;funcret
  2313  0115D8                     __end_of_delay_ms:
  2314                           	opt stack 0
  2315                           tblptru	equ	0xFF8
  2316                           tblptrh	equ	0xFF7
  2317                           tblptrl	equ	0xFF6
  2318                           tablat	equ	0xFF5
  2319                           postinc0	equ	0xFEE
  2320                           wreg	equ	0xFE8
  2321                           postdec1	equ	0xFE5
  2322                           fsr1h	equ	0xFE2
  2323                           fsr1l	equ	0xFE1
  2324                           status	equ	0xFD8
  2325                           
  2326 ;; *************** function _Port_SetQuadType *****************
  2327 ;; Defined at:
  2328 ;;		line 399 in file "Library/Port.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  pInput          2    3[BANK2 ] const PTR struct Port
  2331 ;;		 -> PortB(10), PortD(10), 
  2332 ;;  pQuad           1    5[BANK2 ] enum E6776
  2333 ;;  pType           1    6[BANK2 ] enum E6795
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  Output          1   47[BANK0 ] enum E6475
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      enum E6475
  2338 ;; Registers used:
  2339 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2345 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Totals:         0       1       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;Total ram usage:        5 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:   13
  2352 ;; This function calls:
  2353 ;;		_Byte_SetQuad
  2354 ;;		_Port_CheckQuadType
  2355 ;;		_Word_SetPair
  2356 ;; This function is called by:
  2357 ;;		_MXK_Init
  2358 ;;		_MXK_InitDIPSwitch
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text3
  2363  0103BA                     __ptext3:
  2364                           	opt stack 0
  2365  0103BA                     _Port_SetQuadType:
  2366                           	opt stack 16
  2367                           
  2368                           ;Port.c: 401: ePinError Output = ePinErrorState;
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;incstack = 0
  2372  0103BA  0E05               	movlw	5
  2373  0103BC  0100               	movlb	0	; () banked
  2374  0103BE  6FF7               	movwf	Port_SetQuadType@Output& (0+255),b
  2375                           
  2376                           ;Port.c: 403: switch (pType)
  2377  0103C0  D0C7               	goto	l9533
  2378  0103C2                     l9517:
  2379                           
  2380                           ;Port.c: 407: {
  2381                           ;Port.c: 409: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0xF);
  2382  0103C2  0102               	movlb	2	; () banked
  2383  0103C4  EE20 F002          	lfsr	2,2
  2384  0103C8  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2385  0103CA  26D9               	addwf	fsr2l,f,c
  2386  0103CC  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2387  0103CE  22DA               	addwfc	fsr2h,f,c
  2388  0103D0  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2389  0103D4  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2390  0103D8  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2391  0103DC  0E0F               	movlw	15
  2392  0103DE  0100               	movlb	0	; () banked
  2393  0103E0  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2394  0103E2  EC6C  F08D         	call	_Byte_SetQuad	;wreg free
  2395                           
  2396                           ;Port.c: 412: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0);
  2397  0103E6  0102               	movlb	2	; () banked
  2398  0103E8  EE20 F004          	lfsr	2,4
  2399  0103EC  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2400  0103EE  26D9               	addwf	fsr2l,f,c
  2401  0103F0  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2402  0103F2  22DA               	addwfc	fsr2h,f,c
  2403  0103F4  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2404  0103F8  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2405  0103FC  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2406  010400  0E00               	movlw	0
  2407  010402  0100               	movlb	0	; () banked
  2408  010404  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2409  010406  EC6C  F08D         	call	_Byte_SetQuad	;wreg free
  2410                           
  2411                           ;Port.c: 413: }
  2412                           ;Port.c: 415: break;
  2413  01040A  D0B0               	goto	l9535
  2414  01040C                     l9519:
  2415                           
  2416                           ;Port.c: 417: if ((Output = Port_CheckQuadType(pInput, pQuad, eNone)) == ePinErrorNone)
  2417  01040C  C203  F1FA         	movff	Port_SetQuadType@pInput,Port_CheckQuadType@pInput
  2418  010410  C204  F1FB         	movff	Port_SetQuadType@pInput+1,Port_CheckQuadType@pInput+1
  2419  010414  C205  F1FC         	movff	Port_SetQuadType@pQuad,Port_CheckQuadType@pQuad
  2420  010418  0E03               	movlw	3
  2421  01041A  0101               	movlb	1	; () banked
  2422  01041C  6FFD               	movwf	Port_CheckQuadType@pDrive& (0+255),b
  2423  01041E  EC84  F08B         	call	_Port_CheckQuadType	;wreg free
  2424  010422  0100               	movlb	0	; () banked
  2425  010424  6FF7               	movwf	Port_SetQuadType@Output& (0+255),b
  2426  010426  0100               	movlb	0	; () banked
  2427  010428  51F7               	movf	Port_SetQuadType@Output& (0+255),w,b
  2428  01042A  A4D8               	btfss	status,2,c
  2429  01042C  0012               	return	
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;Port.c: 418: {
  2433                           ;Port.c: 420: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0);
  2434  01042E  0102               	movlb	2	; () banked
  2435  010430  EE20 F002          	lfsr	2,2
  2436  010434  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2437  010436  26D9               	addwf	fsr2l,f,c
  2438  010438  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2439  01043A  22DA               	addwfc	fsr2h,f,c
  2440  01043C  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2441  010440  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2442  010444  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2443  010448  0E00               	movlw	0
  2444  01044A  0100               	movlb	0	; () banked
  2445  01044C  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2446  01044E  EC6C  F08D         	call	_Byte_SetQuad	;wreg free
  2447                           
  2448                           ;Port.c: 423: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0);
  2449  010452  0102               	movlb	2	; () banked
  2450  010454  EE20 F004          	lfsr	2,4
  2451  010458  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2452  01045A  26D9               	addwf	fsr2l,f,c
  2453  01045C  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2454  01045E  22DA               	addwfc	fsr2h,f,c
  2455  010460  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2456  010464  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2457  010468  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2458  01046C  0E00               	movlw	0
  2459  01046E  0100               	movlb	0	; () banked
  2460  010470  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2461  010472  EC6C  F08D         	call	_Byte_SetQuad	;wreg free
  2462                           
  2463                           ;Port.c: 424: }
  2464  010476  D07A               	goto	l9535
  2465  010478                     l9523:
  2466                           
  2467                           ;Port.c: 428: if ((Output = Port_CheckQuadType(pInput, pQuad, eNone)) == ePinErrorNone)
  2468  010478  C203  F1FA         	movff	Port_SetQuadType@pInput,Port_CheckQuadType@pInput
  2469  01047C  C204  F1FB         	movff	Port_SetQuadType@pInput+1,Port_CheckQuadType@pInput+1
  2470  010480  C205  F1FC         	movff	Port_SetQuadType@pQuad,Port_CheckQuadType@pQuad
  2471  010484  0E03               	movlw	3
  2472  010486  0101               	movlb	1	; () banked
  2473  010488  6FFD               	movwf	Port_CheckQuadType@pDrive& (0+255),b
  2474  01048A  EC84  F08B         	call	_Port_CheckQuadType	;wreg free
  2475  01048E  0100               	movlb	0	; () banked
  2476  010490  6FF7               	movwf	Port_SetQuadType@Output& (0+255),b
  2477  010492  0100               	movlb	0	; () banked
  2478  010494  51F7               	movf	Port_SetQuadType@Output& (0+255),w,b
  2479  010496  A4D8               	btfss	status,2,c
  2480  010498  0012               	return	
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;Port.c: 429: {
  2484                           ;Port.c: 431: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0xF);
  2485  01049A  0102               	movlb	2	; () banked
  2486  01049C  EE20 F002          	lfsr	2,2
  2487  0104A0  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2488  0104A2  26D9               	addwf	fsr2l,f,c
  2489  0104A4  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2490  0104A6  22DA               	addwfc	fsr2h,f,c
  2491  0104A8  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2492  0104AC  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2493  0104B0  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2494  0104B4  0E0F               	movlw	15
  2495  0104B6  0100               	movlb	0	; () banked
  2496  0104B8  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2497  0104BA  EC6C  F08D         	call	_Byte_SetQuad	;wreg free
  2498                           
  2499                           ;Port.c: 434: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0xF);
  2500  0104BE  0102               	movlb	2	; () banked
  2501  0104C0  EE20 F004          	lfsr	2,4
  2502  0104C4  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2503  0104C6  26D9               	addwf	fsr2l,f,c
  2504  0104C8  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2505  0104CA  22DA               	addwfc	fsr2h,f,c
  2506  0104CC  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2507  0104D0  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2508  0104D4  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2509  0104D8  0E0F               	movlw	15
  2510  0104DA  0100               	movlb	0	; () banked
  2511  0104DC  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2512  0104DE  EC6C  F08D         	call	_Byte_SetQuad	;wreg free
  2513                           
  2514                           ;Port.c: 435: }
  2515  0104E2  D044               	goto	l9535
  2516  0104E4                     l9527:
  2517                           
  2518                           ;Port.c: 439: if ((Output = Port_CheckQuadType(pInput, pQuad, eNone)) == ePinErrorNone)
  2519  0104E4  C203  F1FA         	movff	Port_SetQuadType@pInput,Port_CheckQuadType@pInput
  2520  0104E8  C204  F1FB         	movff	Port_SetQuadType@pInput+1,Port_CheckQuadType@pInput+1
  2521  0104EC  C205  F1FC         	movff	Port_SetQuadType@pQuad,Port_CheckQuadType@pQuad
  2522  0104F0  0E03               	movlw	3
  2523  0104F2  0101               	movlb	1	; () banked
  2524  0104F4  6FFD               	movwf	Port_CheckQuadType@pDrive& (0+255),b
  2525  0104F6  EC84  F08B         	call	_Port_CheckQuadType	;wreg free
  2526  0104FA  0100               	movlb	0	; () banked
  2527  0104FC  6FF7               	movwf	Port_SetQuadType@Output& (0+255),b
  2528  0104FE  0100               	movlb	0	; () banked
  2529  010500  51F7               	movf	Port_SetQuadType@Output& (0+255),w,b
  2530  010502  A4D8               	btfss	status,2,c
  2531  010504  0012               	return	
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;Port.c: 440: {
  2535                           ;Port.c: 442: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0);
  2536  010506  0102               	movlb	2	; () banked
  2537  010508  EE20 F002          	lfsr	2,2
  2538  01050C  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2539  01050E  26D9               	addwf	fsr2l,f,c
  2540  010510  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2541  010512  22DA               	addwfc	fsr2h,f,c
  2542  010514  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2543  010518  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2544  01051C  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2545  010520  0E00               	movlw	0
  2546  010522  0100               	movlb	0	; () banked
  2547  010524  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2548  010526  EC6C  F08D         	call	_Byte_SetQuad	;wreg free
  2549                           
  2550                           ;Port.c: 445: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0);
  2551  01052A  0102               	movlb	2	; () banked
  2552  01052C  EE20 F004          	lfsr	2,4
  2553  010530  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2554  010532  26D9               	addwf	fsr2l,f,c
  2555  010534  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2556  010536  22DA               	addwfc	fsr2h,f,c
  2557  010538  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2558  01053C  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2559  010540  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2560  010544  0E00               	movlw	0
  2561  010546  0100               	movlb	0	; () banked
  2562  010548  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2563  01054A  EC6C  F08D         	call	_Byte_SetQuad	;wreg free
  2564                           
  2565                           ;Port.c: 446: }
  2566  01054E  D00E               	goto	l9535
  2567  010550                     l9533:
  2568  010550  0102               	movlb	2	; () banked
  2569  010552  5106               	movf	Port_SetQuadType@pType& (0+255),w,b
  2570                           
  2571                           ; Switch size 1, requested type "space"
  2572                           ; Number of cases is 4, Range of values is 0 to 3
  2573                           ; switch strategies available:
  2574                           ; Name         Instructions Cycles
  2575                           ; simple_byte           13     7 (average)
  2576                           ;	Chosen strategy is simple_byte
  2577  010554  0A00               	xorlw	0	; case 0
  2578  010556  B4D8               	btfsc	status,2,c
  2579  010558  D734               	goto	l9517
  2580  01055A  0A01               	xorlw	1	; case 1
  2581  01055C  B4D8               	btfsc	status,2,c
  2582  01055E  D756               	goto	l9519
  2583  010560  0A03               	xorlw	3	; case 2
  2584  010562  B4D8               	btfsc	status,2,c
  2585  010564  D789               	goto	l9523
  2586  010566  0A01               	xorlw	1	; case 3
  2587  010568  B4D8               	btfsc	status,2,c
  2588  01056A  D7BC               	goto	l9527
  2589  01056C                     l9535:
  2590                           
  2591                           ;Port.c: 454: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4, (UINT8)pType);
  2592  01056C  0E08               	movlw	8
  2593  01056E  0102               	movlb	2	; () banked
  2594  010570  2503               	addwf	Port_SetQuadType@pInput& (0+255),w,b
  2595  010572  0100               	movlb	0	; () banked
  2596  010574  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  2597  010576  0E00               	movlw	0
  2598  010578  0102               	movlb	2	; () banked
  2599  01057A  2104               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2600  01057C  0100               	movlb	0	; () banked
  2601  01057E  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  2602  010580  0102               	movlb	2	; () banked
  2603  010582  5105               	movf	Port_SetQuadType@pQuad& (0+255),w,b
  2604  010584  0D04               	mullw	4
  2605  010586  CFF3 F0D9          	movff	prodl,Word_SetPair@pPair
  2606  01058A  C206  F0DA         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
  2607  01058E  EC4C  F08C         	call	_Word_SetPair	;wreg free
  2608                           
  2609                           ;Port.c: 455: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4 + 1, (UINT8)pType);
  2610  010592  0E08               	movlw	8
  2611  010594  0102               	movlb	2	; () banked
  2612  010596  2503               	addwf	Port_SetQuadType@pInput& (0+255),w,b
  2613  010598  0100               	movlb	0	; () banked
  2614  01059A  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  2615  01059C  0E00               	movlw	0
  2616  01059E  0102               	movlb	2	; () banked
  2617  0105A0  2104               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2618  0105A2  0100               	movlb	0	; () banked
  2619  0105A4  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  2620  0105A6  0102               	movlb	2	; () banked
  2621  0105A8  5105               	movf	Port_SetQuadType@pQuad& (0+255),w,b
  2622  0105AA  0D04               	mullw	4
  2623  0105AC  28F3               	incf	prodl,w,c
  2624  0105AE  0100               	movlb	0	; () banked
  2625  0105B0  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  2626  0105B2  C206  F0DA         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
  2627  0105B6  EC4C  F08C         	call	_Word_SetPair	;wreg free
  2628                           
  2629                           ;Port.c: 456: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4 + 2, (UINT8)pType);
  2630  0105BA  0E08               	movlw	8
  2631  0105BC  0102               	movlb	2	; () banked
  2632  0105BE  2503               	addwf	Port_SetQuadType@pInput& (0+255),w,b
  2633  0105C0  0100               	movlb	0	; () banked
  2634  0105C2  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  2635  0105C4  0E00               	movlw	0
  2636  0105C6  0102               	movlb	2	; () banked
  2637  0105C8  2104               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2638  0105CA  0100               	movlb	0	; () banked
  2639  0105CC  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  2640  0105CE  0102               	movlb	2	; () banked
  2641  0105D0  5105               	movf	Port_SetQuadType@pQuad& (0+255),w,b
  2642  0105D2  0D04               	mullw	4
  2643  0105D4  50F3               	movf	prodl,w,c
  2644  0105D6  0F02               	addlw	2
  2645  0105D8  0100               	movlb	0	; () banked
  2646  0105DA  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  2647  0105DC  C206  F0DA         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
  2648  0105E0  EC4C  F08C         	call	_Word_SetPair	;wreg free
  2649                           
  2650                           ;Port.c: 457: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4 + 3, (UINT8)pType);
  2651  0105E4  0E08               	movlw	8
  2652  0105E6  0102               	movlb	2	; () banked
  2653  0105E8  2503               	addwf	Port_SetQuadType@pInput& (0+255),w,b
  2654  0105EA  0100               	movlb	0	; () banked
  2655  0105EC  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  2656  0105EE  0E00               	movlw	0
  2657  0105F0  0102               	movlb	2	; () banked
  2658  0105F2  2104               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2659  0105F4  0100               	movlb	0	; () banked
  2660  0105F6  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  2661  0105F8  0102               	movlb	2	; () banked
  2662  0105FA  5105               	movf	Port_SetQuadType@pQuad& (0+255),w,b
  2663  0105FC  0D04               	mullw	4
  2664  0105FE  50F3               	movf	prodl,w,c
  2665  010600  0F03               	addlw	3
  2666  010602  0100               	movlb	0	; () banked
  2667  010604  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  2668  010606  C206  F0DA         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
  2669  01060A  EC4C  F08C         	call	_Word_SetPair	;wreg free
  2670  01060E  0012               	return	
  2671  010610                     __end_of_Port_SetQuadType:
  2672                           	opt stack 0
  2673                           tblptru	equ	0xFF8
  2674                           tblptrh	equ	0xFF7
  2675                           tblptrl	equ	0xFF6
  2676                           tablat	equ	0xFF5
  2677                           prodl	equ	0xFF3
  2678                           postinc0	equ	0xFEE
  2679                           wreg	equ	0xFE8
  2680                           postdec1	equ	0xFE5
  2681                           fsr1h	equ	0xFE2
  2682                           fsr1l	equ	0xFE1
  2683                           postinc2	equ	0xFDE
  2684                           postdec2	equ	0xFDD
  2685                           fsr2h	equ	0xFDA
  2686                           fsr2l	equ	0xFD9
  2687                           status	equ	0xFD8
  2688                           
  2689 ;; *************** function _Byte_SetQuad *****************
  2690 ;; Defined at:
  2691 ;;		line 101 in file "Library/Types.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  pInput          2   11[BANK0 ] PTR struct Byte
  2694 ;;		 -> SSP2CON1(1), SSP1CON1(1), TRISG(1), TRISF(1), 
  2695 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
  2696 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
  2697 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
  2698 ;;		 -> NULL(0), 
  2699 ;;  pQuad           1   13[BANK0 ] unsigned char 
  2700 ;;  pValue          1   14[BANK0 ] unsigned char 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2712 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;Total ram usage:        4 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; Hardware stack levels required when called:    8
  2719 ;; This function calls:
  2720 ;;		_Byte_SetZone
  2721 ;; This function is called by:
  2722 ;;		_Port_SetQuadType
  2723 ;;		_Port_SetQuad
  2724 ;;		_SPI_Init
  2725 ;;		_SPI_MinSpeed
  2726 ;;		_SPI_MaxSpeed
  2727 ;;		_Word_SetQuad
  2728 ;;		_I2C_Init
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text4
  2733  011AD8                     __ptext4:
  2734                           	opt stack 0
  2735  011AD8                     _Byte_SetQuad:
  2736                           	opt stack 20
  2737                           
  2738                           ;Types.c: 103: Byte_SetZone(pInput, 2, pQuad, 4, pValue);
  2739                           
  2740                           ;incstack = 0
  2741  011AD8  C0D3  F0C8         	movff	Byte_SetQuad@pInput,Byte_SetZone@pInput
  2742  011ADC  C0D4  F0C9         	movff	Byte_SetQuad@pInput+1,Byte_SetZone@pInput+1
  2743  011AE0  0E02               	movlw	2
  2744  011AE2  0100               	movlb	0	; () banked
  2745  011AE4  6FCA               	movwf	Byte_SetZone@pMax& (0+255),b
  2746  011AE6  C0D5  F0CB         	movff	Byte_SetQuad@pQuad,Byte_SetZone@pChunk
  2747  011AEA  0E04               	movlw	4
  2748  011AEC  0100               	movlb	0	; () banked
  2749  011AEE  6FCC               	movwf	Byte_SetZone@pChunkSize& (0+255),b
  2750  011AF0  C0D6  F0CD         	movff	Byte_SetQuad@pValue,Byte_SetZone@pValue
  2751  011AF4  ECF6  F087         	call	_Byte_SetZone	;wreg free
  2752  011AF8  0012               	return		;funcret
  2753  011AFA                     __end_of_Byte_SetQuad:
  2754                           	opt stack 0
  2755                           tblptru	equ	0xFF8
  2756                           tblptrh	equ	0xFF7
  2757                           tblptrl	equ	0xFF6
  2758                           tablat	equ	0xFF5
  2759                           prodl	equ	0xFF3
  2760                           postinc0	equ	0xFEE
  2761                           wreg	equ	0xFE8
  2762                           postdec1	equ	0xFE5
  2763                           fsr1h	equ	0xFE2
  2764                           fsr1l	equ	0xFE1
  2765                           postinc2	equ	0xFDE
  2766                           postdec2	equ	0xFDD
  2767                           fsr2h	equ	0xFDA
  2768                           fsr2l	equ	0xFD9
  2769                           status	equ	0xFD8
  2770                           
  2771 ;; *************** function _Port_Init *****************
  2772 ;; Defined at:
  2773 ;;		line 150 in file "Library/Port.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  pInput          2   10[BANK2 ] const PTR struct Port
  2776 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  2777 ;;		 -> PortD(10), PortC(10), PortF(10), 
  2778 ;;  pPort           1   12[BANK2 ] enum E6786
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  i               1   15[BANK2 ] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2790 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;Total ram usage:        6 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:   15
  2797 ;; This function calls:
  2798 ;;		_GetPortPORT
  2799 ;;		_GetPortProperties
  2800 ;;		_GetPortTRIS
  2801 ;;		_Port_Set
  2802 ;;		_Port_SetPinType
  2803 ;;		_Port_SetType
  2804 ;;		_Word_GetPair
  2805 ;; This function is called by:
  2806 ;;		_MXK_Init
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text5
  2811  0109FA                     __ptext5:
  2812                           	opt stack 0
  2813  0109FA                     _Port_Init:
  2814                           	opt stack 14
  2815                           
  2816                           ;Port.c: 153: pInput->mProperties = GetPortProperties(pPort);
  2817                           
  2818                           ;incstack = 0
  2819  0109FA  0102               	movlb	2	; () banked
  2820  0109FC  510C               	movf	Port_Init@pPort& (0+255),w,b
  2821  0109FE  ECF9  F088         	call	_GetPortProperties
  2822  010A02  C20A  FFD9         	movff	Port_Init@pInput,fsr2l
  2823  010A06  C20B  FFDA         	movff	Port_Init@pInput+1,fsr2h
  2824  010A0A  0100               	movlb	0	; () banked
  2825  010A0C  C0C8  FFDE         	movff	?_GetPortProperties,postinc2
  2826  010A10  0100               	movlb	0	; () banked
  2827  010A12  C0C9  FFDD         	movff	?_GetPortProperties+1,postdec2
  2828                           
  2829                           ;Port.c: 154: pInput->mInput = GetPortPORT(pPort);
  2830  010A16  0102               	movlb	2	; () banked
  2831  010A18  510C               	movf	Port_Init@pPort& (0+255),w,b
  2832  010A1A  EC4C  F089         	call	_GetPortPORT
  2833  010A1E  0102               	movlb	2	; () banked
  2834  010A20  EE20 F006          	lfsr	2,6
  2835  010A24  510A               	movf	Port_Init@pInput& (0+255),w,b
  2836  010A26  26D9               	addwf	fsr2l,f,c
  2837  010A28  510B               	movf	(Port_Init@pInput+1)& (0+255),w,b
  2838  010A2A  22DA               	addwfc	fsr2h,f,c
  2839  010A2C  0100               	movlb	0	; () banked
  2840  010A2E  C0C8  FFDE         	movff	?_GetPortPORT,postinc2
  2841  010A32  0100               	movlb	0	; () banked
  2842  010A34  C0C9  FFDD         	movff	?_GetPortPORT+1,postdec2
  2843                           
  2844                           ;Port.c: 155: pInput->mOutput = GetPortPORT(pPort);
  2845  010A38  0102               	movlb	2	; () banked
  2846  010A3A  510C               	movf	Port_Init@pPort& (0+255),w,b
  2847  010A3C  EC4C  F089         	call	_GetPortPORT
  2848  010A40  0102               	movlb	2	; () banked
  2849  010A42  EE20 F004          	lfsr	2,4
  2850  010A46  510A               	movf	Port_Init@pInput& (0+255),w,b
  2851  010A48  26D9               	addwf	fsr2l,f,c
  2852  010A4A  510B               	movf	(Port_Init@pInput+1)& (0+255),w,b
  2853  010A4C  22DA               	addwfc	fsr2h,f,c
  2854  010A4E  0100               	movlb	0	; () banked
  2855  010A50  C0C8  FFDE         	movff	?_GetPortPORT,postinc2
  2856  010A54  0100               	movlb	0	; () banked
  2857  010A56  C0C9  FFDD         	movff	?_GetPortPORT+1,postdec2
  2858                           
  2859                           ;Port.c: 156: pInput->mDirection = GetPortTRIS(pPort);
  2860  010A5A  0102               	movlb	2	; () banked
  2861  010A5C  510C               	movf	Port_Init@pPort& (0+255),w,b
  2862  010A5E  ECA6  F088         	call	_GetPortTRIS
  2863  010A62  0102               	movlb	2	; () banked
  2864  010A64  EE20 F002          	lfsr	2,2
  2865  010A68  510A               	movf	Port_Init@pInput& (0+255),w,b
  2866  010A6A  26D9               	addwf	fsr2l,f,c
  2867  010A6C  510B               	movf	(Port_Init@pInput+1)& (0+255),w,b
  2868  010A6E  22DA               	addwfc	fsr2h,f,c
  2869  010A70  0100               	movlb	0	; () banked
  2870  010A72  C0C8  FFDE         	movff	?_GetPortTRIS,postinc2
  2871  010A76  0100               	movlb	0	; () banked
  2872  010A78  C0C9  FFDD         	movff	?_GetPortTRIS+1,postdec2
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;Port.c: 159: pInput->mOutput->mBits = 0x00;
  2876  010A7C  0102               	movlb	2	; () banked
  2877  010A7E  EE20 F004          	lfsr	2,4
  2878  010A82  510A               	movf	Port_Init@pInput& (0+255),w,b
  2879  010A84  26D9               	addwf	fsr2l,f,c
  2880  010A86  510B               	movf	(Port_Init@pInput+1)& (0+255),w,b
  2881  010A88  22DA               	addwfc	fsr2h,f,c
  2882  010A8A  CFDE F20D          	movff	postinc2,??_Port_Init
  2883  010A8E  CFDD F20E          	movff	postdec2,??_Port_Init+1
  2884  010A92  C20D  FFD9         	movff	??_Port_Init,fsr2l
  2885  010A96  C20E  FFDA         	movff	??_Port_Init+1,fsr2h
  2886  010A9A  0E00               	movlw	0
  2887  010A9C  6EDF               	movwf	indf2,c
  2888                           
  2889                           ; BSR set to: 2
  2890                           ;Port.c: 160: pInput->mDirection->mBits = 0xFF;
  2891  010A9E  0102               	movlb	2	; () banked
  2892  010AA0  EE20 F002          	lfsr	2,2
  2893  010AA4  510A               	movf	Port_Init@pInput& (0+255),w,b
  2894  010AA6  26D9               	addwf	fsr2l,f,c
  2895  010AA8  510B               	movf	(Port_Init@pInput+1)& (0+255),w,b
  2896  010AAA  22DA               	addwfc	fsr2h,f,c
  2897  010AAC  CFDE F20D          	movff	postinc2,??_Port_Init
  2898  010AB0  CFDD F20E          	movff	postdec2,??_Port_Init+1
  2899  010AB4  C20D  FFD9         	movff	??_Port_Init,fsr2l
  2900  010AB8  C20E  FFDA         	movff	??_Port_Init+1,fsr2h
  2901  010ABC  0EFF               	movlw	255
  2902  010ABE  6EDF               	movwf	indf2,c
  2903                           
  2904                           ; BSR set to: 2
  2905                           ;Port.c: 163: Port_SetType(pInput, eTypeInput);
  2906  010AC0  C20A  F206         	movff	Port_Init@pInput,Port_SetType@pInput
  2907  010AC4  C20B  F207         	movff	Port_Init@pInput+1,Port_SetType@pInput+1
  2908  010AC8  0E00               	movlw	0
  2909  010ACA  0102               	movlb	2	; () banked
  2910  010ACC  6F08               	movwf	Port_SetType@pType& (0+255),b
  2911  010ACE  EC08  F083         	call	_Port_SetType	;wreg free
  2912                           
  2913                           ;Port.c: 166: UINT8 i;
  2914                           ;Port.c: 167: for (i=0; i<8; i++)
  2915  010AD2  0E00               	movlw	0
  2916  010AD4  0102               	movlb	2	; () banked
  2917  010AD6  6F0F               	movwf	Port_Init@i& (0+255),b
  2918  010AD8                     l9493:
  2919                           
  2920                           ; BSR set to: 2
  2921  010AD8  0E07               	movlw	7
  2922  010ADA  0102               	movlb	2	; () banked
  2923  010ADC  650F               	cpfsgt	Port_Init@i& (0+255),b
  2924  010ADE  D031               	goto	l9507
  2925  010AE0  D04B               	goto	l9513
  2926  010AE2                     l9497:
  2927                           
  2928                           ;Port.c: 172: Port_SetPinType(pInput, i, eTypeOutputPushPull);
  2929  010AE2  C20A  F0EE         	movff	Port_Init@pInput,Port_SetPinType@pInput
  2930  010AE6  C20B  F0EF         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  2931  010AEA  C20F  F0F0         	movff	Port_Init@i,Port_SetPinType@pPin
  2932  010AEE  0E03               	movlw	3
  2933  010AF0  0100               	movlb	0	; () banked
  2934  010AF2  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2935  010AF4  EC1D  F084         	call	_Port_SetPinType	;wreg free
  2936                           
  2937                           ;Port.c: 173: break;
  2938  010AF8  D03C               	goto	l9509
  2939  010AFA                     l9499:
  2940                           
  2941                           ;Port.c: 175: Port_SetPinType(pInput, i, eTypeOutputOpenSource);
  2942  010AFA  C20A  F0EE         	movff	Port_Init@pInput,Port_SetPinType@pInput
  2943  010AFE  C20B  F0EF         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  2944  010B02  C20F  F0F0         	movff	Port_Init@i,Port_SetPinType@pPin
  2945  010B06  0E02               	movlw	2
  2946  010B08  0100               	movlb	0	; () banked
  2947  010B0A  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2948  010B0C  EC1D  F084         	call	_Port_SetPinType	;wreg free
  2949                           
  2950                           ;Port.c: 176: break;
  2951  010B10  D030               	goto	l9509
  2952  010B12                     l9501:
  2953                           
  2954                           ;Port.c: 178: Port_SetPinType(pInput, i, eTypeOutputOpenDrain);
  2955  010B12  C20A  F0EE         	movff	Port_Init@pInput,Port_SetPinType@pInput
  2956  010B16  C20B  F0EF         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  2957  010B1A  C20F  F0F0         	movff	Port_Init@i,Port_SetPinType@pPin
  2958  010B1E  0E01               	movlw	1
  2959  010B20  0100               	movlb	0	; () banked
  2960  010B22  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2961  010B24  EC1D  F084         	call	_Port_SetPinType	;wreg free
  2962                           
  2963                           ;Port.c: 179: break;
  2964  010B28  D024               	goto	l9509
  2965  010B2A                     l9503:
  2966                           
  2967                           ;Port.c: 181: Port_SetPinType(pInput, i, eTypeInput);
  2968  010B2A  C20A  F0EE         	movff	Port_Init@pInput,Port_SetPinType@pInput
  2969  010B2E  C20B  F0EF         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  2970  010B32  C20F  F0F0         	movff	Port_Init@i,Port_SetPinType@pPin
  2971  010B36  0E00               	movlw	0
  2972  010B38  0100               	movlb	0	; () banked
  2973  010B3A  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2974  010B3C  EC1D  F084         	call	_Port_SetPinType	;wreg free
  2975                           
  2976                           ;Port.c: 183: }
  2977                           
  2978                           ;Port.c: 182: break;
  2979  010B40  D018               	goto	l9509
  2980  010B42                     l9507:
  2981  010B42  C20A  FFD9         	movff	Port_Init@pInput,fsr2l
  2982  010B46  C20B  FFDA         	movff	Port_Init@pInput+1,fsr2h
  2983  010B4A  CFDE F0D4          	movff	postinc2,Word_GetPair@pInput
  2984  010B4E  CFDD F0D5          	movff	postdec2,Word_GetPair@pInput+1
  2985  010B52  C20F  F0D6         	movff	Port_Init@i,Word_GetPair@pPair
  2986  010B56  ECB0  F08C         	call	_Word_GetPair	;wreg free
  2987                           
  2988                           ; Switch size 1, requested type "space"
  2989                           ; Number of cases is 4, Range of values is 0 to 3
  2990                           ; switch strategies available:
  2991                           ; Name         Instructions Cycles
  2992                           ; simple_byte           13     7 (average)
  2993                           ;	Chosen strategy is simple_byte
  2994  010B5A  0A00               	xorlw	0	; case 0
  2995  010B5C  B4D8               	btfsc	status,2,c
  2996  010B5E  D7C1               	goto	l9497
  2997  010B60  0A01               	xorlw	1	; case 1
  2998  010B62  B4D8               	btfsc	status,2,c
  2999  010B64  D7D6               	goto	l9501
  3000  010B66  0A03               	xorlw	3	; case 2
  3001  010B68  B4D8               	btfsc	status,2,c
  3002  010B6A  D7C7               	goto	l9499
  3003  010B6C  0A01               	xorlw	1	; case 3
  3004  010B6E  B4D8               	btfsc	status,2,c
  3005  010B70  D7DC               	goto	l9503
  3006  010B72                     l9509:
  3007  010B72  0102               	movlb	2	; () banked
  3008  010B74  2B0F               	incf	Port_Init@i& (0+255),f,b
  3009  010B76  D7B0               	goto	l9493
  3010  010B78                     l9513:
  3011                           
  3012                           ; BSR set to: 2
  3013                           ;Port.c: 184: }
  3014                           ;Port.c: 185: Port_Set(pInput, 0x00);
  3015  010B78  C20A  F0D7         	movff	Port_Init@pInput,Port_Set@pInput
  3016  010B7C  C20B  F0D8         	movff	Port_Init@pInput+1,Port_Set@pInput+1
  3017  010B80  0E00               	movlw	0
  3018  010B82  0100               	movlb	0	; () banked
  3019  010B84  6FD9               	movwf	Port_Set@pValue& (0+255),b
  3020  010B86  EC00  F080         	call	_Port_Set	;wreg free
  3021  010B8A  0012               	return		;funcret
  3022  010B8C                     __end_of_Port_Init:
  3023                           	opt stack 0
  3024                           tblptru	equ	0xFF8
  3025                           tblptrh	equ	0xFF7
  3026                           tblptrl	equ	0xFF6
  3027                           tablat	equ	0xFF5
  3028                           prodl	equ	0xFF3
  3029                           postinc0	equ	0xFEE
  3030                           wreg	equ	0xFE8
  3031                           postdec1	equ	0xFE5
  3032                           fsr1h	equ	0xFE2
  3033                           fsr1l	equ	0xFE1
  3034                           indf2	equ	0xFDF
  3035                           postinc2	equ	0xFDE
  3036                           postdec2	equ	0xFDD
  3037                           fsr2h	equ	0xFDA
  3038                           fsr2l	equ	0xFD9
  3039                           status	equ	0xFD8
  3040                           
  3041 ;; *************** function _Port_SetType *****************
  3042 ;; Defined at:
  3043 ;;		line 513 in file "Library/Port.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  pInput          2    6[BANK2 ] const PTR struct Port
  3046 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  3047 ;;		 -> PortD(10), PortC(10), PortF(10), 
  3048 ;;  pType           1    8[BANK2 ] enum E6795
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  Output          1    9[BANK2 ] enum E6475
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      enum E6475
  3053 ;; Registers used:
  3054 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3060 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Totals:         0       0       2       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;Total ram usage:        6 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:   14
  3067 ;; This function calls:
  3068 ;;		_Port_CheckPortType
  3069 ;;		_Word_SetPair
  3070 ;; This function is called by:
  3071 ;;		_Port_Init
  3072 ;;		_MXK_Init
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text6
  3077  010610                     __ptext6:
  3078                           	opt stack 0
  3079  010610                     _Port_SetType:
  3080                           	opt stack 15
  3081                           
  3082                           ;Port.c: 515: ePinError Output = ePinErrorState;
  3083                           
  3084                           ;incstack = 0
  3085  010610  0E05               	movlw	5
  3086  010612  0102               	movlb	2	; () banked
  3087  010614  6F09               	movwf	Port_SetType@Output& (0+255),b
  3088                           
  3089                           ;Port.c: 517: switch (pType)
  3090  010616  D07A               	goto	l9317
  3091  010618                     l9301:
  3092                           
  3093                           ; BSR set to: 2
  3094                           ;Port.c: 522: pInput->mDirection->mBits = 0xFF;
  3095  010618  0102               	movlb	2	; () banked
  3096  01061A  EE20 F002          	lfsr	2,2
  3097  01061E  5106               	movf	Port_SetType@pInput& (0+255),w,b
  3098  010620  26D9               	addwf	fsr2l,f,c
  3099  010622  5107               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  3100  010624  22DA               	addwfc	fsr2h,f,c
  3101  010626  CFDE F1FE          	movff	postinc2,??_Port_SetType
  3102  01062A  CFDD F1FF          	movff	postdec2,??_Port_SetType+1
  3103  01062E  C1FE  FFD9         	movff	??_Port_SetType,fsr2l
  3104  010632  C1FF  FFDA         	movff	??_Port_SetType+1,fsr2h
  3105  010636  0EFF               	movlw	255
  3106  010638  D067               	goto	L3
  3107  01063A                     l9303:
  3108                           
  3109                           ; BSR set to: 2
  3110                           ;Port.c: 526: if ((Output=Port_CheckPortType(pInput, eLow)) == ePinErrorNone)
  3111  01063A  C206  F203         	movff	Port_SetType@pInput,Port_CheckPortType@pInput
  3112  01063E  C207  F204         	movff	Port_SetType@pInput+1,Port_CheckPortType@pInput+1
  3113  010642  0E01               	movlw	1
  3114  010644  0102               	movlb	2	; () banked
  3115  010646  6F05               	movwf	Port_CheckPortType@pDrive& (0+255),b
  3116  010648  EC28  F08C         	call	_Port_CheckPortType	;wreg free
  3117  01064C  0102               	movlb	2	; () banked
  3118  01064E  6F09               	movwf	Port_SetType@Output& (0+255),b
  3119  010650  0102               	movlb	2	; () banked
  3120  010652  5109               	movf	Port_SetType@Output& (0+255),w,b
  3121  010654  A4D8               	btfss	status,2,c
  3122  010656  0012               	return	
  3123                           
  3124                           ; BSR set to: 2
  3125                           ;Port.c: 527: {
  3126                           ;Port.c: 529: pInput->mDirection->mBits = 0x00;
  3127  010658  0102               	movlb	2	; () banked
  3128  01065A  EE20 F002          	lfsr	2,2
  3129  01065E  5106               	movf	Port_SetType@pInput& (0+255),w,b
  3130  010660  26D9               	addwf	fsr2l,f,c
  3131  010662  5107               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  3132  010664  22DA               	addwfc	fsr2h,f,c
  3133  010666  CFDE F1FE          	movff	postinc2,??_Port_SetType
  3134  01066A  CFDD F1FF          	movff	postdec2,??_Port_SetType+1
  3135  01066E  C1FE  FFD9         	movff	??_Port_SetType,fsr2l
  3136  010672  C1FF  FFDA         	movff	??_Port_SetType+1,fsr2h
  3137  010676  0E00               	movlw	0
  3138  010678  6EDF               	movwf	indf2,c
  3139                           
  3140                           ;Port.c: 532: pInput->mOutput->mBits = 0x00;
  3141  01067A  0102               	movlb	2	; () banked
  3142  01067C  EE20 F004          	lfsr	2,4
  3143  010680  D036               	goto	L5
  3144  010682                     l9307:
  3145                           
  3146                           ; BSR set to: 2
  3147                           ;Port.c: 537: if ((Output=Port_CheckPortType(pInput, eHigh)) == ePinErrorNone)
  3148  010682  C206  F203         	movff	Port_SetType@pInput,Port_CheckPortType@pInput
  3149  010686  C207  F204         	movff	Port_SetType@pInput+1,Port_CheckPortType@pInput+1
  3150  01068A  0E02               	movlw	2
  3151  01068C  0102               	movlb	2	; () banked
  3152  01068E  6F05               	movwf	Port_CheckPortType@pDrive& (0+255),b
  3153  010690  EC28  F08C         	call	_Port_CheckPortType	;wreg free
  3154  010694  0102               	movlb	2	; () banked
  3155  010696  6F09               	movwf	Port_SetType@Output& (0+255),b
  3156  010698  0102               	movlb	2	; () banked
  3157  01069A  5109               	movf	Port_SetType@Output& (0+255),w,b
  3158  01069C  A4D8               	btfss	status,2,c
  3159  01069E  0012               	return	
  3160                           
  3161                           ; BSR set to: 2
  3162                           ;Port.c: 538: {
  3163                           ;Port.c: 540: pInput->mDirection->mBits = 0xFF;
  3164  0106A0  0102               	movlb	2	; () banked
  3165  0106A2  EE20 F002          	lfsr	2,2
  3166  0106A6  5106               	movf	Port_SetType@pInput& (0+255),w,b
  3167  0106A8  26D9               	addwf	fsr2l,f,c
  3168  0106AA  5107               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  3169  0106AC  22DA               	addwfc	fsr2h,f,c
  3170  0106AE  CFDE F1FE          	movff	postinc2,??_Port_SetType
  3171  0106B2  CFDD F1FF          	movff	postdec2,??_Port_SetType+1
  3172  0106B6  C1FE  FFD9         	movff	??_Port_SetType,fsr2l
  3173  0106BA  C1FF  FFDA         	movff	??_Port_SetType+1,fsr2h
  3174  0106BE  0EFF               	movlw	255
  3175  0106C0  6EDF               	movwf	indf2,c
  3176                           
  3177                           ;Port.c: 543: pInput->mOutput->mBits = 0xFF;
  3178  0106C2  0102               	movlb	2	; () banked
  3179  0106C4  EE20 F004          	lfsr	2,4
  3180  0106C8  D7AA               	goto	L4
  3181  0106CA                     l9311:
  3182                           
  3183                           ; BSR set to: 2
  3184                           ;Port.c: 548: if ((Output=Port_CheckPortType(pInput, eHL)) == ePinErrorNone)
  3185  0106CA  C206  F203         	movff	Port_SetType@pInput,Port_CheckPortType@pInput
  3186  0106CE  C207  F204         	movff	Port_SetType@pInput+1,Port_CheckPortType@pInput+1
  3187  0106D2  0E00               	movlw	0
  3188  0106D4  0102               	movlb	2	; () banked
  3189  0106D6  6F05               	movwf	Port_CheckPortType@pDrive& (0+255),b
  3190  0106D8  EC28  F08C         	call	_Port_CheckPortType	;wreg free
  3191  0106DC  0102               	movlb	2	; () banked
  3192  0106DE  6F09               	movwf	Port_SetType@Output& (0+255),b
  3193  0106E0  0102               	movlb	2	; () banked
  3194  0106E2  5109               	movf	Port_SetType@Output& (0+255),w,b
  3195  0106E4  A4D8               	btfss	status,2,c
  3196  0106E6  0012               	return	
  3197                           
  3198                           ; BSR set to: 2
  3199                           ;Port.c: 549: {
  3200                           ;Port.c: 551: pInput->mDirection->mBits = 0x00;
  3201  0106E8  0102               	movlb	2	; () banked
  3202  0106EA  EE20 F002          	lfsr	2,2
  3203  0106EE                     L5:
  3204  0106EE  5106               	movf	Port_SetType@pInput& (0+255),w,b
  3205  0106F0  26D9               	addwf	fsr2l,f,c
  3206  0106F2  5107               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  3207  0106F4  22DA               	addwfc	fsr2h,f,c
  3208  0106F6  CFDE F1FE          	movff	postinc2,??_Port_SetType
  3209  0106FA  CFDD F1FF          	movff	postdec2,??_Port_SetType+1
  3210  0106FE  C1FE  FFD9         	movff	??_Port_SetType,fsr2l
  3211  010702  C1FF  FFDA         	movff	??_Port_SetType+1,fsr2h
  3212  010706  0E00               	movlw	0
  3213  010708                     L3:
  3214  010708  6EDF               	movwf	indf2,c
  3215                           
  3216                           ;Port.c: 552: }
  3217  01070A  D00E               	goto	l9319
  3218  01070C                     l9317:
  3219                           
  3220                           ; BSR set to: 2
  3221  01070C  0102               	movlb	2	; () banked
  3222  01070E  5108               	movf	Port_SetType@pType& (0+255),w,b
  3223                           
  3224                           ; Switch size 1, requested type "space"
  3225                           ; Number of cases is 4, Range of values is 0 to 3
  3226                           ; switch strategies available:
  3227                           ; Name         Instructions Cycles
  3228                           ; simple_byte           13     7 (average)
  3229                           ;	Chosen strategy is simple_byte
  3230  010710  0A00               	xorlw	0	; case 0
  3231  010712  B4D8               	btfsc	status,2,c
  3232  010714  D781               	goto	l9301
  3233  010716  0A01               	xorlw	1	; case 1
  3234  010718  B4D8               	btfsc	status,2,c
  3235  01071A  D78F               	goto	l9303
  3236  01071C  0A03               	xorlw	3	; case 2
  3237  01071E  B4D8               	btfsc	status,2,c
  3238  010720  D7B0               	goto	l9307
  3239  010722  0A01               	xorlw	1	; case 3
  3240  010724  B4D8               	btfsc	status,2,c
  3241  010726  D7D1               	goto	l9311
  3242  010728                     l9319:
  3243                           
  3244                           ; BSR set to: 2
  3245                           ;Port.c: 560: Word_SetPair(&pInput->mType, 0, (UINT8)pType);
  3246  010728  0E08               	movlw	8
  3247  01072A  0102               	movlb	2	; () banked
  3248  01072C  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3249  01072E  0100               	movlb	0	; () banked
  3250  010730  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3251  010732  0E00               	movlw	0
  3252  010734  0102               	movlb	2	; () banked
  3253  010736  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3254  010738  0100               	movlb	0	; () banked
  3255  01073A  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3256  01073C  0E00               	movlw	0
  3257  01073E  0100               	movlb	0	; () banked
  3258  010740  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3259  010742  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3260  010746  EC4C  F08C         	call	_Word_SetPair	;wreg free
  3261                           
  3262                           ;Port.c: 561: Word_SetPair(&pInput->mType, 1, (UINT8)pType);
  3263  01074A  0E08               	movlw	8
  3264  01074C  0102               	movlb	2	; () banked
  3265  01074E  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3266  010750  0100               	movlb	0	; () banked
  3267  010752  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3268  010754  0E00               	movlw	0
  3269  010756  0102               	movlb	2	; () banked
  3270  010758  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3271  01075A  0100               	movlb	0	; () banked
  3272  01075C  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3273  01075E  0E01               	movlw	1
  3274  010760  0100               	movlb	0	; () banked
  3275  010762  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3276  010764  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3277  010768  EC4C  F08C         	call	_Word_SetPair	;wreg free
  3278                           
  3279                           ;Port.c: 562: Word_SetPair(&pInput->mType, 2, (UINT8)pType);
  3280  01076C  0E08               	movlw	8
  3281  01076E  0102               	movlb	2	; () banked
  3282  010770  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3283  010772  0100               	movlb	0	; () banked
  3284  010774  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3285  010776  0E00               	movlw	0
  3286  010778  0102               	movlb	2	; () banked
  3287  01077A  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3288  01077C  0100               	movlb	0	; () banked
  3289  01077E  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3290  010780  0E02               	movlw	2
  3291  010782  0100               	movlb	0	; () banked
  3292  010784  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3293  010786  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3294  01078A  EC4C  F08C         	call	_Word_SetPair	;wreg free
  3295                           
  3296                           ;Port.c: 563: Word_SetPair(&pInput->mType, 3, (UINT8)pType);
  3297  01078E  0E08               	movlw	8
  3298  010790  0102               	movlb	2	; () banked
  3299  010792  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3300  010794  0100               	movlb	0	; () banked
  3301  010796  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3302  010798  0E00               	movlw	0
  3303  01079A  0102               	movlb	2	; () banked
  3304  01079C  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3305  01079E  0100               	movlb	0	; () banked
  3306  0107A0  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3307  0107A2  0E03               	movlw	3
  3308  0107A4  0100               	movlb	0	; () banked
  3309  0107A6  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3310  0107A8  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3311  0107AC  EC4C  F08C         	call	_Word_SetPair	;wreg free
  3312                           
  3313                           ;Port.c: 564: Word_SetPair(&pInput->mType, 4, (UINT8)pType);
  3314  0107B0  0E08               	movlw	8
  3315  0107B2  0102               	movlb	2	; () banked
  3316  0107B4  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3317  0107B6  0100               	movlb	0	; () banked
  3318  0107B8  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3319  0107BA  0E00               	movlw	0
  3320  0107BC  0102               	movlb	2	; () banked
  3321  0107BE  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3322  0107C0  0100               	movlb	0	; () banked
  3323  0107C2  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3324  0107C4  0E04               	movlw	4
  3325  0107C6  0100               	movlb	0	; () banked
  3326  0107C8  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3327  0107CA  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3328  0107CE  EC4C  F08C         	call	_Word_SetPair	;wreg free
  3329                           
  3330                           ;Port.c: 565: Word_SetPair(&pInput->mType, 5, (UINT8)pType);
  3331  0107D2  0E08               	movlw	8
  3332  0107D4  0102               	movlb	2	; () banked
  3333  0107D6  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3334  0107D8  0100               	movlb	0	; () banked
  3335  0107DA  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3336  0107DC  0E00               	movlw	0
  3337  0107DE  0102               	movlb	2	; () banked
  3338  0107E0  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3339  0107E2  0100               	movlb	0	; () banked
  3340  0107E4  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3341  0107E6  0E05               	movlw	5
  3342  0107E8  0100               	movlb	0	; () banked
  3343  0107EA  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3344  0107EC  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3345  0107F0  EC4C  F08C         	call	_Word_SetPair	;wreg free
  3346                           
  3347                           ;Port.c: 566: Word_SetPair(&pInput->mType, 6, (UINT8)pType);
  3348  0107F4  0E08               	movlw	8
  3349  0107F6  0102               	movlb	2	; () banked
  3350  0107F8  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3351  0107FA  0100               	movlb	0	; () banked
  3352  0107FC  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3353  0107FE  0E00               	movlw	0
  3354  010800  0102               	movlb	2	; () banked
  3355  010802  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3356  010804  0100               	movlb	0	; () banked
  3357  010806  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3358  010808  0E06               	movlw	6
  3359  01080A  0100               	movlb	0	; () banked
  3360  01080C  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3361  01080E  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3362  010812  EC4C  F08C         	call	_Word_SetPair	;wreg free
  3363                           
  3364                           ;Port.c: 567: Word_SetPair(&pInput->mType, 7, (UINT8)pType);
  3365  010816  0E08               	movlw	8
  3366  010818  0102               	movlb	2	; () banked
  3367  01081A  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3368  01081C  0100               	movlb	0	; () banked
  3369  01081E  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3370  010820  0E00               	movlw	0
  3371  010822  0102               	movlb	2	; () banked
  3372  010824  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3373  010826  0100               	movlb	0	; () banked
  3374  010828  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3375  01082A  0E07               	movlw	7
  3376  01082C  0100               	movlb	0	; () banked
  3377  01082E  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3378  010830  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3379  010834  EC4C  F08C         	call	_Word_SetPair	;wreg free
  3380  010838  0012               	return	
  3381  01083A                     __end_of_Port_SetType:
  3382                           	opt stack 0
  3383                           tblptru	equ	0xFF8
  3384                           tblptrh	equ	0xFF7
  3385                           tblptrl	equ	0xFF6
  3386                           tablat	equ	0xFF5
  3387                           prodl	equ	0xFF3
  3388                           postinc0	equ	0xFEE
  3389                           wreg	equ	0xFE8
  3390                           postdec1	equ	0xFE5
  3391                           fsr1h	equ	0xFE2
  3392                           fsr1l	equ	0xFE1
  3393                           indf2	equ	0xFDF
  3394                           postinc2	equ	0xFDE
  3395                           postdec2	equ	0xFDD
  3396                           fsr2h	equ	0xFDA
  3397                           fsr2l	equ	0xFD9
  3398                           status	equ	0xFD8
  3399                           
  3400 ;; *************** function _Port_CheckPortType *****************
  3401 ;; Defined at:
  3402 ;;		line 138 in file "Library/Port.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;  pInput          2    3[BANK2 ] const PTR struct Port
  3405 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  3406 ;;		 -> PortD(10), PortC(10), PortF(10), 
  3407 ;;  pDrive          1    5[BANK2 ] enum E6469
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  Output          1   47[BANK0 ] enum E6475
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      enum E6475
  3412 ;; Registers used:
  3413 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3419 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Totals:         0       1       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;Total ram usage:        4 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:   13
  3426 ;; This function calls:
  3427 ;;		_Port_CheckQuadType
  3428 ;; This function is called by:
  3429 ;;		_Port_SetType
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text7
  3434  011850                     __ptext7:
  3435                           	opt stack 0
  3436  011850                     _Port_CheckPortType:
  3437                           	opt stack 15
  3438                           
  3439                           ;Port.c: 140: ePinError Output = ePinErrorState;
  3440                           
  3441                           ;incstack = 0
  3442  011850  0E05               	movlw	5
  3443  011852  0100               	movlb	0	; () banked
  3444  011854  6FF7               	movwf	Port_CheckPortType@Output& (0+255),b
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;Port.c: 143: if ((Output = Port_CheckQuadType(pInput, eP0_3, pDrive)) == ePinErrorNone)
  3448  011856  C203  F1FA         	movff	Port_CheckPortType@pInput,Port_CheckQuadType@pInput
  3449  01185A  C204  F1FB         	movff	Port_CheckPortType@pInput+1,Port_CheckQuadType@pInput+1
  3450  01185E  0E00               	movlw	0
  3451  011860  0101               	movlb	1	; () banked
  3452  011862  6FFC               	movwf	Port_CheckQuadType@pQuad& (0+255),b
  3453  011864  C205  F1FD         	movff	Port_CheckPortType@pDrive,Port_CheckQuadType@pDrive
  3454  011868  EC84  F08B         	call	_Port_CheckQuadType	;wreg free
  3455  01186C  0100               	movlb	0	; () banked
  3456  01186E  6FF7               	movwf	Port_CheckPortType@Output& (0+255),b
  3457  011870  0100               	movlb	0	; () banked
  3458  011872  51F7               	movf	Port_CheckPortType@Output& (0+255),w,b
  3459  011874  A4D8               	btfss	status,2,c
  3460  011876  D00D               	goto	l9117
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;Port.c: 144: Output = Port_CheckQuadType(pInput, eP4_7, pDrive);
  3464  011878  C203  F1FA         	movff	Port_CheckPortType@pInput,Port_CheckQuadType@pInput
  3465  01187C  C204  F1FB         	movff	Port_CheckPortType@pInput+1,Port_CheckQuadType@pInput+1
  3466  011880  0E01               	movlw	1
  3467  011882  0101               	movlb	1	; () banked
  3468  011884  6FFC               	movwf	Port_CheckQuadType@pQuad& (0+255),b
  3469  011886  C205  F1FD         	movff	Port_CheckPortType@pDrive,Port_CheckQuadType@pDrive
  3470  01188A  EC84  F08B         	call	_Port_CheckQuadType	;wreg free
  3471  01188E  0100               	movlb	0	; () banked
  3472  011890  6FF7               	movwf	Port_CheckPortType@Output& (0+255),b
  3473  011892                     l9117:
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;Port.c: 146: return Output;
  3477  011892  0100               	movlb	0	; () banked
  3478  011894  51F7               	movf	Port_CheckPortType@Output& (0+255),w,b
  3479  011896  0012               	return	
  3480  011898                     __end_of_Port_CheckPortType:
  3481                           	opt stack 0
  3482                           tblptru	equ	0xFF8
  3483                           tblptrh	equ	0xFF7
  3484                           tblptrl	equ	0xFF6
  3485                           tablat	equ	0xFF5
  3486                           prodl	equ	0xFF3
  3487                           postinc0	equ	0xFEE
  3488                           wreg	equ	0xFE8
  3489                           postdec1	equ	0xFE5
  3490                           fsr1h	equ	0xFE2
  3491                           fsr1l	equ	0xFE1
  3492                           indf2	equ	0xFDF
  3493                           postinc2	equ	0xFDE
  3494                           postdec2	equ	0xFDD
  3495                           fsr2h	equ	0xFDA
  3496                           fsr2l	equ	0xFD9
  3497                           status	equ	0xFD8
  3498                           
  3499 ;; *************** function _Port_CheckQuadType *****************
  3500 ;; Defined at:
  3501 ;;		line 126 in file "Library/Port.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  pInput          2    0[BANK1 ] const PTR struct Port
  3504 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  3505 ;;		 -> PortD(10), PortC(10), PortF(10), 
  3506 ;;  pQuad           1    2[BANK1 ] enum E6776
  3507 ;;  pDrive          1    3[BANK1 ] enum E6469
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  Output          1    2[BANK2 ] enum E6475
  3510 ;;  Pair2           1    1[BANK2 ] enum E6760
  3511 ;;  Pair1           1    0[BANK2 ] enum E6760
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      enum E6475
  3514 ;; Registers used:
  3515 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3521 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Totals:         0       0       4       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;Total ram usage:        7 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:   12
  3528 ;; This function calls:
  3529 ;;		_Port_CheckPairType
  3530 ;; This function is called by:
  3531 ;;		_Port_CheckPortType
  3532 ;;		_Port_SetQuadType
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text8
  3537  011708                     __ptext8:
  3538                           	opt stack 0
  3539  011708                     _Port_CheckQuadType:
  3540                           	opt stack 15
  3541                           
  3542                           ;Port.c: 128: ePinError Output = ePinErrorState;
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;incstack = 0
  3546  011708  0E05               	movlw	5
  3547  01170A  0102               	movlb	2	; () banked
  3548  01170C  6F02               	movwf	Port_CheckQuadType@Output& (0+255),b
  3549                           
  3550                           ; BSR set to: 2
  3551                           ;Port.c: 129: ePair Pair1 = (ePair)((int)pQuad * 2);
  3552  01170E  0101               	movlb	1	; () banked
  3553  011710  51FC               	movf	Port_CheckQuadType@pQuad& (0+255),w,b
  3554  011712  0D02               	mullw	2
  3555  011714  CFF3 F200          	movff	prodl,Port_CheckQuadType@Pair1
  3556                           
  3557                           ; BSR set to: 1
  3558                           ;Port.c: 130: ePair Pair2 = (ePair)((int)pQuad * 2 + 1);
  3559  011718  0101               	movlb	1	; () banked
  3560  01171A  51FC               	movf	Port_CheckQuadType@pQuad& (0+255),w,b
  3561  01171C  0D02               	mullw	2
  3562  01171E  28F3               	incf	prodl,w,c
  3563  011720  0102               	movlb	2	; () banked
  3564  011722  6F01               	movwf	Port_CheckQuadType@Pair2& (0+255),b
  3565                           
  3566                           ; BSR set to: 2
  3567                           ;Port.c: 133: if ((Output = Port_CheckPairType(pInput, Pair1, pDrive)) == ePinErrorNone)
  3568  011724  C1FA  F0EE         	movff	Port_CheckQuadType@pInput,Port_CheckPairType@pInput
  3569  011728  C1FB  F0EF         	movff	Port_CheckQuadType@pInput+1,Port_CheckPairType@pInput+1
  3570  01172C  C200  F0F0         	movff	Port_CheckQuadType@Pair1,Port_CheckPairType@pPair
  3571  011730  C1FD  F0F1         	movff	Port_CheckQuadType@pDrive,Port_CheckPairType@pDrive
  3572  011734  ECEC  F08A         	call	_Port_CheckPairType	;wreg free
  3573  011738  0102               	movlb	2	; () banked
  3574  01173A  6F02               	movwf	Port_CheckQuadType@Output& (0+255),b
  3575  01173C  0102               	movlb	2	; () banked
  3576  01173E  5102               	movf	Port_CheckQuadType@Output& (0+255),w,b
  3577  011740  A4D8               	btfss	status,2,c
  3578  011742  D00C               	goto	l9071
  3579                           
  3580                           ; BSR set to: 2
  3581                           ;Port.c: 134: Output = Port_CheckPairType(pInput, Pair2, pDrive);
  3582  011744  C1FA  F0EE         	movff	Port_CheckQuadType@pInput,Port_CheckPairType@pInput
  3583  011748  C1FB  F0EF         	movff	Port_CheckQuadType@pInput+1,Port_CheckPairType@pInput+1
  3584  01174C  C201  F0F0         	movff	Port_CheckQuadType@Pair2,Port_CheckPairType@pPair
  3585  011750  C1FD  F0F1         	movff	Port_CheckQuadType@pDrive,Port_CheckPairType@pDrive
  3586  011754  ECEC  F08A         	call	_Port_CheckPairType	;wreg free
  3587  011758  0102               	movlb	2	; () banked
  3588  01175A  6F02               	movwf	Port_CheckQuadType@Output& (0+255),b
  3589  01175C                     l9071:
  3590                           
  3591                           ; BSR set to: 2
  3592                           ;Port.c: 136: return Output;
  3593  01175C  0102               	movlb	2	; () banked
  3594  01175E  5102               	movf	Port_CheckQuadType@Output& (0+255),w,b
  3595  011760  0012               	return	
  3596  011762                     __end_of_Port_CheckQuadType:
  3597                           	opt stack 0
  3598                           tblptru	equ	0xFF8
  3599                           tblptrh	equ	0xFF7
  3600                           tblptrl	equ	0xFF6
  3601                           tablat	equ	0xFF5
  3602                           prodl	equ	0xFF3
  3603                           postinc0	equ	0xFEE
  3604                           wreg	equ	0xFE8
  3605                           postdec1	equ	0xFE5
  3606                           fsr1h	equ	0xFE2
  3607                           fsr1l	equ	0xFE1
  3608                           indf2	equ	0xFDF
  3609                           postinc2	equ	0xFDE
  3610                           postdec2	equ	0xFDD
  3611                           fsr2h	equ	0xFDA
  3612                           fsr2l	equ	0xFD9
  3613                           status	equ	0xFD8
  3614                           
  3615 ;; *************** function _Port_CheckPairType *****************
  3616 ;; Defined at:
  3617 ;;		line 112 in file "Library/Port.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  pInput          2   38[BANK0 ] const PTR struct Port
  3620 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  3621 ;;		 -> PortD(10), PortC(10), PortF(10), 
  3622 ;;  pPair           1   40[BANK0 ] enum E6760
  3623 ;;  pDrive          1   41[BANK0 ] enum E6469
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;  Props           2   45[BANK0 ] PTR struct PortProperty
  3626 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  3627 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
  3628 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
  3629 ;;		 -> PortC(10), PortF(10), NULL(0), 
  3630 ;;  Output          1   44[BANK0 ] enum E6475
  3631 ;;  Pin2            1   43[BANK0 ] enum E6750
  3632 ;;  Pin1            1   42[BANK0 ] enum E6750
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      enum E6475
  3635 ;; Registers used:
  3636 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3642 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;Total ram usage:        9 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:   11
  3649 ;; This function calls:
  3650 ;;		_PortProperty_Valid
  3651 ;; This function is called by:
  3652 ;;		_Port_CheckQuadType
  3653 ;;		_Port_SetPairType
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text9
  3658  0115D8                     __ptext9:
  3659                           	opt stack 0
  3660  0115D8                     _Port_CheckPairType:
  3661                           	opt stack 15
  3662                           
  3663                           ;Port.c: 114: ePinError Output = ePinErrorState;
  3664                           
  3665                           ; BSR set to: 2
  3666                           ;incstack = 0
  3667  0115D8  0E05               	movlw	5
  3668  0115DA  0100               	movlb	0	; () banked
  3669  0115DC  6FF4               	movwf	Port_CheckPairType@Output& (0+255),b
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;Port.c: 116: PortPropertyPtr Props = (PortPropertyPtr)&(pInput->mProperties->mWord);
  3673  0115DE  C0EE  FFD9         	movff	Port_CheckPairType@pInput,fsr2l
  3674  0115E2  C0EF  FFDA         	movff	Port_CheckPairType@pInput+1,fsr2h
  3675  0115E6  CFDE F0F5          	movff	postinc2,Port_CheckPairType@Props
  3676  0115EA  CFDD F0F6          	movff	postdec2,Port_CheckPairType@Props+1
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;Port.c: 117: ePin Pin1 = (ePin)((int)pPair * 2);
  3680  0115EE  0100               	movlb	0	; () banked
  3681  0115F0  51F0               	movf	Port_CheckPairType@pPair& (0+255),w,b
  3682  0115F2  0D02               	mullw	2
  3683  0115F4  CFF3 F0F2          	movff	prodl,Port_CheckPairType@Pin1
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;Port.c: 118: ePin Pin2 = (ePin)((int)pPair * 2 + 1);
  3687  0115F8  0100               	movlb	0	; () banked
  3688  0115FA  51F0               	movf	Port_CheckPairType@pPair& (0+255),w,b
  3689  0115FC  0D02               	mullw	2
  3690  0115FE  28F3               	incf	prodl,w,c
  3691  011600  0100               	movlb	0	; () banked
  3692  011602  6FF3               	movwf	Port_CheckPairType@Pin2& (0+255),b
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;Port.c: 121: if ((Output = PortProperty_Valid(Props, pDrive, Pin1)) == ePinErrorNone)
  3696  011604  C0F5  F0D7         	movff	Port_CheckPairType@Props,PortProperty_Valid@pInput
  3697  011608  C0F6  F0D8         	movff	Port_CheckPairType@Props+1,PortProperty_Valid@pInput+1
  3698  01160C  C0F1  F0D9         	movff	Port_CheckPairType@pDrive,PortProperty_Valid@pPinDrive
  3699  011610  C0F2  F0DA         	movff	Port_CheckPairType@Pin1,PortProperty_Valid@pPin
  3700  011614  EC3E  F08A         	call	_PortProperty_Valid	;wreg free
  3701  011618  0100               	movlb	0	; () banked
  3702  01161A  6FF4               	movwf	Port_CheckPairType@Output& (0+255),b
  3703  01161C  0100               	movlb	0	; () banked
  3704  01161E  51F4               	movf	Port_CheckPairType@Output& (0+255),w,b
  3705  011620  A4D8               	btfss	status,2,c
  3706  011622  D00C               	goto	l9031
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;Port.c: 122: Output = PortProperty_Valid(Props, pDrive, Pin2);
  3710  011624  C0F5  F0D7         	movff	Port_CheckPairType@Props,PortProperty_Valid@pInput
  3711  011628  C0F6  F0D8         	movff	Port_CheckPairType@Props+1,PortProperty_Valid@pInput+1
  3712  01162C  C0F1  F0D9         	movff	Port_CheckPairType@pDrive,PortProperty_Valid@pPinDrive
  3713  011630  C0F3  F0DA         	movff	Port_CheckPairType@Pin2,PortProperty_Valid@pPin
  3714  011634  EC3E  F08A         	call	_PortProperty_Valid	;wreg free
  3715  011638  0100               	movlb	0	; () banked
  3716  01163A  6FF4               	movwf	Port_CheckPairType@Output& (0+255),b
  3717  01163C                     l9031:
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;Port.c: 124: return Output;
  3721  01163C  0100               	movlb	0	; () banked
  3722  01163E  51F4               	movf	Port_CheckPairType@Output& (0+255),w,b
  3723  011640  0012               	return	
  3724  011642                     __end_of_Port_CheckPairType:
  3725                           	opt stack 0
  3726                           tblptru	equ	0xFF8
  3727                           tblptrh	equ	0xFF7
  3728                           tblptrl	equ	0xFF6
  3729                           tablat	equ	0xFF5
  3730                           prodl	equ	0xFF3
  3731                           postinc0	equ	0xFEE
  3732                           wreg	equ	0xFE8
  3733                           postdec1	equ	0xFE5
  3734                           fsr1h	equ	0xFE2
  3735                           fsr1l	equ	0xFE1
  3736                           indf2	equ	0xFDF
  3737                           postinc2	equ	0xFDE
  3738                           postdec2	equ	0xFDD
  3739                           fsr2h	equ	0xFDA
  3740                           fsr2l	equ	0xFD9
  3741                           status	equ	0xFD8
  3742                           
  3743 ;; *************** function _Port_Set *****************
  3744 ;; Defined at:
  3745 ;;		line 570 in file "Library/Port.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;  pInput          2   15[BANK0 ] const PTR struct Port
  3748 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  3749 ;;		 -> PortD(10), PortC(10), PortF(10), 
  3750 ;;  pValue          1   17[BANK0 ] unsigned char 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  TypeActual      2   36[BANK0 ] unsigned short 
  3753 ;;  TypeRequired    2   34[BANK0 ] unsigned short 
  3754 ;;  Type            1   38[BANK0 ] enum E6795
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3764 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;Total ram usage:       24 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:   10
  3771 ;; This function calls:
  3772 ;;		_Byte_SetByte
  3773 ;;		_Word_GetPair
  3774 ;; This function is called by:
  3775 ;;		_Port_Init
  3776 ;;		_Port_Toggle
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text10
  3781  010000                     __ptext10:
  3782                           	opt stack 0
  3783  010000                     _Port_Set:
  3784                           	opt stack 18
  3785                           
  3786                           ;Port.c: 572: ePinType Type = (ePinType)Word_GetPair(&pInput->mType, 0);
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;incstack = 0
  3790  010000  0E08               	movlw	8
  3791  010002  0100               	movlb	0	; () banked
  3792  010004  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  3793  010006  0100               	movlb	0	; () banked
  3794  010008  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  3795  01000A  0E00               	movlw	0
  3796  01000C  0100               	movlb	0	; () banked
  3797  01000E  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  3798  010010  0100               	movlb	0	; () banked
  3799  010012  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  3800  010014  0E00               	movlw	0
  3801  010016  0100               	movlb	0	; () banked
  3802  010018  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  3803  01001A  ECB0  F08C         	call	_Word_GetPair	;wreg free
  3804  01001E  0100               	movlb	0	; () banked
  3805  010020  6FEE               	movwf	Port_Set@Type& (0+255),b
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;Port.c: 573: UINT16 TypeRequired = Type | (Type << 2) | (Type << 4) | (Type << 6) | (Ty
      +                          pe << 8) | (Type << 10) | (Type << 12) | (Type << 14);
  3809  010022  0100               	movlb	0	; () banked
  3810  010024  51EE               	movf	Port_Set@Type& (0+255),w,b
  3811  010026  0100               	movlb	0	; () banked
  3812  010028  6FDA               	movwf	??_Port_Set& (0+255),b
  3813  01002A  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  3814  01002C  0E0E               	movlw	14
  3815  01002E                     u5835:
  3816  01002E  90D8               	bcf	status,0,c
  3817  010030  0100               	movlb	0	; () banked
  3818  010032  37DA               	rlcf	??_Port_Set& (0+255),f,b
  3819  010034  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  3820  010036  2EE8               	decfsz	wreg,f,c
  3821  010038  D7FA               	goto	u5835
  3822  01003A  0100               	movlb	0	; () banked
  3823  01003C  51EE               	movf	Port_Set@Type& (0+255),w,b
  3824  01003E  0100               	movlb	0	; () banked
  3825  010040  6FDC               	movwf	(??_Port_Set+2)& (0+255),b
  3826  010042  6BDD               	clrf	(??_Port_Set+3)& (0+255),b
  3827  010044  0E0C               	movlw	12
  3828  010046                     u5845:
  3829  010046  90D8               	bcf	status,0,c
  3830  010048  0100               	movlb	0	; () banked
  3831  01004A  37DC               	rlcf	(??_Port_Set+2)& (0+255),f,b
  3832  01004C  37DD               	rlcf	(??_Port_Set+3)& (0+255),f,b
  3833  01004E  2EE8               	decfsz	wreg,f,c
  3834  010050  D7FA               	goto	u5845
  3835  010052  0100               	movlb	0	; () banked
  3836  010054  51EE               	movf	Port_Set@Type& (0+255),w,b
  3837  010056  0100               	movlb	0	; () banked
  3838  010058  6FDE               	movwf	(??_Port_Set+4)& (0+255),b
  3839  01005A  6BDF               	clrf	(??_Port_Set+5)& (0+255),b
  3840  01005C  0E0A               	movlw	10
  3841  01005E                     u5855:
  3842  01005E  90D8               	bcf	status,0,c
  3843  010060  0100               	movlb	0	; () banked
  3844  010062  37DE               	rlcf	(??_Port_Set+4)& (0+255),f,b
  3845  010064  37DF               	rlcf	(??_Port_Set+5)& (0+255),f,b
  3846  010066  2EE8               	decfsz	wreg,f,c
  3847  010068  D7FA               	goto	u5855
  3848  01006A  0100               	movlb	0	; () banked
  3849  01006C  51EE               	movf	Port_Set@Type& (0+255),w,b
  3850  01006E  0100               	movlb	0	; () banked
  3851  010070  6FE1               	movwf	(??_Port_Set+7)& (0+255),b
  3852  010072  6BE0               	clrf	(??_Port_Set+6)& (0+255),b
  3853  010074  0100               	movlb	0	; () banked
  3854  010076  51EE               	movf	Port_Set@Type& (0+255),w,b
  3855  010078  0100               	movlb	0	; () banked
  3856  01007A  6FE2               	movwf	(??_Port_Set+8)& (0+255),b
  3857  01007C  6BE3               	clrf	(??_Port_Set+9)& (0+255),b
  3858  01007E  0E06               	movlw	6
  3859  010080                     u5865:
  3860  010080  90D8               	bcf	status,0,c
  3861  010082  0100               	movlb	0	; () banked
  3862  010084  37E2               	rlcf	(??_Port_Set+8)& (0+255),f,b
  3863  010086  37E3               	rlcf	(??_Port_Set+9)& (0+255),f,b
  3864  010088  2EE8               	decfsz	wreg,f,c
  3865  01008A  D7FA               	goto	u5865
  3866  01008C  0100               	movlb	0	; () banked
  3867  01008E  51EE               	movf	Port_Set@Type& (0+255),w,b
  3868  010090  0100               	movlb	0	; () banked
  3869  010092  6FE4               	movwf	(??_Port_Set+10)& (0+255),b
  3870  010094  6BE5               	clrf	(??_Port_Set+11)& (0+255),b
  3871  010096  0100               	movlb	0	; () banked
  3872  010098  3BE4               	swapf	(??_Port_Set+10)& (0+255),f,b
  3873  01009A  3BE5               	swapf	(??_Port_Set+11)& (0+255),f,b
  3874  01009C  0EF0               	movlw	240
  3875  01009E  17E5               	andwf	(??_Port_Set+11)& (0+255),f,b
  3876  0100A0  51E4               	movf	(??_Port_Set+10)& (0+255),w,b
  3877  0100A2  0B0F               	andlw	15
  3878  0100A4  13E5               	iorwf	(??_Port_Set+11)& (0+255),f,b
  3879  0100A6  0EF0               	movlw	240
  3880  0100A8  17E4               	andwf	(??_Port_Set+10)& (0+255),f,b
  3881  0100AA  0100               	movlb	0	; () banked
  3882  0100AC  51EE               	movf	Port_Set@Type& (0+255),w,b
  3883  0100AE  0100               	movlb	0	; () banked
  3884  0100B0  6FE6               	movwf	(??_Port_Set+12)& (0+255),b
  3885  0100B2  6BE7               	clrf	(??_Port_Set+13)& (0+255),b
  3886  0100B4  0100               	movlb	0	; () banked
  3887  0100B6  90D8               	bcf	status,0,c
  3888  0100B8  37E6               	rlcf	(??_Port_Set+12)& (0+255),f,b
  3889  0100BA  37E7               	rlcf	(??_Port_Set+13)& (0+255),f,b
  3890  0100BC  0100               	movlb	0	; () banked
  3891  0100BE  90D8               	bcf	status,0,c
  3892  0100C0  37E6               	rlcf	(??_Port_Set+12)& (0+255),f,b
  3893  0100C2  37E7               	rlcf	(??_Port_Set+13)& (0+255),f,b
  3894  0100C4  0100               	movlb	0	; () banked
  3895  0100C6  51EE               	movf	Port_Set@Type& (0+255),w,b
  3896  0100C8  0100               	movlb	0	; () banked
  3897  0100CA  6FE8               	movwf	(??_Port_Set+14)& (0+255),b
  3898  0100CC  6BE9               	clrf	(??_Port_Set+15)& (0+255),b
  3899  0100CE  0100               	movlb	0	; () banked
  3900  0100D0  51E6               	movf	(??_Port_Set+12)& (0+255),w,b
  3901  0100D2  0100               	movlb	0	; () banked
  3902  0100D4  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  3903  0100D6  0100               	movlb	0	; () banked
  3904  0100D8  51E7               	movf	(??_Port_Set+13)& (0+255),w,b
  3905  0100DA  0100               	movlb	0	; () banked
  3906  0100DC  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  3907  0100DE  0100               	movlb	0	; () banked
  3908  0100E0  51E4               	movf	(??_Port_Set+10)& (0+255),w,b
  3909  0100E2  0100               	movlb	0	; () banked
  3910  0100E4  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  3911  0100E6  0100               	movlb	0	; () banked
  3912  0100E8  51E5               	movf	(??_Port_Set+11)& (0+255),w,b
  3913  0100EA  0100               	movlb	0	; () banked
  3914  0100EC  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  3915  0100EE  0100               	movlb	0	; () banked
  3916  0100F0  51E2               	movf	(??_Port_Set+8)& (0+255),w,b
  3917  0100F2  0100               	movlb	0	; () banked
  3918  0100F4  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  3919  0100F6  0100               	movlb	0	; () banked
  3920  0100F8  51E3               	movf	(??_Port_Set+9)& (0+255),w,b
  3921  0100FA  0100               	movlb	0	; () banked
  3922  0100FC  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  3923  0100FE  0100               	movlb	0	; () banked
  3924  010100  51E0               	movf	(??_Port_Set+6)& (0+255),w,b
  3925  010102  0100               	movlb	0	; () banked
  3926  010104  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  3927  010106  0100               	movlb	0	; () banked
  3928  010108  51E1               	movf	(??_Port_Set+7)& (0+255),w,b
  3929  01010A  0100               	movlb	0	; () banked
  3930  01010C  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  3931  01010E  0100               	movlb	0	; () banked
  3932  010110  51DE               	movf	(??_Port_Set+4)& (0+255),w,b
  3933  010112  0100               	movlb	0	; () banked
  3934  010114  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  3935  010116  0100               	movlb	0	; () banked
  3936  010118  51DF               	movf	(??_Port_Set+5)& (0+255),w,b
  3937  01011A  0100               	movlb	0	; () banked
  3938  01011C  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  3939  01011E  0100               	movlb	0	; () banked
  3940  010120  51DC               	movf	(??_Port_Set+2)& (0+255),w,b
  3941  010122  0100               	movlb	0	; () banked
  3942  010124  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  3943  010126  0100               	movlb	0	; () banked
  3944  010128  51DD               	movf	(??_Port_Set+3)& (0+255),w,b
  3945  01012A  0100               	movlb	0	; () banked
  3946  01012C  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  3947  01012E  0100               	movlb	0	; () banked
  3948  010130  51DA               	movf	??_Port_Set& (0+255),w,b
  3949  010132  0100               	movlb	0	; () banked
  3950  010134  11E8               	iorwf	(??_Port_Set+14)& (0+255),w,b
  3951  010136  0100               	movlb	0	; () banked
  3952  010138  6FEA               	movwf	Port_Set@TypeRequired& (0+255),b
  3953  01013A  0100               	movlb	0	; () banked
  3954  01013C  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  3955  01013E  0100               	movlb	0	; () banked
  3956  010140  11E9               	iorwf	(??_Port_Set+15)& (0+255),w,b
  3957  010142  0100               	movlb	0	; () banked
  3958  010144  6FEB               	movwf	(Port_Set@TypeRequired+1)& (0+255),b
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;Port.c: 574: UINT16 TypeActual = Type;
  3962  010146  C0EE  F0EC         	movff	Port_Set@Type,Port_Set@TypeActual
  3963  01014A  0100               	movlb	0	; () banked
  3964  01014C  6BED               	clrf	(Port_Set@TypeActual+1)& (0+255),b
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;Port.c: 575: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 1) << 2;
  3968  01014E  0E08               	movlw	8
  3969  010150  0100               	movlb	0	; () banked
  3970  010152  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  3971  010154  0100               	movlb	0	; () banked
  3972  010156  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  3973  010158  0E00               	movlw	0
  3974  01015A  0100               	movlb	0	; () banked
  3975  01015C  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  3976  01015E  0100               	movlb	0	; () banked
  3977  010160  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  3978  010162  0E01               	movlw	1
  3979  010164  0100               	movlb	0	; () banked
  3980  010166  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  3981  010168  ECB0  F08C         	call	_Word_GetPair	;wreg free
  3982  01016C  0100               	movlb	0	; () banked
  3983  01016E  6FDA               	movwf	??_Port_Set& (0+255),b
  3984  010170  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  3985  010172  0100               	movlb	0	; () banked
  3986  010174  90D8               	bcf	status,0,c
  3987  010176  37DA               	rlcf	??_Port_Set& (0+255),f,b
  3988  010178  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  3989  01017A  0100               	movlb	0	; () banked
  3990  01017C  90D8               	bcf	status,0,c
  3991  01017E  37DA               	rlcf	??_Port_Set& (0+255),f,b
  3992  010180  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  3993  010182  0100               	movlb	0	; () banked
  3994  010184  51DA               	movf	??_Port_Set& (0+255),w,b
  3995  010186  0100               	movlb	0	; () banked
  3996  010188  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  3997  01018A  0100               	movlb	0	; () banked
  3998  01018C  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  3999  01018E  0100               	movlb	0	; () banked
  4000  010190  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;Port.c: 576: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 2) << 4;
  4004  010192  0E08               	movlw	8
  4005  010194  0100               	movlb	0	; () banked
  4006  010196  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4007  010198  0100               	movlb	0	; () banked
  4008  01019A  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4009  01019C  0E00               	movlw	0
  4010  01019E  0100               	movlb	0	; () banked
  4011  0101A0  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4012  0101A2  0100               	movlb	0	; () banked
  4013  0101A4  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4014  0101A6  0E02               	movlw	2
  4015  0101A8  0100               	movlb	0	; () banked
  4016  0101AA  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4017  0101AC  ECB0  F08C         	call	_Word_GetPair	;wreg free
  4018  0101B0  0100               	movlb	0	; () banked
  4019  0101B2  6FDA               	movwf	??_Port_Set& (0+255),b
  4020  0101B4  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4021  0101B6  0100               	movlb	0	; () banked
  4022  0101B8  3BDA               	swapf	??_Port_Set& (0+255),f,b
  4023  0101BA  3BDB               	swapf	(??_Port_Set+1)& (0+255),f,b
  4024  0101BC  0EF0               	movlw	240
  4025  0101BE  17DB               	andwf	(??_Port_Set+1)& (0+255),f,b
  4026  0101C0  51DA               	movf	??_Port_Set& (0+255),w,b
  4027  0101C2  0B0F               	andlw	15
  4028  0101C4  13DB               	iorwf	(??_Port_Set+1)& (0+255),f,b
  4029  0101C6  0EF0               	movlw	240
  4030  0101C8  17DA               	andwf	??_Port_Set& (0+255),f,b
  4031  0101CA  0100               	movlb	0	; () banked
  4032  0101CC  51DA               	movf	??_Port_Set& (0+255),w,b
  4033  0101CE  0100               	movlb	0	; () banked
  4034  0101D0  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4035  0101D2  0100               	movlb	0	; () banked
  4036  0101D4  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4037  0101D6  0100               	movlb	0	; () banked
  4038  0101D8  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;Port.c: 577: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 3) << 6;
  4042  0101DA  0E08               	movlw	8
  4043  0101DC  0100               	movlb	0	; () banked
  4044  0101DE  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4045  0101E0  0100               	movlb	0	; () banked
  4046  0101E2  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4047  0101E4  0E00               	movlw	0
  4048  0101E6  0100               	movlb	0	; () banked
  4049  0101E8  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4050  0101EA  0100               	movlb	0	; () banked
  4051  0101EC  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4052  0101EE  0E03               	movlw	3
  4053  0101F0  0100               	movlb	0	; () banked
  4054  0101F2  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4055  0101F4  ECB0  F08C         	call	_Word_GetPair	;wreg free
  4056  0101F8  0100               	movlb	0	; () banked
  4057  0101FA  6FDA               	movwf	??_Port_Set& (0+255),b
  4058  0101FC  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4059  0101FE  0E06               	movlw	6
  4060  010200                     u5875:
  4061  010200  90D8               	bcf	status,0,c
  4062  010202  0100               	movlb	0	; () banked
  4063  010204  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4064  010206  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4065  010208  2EE8               	decfsz	wreg,f,c
  4066  01020A  D7FA               	goto	u5875
  4067  01020C  0100               	movlb	0	; () banked
  4068  01020E  51DA               	movf	??_Port_Set& (0+255),w,b
  4069  010210  0100               	movlb	0	; () banked
  4070  010212  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4071  010214  0100               	movlb	0	; () banked
  4072  010216  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4073  010218  0100               	movlb	0	; () banked
  4074  01021A  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;Port.c: 578: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 4) << 8;
  4078  01021C  0E08               	movlw	8
  4079  01021E  0100               	movlb	0	; () banked
  4080  010220  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4081  010222  0100               	movlb	0	; () banked
  4082  010224  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4083  010226  0E00               	movlw	0
  4084  010228  0100               	movlb	0	; () banked
  4085  01022A  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4086  01022C  0100               	movlb	0	; () banked
  4087  01022E  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4088  010230  0E04               	movlw	4
  4089  010232  0100               	movlb	0	; () banked
  4090  010234  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4091  010236  ECB0  F08C         	call	_Word_GetPair	;wreg free
  4092  01023A  0100               	movlb	0	; () banked
  4093  01023C  6FDA               	movwf	??_Port_Set& (0+255),b
  4094  01023E  0100               	movlb	0	; () banked
  4095  010240  51DA               	movf	??_Port_Set& (0+255),w,b
  4096  010242  0100               	movlb	0	; () banked
  4097  010244  6FDC               	movwf	(??_Port_Set+2)& (0+255),b
  4098  010246  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4099  010248  0100               	movlb	0	; () banked
  4100  01024A  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4101  01024C  0100               	movlb	0	; () banked
  4102  01024E  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4103  010250  0100               	movlb	0	; () banked
  4104  010252  51DC               	movf	(??_Port_Set+2)& (0+255),w,b
  4105  010254  0100               	movlb	0	; () banked
  4106  010256  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;Port.c: 579: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 5) << 10;
  4110  010258  0E08               	movlw	8
  4111  01025A  0100               	movlb	0	; () banked
  4112  01025C  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4113  01025E  0100               	movlb	0	; () banked
  4114  010260  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4115  010262  0E00               	movlw	0
  4116  010264  0100               	movlb	0	; () banked
  4117  010266  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4118  010268  0100               	movlb	0	; () banked
  4119  01026A  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4120  01026C  0E05               	movlw	5
  4121  01026E  0100               	movlb	0	; () banked
  4122  010270  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4123  010272  ECB0  F08C         	call	_Word_GetPair	;wreg free
  4124  010276  0100               	movlb	0	; () banked
  4125  010278  6FDA               	movwf	??_Port_Set& (0+255),b
  4126  01027A  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4127  01027C  0E0A               	movlw	10
  4128  01027E                     u5885:
  4129  01027E  90D8               	bcf	status,0,c
  4130  010280  0100               	movlb	0	; () banked
  4131  010282  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4132  010284  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4133  010286  2EE8               	decfsz	wreg,f,c
  4134  010288  D7FA               	goto	u5885
  4135  01028A  0100               	movlb	0	; () banked
  4136  01028C  51DA               	movf	??_Port_Set& (0+255),w,b
  4137  01028E  0100               	movlb	0	; () banked
  4138  010290  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4139  010292  0100               	movlb	0	; () banked
  4140  010294  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4141  010296  0100               	movlb	0	; () banked
  4142  010298  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;Port.c: 580: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 6) << 12;
  4146  01029A  0E08               	movlw	8
  4147  01029C  0100               	movlb	0	; () banked
  4148  01029E  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4149  0102A0  0100               	movlb	0	; () banked
  4150  0102A2  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4151  0102A4  0E00               	movlw	0
  4152  0102A6  0100               	movlb	0	; () banked
  4153  0102A8  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4154  0102AA  0100               	movlb	0	; () banked
  4155  0102AC  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4156  0102AE  0E06               	movlw	6
  4157  0102B0  0100               	movlb	0	; () banked
  4158  0102B2  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4159  0102B4  ECB0  F08C         	call	_Word_GetPair	;wreg free
  4160  0102B8  0100               	movlb	0	; () banked
  4161  0102BA  6FDA               	movwf	??_Port_Set& (0+255),b
  4162  0102BC  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4163  0102BE  0E0C               	movlw	12
  4164  0102C0                     u5895:
  4165  0102C0  90D8               	bcf	status,0,c
  4166  0102C2  0100               	movlb	0	; () banked
  4167  0102C4  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4168  0102C6  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4169  0102C8  2EE8               	decfsz	wreg,f,c
  4170  0102CA  D7FA               	goto	u5895
  4171  0102CC  0100               	movlb	0	; () banked
  4172  0102CE  51DA               	movf	??_Port_Set& (0+255),w,b
  4173  0102D0  0100               	movlb	0	; () banked
  4174  0102D2  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4175  0102D4  0100               	movlb	0	; () banked
  4176  0102D6  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4177  0102D8  0100               	movlb	0	; () banked
  4178  0102DA  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;Port.c: 581: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 7) << 14;
  4182  0102DC  0E08               	movlw	8
  4183  0102DE  0100               	movlb	0	; () banked
  4184  0102E0  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4185  0102E2  0100               	movlb	0	; () banked
  4186  0102E4  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4187  0102E6  0E00               	movlw	0
  4188  0102E8  0100               	movlb	0	; () banked
  4189  0102EA  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4190  0102EC  0100               	movlb	0	; () banked
  4191  0102EE  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4192  0102F0  0E07               	movlw	7
  4193  0102F2  0100               	movlb	0	; () banked
  4194  0102F4  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4195  0102F6  ECB0  F08C         	call	_Word_GetPair	;wreg free
  4196  0102FA  0100               	movlb	0	; () banked
  4197  0102FC  6FDA               	movwf	??_Port_Set& (0+255),b
  4198  0102FE  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4199  010300  0E0E               	movlw	14
  4200  010302                     u5905:
  4201  010302  90D8               	bcf	status,0,c
  4202  010304  0100               	movlb	0	; () banked
  4203  010306  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4204  010308  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4205  01030A  2EE8               	decfsz	wreg,f,c
  4206  01030C  D7FA               	goto	u5905
  4207  01030E  0100               	movlb	0	; () banked
  4208  010310  51DA               	movf	??_Port_Set& (0+255),w,b
  4209  010312  0100               	movlb	0	; () banked
  4210  010314  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4211  010316  0100               	movlb	0	; () banked
  4212  010318  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4213  01031A  0100               	movlb	0	; () banked
  4214  01031C  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4215                           
  4216                           ;Port.c: 584: if (TypeRequired == TypeActual)
  4217  01031E  0100               	movlb	0	; () banked
  4218  010320  51EC               	movf	Port_Set@TypeActual& (0+255),w,b
  4219  010322  0100               	movlb	0	; () banked
  4220  010324  19EA               	xorwf	Port_Set@TypeRequired& (0+255),w,b
  4221  010326  E148               	bnz	l528
  4222  010328  0100               	movlb	0	; () banked
  4223  01032A  51ED               	movf	(Port_Set@TypeActual+1)& (0+255),w,b
  4224  01032C  0100               	movlb	0	; () banked
  4225  01032E  19EB               	xorwf	(Port_Set@TypeRequired+1)& (0+255),w,b
  4226  010330  A4D8               	btfss	status,2,c
  4227  010332  0012               	return	
  4228  010334  D032               	goto	l9355
  4229  010336                     l9345:
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;Port.c: 593: Byte_SetByte(pInput->mDirection, pValue);
  4233  010336  0100               	movlb	0	; () banked
  4234  010338  EE20 F002          	lfsr	2,2
  4235  01033C  51D7               	movf	Port_Set@pInput& (0+255),w,b
  4236  01033E  26D9               	addwf	fsr2l,f,c
  4237  010340  51D8               	movf	(Port_Set@pInput+1)& (0+255),w,b
  4238  010342  22DA               	addwfc	fsr2h,f,c
  4239  010344  CFDE F0C8          	movff	postinc2,Byte_SetByte@pInput
  4240  010348  CFDD F0C9          	movff	postdec2,Byte_SetByte@pInput+1
  4241  01034C  C0D9  F0CA         	movff	Port_Set@pValue,Byte_SetByte@pValue
  4242  010350  ECB5  F08D         	call	_Byte_SetByte	;wreg free
  4243                           
  4244                           ;Port.c: 594: break;
  4245  010354  0012               	return	
  4246  010356                     l9347:
  4247                           
  4248                           ;Port.c: 597: pValue = ~pValue;
  4249  010356  0100               	movlb	0	; () banked
  4250  010358  1FD9               	comf	Port_Set@pValue& (0+255),f,b
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;Port.c: 598: Byte_SetByte(pInput->mDirection, pValue);
  4254  01035A  0100               	movlb	0	; () banked
  4255  01035C  EE20 F002          	lfsr	2,2
  4256  010360  51D7               	movf	Port_Set@pInput& (0+255),w,b
  4257  010362  26D9               	addwf	fsr2l,f,c
  4258  010364  51D8               	movf	(Port_Set@pInput+1)& (0+255),w,b
  4259  010366  22DA               	addwfc	fsr2h,f,c
  4260  010368  CFDE F0C8          	movff	postinc2,Byte_SetByte@pInput
  4261  01036C  CFDD F0C9          	movff	postdec2,Byte_SetByte@pInput+1
  4262  010370  C0D9  F0CA         	movff	Port_Set@pValue,Byte_SetByte@pValue
  4263  010374  ECB5  F08D         	call	_Byte_SetByte	;wreg free
  4264                           
  4265                           ;Port.c: 599: break;
  4266  010378  0012               	return	
  4267  01037A                     l9351:
  4268                           
  4269                           ;Port.c: 602: Byte_SetByte(pInput->mOutput, pValue);
  4270  01037A  0100               	movlb	0	; () banked
  4271  01037C  EE20 F004          	lfsr	2,4
  4272  010380  51D7               	movf	Port_Set@pInput& (0+255),w,b
  4273  010382  26D9               	addwf	fsr2l,f,c
  4274  010384  51D8               	movf	(Port_Set@pInput+1)& (0+255),w,b
  4275  010386  22DA               	addwfc	fsr2h,f,c
  4276  010388  CFDE F0C8          	movff	postinc2,Byte_SetByte@pInput
  4277  01038C  CFDD F0C9          	movff	postdec2,Byte_SetByte@pInput+1
  4278  010390  C0D9  F0CA         	movff	Port_Set@pValue,Byte_SetByte@pValue
  4279  010394  ECB5  F08D         	call	_Byte_SetByte	;wreg free
  4280                           
  4281                           ;Port.c: 606: }
  4282                           
  4283                           ;Port.c: 605: break;
  4284                           
  4285                           ;Port.c: 604: default:
  4286                           
  4287                           ;Port.c: 603: break;
  4288  010398  0012               	return	
  4289  01039A                     l9355:
  4290  01039A  0100               	movlb	0	; () banked
  4291  01039C  51EE               	movf	Port_Set@Type& (0+255),w,b
  4292                           
  4293                           ; Switch size 1, requested type "space"
  4294                           ; Number of cases is 4, Range of values is 0 to 3
  4295                           ; switch strategies available:
  4296                           ; Name         Instructions Cycles
  4297                           ; simple_byte           13     7 (average)
  4298                           ;	Chosen strategy is simple_byte
  4299  01039E  0A00               	xorlw	0	; case 0
  4300  0103A0  B4D8               	btfsc	status,2,c
  4301  0103A2  0012               	return	
  4302  0103A4  0A01               	xorlw	1	; case 1
  4303  0103A6  B4D8               	btfsc	status,2,c
  4304  0103A8  D7C6               	goto	l9345
  4305  0103AA  0A03               	xorlw	3	; case 2
  4306  0103AC  B4D8               	btfsc	status,2,c
  4307  0103AE  D7D3               	goto	l9347
  4308  0103B0  0A01               	xorlw	1	; case 3
  4309  0103B2  A4D8               	btfss	status,2,c
  4310                           
  4311                           ; BSR set to: 0
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;Port.c: 607: }
  4315  0103B4  0012               	return	
  4316  0103B6  D7E1               	goto	l9351
  4317  0103B8                     l528:
  4318  0103B8  0012               	return		;funcret
  4319  0103BA                     __end_of_Port_Set:
  4320                           	opt stack 0
  4321                           tblptru	equ	0xFF8
  4322                           tblptrh	equ	0xFF7
  4323                           tblptrl	equ	0xFF6
  4324                           tablat	equ	0xFF5
  4325                           prodl	equ	0xFF3
  4326                           postinc0	equ	0xFEE
  4327                           wreg	equ	0xFE8
  4328                           postdec1	equ	0xFE5
  4329                           fsr1h	equ	0xFE2
  4330                           fsr1l	equ	0xFE1
  4331                           indf2	equ	0xFDF
  4332                           postinc2	equ	0xFDE
  4333                           postdec2	equ	0xFDD
  4334                           fsr2h	equ	0xFDA
  4335                           fsr2l	equ	0xFD9
  4336                           status	equ	0xFD8
  4337                           
  4338 ;; *************** function _Byte_SetByte *****************
  4339 ;; Defined at:
  4340 ;;		line 110 in file "Library/Types.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  pInput          2    0[BANK0 ] PTR struct Byte
  4343 ;;		 -> SSP2CON2(1), SSP1CON2(1), TRISG(1), TRISF(1), 
  4344 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
  4345 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
  4346 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
  4347 ;;		 -> NULL(0), 
  4348 ;;  pValue          1    2[BANK0 ] unsigned char 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      void 
  4353 ;; Registers used:
  4354 ;;		fsr2l, fsr2h
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4360 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;Total ram usage:        3 bytes
  4365 ;; Hardware stack levels used:    1
  4366 ;; Hardware stack levels required when called:    7
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		_Port_Set
  4371 ;;		_I2C_Init
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text11
  4376  011B6A                     __ptext11:
  4377                           	opt stack 0
  4378  011B6A                     _Byte_SetByte:
  4379                           	opt stack 20
  4380                           
  4381                           ;Types.c: 112: pInput->mBits = (pValue & 0xFF);
  4382                           
  4383                           ;incstack = 0
  4384  011B6A  C0C8  FFD9         	movff	Byte_SetByte@pInput,fsr2l
  4385  011B6E  C0C9  FFDA         	movff	Byte_SetByte@pInput+1,fsr2h
  4386  011B72  C0CA  FFDF         	movff	Byte_SetByte@pValue,indf2
  4387  011B76  0012               	return		;funcret
  4388  011B78                     __end_of_Byte_SetByte:
  4389                           	opt stack 0
  4390                           tblptru	equ	0xFF8
  4391                           tblptrh	equ	0xFF7
  4392                           tblptrl	equ	0xFF6
  4393                           tablat	equ	0xFF5
  4394                           prodl	equ	0xFF3
  4395                           postinc0	equ	0xFEE
  4396                           wreg	equ	0xFE8
  4397                           postdec1	equ	0xFE5
  4398                           fsr1h	equ	0xFE2
  4399                           fsr1l	equ	0xFE1
  4400                           indf2	equ	0xFDF
  4401                           postinc2	equ	0xFDE
  4402                           postdec2	equ	0xFDD
  4403                           fsr2h	equ	0xFDA
  4404                           fsr2l	equ	0xFD9
  4405                           status	equ	0xFD8
  4406                           
  4407 ;; *************** function _GetPortTRIS *****************
  4408 ;; Defined at:
  4409 ;;		line 67 in file "Library/Port.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  pInput          1    wreg     enum E6786
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  pInput          1    2[BANK0 ] enum E6786
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  2    0[BANK0 ] PTR struct Byte
  4416 ;; Registers used:
  4417 ;;		wreg, status,2, status,0
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4423 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;Total ram usage:        3 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    7
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_Port_Init
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text12
  4438  01114C                     __ptext12:
  4439                           	opt stack 0
  4440  01114C                     _GetPortTRIS:
  4441                           	opt stack 21
  4442                           
  4443                           ;incstack = 0
  4444                           ;GetPortTRIS@pInput stored from wreg
  4445  01114C  0100               	movlb	0	; () banked
  4446  01114E  6FCA               	movwf	GetPortTRIS@pInput& (0+255),b
  4447                           
  4448                           ;Port.c: 69: switch (pInput)
  4449  011150  D038               	goto	l9297
  4450  011152                     l9263:
  4451                           
  4452                           ;Port.c: 72: return (BytePtr)&TRISA;
  4453  011152  0E92               	movlw	146
  4454  011154  0100               	movlb	0	; () banked
  4455  011156  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4456  011158  0E0F               	movlw	15
  4457  01115A  0100               	movlb	0	; () banked
  4458  01115C  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4459                           
  4460                           ; BSR set to: 0
  4461  01115E  0012               	return	
  4462  011160                     l9267:
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;Port.c: 74: return (BytePtr)&TRISB;
  4466  011160  0E93               	movlw	147
  4467  011162  0100               	movlb	0	; () banked
  4468  011164  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4469  011166  0E0F               	movlw	15
  4470  011168  0100               	movlb	0	; () banked
  4471  01116A  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4472                           
  4473                           ; BSR set to: 0
  4474  01116C  0012               	return	
  4475  01116E                     l9271:
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;Port.c: 76: return (BytePtr)&TRISC;
  4479  01116E  0E94               	movlw	148
  4480  011170  0100               	movlb	0	; () banked
  4481  011172  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4482  011174  0E0F               	movlw	15
  4483  011176  0100               	movlb	0	; () banked
  4484  011178  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4485                           
  4486                           ; BSR set to: 0
  4487  01117A  0012               	return	
  4488  01117C                     l9275:
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;Port.c: 78: return (BytePtr)&TRISD;
  4492  01117C  0E95               	movlw	149
  4493  01117E  0100               	movlb	0	; () banked
  4494  011180  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4495  011182  0E0F               	movlw	15
  4496  011184  0100               	movlb	0	; () banked
  4497  011186  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4498                           
  4499                           ; BSR set to: 0
  4500  011188  0012               	return	
  4501  01118A                     l9279:
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;Port.c: 80: return (BytePtr)&TRISE;
  4505  01118A  0E96               	movlw	150
  4506  01118C  0100               	movlb	0	; () banked
  4507  01118E  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4508  011190  0E0F               	movlw	15
  4509  011192  0100               	movlb	0	; () banked
  4510  011194  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4511                           
  4512                           ; BSR set to: 0
  4513  011196  0012               	return	
  4514  011198                     l9283:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;Port.c: 82: return (BytePtr)&TRISF;
  4518  011198  0E97               	movlw	151
  4519  01119A  0100               	movlb	0	; () banked
  4520  01119C  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4521  01119E  0E0F               	movlw	15
  4522  0111A0  0100               	movlb	0	; () banked
  4523  0111A2  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4524                           
  4525                           ; BSR set to: 0
  4526  0111A4  0012               	return	
  4527  0111A6                     l9287:
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;Port.c: 84: return (BytePtr)&TRISG;
  4531  0111A6  0E98               	movlw	152
  4532  0111A8  0100               	movlb	0	; () banked
  4533  0111AA  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4534  0111AC  0E0F               	movlw	15
  4535  0111AE  0100               	movlb	0	; () banked
  4536  0111B0  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4537                           
  4538                           ; BSR set to: 0
  4539  0111B2  0012               	return	
  4540  0111B4                     l9291:
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;Port.c: 86: return (void*)0;
  4544  0111B4  0E00               	movlw	0
  4545  0111B6  0100               	movlb	0	; () banked
  4546  0111B8  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4547  0111BA  0E00               	movlw	0
  4548  0111BC  0100               	movlb	0	; () banked
  4549  0111BE  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;Port.c: 87: }
  4553                           
  4554                           ; BSR set to: 0
  4555  0111C0  0012               	return	
  4556  0111C2                     l9297:
  4557  0111C2  0100               	movlb	0	; () banked
  4558  0111C4  51CA               	movf	GetPortTRIS@pInput& (0+255),w,b
  4559                           
  4560                           ; Switch size 1, requested type "space"
  4561                           ; Number of cases is 7, Range of values is 0 to 6
  4562                           ; switch strategies available:
  4563                           ; Name         Instructions Cycles
  4564                           ; simple_byte           22    12 (average)
  4565                           ;	Chosen strategy is simple_byte
  4566  0111C6  0A00               	xorlw	0	; case 0
  4567  0111C8  B4D8               	btfsc	status,2,c
  4568  0111CA  D7C3               	goto	l9263
  4569  0111CC  0A01               	xorlw	1	; case 1
  4570  0111CE  B4D8               	btfsc	status,2,c
  4571  0111D0  D7C7               	goto	l9267
  4572  0111D2  0A03               	xorlw	3	; case 2
  4573  0111D4  B4D8               	btfsc	status,2,c
  4574  0111D6  D7CB               	goto	l9271
  4575  0111D8  0A01               	xorlw	1	; case 3
  4576  0111DA  B4D8               	btfsc	status,2,c
  4577  0111DC  D7CF               	goto	l9275
  4578  0111DE  0A07               	xorlw	7	; case 4
  4579  0111E0  B4D8               	btfsc	status,2,c
  4580  0111E2  D7D3               	goto	l9279
  4581  0111E4  0A01               	xorlw	1	; case 5
  4582  0111E6  B4D8               	btfsc	status,2,c
  4583  0111E8  D7D7               	goto	l9283
  4584  0111EA  0A03               	xorlw	3	; case 6
  4585  0111EC  B4D8               	btfsc	status,2,c
  4586  0111EE  D7DB               	goto	l9287
  4587  0111F0  D7E1               	goto	l9291
  4588  0111F2                     __end_of_GetPortTRIS:
  4589                           	opt stack 0
  4590                           tblptru	equ	0xFF8
  4591                           tblptrh	equ	0xFF7
  4592                           tblptrl	equ	0xFF6
  4593                           tablat	equ	0xFF5
  4594                           prodl	equ	0xFF3
  4595                           postinc0	equ	0xFEE
  4596                           wreg	equ	0xFE8
  4597                           postdec1	equ	0xFE5
  4598                           fsr1h	equ	0xFE2
  4599                           fsr1l	equ	0xFE1
  4600                           indf2	equ	0xFDF
  4601                           postinc2	equ	0xFDE
  4602                           postdec2	equ	0xFDD
  4603                           fsr2h	equ	0xFDA
  4604                           fsr2l	equ	0xFD9
  4605                           status	equ	0xFD8
  4606                           
  4607 ;; *************** function _GetPortProperties *****************
  4608 ;; Defined at:
  4609 ;;		line 21 in file "Library/Port.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;  pInput          1    wreg     enum E6786
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;  pInput          1    2[BANK0 ] enum E6786
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  2    0[BANK0 ] PTR struct PortProperty
  4616 ;; Registers used:
  4617 ;;		wreg, status,2, status,0
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4623 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;Total ram usage:        3 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; Hardware stack levels required when called:    7
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_Port_Init
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text13
  4638  0111F2                     __ptext13:
  4639                           	opt stack 0
  4640  0111F2                     _GetPortProperties:
  4641                           	opt stack 21
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;incstack = 0
  4645                           ;GetPortProperties@pInput stored from wreg
  4646  0111F2  0100               	movlb	0	; () banked
  4647  0111F4  6FCA               	movwf	GetPortProperties@pInput& (0+255),b
  4648                           
  4649                           ;Port.c: 23: switch (pInput)
  4650  0111F6  D038               	goto	l9221
  4651  0111F8                     l9187:
  4652                           
  4653                           ;Port.c: 26: return (PortPropertyPtr)&PortA_Property;
  4654  0111F8  0EFD               	movlw	low _PortA_Property
  4655  0111FA  0100               	movlb	0	; () banked
  4656  0111FC  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4657  0111FE  0EFF               	movlw	high _PortA_Property
  4658  011200  0100               	movlb	0	; () banked
  4659  011202  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4660                           
  4661                           ; BSR set to: 0
  4662  011204  0012               	return	
  4663  011206                     l9191:
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;Port.c: 28: return (PortPropertyPtr)&PortB_Property;
  4667  011206  0EFB               	movlw	low _PortB_Property
  4668  011208  0100               	movlb	0	; () banked
  4669  01120A  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4670  01120C  0EFF               	movlw	high _PortB_Property
  4671  01120E  0100               	movlb	0	; () banked
  4672  011210  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4673                           
  4674                           ; BSR set to: 0
  4675  011212  0012               	return	
  4676  011214                     l9195:
  4677                           
  4678                           ; BSR set to: 0
  4679                           ;Port.c: 30: return (PortPropertyPtr)&PortC_Property;
  4680  011214  0EF9               	movlw	low _PortC_Property
  4681  011216  0100               	movlb	0	; () banked
  4682  011218  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4683  01121A  0EFF               	movlw	high _PortC_Property
  4684  01121C  0100               	movlb	0	; () banked
  4685  01121E  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4686                           
  4687                           ; BSR set to: 0
  4688  011220  0012               	return	
  4689  011222                     l9199:
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;Port.c: 32: return (PortPropertyPtr)&PortD_Property;
  4693  011222  0EF7               	movlw	low _PortD_Property
  4694  011224  0100               	movlb	0	; () banked
  4695  011226  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4696  011228  0EFF               	movlw	high _PortD_Property
  4697  01122A  0100               	movlb	0	; () banked
  4698  01122C  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4699                           
  4700                           ; BSR set to: 0
  4701  01122E  0012               	return	
  4702  011230                     l9203:
  4703                           
  4704                           ; BSR set to: 0
  4705                           ;Port.c: 34: return (PortPropertyPtr)&PortE_Property;
  4706  011230  0EF5               	movlw	low _PortE_Property
  4707  011232  0100               	movlb	0	; () banked
  4708  011234  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4709  011236  0EFF               	movlw	high _PortE_Property
  4710  011238  0100               	movlb	0	; () banked
  4711  01123A  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4712                           
  4713                           ; BSR set to: 0
  4714  01123C  0012               	return	
  4715  01123E                     l9207:
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;Port.c: 36: return (PortPropertyPtr)&PortF_Property;
  4719  01123E  0EF3               	movlw	low _PortF_Property
  4720  011240  0100               	movlb	0	; () banked
  4721  011242  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4722  011244  0EFF               	movlw	high _PortF_Property
  4723  011246  0100               	movlb	0	; () banked
  4724  011248  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4725                           
  4726                           ; BSR set to: 0
  4727  01124A  0012               	return	
  4728  01124C                     l9211:
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;Port.c: 38: return (PortPropertyPtr)&PortG_Property;
  4732  01124C  0EF1               	movlw	low _PortG_Property
  4733  01124E  0100               	movlb	0	; () banked
  4734  011250  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4735  011252  0EFF               	movlw	high _PortG_Property
  4736  011254  0100               	movlb	0	; () banked
  4737  011256  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4738                           
  4739                           ; BSR set to: 0
  4740  011258  0012               	return	
  4741  01125A                     l9215:
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;Port.c: 40: return (void*)0;
  4745  01125A  0E00               	movlw	0
  4746  01125C  0100               	movlb	0	; () banked
  4747  01125E  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4748  011260  0E00               	movlw	0
  4749  011262  0100               	movlb	0	; () banked
  4750  011264  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;Port.c: 41: }
  4754                           
  4755                           ; BSR set to: 0
  4756  011266  0012               	return	
  4757  011268                     l9221:
  4758  011268  0100               	movlb	0	; () banked
  4759  01126A  51CA               	movf	GetPortProperties@pInput& (0+255),w,b
  4760                           
  4761                           ; Switch size 1, requested type "space"
  4762                           ; Number of cases is 7, Range of values is 0 to 6
  4763                           ; switch strategies available:
  4764                           ; Name         Instructions Cycles
  4765                           ; simple_byte           22    12 (average)
  4766                           ;	Chosen strategy is simple_byte
  4767  01126C  0A00               	xorlw	0	; case 0
  4768  01126E  B4D8               	btfsc	status,2,c
  4769  011270  D7C3               	goto	l9187
  4770  011272  0A01               	xorlw	1	; case 1
  4771  011274  B4D8               	btfsc	status,2,c
  4772  011276  D7C7               	goto	l9191
  4773  011278  0A03               	xorlw	3	; case 2
  4774  01127A  B4D8               	btfsc	status,2,c
  4775  01127C  D7CB               	goto	l9195
  4776  01127E  0A01               	xorlw	1	; case 3
  4777  011280  B4D8               	btfsc	status,2,c
  4778  011282  D7CF               	goto	l9199
  4779  011284  0A07               	xorlw	7	; case 4
  4780  011286  B4D8               	btfsc	status,2,c
  4781  011288  D7D3               	goto	l9203
  4782  01128A  0A01               	xorlw	1	; case 5
  4783  01128C  B4D8               	btfsc	status,2,c
  4784  01128E  D7D7               	goto	l9207
  4785  011290  0A03               	xorlw	3	; case 6
  4786  011292  B4D8               	btfsc	status,2,c
  4787  011294  D7DB               	goto	l9211
  4788  011296  D7E1               	goto	l9215
  4789  011298                     __end_of_GetPortProperties:
  4790                           	opt stack 0
  4791                           tblptru	equ	0xFF8
  4792                           tblptrh	equ	0xFF7
  4793                           tblptrl	equ	0xFF6
  4794                           tablat	equ	0xFF5
  4795                           prodl	equ	0xFF3
  4796                           postinc0	equ	0xFEE
  4797                           wreg	equ	0xFE8
  4798                           postdec1	equ	0xFE5
  4799                           fsr1h	equ	0xFE2
  4800                           fsr1l	equ	0xFE1
  4801                           indf2	equ	0xFDF
  4802                           postinc2	equ	0xFDE
  4803                           postdec2	equ	0xFDD
  4804                           fsr2h	equ	0xFDA
  4805                           fsr2l	equ	0xFD9
  4806                           status	equ	0xFD8
  4807                           
  4808 ;; *************** function _GetPortPORT *****************
  4809 ;; Defined at:
  4810 ;;		line 44 in file "Library/Port.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  pInput          1    wreg     enum E6786
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  pInput          1    2[BANK0 ] enum E6786
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  2    0[BANK0 ] PTR struct Byte
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4824 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;Total ram usage:        3 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    7
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_Port_Init
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text14
  4839  011298                     __ptext14:
  4840                           	opt stack 0
  4841  011298                     _GetPortPORT:
  4842                           	opt stack 21
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;incstack = 0
  4846                           ;GetPortPORT@pInput stored from wreg
  4847  011298  0100               	movlb	0	; () banked
  4848  01129A  6FCA               	movwf	GetPortPORT@pInput& (0+255),b
  4849                           
  4850                           ;Port.c: 46: switch (pInput)
  4851  01129C  D038               	goto	l9259
  4852  01129E                     l9225:
  4853                           
  4854                           ;Port.c: 49: return (BytePtr)&PORTA;
  4855  01129E  0E80               	movlw	128
  4856  0112A0  0100               	movlb	0	; () banked
  4857  0112A2  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4858  0112A4  0E0F               	movlw	15
  4859  0112A6  0100               	movlb	0	; () banked
  4860  0112A8  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4861                           
  4862                           ; BSR set to: 0
  4863  0112AA  0012               	return	
  4864  0112AC                     l9229:
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;Port.c: 51: return (BytePtr)&PORTB;
  4868  0112AC  0E81               	movlw	129
  4869  0112AE  0100               	movlb	0	; () banked
  4870  0112B0  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4871  0112B2  0E0F               	movlw	15
  4872  0112B4  0100               	movlb	0	; () banked
  4873  0112B6  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4874                           
  4875                           ; BSR set to: 0
  4876  0112B8  0012               	return	
  4877  0112BA                     l9233:
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;Port.c: 53: return (BytePtr)&PORTC;
  4881  0112BA  0E82               	movlw	130
  4882  0112BC  0100               	movlb	0	; () banked
  4883  0112BE  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4884  0112C0  0E0F               	movlw	15
  4885  0112C2  0100               	movlb	0	; () banked
  4886  0112C4  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4887                           
  4888                           ; BSR set to: 0
  4889  0112C6  0012               	return	
  4890  0112C8                     l9237:
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;Port.c: 55: return (BytePtr)&PORTD;
  4894  0112C8  0E83               	movlw	131
  4895  0112CA  0100               	movlb	0	; () banked
  4896  0112CC  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4897  0112CE  0E0F               	movlw	15
  4898  0112D0  0100               	movlb	0	; () banked
  4899  0112D2  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4900                           
  4901                           ; BSR set to: 0
  4902  0112D4  0012               	return	
  4903  0112D6                     l9241:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;Port.c: 57: return (BytePtr)&PORTE;
  4907  0112D6  0E84               	movlw	132
  4908  0112D8  0100               	movlb	0	; () banked
  4909  0112DA  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4910  0112DC  0E0F               	movlw	15
  4911  0112DE  0100               	movlb	0	; () banked
  4912  0112E0  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4913                           
  4914                           ; BSR set to: 0
  4915  0112E2  0012               	return	
  4916  0112E4                     l9245:
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;Port.c: 59: return (BytePtr)&PORTF;
  4920  0112E4  0E85               	movlw	133
  4921  0112E6  0100               	movlb	0	; () banked
  4922  0112E8  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4923  0112EA  0E0F               	movlw	15
  4924  0112EC  0100               	movlb	0	; () banked
  4925  0112EE  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4926                           
  4927                           ; BSR set to: 0
  4928  0112F0  0012               	return	
  4929  0112F2                     l9249:
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;Port.c: 61: return (BytePtr)&PORTG;
  4933  0112F2  0E86               	movlw	134
  4934  0112F4  0100               	movlb	0	; () banked
  4935  0112F6  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4936  0112F8  0E0F               	movlw	15
  4937  0112FA  0100               	movlb	0	; () banked
  4938  0112FC  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4939                           
  4940                           ; BSR set to: 0
  4941  0112FE  0012               	return	
  4942  011300                     l9253:
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;Port.c: 63: return (void*)0;
  4946  011300  0E00               	movlw	0
  4947  011302  0100               	movlb	0	; () banked
  4948  011304  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4949  011306  0E00               	movlw	0
  4950  011308  0100               	movlb	0	; () banked
  4951  01130A  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;Port.c: 64: }
  4955                           
  4956                           ; BSR set to: 0
  4957  01130C  0012               	return	
  4958  01130E                     l9259:
  4959  01130E  0100               	movlb	0	; () banked
  4960  011310  51CA               	movf	GetPortPORT@pInput& (0+255),w,b
  4961                           
  4962                           ; Switch size 1, requested type "space"
  4963                           ; Number of cases is 7, Range of values is 0 to 6
  4964                           ; switch strategies available:
  4965                           ; Name         Instructions Cycles
  4966                           ; simple_byte           22    12 (average)
  4967                           ;	Chosen strategy is simple_byte
  4968  011312  0A00               	xorlw	0	; case 0
  4969  011314  B4D8               	btfsc	status,2,c
  4970  011316  D7C3               	goto	l9225
  4971  011318  0A01               	xorlw	1	; case 1
  4972  01131A  B4D8               	btfsc	status,2,c
  4973  01131C  D7C7               	goto	l9229
  4974  01131E  0A03               	xorlw	3	; case 2
  4975  011320  B4D8               	btfsc	status,2,c
  4976  011322  D7CB               	goto	l9233
  4977  011324  0A01               	xorlw	1	; case 3
  4978  011326  B4D8               	btfsc	status,2,c
  4979  011328  D7CF               	goto	l9237
  4980  01132A  0A07               	xorlw	7	; case 4
  4981  01132C  B4D8               	btfsc	status,2,c
  4982  01132E  D7D3               	goto	l9241
  4983  011330  0A01               	xorlw	1	; case 5
  4984  011332  B4D8               	btfsc	status,2,c
  4985  011334  D7D7               	goto	l9245
  4986  011336  0A03               	xorlw	3	; case 6
  4987  011338  B4D8               	btfsc	status,2,c
  4988  01133A  D7DB               	goto	l9249
  4989  01133C  D7E1               	goto	l9253
  4990  01133E                     __end_of_GetPortPORT:
  4991                           	opt stack 0
  4992                           tblptru	equ	0xFF8
  4993                           tblptrh	equ	0xFF7
  4994                           tblptrl	equ	0xFF6
  4995                           tablat	equ	0xFF5
  4996                           prodl	equ	0xFF3
  4997                           postinc0	equ	0xFEE
  4998                           wreg	equ	0xFE8
  4999                           postdec1	equ	0xFE5
  5000                           fsr1h	equ	0xFE2
  5001                           fsr1l	equ	0xFE1
  5002                           indf2	equ	0xFDF
  5003                           postinc2	equ	0xFDE
  5004                           postdec2	equ	0xFDD
  5005                           fsr2h	equ	0xFDA
  5006                           fsr2l	equ	0xFD9
  5007                           status	equ	0xFD8
  5008                           
  5009 ;; *************** function _LED_Init *****************
  5010 ;; Defined at:
  5011 ;;		line 15 in file "Library/LED.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  pLED            1    wreg     enum E6739
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  pLED            1   45[BANK0 ] enum E6739
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      void 
  5018 ;; Registers used:
  5019 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;Total ram usage:        1 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:   12
  5032 ;; This function calls:
  5033 ;;		_LED_Set
  5034 ;;		_Port_SetPinType
  5035 ;; This function is called by:
  5036 ;;		_MXK_Init
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text15
  5041  0116A6                     __ptext15:
  5042                           	opt stack 0
  5043  0116A6                     _LED_Init:
  5044                           	opt stack 17
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;incstack = 0
  5048                           ;LED_Init@pLED stored from wreg
  5049  0116A6  0100               	movlb	0	; () banked
  5050  0116A8  6FF5               	movwf	LED_Init@pLED& (0+255),b
  5051                           
  5052                           ;LED.c: 17: switch (pLED)
  5053  0116AA  D01E               	goto	l9479
  5054  0116AC                     l9473:
  5055                           
  5056                           ;LED.c: 20: Port_SetPinType(&PortC, eP0, eTypeOutputPushPull);
  5057  0116AC  0E8A               	movlw	low _PortC
  5058  0116AE  0100               	movlb	0	; () banked
  5059  0116B0  6FEE               	movwf	Port_SetPinType@pInput& (0+255),b
  5060  0116B2  0E00               	movlw	high _PortC
  5061  0116B4  0100               	movlb	0	; () banked
  5062  0116B6  6FEF               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  5063  0116B8  0E00               	movlw	0
  5064  0116BA  0100               	movlb	0	; () banked
  5065  0116BC  6FF0               	movwf	Port_SetPinType@pPin& (0+255),b
  5066  0116BE  0E03               	movlw	3
  5067  0116C0  0100               	movlb	0	; () banked
  5068  0116C2  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  5069  0116C4  EC1D  F084         	call	_Port_SetPinType	;wreg free
  5070                           
  5071                           ;LED.c: 21: break;
  5072  0116C8  D017               	goto	l9481
  5073  0116CA                     l9475:
  5074                           
  5075                           ;LED.c: 23: Port_SetPinType(&PortC, eP1, eTypeOutputPushPull);
  5076  0116CA  0E8A               	movlw	low _PortC
  5077  0116CC  0100               	movlb	0	; () banked
  5078  0116CE  6FEE               	movwf	Port_SetPinType@pInput& (0+255),b
  5079  0116D0  0E00               	movlw	high _PortC
  5080  0116D2  0100               	movlb	0	; () banked
  5081  0116D4  6FEF               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  5082  0116D6  0E01               	movlw	1
  5083  0116D8  0100               	movlb	0	; () banked
  5084  0116DA  6FF0               	movwf	Port_SetPinType@pPin& (0+255),b
  5085  0116DC  0E03               	movlw	3
  5086  0116DE  0100               	movlb	0	; () banked
  5087  0116E0  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  5088  0116E2  EC1D  F084         	call	_Port_SetPinType	;wreg free
  5089                           
  5090                           ;LED.c: 25: }
  5091                           
  5092                           ;LED.c: 24: break;
  5093  0116E6  D008               	goto	l9481
  5094  0116E8                     l9479:
  5095  0116E8  0100               	movlb	0	; () banked
  5096  0116EA  51F5               	movf	LED_Init@pLED& (0+255),w,b
  5097                           
  5098                           ; Switch size 1, requested type "space"
  5099                           ; Number of cases is 2, Range of values is 0 to 1
  5100                           ; switch strategies available:
  5101                           ; Name         Instructions Cycles
  5102                           ; simple_byte            7     4 (average)
  5103                           ;	Chosen strategy is simple_byte
  5104  0116EC  0A00               	xorlw	0	; case 0
  5105  0116EE  B4D8               	btfsc	status,2,c
  5106  0116F0  D7DD               	goto	l9473
  5107  0116F2  0A01               	xorlw	1	; case 1
  5108  0116F4  B4D8               	btfsc	status,2,c
  5109  0116F6  D7E9               	goto	l9475
  5110  0116F8                     l9481:
  5111                           
  5112                           ;LED.c: 26: LED_Set(pLED, 0);
  5113  0116F8  0E00               	movlw	0
  5114  0116FA  0100               	movlb	0	; () banked
  5115  0116FC  6FDC               	movwf	LED_Set@pValue& (0+255),b
  5116  0116FE  0100               	movlb	0	; () banked
  5117  011700  51F5               	movf	LED_Init@pLED& (0+255),w,b
  5118  011702  ECDA  F08B         	call	_LED_Set
  5119  011706  0012               	return		;funcret
  5120  011708                     __end_of_LED_Init:
  5121                           	opt stack 0
  5122                           tblptru	equ	0xFF8
  5123                           tblptrh	equ	0xFF7
  5124                           tblptrl	equ	0xFF6
  5125                           tablat	equ	0xFF5
  5126                           prodl	equ	0xFF3
  5127                           postinc0	equ	0xFEE
  5128                           wreg	equ	0xFE8
  5129                           postdec1	equ	0xFE5
  5130                           fsr1h	equ	0xFE2
  5131                           fsr1l	equ	0xFE1
  5132                           indf2	equ	0xFDF
  5133                           postinc2	equ	0xFDE
  5134                           postdec2	equ	0xFDD
  5135                           fsr2h	equ	0xFDA
  5136                           fsr2l	equ	0xFD9
  5137                           status	equ	0xFD8
  5138                           
  5139 ;; *************** function _Port_SetPinType *****************
  5140 ;; Defined at:
  5141 ;;		line 189 in file "Library/Port.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  pInput          2   38[BANK0 ] const PTR struct Port
  5144 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  5145 ;;		 -> PortD(10), PortC(10), PortF(10), 
  5146 ;;  pPin            1   40[BANK0 ] enum E6750
  5147 ;;  pType           1   41[BANK0 ] enum E6795
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  Props           2   43[BANK0 ] PTR struct PortProperty
  5150 ;;		 -> PortG_Property(2), PortF_Property(2), PortE_Property(2), PortD_Property(2), 
  5151 ;;		 -> PortC_Property(2), PortB_Property(2), PortA_Property(2), NULL(0), 
  5152 ;;  Output          1   42[BANK0 ] enum E6475
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      enum E6475
  5155 ;; Registers used:
  5156 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5162 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;Total ram usage:        7 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:   11
  5169 ;; This function calls:
  5170 ;;		_Byte_SetBit
  5171 ;;		_PortProperty_Valid
  5172 ;;		_Word_SetPair
  5173 ;; This function is called by:
  5174 ;;		_LED_Init
  5175 ;;		_Port_Init
  5176 ;;		_MXK_Init
  5177 ;;		_Configure_GPIOs
  5178 ;;		_SPI_Init
  5179 ;;		_I2C_Init
  5180 ;;		_Motor_Init
  5181 ;;		_MXK_InitTestButton
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text16
  5186  01083A                     __ptext16:
  5187                           	opt stack 0
  5188  01083A                     _Port_SetPinType:
  5189                           	opt stack 18
  5190                           
  5191                           ;Port.c: 191: PortProperty * Props = pInput->mProperties;
  5192                           
  5193                           ;incstack = 0
  5194  01083A  C0EE  FFD9         	movff	Port_SetPinType@pInput,fsr2l
  5195  01083E  C0EF  FFDA         	movff	Port_SetPinType@pInput+1,fsr2h
  5196  010842  CFDE F0F3          	movff	postinc2,Port_SetPinType@Props
  5197  010846  CFDD F0F4          	movff	postdec2,Port_SetPinType@Props+1
  5198                           
  5199                           ;Port.c: 192: ePinError Output = ePinErrorState;
  5200  01084A  0E05               	movlw	5
  5201  01084C  0100               	movlb	0	; () banked
  5202  01084E  6FF2               	movwf	Port_SetPinType@Output& (0+255),b
  5203                           
  5204                           ;Port.c: 193: switch (pType)
  5205  010850  D0B5               	goto	l9169
  5206  010852                     l9149:
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;Port.c: 197: {
  5210                           ;Port.c: 199: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)1);
  5211  010852  0100               	movlb	0	; () banked
  5212  010854  EE20 F002          	lfsr	2,2
  5213  010858  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5214  01085A  26D9               	addwf	fsr2l,f,c
  5215  01085C  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5216  01085E  22DA               	addwfc	fsr2h,f,c
  5217  010860  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5218  010864  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5219  010868  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5220  01086C  0E01               	movlw	1
  5221  01086E  0100               	movlb	0	; () banked
  5222  010870  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5223  010872  EC21  F08B         	call	_Byte_SetBit	;wreg free
  5224                           
  5225                           ;Port.c: 203: break;
  5226  010876  D0B0               	goto	l9171
  5227  010878                     l9151:
  5228                           
  5229                           ;Port.c: 207: if ((Output = PortProperty_Valid(Props, eLow, pPin)) == ePinErrorNone)
  5230  010878  C0F3  F0D7         	movff	Port_SetPinType@Props,PortProperty_Valid@pInput
  5231  01087C  C0F4  F0D8         	movff	Port_SetPinType@Props+1,PortProperty_Valid@pInput+1
  5232  010880  0E01               	movlw	1
  5233  010882  0100               	movlb	0	; () banked
  5234  010884  6FD9               	movwf	PortProperty_Valid@pPinDrive& (0+255),b
  5235  010886  C0F0  F0DA         	movff	Port_SetPinType@pPin,PortProperty_Valid@pPin
  5236  01088A  EC3E  F08A         	call	_PortProperty_Valid	;wreg free
  5237  01088E  0100               	movlb	0	; () banked
  5238  010890  6FF2               	movwf	Port_SetPinType@Output& (0+255),b
  5239  010892  0100               	movlb	0	; () banked
  5240  010894  51F2               	movf	Port_SetPinType@Output& (0+255),w,b
  5241  010896  A4D8               	btfss	status,2,c
  5242  010898  0012               	return	
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;Port.c: 208: {
  5246                           ;Port.c: 210: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)0);
  5247  01089A  0100               	movlb	0	; () banked
  5248  01089C  EE20 F002          	lfsr	2,2
  5249  0108A0  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5250  0108A2  26D9               	addwf	fsr2l,f,c
  5251  0108A4  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5252  0108A6  22DA               	addwfc	fsr2h,f,c
  5253  0108A8  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5254  0108AC  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5255  0108B0  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5256  0108B4  0E00               	movlw	0
  5257  0108B6  0100               	movlb	0	; () banked
  5258  0108B8  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5259  0108BA  EC21  F08B         	call	_Byte_SetBit	;wreg free
  5260                           
  5261                           ;Port.c: 213: Byte_SetBit(pInput->mOutput, (UINT8)pPin, 0);
  5262  0108BE  0100               	movlb	0	; () banked
  5263  0108C0  EE20 F004          	lfsr	2,4
  5264  0108C4  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5265  0108C6  26D9               	addwf	fsr2l,f,c
  5266  0108C8  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5267  0108CA  22DA               	addwfc	fsr2h,f,c
  5268  0108CC  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5269  0108D0  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5270  0108D4  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5271  0108D8  0E00               	movlw	0
  5272  0108DA  0100               	movlb	0	; () banked
  5273  0108DC  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5274  0108DE  EC21  F08B         	call	_Byte_SetBit	;wreg free
  5275                           
  5276                           ;Port.c: 214: break;
  5277  0108E2  D07A               	goto	l9171
  5278  0108E4                     l9157:
  5279                           
  5280                           ;Port.c: 219: if ((Output = PortProperty_Valid(Props, eHigh, pPin)) == ePinErrorNone)
  5281  0108E4  C0F3  F0D7         	movff	Port_SetPinType@Props,PortProperty_Valid@pInput
  5282  0108E8  C0F4  F0D8         	movff	Port_SetPinType@Props+1,PortProperty_Valid@pInput+1
  5283  0108EC  0E02               	movlw	2
  5284  0108EE  0100               	movlb	0	; () banked
  5285  0108F0  6FD9               	movwf	PortProperty_Valid@pPinDrive& (0+255),b
  5286  0108F2  C0F0  F0DA         	movff	Port_SetPinType@pPin,PortProperty_Valid@pPin
  5287  0108F6  EC3E  F08A         	call	_PortProperty_Valid	;wreg free
  5288  0108FA  0100               	movlb	0	; () banked
  5289  0108FC  6FF2               	movwf	Port_SetPinType@Output& (0+255),b
  5290  0108FE  0100               	movlb	0	; () banked
  5291  010900  51F2               	movf	Port_SetPinType@Output& (0+255),w,b
  5292  010902  A4D8               	btfss	status,2,c
  5293  010904  0012               	return	
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;Port.c: 220: {
  5297                           ;Port.c: 222: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)1);
  5298  010906  0100               	movlb	0	; () banked
  5299  010908  EE20 F002          	lfsr	2,2
  5300  01090C  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5301  01090E  26D9               	addwf	fsr2l,f,c
  5302  010910  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5303  010912  22DA               	addwfc	fsr2h,f,c
  5304  010914  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5305  010918  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5306  01091C  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5307  010920  0E01               	movlw	1
  5308  010922  0100               	movlb	0	; () banked
  5309  010924  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5310  010926  EC21  F08B         	call	_Byte_SetBit	;wreg free
  5311                           
  5312                           ;Port.c: 225: Byte_SetBit(pInput->mOutput, (UINT8)pPin, 1);
  5313  01092A  0100               	movlb	0	; () banked
  5314  01092C  EE20 F004          	lfsr	2,4
  5315  010930  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5316  010932  26D9               	addwf	fsr2l,f,c
  5317  010934  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5318  010936  22DA               	addwfc	fsr2h,f,c
  5319  010938  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5320  01093C  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5321  010940  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5322  010944  0E01               	movlw	1
  5323  010946  0100               	movlb	0	; () banked
  5324  010948  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5325  01094A  EC21  F08B         	call	_Byte_SetBit	;wreg free
  5326                           
  5327                           ;Port.c: 226: break;
  5328  01094E  D044               	goto	l9171
  5329  010950                     l9163:
  5330                           
  5331                           ;Port.c: 231: if ((Output = PortProperty_Valid(Props, eHL, pPin)) == ePinErrorNone)
  5332  010950  C0F3  F0D7         	movff	Port_SetPinType@Props,PortProperty_Valid@pInput
  5333  010954  C0F4  F0D8         	movff	Port_SetPinType@Props+1,PortProperty_Valid@pInput+1
  5334  010958  0E00               	movlw	0
  5335  01095A  0100               	movlb	0	; () banked
  5336  01095C  6FD9               	movwf	PortProperty_Valid@pPinDrive& (0+255),b
  5337  01095E  C0F0  F0DA         	movff	Port_SetPinType@pPin,PortProperty_Valid@pPin
  5338  010962  EC3E  F08A         	call	_PortProperty_Valid	;wreg free
  5339  010966  0100               	movlb	0	; () banked
  5340  010968  6FF2               	movwf	Port_SetPinType@Output& (0+255),b
  5341  01096A  0100               	movlb	0	; () banked
  5342  01096C  51F2               	movf	Port_SetPinType@Output& (0+255),w,b
  5343  01096E  A4D8               	btfss	status,2,c
  5344  010970  0012               	return	
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;Port.c: 232: {
  5348                           ;Port.c: 234: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)0);
  5349  010972  0100               	movlb	0	; () banked
  5350  010974  EE20 F002          	lfsr	2,2
  5351  010978  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5352  01097A  26D9               	addwf	fsr2l,f,c
  5353  01097C  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5354  01097E  22DA               	addwfc	fsr2h,f,c
  5355  010980  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5356  010984  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5357  010988  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5358  01098C  0E00               	movlw	0
  5359  01098E  0100               	movlb	0	; () banked
  5360  010990  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5361  010992  EC21  F08B         	call	_Byte_SetBit	;wreg free
  5362                           
  5363                           ;Port.c: 237: Byte_SetBit(pInput->mOutput, (UINT8)pPin, 0);
  5364  010996  0100               	movlb	0	; () banked
  5365  010998  EE20 F004          	lfsr	2,4
  5366  01099C  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5367  01099E  26D9               	addwf	fsr2l,f,c
  5368  0109A0  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5369  0109A2  22DA               	addwfc	fsr2h,f,c
  5370  0109A4  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5371  0109A8  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5372  0109AC  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5373  0109B0  0E00               	movlw	0
  5374  0109B2  0100               	movlb	0	; () banked
  5375  0109B4  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5376  0109B6  EC21  F08B         	call	_Byte_SetBit	;wreg free
  5377                           
  5378                           ;Port.c: 239: }
  5379                           
  5380                           ;Port.c: 238: break;
  5381  0109BA  D00E               	goto	l9171
  5382  0109BC                     l9169:
  5383  0109BC  0100               	movlb	0	; () banked
  5384  0109BE  51F1               	movf	Port_SetPinType@pType& (0+255),w,b
  5385                           
  5386                           ; Switch size 1, requested type "space"
  5387                           ; Number of cases is 4, Range of values is 0 to 3
  5388                           ; switch strategies available:
  5389                           ; Name         Instructions Cycles
  5390                           ; simple_byte           13     7 (average)
  5391                           ;	Chosen strategy is simple_byte
  5392  0109C0  0A00               	xorlw	0	; case 0
  5393  0109C2  B4D8               	btfsc	status,2,c
  5394  0109C4  D746               	goto	l9149
  5395  0109C6  0A01               	xorlw	1	; case 1
  5396  0109C8  B4D8               	btfsc	status,2,c
  5397  0109CA  D756               	goto	l9151
  5398  0109CC  0A03               	xorlw	3	; case 2
  5399  0109CE  B4D8               	btfsc	status,2,c
  5400  0109D0  D789               	goto	l9157
  5401  0109D2  0A01               	xorlw	1	; case 3
  5402  0109D4  B4D8               	btfsc	status,2,c
  5403  0109D6  D7BC               	goto	l9163
  5404  0109D8                     l9171:
  5405                           
  5406                           ;Port.c: 244: Word_SetPair(&pInput->mType, (UINT8)pPin, (UINT8)pType);
  5407  0109D8  0E08               	movlw	8
  5408  0109DA  0100               	movlb	0	; () banked
  5409  0109DC  25EE               	addwf	Port_SetPinType@pInput& (0+255),w,b
  5410  0109DE  0100               	movlb	0	; () banked
  5411  0109E0  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  5412  0109E2  0E00               	movlw	0
  5413  0109E4  0100               	movlb	0	; () banked
  5414  0109E6  21EF               	addwfc	(Port_SetPinType@pInput+1)& (0+255),w,b
  5415  0109E8  0100               	movlb	0	; () banked
  5416  0109EA  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  5417  0109EC  C0F0  F0D9         	movff	Port_SetPinType@pPin,Word_SetPair@pPair
  5418  0109F0  C0F1  F0DA         	movff	Port_SetPinType@pType,Word_SetPair@pValue
  5419  0109F4  EC4C  F08C         	call	_Word_SetPair	;wreg free
  5420  0109F8  0012               	return	
  5421  0109FA                     __end_of_Port_SetPinType:
  5422                           	opt stack 0
  5423                           tblptru	equ	0xFF8
  5424                           tblptrh	equ	0xFF7
  5425                           tblptrl	equ	0xFF6
  5426                           tablat	equ	0xFF5
  5427                           prodl	equ	0xFF3
  5428                           postinc0	equ	0xFEE
  5429                           wreg	equ	0xFE8
  5430                           postdec1	equ	0xFE5
  5431                           fsr1h	equ	0xFE2
  5432                           fsr1l	equ	0xFE1
  5433                           indf2	equ	0xFDF
  5434                           postinc2	equ	0xFDE
  5435                           postdec2	equ	0xFDD
  5436                           fsr2h	equ	0xFDA
  5437                           fsr2l	equ	0xFD9
  5438                           status	equ	0xFD8
  5439                           
  5440 ;; *************** function _Word_SetPair *****************
  5441 ;; Defined at:
  5442 ;;		line 149 in file "Library/Types.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  pInput          2   15[BANK0 ] PTR struct Word
  5445 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  5446 ;;		 -> PortD(10), PortC(10), PortF(10), 
  5447 ;;  pPair           1   17[BANK0 ] unsigned char 
  5448 ;;  pValue          1   18[BANK0 ] unsigned char 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;		None
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  1    wreg      void 
  5453 ;; Registers used:
  5454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5460 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;Total ram usage:        4 bytes
  5465 ;; Hardware stack levels used:    1
  5466 ;; Hardware stack levels required when called:    9
  5467 ;; This function calls:
  5468 ;;		_Byte_SetPair
  5469 ;; This function is called by:
  5470 ;;		_Port_SetPinType
  5471 ;;		_Port_SetQuadType
  5472 ;;		_Port_SetType
  5473 ;;		_Port_SetPairType
  5474 ;;		_PortProperty_Init
  5475 ;; This function uses a non-reentrant model
  5476 ;;
  5477                           
  5478                           	psect	text17
  5479  011898                     __ptext17:
  5480                           	opt stack 0
  5481  011898                     _Word_SetPair:
  5482                           	opt stack 19
  5483                           
  5484                           ;Types.c: 151: if (pPair >= 4)
  5485                           
  5486                           ;incstack = 0
  5487  011898  0E03               	movlw	3
  5488  01189A  0100               	movlb	0	; () banked
  5489  01189C  65D9               	cpfsgt	Word_SetPair@pPair& (0+255),b
  5490  01189E  D014               	goto	l9125
  5491                           
  5492                           ; BSR set to: 0
  5493                           ;Types.c: 152: Byte_SetPair(&(pInput->MS_Byte), pPair - 4, pValue);
  5494  0118A0  0E01               	movlw	1
  5495  0118A2  0100               	movlb	0	; () banked
  5496  0118A4  25D7               	addwf	Word_SetPair@pInput& (0+255),w,b
  5497  0118A6  0100               	movlb	0	; () banked
  5498  0118A8  6FD3               	movwf	Byte_SetPair@pInput& (0+255),b
  5499  0118AA  0E00               	movlw	0
  5500  0118AC  0100               	movlb	0	; () banked
  5501  0118AE  21D8               	addwfc	(Word_SetPair@pInput+1)& (0+255),w,b
  5502  0118B0  0100               	movlb	0	; () banked
  5503  0118B2  6FD4               	movwf	(Byte_SetPair@pInput+1)& (0+255),b
  5504  0118B4  0100               	movlb	0	; () banked
  5505  0118B6  51D9               	movf	Word_SetPair@pPair& (0+255),w,b
  5506  0118B8  0FFC               	addlw	252
  5507  0118BA  0100               	movlb	0	; () banked
  5508  0118BC  6FD5               	movwf	Byte_SetPair@pPair& (0+255),b
  5509  0118BE  C0DA  F0D6         	movff	Word_SetPair@pValue,Byte_SetPair@pValue
  5510  0118C2  EC7D  F08D         	call	_Byte_SetPair	;wreg free
  5511  0118C6  0012               	return	
  5512  0118C8                     l9125:
  5513                           
  5514                           ;Types.c: 153: else
  5515                           ;Types.c: 154: Byte_SetPair(&(pInput->LS_Byte), pPair, pValue);
  5516  0118C8  C0D7  F0D3         	movff	Word_SetPair@pInput,Byte_SetPair@pInput
  5517  0118CC  C0D8  F0D4         	movff	Word_SetPair@pInput+1,Byte_SetPair@pInput+1
  5518  0118D0  C0D9  F0D5         	movff	Word_SetPair@pPair,Byte_SetPair@pPair
  5519  0118D4  C0DA  F0D6         	movff	Word_SetPair@pValue,Byte_SetPair@pValue
  5520  0118D8  EC7D  F08D         	call	_Byte_SetPair	;wreg free
  5521  0118DC  0012               	return	
  5522  0118DE                     __end_of_Word_SetPair:
  5523                           	opt stack 0
  5524                           tblptru	equ	0xFF8
  5525                           tblptrh	equ	0xFF7
  5526                           tblptrl	equ	0xFF6
  5527                           tablat	equ	0xFF5
  5528                           prodl	equ	0xFF3
  5529                           postinc0	equ	0xFEE
  5530                           wreg	equ	0xFE8
  5531                           postdec1	equ	0xFE5
  5532                           fsr1h	equ	0xFE2
  5533                           fsr1l	equ	0xFE1
  5534                           indf2	equ	0xFDF
  5535                           postinc2	equ	0xFDE
  5536                           postdec2	equ	0xFDD
  5537                           fsr2h	equ	0xFDA
  5538                           fsr2l	equ	0xFD9
  5539                           status	equ	0xFD8
  5540                           
  5541 ;; *************** function _Byte_SetPair *****************
  5542 ;; Defined at:
  5543 ;;		line 83 in file "Library/Types.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  pInput          2   11[BANK0 ] PTR struct Byte
  5546 ;;		 -> PortF..(2), PortC..(2), PortD..(2), PortE..(2), 
  5547 ;;		 -> PortB..(2), PortA..(2), PortG..(2), PortG(10), 
  5548 ;;		 -> PortA(10), PortB(10), PortE(10), PortD(10), 
  5549 ;;		 -> TRISG(1), TRISF(1), TRISE(1), TRISD(1), 
  5550 ;;		 -> TRISC(1), TRISB(1), TRISA(1), PORTG(1), 
  5551 ;;		 -> PORTF(1), PORTE(1), PORTD(1), PORTC(1), 
  5552 ;;		 -> PORTB(1), PORTA(1), PortC(10), PortF(10), 
  5553 ;;		 -> NULL(0), 
  5554 ;;  pPair           1   13[BANK0 ] unsigned char 
  5555 ;;  pValue          1   14[BANK0 ] unsigned char 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5567 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5570 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;Total ram usage:        4 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:    8
  5574 ;; This function calls:
  5575 ;;		_Byte_SetZone
  5576 ;; This function is called by:
  5577 ;;		_Word_SetPair
  5578 ;;		_Port_SetPairType
  5579 ;;		_Port_SetPair
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           	psect	text18
  5584  011AFA                     __ptext18:
  5585                           	opt stack 0
  5586  011AFA                     _Byte_SetPair:
  5587                           	opt stack 19
  5588                           
  5589                           ;Types.c: 85: Byte_SetZone(pInput, 4, pPair, 2, pValue);
  5590                           
  5591                           ;incstack = 0
  5592  011AFA  C0D3  F0C8         	movff	Byte_SetPair@pInput,Byte_SetZone@pInput
  5593  011AFE  C0D4  F0C9         	movff	Byte_SetPair@pInput+1,Byte_SetZone@pInput+1
  5594  011B02  0E04               	movlw	4
  5595  011B04  0100               	movlb	0	; () banked
  5596  011B06  6FCA               	movwf	Byte_SetZone@pMax& (0+255),b
  5597  011B08  C0D5  F0CB         	movff	Byte_SetPair@pPair,Byte_SetZone@pChunk
  5598  011B0C  0E02               	movlw	2
  5599  011B0E  0100               	movlb	0	; () banked
  5600  011B10  6FCC               	movwf	Byte_SetZone@pChunkSize& (0+255),b
  5601  011B12  C0D6  F0CD         	movff	Byte_SetPair@pValue,Byte_SetZone@pValue
  5602  011B16  ECF6  F087         	call	_Byte_SetZone	;wreg free
  5603  011B1A  0012               	return		;funcret
  5604  011B1C                     __end_of_Byte_SetPair:
  5605                           	opt stack 0
  5606                           tblptru	equ	0xFF8
  5607                           tblptrh	equ	0xFF7
  5608                           tblptrl	equ	0xFF6
  5609                           tablat	equ	0xFF5
  5610                           prodl	equ	0xFF3
  5611                           postinc0	equ	0xFEE
  5612                           wreg	equ	0xFE8
  5613                           postdec1	equ	0xFE5
  5614                           fsr1h	equ	0xFE2
  5615                           fsr1l	equ	0xFE1
  5616                           indf2	equ	0xFDF
  5617                           postinc2	equ	0xFDE
  5618                           postdec2	equ	0xFDD
  5619                           fsr2h	equ	0xFDA
  5620                           fsr2l	equ	0xFD9
  5621                           status	equ	0xFD8
  5622                           
  5623 ;; *************** function _Byte_SetZone *****************
  5624 ;; Defined at:
  5625 ;;		line 47 in file "Library/Types.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  pInput          2    0[BANK0 ] PTR struct Byte
  5628 ;;		 -> PortF..(2), PortC..(2), PortD..(2), PortE..(2), 
  5629 ;;		 -> PortB..(2), PortA..(2), PortG..(2), PortG(10), 
  5630 ;;		 -> PortA(10), PortB(10), PortE(10), SSP2CON1(1), 
  5631 ;;		 -> PortD(10), SSP1CON1(1), TRISG(1), TRISF(1), 
  5632 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
  5633 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
  5634 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
  5635 ;;		 -> PortC(10), PortF(10), NULL(0), 
  5636 ;;  pMax            1    2[BANK0 ] unsigned char 
  5637 ;;  pChunk          1    3[BANK0 ] unsigned char 
  5638 ;;  pChunkSize      1    4[BANK0 ] unsigned char 
  5639 ;;  pValue          1    5[BANK0 ] unsigned char 
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;  MASK            1   10[BANK0 ] unsigned char 
  5642 ;;  Offset          1    9[BANK0 ] unsigned char 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      void 
  5645 ;; Registers used:
  5646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5652 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5653 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5654 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;Total ram usage:       11 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    7
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_Byte_SetPair
  5663 ;;		_Byte_SetQuad
  5664 ;;		_Byte_SetTriple
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text19
  5669  010FEC                     __ptext19:
  5670                           	opt stack 0
  5671  010FEC                     _Byte_SetZone:
  5672                           	opt stack 19
  5673                           
  5674                           ;Types.c: 49: UINT8 MASK = MASKS[pChunkSize];
  5675                           
  5676                           ;incstack = 0
  5677  010FEC  0100               	movlb	0	; () banked
  5678  010FEE  51CC               	movf	Byte_SetZone@pChunkSize& (0+255),w,b
  5679  010FF0  0D01               	mullw	1
  5680  010FF2  0E01               	movlw	low _MASKS
  5681  010FF4  24F3               	addwf	prodl,w,c
  5682  010FF6  6EF6               	movwf	tblptrl,c
  5683  010FF8  0EFE               	movlw	high _MASKS
  5684  010FFA  20F4               	addwfc	prodh,w,c
  5685  010FFC  6EF7               	movwf	tblptrh,c
  5686  010FFE                     	if	1	;There are 3 active tblptr bytes
  5687  010FFE  6AF8               	clrf	tblptru,c
  5688  011000  0E00               	movlw	low (__mediumconst shr (0+16))
  5689  011002  22F8               	addwfc	tblptru,f,c
  5690  011004                     	endif
  5691  011004  0008               	tblrd		*
  5692  011006  CFF5 F0D2          	movff	tablat,Byte_SetZone@MASK
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;Types.c: 50: UINT8 Offset = 0;
  5696  01100A  0E00               	movlw	0
  5697  01100C  0100               	movlb	0	; () banked
  5698  01100E  6FD1               	movwf	Byte_SetZone@Offset& (0+255),b
  5699                           
  5700                           ;Types.c: 52: while (pChunk >= pMax)
  5701  011010  D006               	goto	l9043
  5702  011012                     l9039:
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;Types.c: 53: {
  5706                           ;Types.c: 54: pChunk -= pMax;
  5707  011012  0100               	movlb	0	; () banked
  5708  011014  51CA               	movf	Byte_SetZone@pMax& (0+255),w,b
  5709  011016  0100               	movlb	0	; () banked
  5710  011018  5FCB               	subwf	Byte_SetZone@pChunk& (0+255),f,b
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;Types.c: 55: Offset += 1;
  5714  01101A  0100               	movlb	0	; () banked
  5715  01101C  2BD1               	incf	Byte_SetZone@Offset& (0+255),f,b
  5716  01101E                     l9043:
  5717                           
  5718                           ; BSR set to: 0
  5719  01101E  0100               	movlb	0	; () banked
  5720  011020  51CA               	movf	Byte_SetZone@pMax& (0+255),w,b
  5721  011022  0100               	movlb	0	; () banked
  5722  011024  5DCB               	subwf	Byte_SetZone@pChunk& (0+255),w,b
  5723  011026  B0D8               	btfsc	status,0,c
  5724  011028  D7F4               	goto	l9039
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;Types.c: 56: }
  5728                           ;Types.c: 57: pChunk *= pChunkSize;
  5729                           
  5730                           ; BSR set to: 0
  5731  01102A  0100               	movlb	0	; () banked
  5732  01102C  51CC               	movf	Byte_SetZone@pChunkSize& (0+255),w,b
  5733  01102E  0100               	movlb	0	; () banked
  5734  011030  03CB               	mulwf	Byte_SetZone@pChunk& (0+255),b
  5735  011032  50F3               	movf	prodl,w,c
  5736  011034  6FCB               	movwf	Byte_SetZone@pChunk& (0+255),b
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;Types.c: 58: pChunk += Offset;
  5740  011036  0100               	movlb	0	; () banked
  5741  011038  51D1               	movf	Byte_SetZone@Offset& (0+255),w,b
  5742  01103A  0100               	movlb	0	; () banked
  5743  01103C  27CB               	addwf	Byte_SetZone@pChunk& (0+255),f,b
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;Types.c: 60: pValue &= MASK;
  5747  01103E  0100               	movlb	0	; () banked
  5748  011040  51D2               	movf	Byte_SetZone@MASK& (0+255),w,b
  5749  011042  0100               	movlb	0	; () banked
  5750  011044  17CD               	andwf	Byte_SetZone@pValue& (0+255),f,b
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;Types.c: 61: pInput->mBits &= ~(MASK << pChunk);
  5754  011046  C0CB  F0CE         	movff	Byte_SetZone@pChunk,??_Byte_SetZone
  5755  01104A  C0D2  F0CF         	movff	Byte_SetZone@MASK,??_Byte_SetZone+1
  5756  01104E  0100               	movlb	0	; () banked
  5757  011050  2BCE               	incf	??_Byte_SetZone& (0+255),f,b
  5758  011052  D003               	goto	u5674
  5759  011054                     u5675:
  5760  011054  0100               	movlb	0	; () banked
  5761  011056  90D8               	bcf	status,0,c
  5762  011058  37CF               	rlcf	(??_Byte_SetZone+1)& (0+255),f,b
  5763  01105A                     u5674:
  5764  01105A  0100               	movlb	0	; () banked
  5765  01105C  2FCE               	decfsz	??_Byte_SetZone& (0+255),f,b
  5766  01105E  D7FA               	goto	u5675
  5767  011060  0100               	movlb	0	; () banked
  5768  011062  51CF               	movf	(??_Byte_SetZone+1)& (0+255),w,b
  5769  011064  0AFF               	xorlw	255
  5770  011066  0100               	movlb	0	; () banked
  5771  011068  6FD0               	movwf	(??_Byte_SetZone+2)& (0+255),b
  5772  01106A  C0C8  FFD9         	movff	Byte_SetZone@pInput,fsr2l
  5773  01106E  C0C9  FFDA         	movff	Byte_SetZone@pInput+1,fsr2h
  5774  011072  0100               	movlb	0	; () banked
  5775  011074  51D0               	movf	(??_Byte_SetZone+2)& (0+255),w,b
  5776  011076  16DF               	andwf	indf2,f,c
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;Types.c: 62: pInput->mBits |= pValue << pChunk;
  5780  011078  C0CB  F0CE         	movff	Byte_SetZone@pChunk,??_Byte_SetZone
  5781  01107C  C0CD  F0CF         	movff	Byte_SetZone@pValue,??_Byte_SetZone+1
  5782  011080  0100               	movlb	0	; () banked
  5783  011082  2BCE               	incf	??_Byte_SetZone& (0+255),f,b
  5784  011084  D003               	goto	u5684
  5785  011086                     u5685:
  5786  011086  0100               	movlb	0	; () banked
  5787  011088  90D8               	bcf	status,0,c
  5788  01108A  37CF               	rlcf	(??_Byte_SetZone+1)& (0+255),f,b
  5789  01108C                     u5684:
  5790  01108C  0100               	movlb	0	; () banked
  5791  01108E  2FCE               	decfsz	??_Byte_SetZone& (0+255),f,b
  5792  011090  D7FA               	goto	u5685
  5793  011092  C0C8  FFD9         	movff	Byte_SetZone@pInput,fsr2l
  5794  011096  C0C9  FFDA         	movff	Byte_SetZone@pInput+1,fsr2h
  5795  01109A  0100               	movlb	0	; () banked
  5796  01109C  51CF               	movf	(??_Byte_SetZone+1)& (0+255),w,b
  5797  01109E  12DF               	iorwf	indf2,f,c
  5798                           
  5799                           ; BSR set to: 0
  5800  0110A0  0012               	return		;funcret
  5801  0110A2                     __end_of_Byte_SetZone:
  5802                           	opt stack 0
  5803                           tblptru	equ	0xFF8
  5804                           tblptrh	equ	0xFF7
  5805                           tblptrl	equ	0xFF6
  5806                           tablat	equ	0xFF5
  5807                           prodh	equ	0xFF4
  5808                           prodl	equ	0xFF3
  5809                           postinc0	equ	0xFEE
  5810                           wreg	equ	0xFE8
  5811                           postdec1	equ	0xFE5
  5812                           fsr1h	equ	0xFE2
  5813                           fsr1l	equ	0xFE1
  5814                           indf2	equ	0xFDF
  5815                           postinc2	equ	0xFDE
  5816                           postdec2	equ	0xFDD
  5817                           fsr2h	equ	0xFDA
  5818                           fsr2l	equ	0xFD9
  5819                           status	equ	0xFD8
  5820                           
  5821 ;; *************** function _PortProperty_Valid *****************
  5822 ;; Defined at:
  5823 ;;		line 220 in file "Library/Types.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;  pInput          2   15[BANK0 ] PTR struct PortProperty
  5826 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  5827 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
  5828 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
  5829 ;;		 -> PortC(10), PortF(10), NULL(0), 
  5830 ;;  pPinDrive       1   17[BANK0 ] enum E6469
  5831 ;;  pPin            1   18[BANK0 ] unsigned char 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  Errors         16   21[BANK0 ] const enum E6475[4][4]
  5834 ;;  Pair            1   37[BANK0 ] enum E6469
  5835 ;; Return value:  Size  Location     Type
  5836 ;;                  1    wreg      enum E6475
  5837 ;; Registers used:
  5838 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: 0/0
  5843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5844 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5845 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5846 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5847 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5848 ;;Total ram usage:       23 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; Hardware stack levels required when called:   10
  5851 ;; This function calls:
  5852 ;;		_Word_GetPair
  5853 ;; This function is called by:
  5854 ;;		_Port_CheckPairType
  5855 ;;		_Port_SetPinType
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text20
  5860  01147C                     __ptext20:
  5861                           	opt stack 0
  5862  01147C                     _PortProperty_Valid:
  5863                           	opt stack 15
  5864                           
  5865                           ;Types.c: 222: ePinDrive Pair;
  5866                           ;Types.c: 223: const ePinError Errors[4][4] =
  5867                           ;Types.c: 224: {
  5868                           ;Types.c: 226: { ePinErrorNone, ePinErrorCannotDriveHigh, ePinErrorCannotDriveLow, ePinE
      +                          rrorNone },
  5869                           ;Types.c: 227: { ePinErrorCannotDriveHigh, ePinErrorNone, ePinErrorCannotDriveHigh, ePin
      +                          ErrorNone },
  5870                           ;Types.c: 228: { ePinErrorCannotDriveLow, ePinErrorCannotDriveLow, ePinErrorNone, ePinEr
      +                          rorNone },
  5871                           ;Types.c: 229: { ePinErrorCannotDrive, ePinErrorCannotDrive, ePinErrorCannotDrive, ePinE
      +                          rrorNone }
  5872                           ;Types.c: 230: };
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;incstack = 0
  5876  01147C  0EF1               	movlw	low PortProperty_Valid@F6830
  5877  01147E  6EF6               	movwf	tblptrl,c
  5878  011480                     	if	1	;There is more than 1 active tblptr byte
  5879  011480  0EFD               	movlw	high PortProperty_Valid@F6830
  5880  011482  6EF7               	movwf	tblptrh,c
  5881  011484                     	endif
  5882  011484                     	if	1	;There are 3 active tblptr bytes
  5883  011484  0E00               	movlw	low (PortProperty_Valid@F6830 shr (0+16))
  5884  011486  6EF8               	movwf	tblptru,c
  5885  011488                     	endif
  5886  011488  EE20  F0DD         	lfsr	2,PortProperty_Valid@Errors
  5887  01148C  0E0F               	movlw	15
  5888  01148E                     u5620:
  5889  01148E  0009               	tblrd		*+
  5890  011490  CFF5 FFDE          	movff	tablat,postinc2
  5891  011494  06E8               	decf	wreg,f,c
  5892  011496  E2FB               	bc	u5620
  5893                           
  5894                           ;Types.c: 232: Pair = (ePinDrive)Word_GetPair(&(pInput->mType), pPin);
  5895  011498  C0D7  F0D4         	movff	PortProperty_Valid@pInput,Word_GetPair@pInput
  5896  01149C  C0D8  F0D5         	movff	PortProperty_Valid@pInput+1,Word_GetPair@pInput+1
  5897  0114A0  C0DA  F0D6         	movff	PortProperty_Valid@pPin,Word_GetPair@pPair
  5898  0114A4  ECB0  F08C         	call	_Word_GetPair	;wreg free
  5899  0114A8  0100               	movlb	0	; () banked
  5900  0114AA  6FED               	movwf	PortProperty_Valid@Pair& (0+255),b
  5901                           
  5902                           ; BSR set to: 0
  5903                           ;Types.c: 234: if (pPinDrive < 4 && Pair < 4)
  5904  0114AC  0E04               	movlw	4
  5905  0114AE  0100               	movlb	0	; () banked
  5906  0114B0  61D9               	cpfslt	PortProperty_Valid@pPinDrive& (0+255),b
  5907  0114B2  D020               	goto	l9015
  5908                           
  5909                           ; BSR set to: 0
  5910  0114B4  0E04               	movlw	4
  5911  0114B6  0100               	movlb	0	; () banked
  5912  0114B8  61ED               	cpfslt	PortProperty_Valid@Pair& (0+255),b
  5913  0114BA  D01C               	goto	l9015
  5914                           
  5915                           ; BSR set to: 0
  5916                           ;Types.c: 235: return Errors[pPinDrive][Pair];
  5917  0114BC  0100               	movlb	0	; () banked
  5918  0114BE  51D9               	movf	PortProperty_Valid@pPinDrive& (0+255),w,b
  5919  0114C0  0D04               	mullw	4
  5920  0114C2  0EDD               	movlw	low PortProperty_Valid@Errors
  5921  0114C4  0100               	movlb	0	; () banked
  5922  0114C6  6FDB               	movwf	??_PortProperty_Valid& (0+255),b
  5923  0114C8  0E00               	movlw	high PortProperty_Valid@Errors
  5924  0114CA  0100               	movlb	0	; () banked
  5925  0114CC  6FDC               	movwf	(??_PortProperty_Valid+1)& (0+255),b
  5926  0114CE  50F3               	movf	prodl,w,c
  5927  0114D0  0100               	movlb	0	; () banked
  5928  0114D2  27DB               	addwf	??_PortProperty_Valid& (0+255),f,b
  5929  0114D4  50F4               	movf	prodh,w,c
  5930  0114D6  0100               	movlb	0	; () banked
  5931  0114D8  23DC               	addwfc	(??_PortProperty_Valid+1)& (0+255),f,b
  5932  0114DA  0100               	movlb	0	; () banked
  5933  0114DC  51ED               	movf	PortProperty_Valid@Pair& (0+255),w,b
  5934  0114DE  0D01               	mullw	1
  5935  0114E0  50F3               	movf	prodl,w,c
  5936  0114E2  0100               	movlb	0	; () banked
  5937  0114E4  25DB               	addwf	??_PortProperty_Valid& (0+255),w,b
  5938  0114E6  6ED9               	movwf	fsr2l,c
  5939  0114E8  50F4               	movf	prodh,w,c
  5940  0114EA  0100               	movlb	0	; () banked
  5941  0114EC  21DC               	addwfc	(??_PortProperty_Valid+1)& (0+255),w,b
  5942  0114EE  6EDA               	movwf	fsr2h,c
  5943  0114F0  50DF               	movf	indf2,w,c
  5944                           
  5945                           ; BSR set to: 0
  5946  0114F2  0012               	return	
  5947  0114F4                     l9015:
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;Types.c: 237: return ePinErrorState;
  5951  0114F4  0E05               	movlw	5
  5952  0114F6  0012               	return	
  5953  0114F8                     __end_of_PortProperty_Valid:
  5954                           	opt stack 0
  5955                           tblptru	equ	0xFF8
  5956                           tblptrh	equ	0xFF7
  5957                           tblptrl	equ	0xFF6
  5958                           tablat	equ	0xFF5
  5959                           prodh	equ	0xFF4
  5960                           prodl	equ	0xFF3
  5961                           postinc0	equ	0xFEE
  5962                           wreg	equ	0xFE8
  5963                           postdec1	equ	0xFE5
  5964                           fsr1h	equ	0xFE2
  5965                           fsr1l	equ	0xFE1
  5966                           indf2	equ	0xFDF
  5967                           postinc2	equ	0xFDE
  5968                           postdec2	equ	0xFDD
  5969                           fsr2h	equ	0xFDA
  5970                           fsr2l	equ	0xFD9
  5971                           status	equ	0xFD8
  5972                           
  5973 ;; *************** function _LED_Set *****************
  5974 ;; Defined at:
  5975 ;;		line 33 in file "Library/LED.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;  pLED            1    wreg     enum E6739
  5978 ;;  pValue          1   20[BANK0 ] unsigned char 
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;  pLED            1   21[BANK0 ] enum E6739
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  1    wreg      void 
  5983 ;; Registers used:
  5984 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5990 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;Total ram usage:        2 bytes
  5995 ;; Hardware stack levels used:    1
  5996 ;; Hardware stack levels required when called:   11
  5997 ;; This function calls:
  5998 ;;		_Port_SetPin
  5999 ;; This function is called by:
  6000 ;;		_LED_Init
  6001 ;;		_SYSTEM_Initialize
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text21
  6006  0117B4                     __ptext21:
  6007                           	opt stack 0
  6008  0117B4                     _LED_Set:
  6009                           	opt stack 17
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;incstack = 0
  6013                           ;LED_Set@pLED stored from wreg
  6014  0117B4  0100               	movlb	0	; () banked
  6015  0117B6  6FDD               	movwf	LED_Set@pLED& (0+255),b
  6016                           
  6017                           ;LED.c: 35: switch (pLED)
  6018  0117B8  D01C               	goto	l9183
  6019  0117BA                     l9177:
  6020                           
  6021                           ;LED.c: 38: Port_SetPin(&PortC, eP0, pValue);
  6022  0117BA  0E8A               	movlw	low _PortC
  6023  0117BC  0100               	movlb	0	; () banked
  6024  0117BE  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6025  0117C0  0E00               	movlw	high _PortC
  6026  0117C2  0100               	movlb	0	; () banked
  6027  0117C4  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6028  0117C6  0E00               	movlw	0
  6029  0117C8  0100               	movlb	0	; () banked
  6030  0117CA  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6031  0117CC  C0DC  F0DA         	movff	LED_Set@pValue,Port_SetPin@pValue
  6032  0117D0  EC94  F087         	call	_Port_SetPin	;wreg free
  6033                           
  6034                           ;LED.c: 39: break;
  6035  0117D4  0012               	return	
  6036  0117D6                     l9179:
  6037                           
  6038                           ;LED.c: 41: Port_SetPin(&PortC, eP1, pValue);
  6039  0117D6  0E8A               	movlw	low _PortC
  6040  0117D8  0100               	movlb	0	; () banked
  6041  0117DA  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6042  0117DC  0E00               	movlw	high _PortC
  6043  0117DE  0100               	movlb	0	; () banked
  6044  0117E0  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6045  0117E2  0E01               	movlw	1
  6046  0117E4  0100               	movlb	0	; () banked
  6047  0117E6  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6048  0117E8  C0DC  F0DA         	movff	LED_Set@pValue,Port_SetPin@pValue
  6049  0117EC  EC94  F087         	call	_Port_SetPin	;wreg free
  6050                           
  6051                           ;LED.c: 43: }
  6052                           
  6053                           ;LED.c: 42: break;
  6054  0117F0  0012               	return	
  6055  0117F2                     l9183:
  6056  0117F2  0100               	movlb	0	; () banked
  6057  0117F4  51DD               	movf	LED_Set@pLED& (0+255),w,b
  6058                           
  6059                           ; Switch size 1, requested type "space"
  6060                           ; Number of cases is 2, Range of values is 0 to 1
  6061                           ; switch strategies available:
  6062                           ; Name         Instructions Cycles
  6063                           ; simple_byte            7     4 (average)
  6064                           ;	Chosen strategy is simple_byte
  6065  0117F6  0A00               	xorlw	0	; case 0
  6066  0117F8  B4D8               	btfsc	status,2,c
  6067  0117FA  D7DF               	goto	l9177
  6068  0117FC  0A01               	xorlw	1	; case 1
  6069  0117FE  A4D8               	btfss	status,2,c
  6070  011800  0012               	return	
  6071  011802  D7E9               	goto	l9179
  6072  011804                     __end_of_LED_Set:
  6073                           	opt stack 0
  6074                           tblptru	equ	0xFF8
  6075                           tblptrh	equ	0xFF7
  6076                           tblptrl	equ	0xFF6
  6077                           tablat	equ	0xFF5
  6078                           prodh	equ	0xFF4
  6079                           prodl	equ	0xFF3
  6080                           postinc0	equ	0xFEE
  6081                           wreg	equ	0xFE8
  6082                           postdec1	equ	0xFE5
  6083                           fsr1h	equ	0xFE2
  6084                           fsr1l	equ	0xFE1
  6085                           indf2	equ	0xFDF
  6086                           postinc2	equ	0xFDE
  6087                           postdec2	equ	0xFDD
  6088                           fsr2h	equ	0xFDA
  6089                           fsr2l	equ	0xFD9
  6090                           status	equ	0xFD8
  6091                           
  6092 ;; *************** function _MXK_Dequeue *****************
  6093 ;; Defined at:
  6094 ;;		line 153 in file "Library/MXK.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;		None
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;		None
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1    wreg      void 
  6101 ;; Registers used:
  6102 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;Total ram usage:        0 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:   12
  6115 ;; This function calls:
  6116 ;;		Absolute function
  6117 ;;		_Motor_Step
  6118 ;; This function is called by:
  6119 ;;		_main
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123                           	psect	text22
  6124  011A4A                     __ptext22:
  6125                           	opt stack 0
  6126  011A4A                     _MXK_Dequeue:
  6127                           	opt stack 18
  6128                           
  6129                           ;MXK.c: 155: if (lQueue)
  6130                           
  6131                           ;incstack = 0
  6132  011A4A  5025               	movf	_lQueue,w,c	;volatile
  6133  011A4C  1026               	iorwf	_lQueue+1,w,c	;volatile
  6134  011A4E  1027               	iorwf	_lQueue+2,w,c	;volatile
  6135  011A50  B4D8               	btfsc	status,2,c
  6136  011A52  D00C               	goto	l10211
  6137                           
  6138                           ;MXK.c: 156: lQueue();
  6139  011A54  D801               	call	u6838
  6140  011A56  D00A               	goto	l10211
  6141  011A58                     u6838:
  6142  011A58  0005               	push	
  6143  011A5A  6EFA               	movwf	pclath,c
  6144  011A5C  5025               	movf	_lQueue,w,c	;volatile
  6145  011A5E  6EFD               	movwf	tosl,c
  6146  011A60  5026               	movf	_lQueue+1,w,c	;volatile
  6147  011A62  6EFE               	movwf	tosh,c
  6148  011A64  5027               	movf	_lQueue+2,w,c	;volatile
  6149  011A66  6EFF               	movwf	tosu,c
  6150  011A68  50FA               	movf	pclath,w,c
  6151  011A6A  0012               	return		;indir
  6152  011A6C                     l10211:
  6153                           
  6154                           ;MXK.c: 157: lQueue = 0;
  6155  011A6C  0E00               	movlw	0
  6156  011A6E  6E25               	movwf	_lQueue,c	;volatile
  6157  011A70  0E00               	movlw	0
  6158  011A72  6E26               	movwf	_lQueue+1,c	;volatile
  6159  011A74  0E00               	movlw	0
  6160  011A76  6E27               	movwf	_lQueue+2,c	;volatile
  6161  011A78  0012               	return		;funcret
  6162  011A7A                     __end_of_MXK_Dequeue:
  6163                           	opt stack 0
  6164                           tosu	equ	0xFFF
  6165                           tosh	equ	0xFFE
  6166                           tosl	equ	0xFFD
  6167                           pclath	equ	0xFFA
  6168                           tblptru	equ	0xFF8
  6169                           tblptrh	equ	0xFF7
  6170                           tblptrl	equ	0xFF6
  6171                           tablat	equ	0xFF5
  6172                           prodh	equ	0xFF4
  6173                           prodl	equ	0xFF3
  6174                           postinc0	equ	0xFEE
  6175                           wreg	equ	0xFE8
  6176                           postdec1	equ	0xFE5
  6177                           fsr1h	equ	0xFE2
  6178                           fsr1l	equ	0xFE1
  6179                           indf2	equ	0xFDF
  6180                           postinc2	equ	0xFDE
  6181                           postdec2	equ	0xFDD
  6182                           fsr2h	equ	0xFDA
  6183                           fsr2l	equ	0xFD9
  6184                           status	equ	0xFD8
  6185                           
  6186 ;; *************** function _Motor_Step *****************
  6187 ;; Defined at:
  6188 ;;		line 75 in file "Library/Motor.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;		None
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;		None
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      void 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6204 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6205 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6206 ;;Total ram usage:        2 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:   11
  6209 ;; This function calls:
  6210 ;;		_MXK_Queue
  6211 ;;		_MXK_Release
  6212 ;;		_MXK_SwitchTo
  6213 ;;		_Port_SetPin
  6214 ;;		_Timer0_Restart
  6215 ;;		_Timer0_Stop
  6216 ;; This function is called by:
  6217 ;;		_Motor_Init
  6218 ;;		_Timer0_ISR
  6219 ;;		_MXK_Dequeue
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text23
  6224  010D06                     __ptext23:
  6225                           	opt stack 0
  6226  010D06                     _Motor_Step:
  6227                           	opt stack 0
  6228                           
  6229                           ;Skip over the trampoline to the duplicate function for level 2
  6230  010D06  B249               	btfsc	btemp,1,c
  6231  010D08  EF15  F087         	goto	i2_Motor_Step
  6232  010D0C                     _Motor_Step$intlevel0:
  6233                           	opt stack 18
  6234                           
  6235                           ;Motor.c: 77: if (MXK_SwitchTo(lMotor->mAddress))
  6236                           
  6237                           ;incstack = 0
  6238  010D0C  EE20 F004          	lfsr	2,4
  6239  010D10  502C               	movf	_lMotor,w,c
  6240  010D12  26D9               	addwf	fsr2l,f,c
  6241  010D14  502D               	movf	_lMotor+1,w,c
  6242  010D16  22DA               	addwfc	fsr2h,f,c
  6243  010D18  50DF               	movf	indf2,w,c
  6244  010D1A  EC6F  F08C         	call	_MXK_SwitchTo
  6245  010D1E  0900               	iorlw	0
  6246  010D20  B4D8               	btfsc	status,2,c
  6247  010D22  D07A               	goto	l9573
  6248                           
  6249                           ;Motor.c: 78: {
  6250                           ;Motor.c: 79: if (lMotor->mDelta != 0)
  6251  010D24  C02C  FFD9         	movff	_lMotor,fsr2l
  6252  010D28  C02D  FFDA         	movff	_lMotor+1,fsr2h
  6253  010D2C  50DE               	movf	postinc2,w,c
  6254  010D2E  10DE               	iorwf	postinc2,w,c
  6255  010D30  B4D8               	btfsc	status,2,c
  6256  010D32  D06D               	goto	l9567
  6257                           
  6258                           ;Motor.c: 80: {
  6259                           ;Motor.c: 82: if (lMotor->mDelta > 0)
  6260  010D34  C02C  FFD9         	movff	_lMotor,fsr2l
  6261  010D38  C02D  FFDA         	movff	_lMotor+1,fsr2h
  6262  010D3C  0E01               	movlw	1
  6263  010D3E  BEDB               	btfsc	plusw2,7,c
  6264  010D40  D026               	goto	l9551
  6265  010D42  0E01               	movlw	1
  6266  010D44  50DB               	movf	plusw2,w,c
  6267  010D46  E103               	bnz	u6120
  6268  010D48  04DE               	decf	postinc2,w,c
  6269  010D4A  A0D8               	btfss	status,0,c
  6270  010D4C  D020               	goto	l9551
  6271  010D4E                     u6120:
  6272                           
  6273                           ;Motor.c: 83: {
  6274                           ;Motor.c: 84: if (lMotor->mDelta != 32767)
  6275  010D4E  C02C  FFD9         	movff	_lMotor,fsr2l
  6276  010D52  C02D  FFDA         	movff	_lMotor+1,fsr2h
  6277  010D56  28DE               	incf	postinc2,w,c
  6278  010D58  E104               	bnz	u6130
  6279  010D5A  0E7F               	movlw	127
  6280  010D5C  18DE               	xorwf	postinc2,w,c
  6281  010D5E  B4D8               	btfsc	status,2,c
  6282  010D60  D007               	goto	l9549
  6283  010D62                     u6130:
  6284                           
  6285                           ;Motor.c: 85: lMotor->mDelta --;
  6286  010D62  C02C  FFD9         	movff	_lMotor,fsr2l
  6287  010D66  C02D  FFDA         	movff	_lMotor+1,fsr2h
  6288  010D6A  06DE               	decf	postinc2,f,c
  6289  010D6C  0E00               	movlw	0
  6290  010D6E  5ADD               	subwfb	postdec2,f,c
  6291  010D70                     l9549:
  6292                           
  6293                           ;Motor.c: 87: Port_SetPin(&PortE, eP0, 1);
  6294  010D70  0E76               	movlw	low _PortE
  6295  010D72  0100               	movlb	0	; () banked
  6296  010D74  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6297  010D76  0E00               	movlw	high _PortE
  6298  010D78  0100               	movlb	0	; () banked
  6299  010D7A  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6300  010D7C  0E00               	movlw	0
  6301  010D7E  0100               	movlb	0	; () banked
  6302  010D80  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6303  010D82  0E01               	movlw	1
  6304  010D84  0100               	movlb	0	; () banked
  6305  010D86  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  6306  010D88  EC94  F087         	call	_Port_SetPin	;wreg free
  6307                           
  6308                           ;Motor.c: 88: }
  6309  010D8C  D01F               	goto	l9557
  6310  010D8E                     l9551:
  6311                           
  6312                           ;Motor.c: 89: else
  6313                           ;Motor.c: 90: {
  6314                           ;Motor.c: 91: if (lMotor->mDelta != -32767)
  6315  010D8E  C02C  FFD9         	movff	_lMotor,fsr2l
  6316  010D92  C02D  FFDA         	movff	_lMotor+1,fsr2h
  6317  010D96  04DE               	decf	postinc2,w,c
  6318  010D98  E104               	bnz	u6140
  6319  010D9A  0E80               	movlw	128
  6320  010D9C  18DE               	xorwf	postinc2,w,c
  6321  010D9E  B4D8               	btfsc	status,2,c
  6322  010DA0  D007               	goto	l9555
  6323  010DA2                     u6140:
  6324                           
  6325                           ;Motor.c: 92: lMotor->mDelta ++;
  6326  010DA2  C02C  FFD9         	movff	_lMotor,fsr2l
  6327  010DA6  C02D  FFDA         	movff	_lMotor+1,fsr2h
  6328  010DAA  2ADE               	incf	postinc2,f,c
  6329  010DAC  0E00               	movlw	0
  6330  010DAE  22DD               	addwfc	postdec2,f,c
  6331  010DB0                     l9555:
  6332                           
  6333                           ;Motor.c: 94: Port_SetPin(&PortE, eP0, 0);
  6334  010DB0  0E76               	movlw	low _PortE
  6335  010DB2  0100               	movlb	0	; () banked
  6336  010DB4  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6337  010DB6  0E00               	movlw	high _PortE
  6338  010DB8  0100               	movlb	0	; () banked
  6339  010DBA  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6340  010DBC  0E00               	movlw	0
  6341  010DBE  0100               	movlb	0	; () banked
  6342  010DC0  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6343  010DC2  0E00               	movlw	0
  6344  010DC4  0100               	movlb	0	; () banked
  6345  010DC6  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  6346  010DC8  EC94  F087         	call	_Port_SetPin	;wreg free
  6347  010DCC                     l9557:
  6348                           
  6349                           ;Motor.c: 95: }
  6350                           ;Motor.c: 98: Port_SetPin(&PortE, eP1, 1);
  6351  010DCC  0E76               	movlw	low _PortE
  6352  010DCE  0100               	movlb	0	; () banked
  6353  010DD0  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6354  010DD2  0E00               	movlw	high _PortE
  6355  010DD4  0100               	movlb	0	; () banked
  6356  010DD6  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6357  010DD8  0E01               	movlw	1
  6358  010DDA  0100               	movlb	0	; () banked
  6359  010DDC  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6360  010DDE  0E01               	movlw	1
  6361  010DE0  0100               	movlb	0	; () banked
  6362  010DE2  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  6363  010DE4  EC94  F087         	call	_Port_SetPin	;wreg free
  6364                           
  6365                           ;Motor.c: 99: Port_SetPin(&PortE, eP1, 0);
  6366  010DE8  0E76               	movlw	low _PortE
  6367  010DEA  0100               	movlb	0	; () banked
  6368  010DEC  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6369  010DEE  0E00               	movlw	high _PortE
  6370  010DF0  0100               	movlb	0	; () banked
  6371  010DF2  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6372  010DF4  0E01               	movlw	1
  6373  010DF6  0100               	movlb	0	; () banked
  6374  010DF8  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6375  010DFA  0E00               	movlw	0
  6376  010DFC  0100               	movlb	0	; () banked
  6377  010DFE  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  6378  010E00  EC94  F087         	call	_Port_SetPin	;wreg free
  6379                           
  6380                           ;Motor.c: 101: MXK_Release();
  6381  010E04  ECAA  F08D         	call	_MXK_Release	;wreg free
  6382                           
  6383                           ;Motor.c: 102: Timer0_Restart();
  6384  010E08  ECCA  F08D         	call	_Timer0_Restart	;wreg free
  6385                           
  6386                           ;Motor.c: 103: return;
  6387  010E0C  0012               	return	
  6388  010E0E                     l9567:
  6389                           
  6390                           ;Motor.c: 104: }
  6391                           ;Motor.c: 105: MXK_Release();
  6392  010E0E  ECAA  F08D         	call	_MXK_Release	;wreg free
  6393                           
  6394                           ;Motor.c: 106: Timer0_Stop();
  6395  010E12  ECE3  F08D         	call	_Timer0_Stop	;wreg free
  6396                           
  6397                           ;Motor.c: 107: return;
  6398  010E16  0012               	return	
  6399  010E18                     l9573:
  6400                           
  6401                           ;Motor.c: 108: }
  6402                           ;Motor.c: 111: MXK_Queue(lStepFunction);
  6403  010E18  C06B  F0C8         	movff	_lStepFunction,MXK_Queue@pCallback
  6404  010E1C  C06C  F0C9         	movff	_lStepFunction+1,MXK_Queue@pCallback+1
  6405  010E20  C06D  F0CA         	movff	_lStepFunction+2,MXK_Queue@pCallback+2
  6406  010E24  ECBC  F08D         	call	_MXK_Queue	;wreg free
  6407  010E28  0012               	return		;funcret
  6408  010E2A                     __end_of_Motor_Step:
  6409                           	opt stack 0
  6410                           tosu	equ	0xFFF
  6411                           tosh	equ	0xFFE
  6412                           tosl	equ	0xFFD
  6413                           pclath	equ	0xFFA
  6414                           tblptru	equ	0xFF8
  6415                           tblptrh	equ	0xFF7
  6416                           tblptrl	equ	0xFF6
  6417                           tablat	equ	0xFF5
  6418                           prodh	equ	0xFF4
  6419                           prodl	equ	0xFF3
  6420                           postinc0	equ	0xFEE
  6421                           wreg	equ	0xFE8
  6422                           postdec1	equ	0xFE5
  6423                           fsr1h	equ	0xFE2
  6424                           fsr1l	equ	0xFE1
  6425                           indf2	equ	0xFDF
  6426                           postinc2	equ	0xFDE
  6427                           postdec2	equ	0xFDD
  6428                           plusw2	equ	0xFDB
  6429                           fsr2h	equ	0xFDA
  6430                           fsr2l	equ	0xFD9
  6431                           status	equ	0xFD8
  6432                           
  6433 ;; *************** function _Timer0_Stop *****************
  6434 ;; Defined at:
  6435 ;;		line 89 in file "Library/Timer0.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;		None
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;		None
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  1    wreg      void 
  6442 ;; Registers used:
  6443 ;;		None
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;Total ram usage:        0 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    7
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_Motor_Step
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text24
  6464  011BC6                     __ptext24:
  6465                           	opt stack 0
  6466  011BC6                     _Timer0_Stop:
  6467                           	opt stack 21
  6468                           
  6469                           ;Timer0.c: 91: INTCONbits.TMR0IE = 0;
  6470                           
  6471                           ;incstack = 0
  6472  011BC6  9AF2               	bcf	intcon,5,c	;volatile
  6473                           
  6474                           ;Timer0.c: 92: INTCONbits.TMR0IF = 0;
  6475  011BC8  94F2               	bcf	intcon,2,c	;volatile
  6476  011BCA  0012               	return		;funcret
  6477  011BCC                     __end_of_Timer0_Stop:
  6478                           	opt stack 0
  6479                           tosu	equ	0xFFF
  6480                           tosh	equ	0xFFE
  6481                           tosl	equ	0xFFD
  6482                           pclath	equ	0xFFA
  6483                           tblptru	equ	0xFF8
  6484                           tblptrh	equ	0xFF7
  6485                           tblptrl	equ	0xFF6
  6486                           tablat	equ	0xFF5
  6487                           prodh	equ	0xFF4
  6488                           prodl	equ	0xFF3
  6489                           intcon	equ	0xFF2
  6490                           postinc0	equ	0xFEE
  6491                           wreg	equ	0xFE8
  6492                           postdec1	equ	0xFE5
  6493                           fsr1h	equ	0xFE2
  6494                           fsr1l	equ	0xFE1
  6495                           indf2	equ	0xFDF
  6496                           postinc2	equ	0xFDE
  6497                           postdec2	equ	0xFDD
  6498                           plusw2	equ	0xFDB
  6499                           fsr2h	equ	0xFDA
  6500                           fsr2l	equ	0xFD9
  6501                           status	equ	0xFD8
  6502                           
  6503 ;; *************** function _Timer0_Restart *****************
  6504 ;; Defined at:
  6505 ;;		line 83 in file "Library/Timer0.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;		None
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;		None
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1    wreg      void 
  6512 ;; Registers used:
  6513 ;;		None
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6523 ;;Total ram usage:        0 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    7
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_Motor_Step
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text25
  6534  011B94                     __ptext25:
  6535                           	opt stack 0
  6536  011B94                     _Timer0_Restart:
  6537                           	opt stack 21
  6538                           
  6539                           ;Timer0.c: 85: TMR0 = COUNTER;
  6540                           
  6541                           ;incstack = 0
  6542  011B94  C02A  FFD6         	movff	_COUNTER,4054	;volatile
  6543  011B98  C02B  FFD7         	movff	_COUNTER+1,4055	;volatile
  6544                           
  6545                           ;Timer0.c: 87: INTCONbits.TMR0IE = 1;
  6546  011B9C  8AF2               	bsf	intcon,5,c	;volatile
  6547  011B9E  0012               	return		;funcret
  6548  011BA0                     __end_of_Timer0_Restart:
  6549                           	opt stack 0
  6550                           tosu	equ	0xFFF
  6551                           tosh	equ	0xFFE
  6552                           tosl	equ	0xFFD
  6553                           pclath	equ	0xFFA
  6554                           tblptru	equ	0xFF8
  6555                           tblptrh	equ	0xFF7
  6556                           tblptrl	equ	0xFF6
  6557                           tablat	equ	0xFF5
  6558                           prodh	equ	0xFF4
  6559                           prodl	equ	0xFF3
  6560                           intcon	equ	0xFF2
  6561                           postinc0	equ	0xFEE
  6562                           wreg	equ	0xFE8
  6563                           postdec1	equ	0xFE5
  6564                           fsr1h	equ	0xFE2
  6565                           fsr1l	equ	0xFE1
  6566                           indf2	equ	0xFDF
  6567                           postinc2	equ	0xFDE
  6568                           postdec2	equ	0xFDD
  6569                           plusw2	equ	0xFDB
  6570                           fsr2h	equ	0xFDA
  6571                           fsr2l	equ	0xFD9
  6572                           status	equ	0xFD8
  6573                           
  6574 ;; *************** function _Port_SetPin *****************
  6575 ;; Defined at:
  6576 ;;		line 247 in file "Library/Port.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;  pInput          2   15[BANK0 ] const PTR struct Port
  6579 ;;		 -> PortG(10), PortE(10), PortC(10), PortF(10), 
  6580 ;;  pPin            1   17[BANK0 ] enum E6750
  6581 ;;  pValue          1   18[BANK0 ] unsigned char 
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;  Type            1   19[BANK0 ] enum E6795
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  1    wreg      void 
  6586 ;; Registers used:
  6587 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6588 ;; Tracked objects:
  6589 ;;		On entry : 0/0
  6590 ;;		On exit  : 0/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6593 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6594 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6596 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6597 ;;Total ram usage:        5 bytes
  6598 ;; Hardware stack levels used:    1
  6599 ;; Hardware stack levels required when called:   10
  6600 ;; This function calls:
  6601 ;;		_Byte_SetBit
  6602 ;;		_Word_GetPair
  6603 ;; This function is called by:
  6604 ;;		_LED_Set
  6605 ;;		_Motor_Step
  6606 ;;		_MXK_Init
  6607 ;;		_Reset_Low
  6608 ;;		_Reset_High
  6609 ;;		_Port_TogglePin
  6610 ;;		_Motor_Init
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           	psect	text26
  6615  010F28                     __ptext26:
  6616                           	opt stack 0
  6617  010F28                     _Port_SetPin:
  6618                           	opt stack 19
  6619                           
  6620                           ;Port.c: 249: ePinType Type = (ePinType)Word_GetPair(&pInput->mType, (UINT8)pPin);
  6621                           
  6622                           ;incstack = 0
  6623  010F28  0E08               	movlw	8
  6624  010F2A  0100               	movlb	0	; () banked
  6625  010F2C  25D7               	addwf	Port_SetPin@pInput& (0+255),w,b
  6626  010F2E  0100               	movlb	0	; () banked
  6627  010F30  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  6628  010F32  0E00               	movlw	0
  6629  010F34  0100               	movlb	0	; () banked
  6630  010F36  21D8               	addwfc	(Port_SetPin@pInput+1)& (0+255),w,b
  6631  010F38  0100               	movlb	0	; () banked
  6632  010F3A  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  6633  010F3C  C0D9  F0D6         	movff	Port_SetPin@pPin,Word_GetPair@pPair
  6634  010F40  ECB0  F08C         	call	_Word_GetPair	;wreg free
  6635  010F44  0100               	movlb	0	; () banked
  6636  010F46  6FDB               	movwf	Port_SetPin@Type& (0+255),b
  6637                           
  6638                           ;Port.c: 250: switch (Type)
  6639  010F48  D042               	goto	l9099
  6640  010F4A                     l9085:
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;Port.c: 256: pValue &= 1;
  6644  010F4A  0E01               	movlw	1
  6645  010F4C  0100               	movlb	0	; () banked
  6646  010F4E  17DA               	andwf	Port_SetPin@pValue& (0+255),f,b
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;Port.c: 257: Byte_SetBit(pInput->mDirection, pPin, pValue);
  6650  010F50  0100               	movlb	0	; () banked
  6651  010F52  EE20 F002          	lfsr	2,2
  6652  010F56  51D7               	movf	Port_SetPin@pInput& (0+255),w,b
  6653  010F58  26D9               	addwf	fsr2l,f,c
  6654  010F5A  51D8               	movf	(Port_SetPin@pInput+1)& (0+255),w,b
  6655  010F5C  22DA               	addwfc	fsr2h,f,c
  6656  010F5E  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  6657  010F62  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  6658  010F66  C0D9  F0CA         	movff	Port_SetPin@pPin,Byte_SetBit@pBit
  6659  010F6A  C0DA  F0CB         	movff	Port_SetPin@pValue,Byte_SetBit@pValue
  6660  010F6E  EC21  F08B         	call	_Byte_SetBit	;wreg free
  6661                           
  6662                           ;Port.c: 258: break;
  6663  010F72  0012               	return	
  6664  010F74                     l9089:
  6665                           
  6666                           ;Port.c: 261: pValue &= 1;
  6667  010F74  0E01               	movlw	1
  6668  010F76  0100               	movlb	0	; () banked
  6669  010F78  17DA               	andwf	Port_SetPin@pValue& (0+255),f,b
  6670                           
  6671                           ;Port.c: 262: pValue ^= 1;
  6672  010F7A  0E01               	movlw	1
  6673  010F7C  0100               	movlb	0	; () banked
  6674  010F7E  1BDA               	xorwf	Port_SetPin@pValue& (0+255),f,b
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;Port.c: 263: Byte_SetBit(pInput->mDirection, pPin, pValue);
  6678  010F80  0100               	movlb	0	; () banked
  6679  010F82  EE20 F002          	lfsr	2,2
  6680  010F86  51D7               	movf	Port_SetPin@pInput& (0+255),w,b
  6681  010F88  26D9               	addwf	fsr2l,f,c
  6682  010F8A  51D8               	movf	(Port_SetPin@pInput+1)& (0+255),w,b
  6683  010F8C  22DA               	addwfc	fsr2h,f,c
  6684  010F8E  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  6685  010F92  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  6686  010F96  C0D9  F0CA         	movff	Port_SetPin@pPin,Byte_SetBit@pBit
  6687  010F9A  C0DA  F0CB         	movff	Port_SetPin@pValue,Byte_SetBit@pValue
  6688  010F9E  EC21  F08B         	call	_Byte_SetBit	;wreg free
  6689                           
  6690                           ;Port.c: 264: break;
  6691  010FA2  0012               	return	
  6692  010FA4                     l9093:
  6693                           
  6694                           ;Port.c: 266: pValue &= 1;
  6695  010FA4  0E01               	movlw	1
  6696  010FA6  0100               	movlb	0	; () banked
  6697  010FA8  17DA               	andwf	Port_SetPin@pValue& (0+255),f,b
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;Port.c: 267: Byte_SetBit(pInput->mOutput, pPin, pValue);
  6701  010FAA  0100               	movlb	0	; () banked
  6702  010FAC  EE20 F004          	lfsr	2,4
  6703  010FB0  51D7               	movf	Port_SetPin@pInput& (0+255),w,b
  6704  010FB2  26D9               	addwf	fsr2l,f,c
  6705  010FB4  51D8               	movf	(Port_SetPin@pInput+1)& (0+255),w,b
  6706  010FB6  22DA               	addwfc	fsr2h,f,c
  6707  010FB8  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  6708  010FBC  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  6709  010FC0  C0D9  F0CA         	movff	Port_SetPin@pPin,Byte_SetBit@pBit
  6710  010FC4  C0DA  F0CB         	movff	Port_SetPin@pValue,Byte_SetBit@pValue
  6711  010FC8  EC21  F08B         	call	_Byte_SetBit	;wreg free
  6712                           
  6713                           ;Port.c: 269: }
  6714                           
  6715                           ;Port.c: 268: break;
  6716  010FCC  0012               	return	
  6717  010FCE                     l9099:
  6718  010FCE  0100               	movlb	0	; () banked
  6719  010FD0  51DB               	movf	Port_SetPin@Type& (0+255),w,b
  6720                           
  6721                           ; Switch size 1, requested type "space"
  6722                           ; Number of cases is 4, Range of values is 0 to 3
  6723                           ; switch strategies available:
  6724                           ; Name         Instructions Cycles
  6725                           ; simple_byte           13     7 (average)
  6726                           ;	Chosen strategy is simple_byte
  6727  010FD2  0A00               	xorlw	0	; case 0
  6728  010FD4  B4D8               	btfsc	status,2,c
  6729  010FD6  0012               	return	
  6730  010FD8  0A01               	xorlw	1	; case 1
  6731  010FDA  B4D8               	btfsc	status,2,c
  6732  010FDC  D7B6               	goto	l9085
  6733  010FDE  0A03               	xorlw	3	; case 2
  6734  010FE0  B4D8               	btfsc	status,2,c
  6735  010FE2  D7C8               	goto	l9089
  6736  010FE4  0A01               	xorlw	1	; case 3
  6737  010FE6  A4D8               	btfss	status,2,c
  6738  010FE8  0012               	return	
  6739  010FEA  D7DC               	goto	l9093
  6740  010FEC                     __end_of_Port_SetPin:
  6741                           	opt stack 0
  6742                           tosu	equ	0xFFF
  6743                           tosh	equ	0xFFE
  6744                           tosl	equ	0xFFD
  6745                           pclath	equ	0xFFA
  6746                           tblptru	equ	0xFF8
  6747                           tblptrh	equ	0xFF7
  6748                           tblptrl	equ	0xFF6
  6749                           tablat	equ	0xFF5
  6750                           prodh	equ	0xFF4
  6751                           prodl	equ	0xFF3
  6752                           intcon	equ	0xFF2
  6753                           postinc0	equ	0xFEE
  6754                           wreg	equ	0xFE8
  6755                           postdec1	equ	0xFE5
  6756                           fsr1h	equ	0xFE2
  6757                           fsr1l	equ	0xFE1
  6758                           indf2	equ	0xFDF
  6759                           postinc2	equ	0xFDE
  6760                           postdec2	equ	0xFDD
  6761                           plusw2	equ	0xFDB
  6762                           fsr2h	equ	0xFDA
  6763                           fsr2l	equ	0xFD9
  6764                           status	equ	0xFD8
  6765                           
  6766 ;; *************** function _Word_GetPair *****************
  6767 ;; Defined at:
  6768 ;;		line 156 in file "Library/Types.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;  pInput          2   12[BANK0 ] PTR struct Word
  6771 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  6772 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
  6773 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
  6774 ;;		 -> PortC(10), PortF(10), NULL(0), 
  6775 ;;  pPair           1   14[BANK0 ] unsigned char 
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;		None
  6778 ;; Return value:  Size  Location     Type
  6779 ;;                  1    wreg      unsigned char 
  6780 ;; Registers used:
  6781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6782 ;; Tracked objects:
  6783 ;;		On entry : 0/0
  6784 ;;		On exit  : 0/0
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6787 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6791 ;;Total ram usage:        3 bytes
  6792 ;; Hardware stack levels used:    1
  6793 ;; Hardware stack levels required when called:    9
  6794 ;; This function calls:
  6795 ;;		_Byte_GetPair
  6796 ;; This function is called by:
  6797 ;;		_Port_Init
  6798 ;;		_Port_SetPin
  6799 ;;		_Port_Set
  6800 ;;		_PortProperty_Valid
  6801 ;;		_Port_SetPair
  6802 ;;		_Port_SetQuad
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           	psect	text27
  6807  011960                     __ptext27:
  6808                           	opt stack 0
  6809  011960                     _Word_GetPair:
  6810                           	opt stack 15
  6811                           
  6812                           ;Types.c: 158: if (pPair >= 4)
  6813                           
  6814                           ;incstack = 0
  6815  011960  0E03               	movlw	3
  6816  011962  0100               	movlb	0	; () banked
  6817  011964  65D6               	cpfsgt	Word_GetPair@pPair& (0+255),b
  6818  011966  D012               	goto	l8999
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;Types.c: 159: return Byte_GetPair(&(pInput->MS_Byte), pPair - 4);
  6822  011968  0E01               	movlw	1
  6823  01196A  0100               	movlb	0	; () banked
  6824  01196C  25D4               	addwf	Word_GetPair@pInput& (0+255),w,b
  6825  01196E  0100               	movlb	0	; () banked
  6826  011970  6FD1               	movwf	Byte_GetPair@pInput& (0+255),b
  6827  011972  0E00               	movlw	0
  6828  011974  0100               	movlb	0	; () banked
  6829  011976  21D5               	addwfc	(Word_GetPair@pInput+1)& (0+255),w,b
  6830  011978  0100               	movlb	0	; () banked
  6831  01197A  6FD2               	movwf	(Byte_GetPair@pInput+1)& (0+255),b
  6832  01197C  0100               	movlb	0	; () banked
  6833  01197E  51D6               	movf	Word_GetPair@pPair& (0+255),w,b
  6834  011980  0FFC               	addlw	252
  6835  011982  0100               	movlb	0	; () banked
  6836  011984  6FD3               	movwf	Byte_GetPair@pPair& (0+255),b
  6837  011986  EC8E  F08D         	call	_Byte_GetPair	;wreg free
  6838  01198A  0012               	return	
  6839  01198C                     l8999:
  6840                           
  6841                           ;Types.c: 160: else
  6842                           ;Types.c: 161: return Byte_GetPair(&(pInput->LS_Byte), pPair);
  6843  01198C  C0D4  F0D1         	movff	Word_GetPair@pInput,Byte_GetPair@pInput
  6844  011990  C0D5  F0D2         	movff	Word_GetPair@pInput+1,Byte_GetPair@pInput+1
  6845  011994  C0D6  F0D3         	movff	Word_GetPair@pPair,Byte_GetPair@pPair
  6846  011998  EC8E  F08D         	call	_Byte_GetPair	;wreg free
  6847  01199C  0012               	return	
  6848  01199E                     __end_of_Word_GetPair:
  6849                           	opt stack 0
  6850                           tosu	equ	0xFFF
  6851                           tosh	equ	0xFFE
  6852                           tosl	equ	0xFFD
  6853                           pclath	equ	0xFFA
  6854                           tblptru	equ	0xFF8
  6855                           tblptrh	equ	0xFF7
  6856                           tblptrl	equ	0xFF6
  6857                           tablat	equ	0xFF5
  6858                           prodh	equ	0xFF4
  6859                           prodl	equ	0xFF3
  6860                           intcon	equ	0xFF2
  6861                           postinc0	equ	0xFEE
  6862                           wreg	equ	0xFE8
  6863                           postdec1	equ	0xFE5
  6864                           fsr1h	equ	0xFE2
  6865                           fsr1l	equ	0xFE1
  6866                           indf2	equ	0xFDF
  6867                           postinc2	equ	0xFDE
  6868                           postdec2	equ	0xFDD
  6869                           plusw2	equ	0xFDB
  6870                           fsr2h	equ	0xFDA
  6871                           fsr2l	equ	0xFD9
  6872                           status	equ	0xFD8
  6873                           
  6874 ;; *************** function _Byte_GetPair *****************
  6875 ;; Defined at:
  6876 ;;		line 87 in file "Library/Types.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  pInput          2    9[BANK0 ] PTR struct Byte
  6879 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
  6880 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
  6881 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
  6882 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
  6883 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
  6884 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
  6885 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
  6886 ;;		 -> NULL(0), 
  6887 ;;  pPair           1   11[BANK0 ] unsigned char 
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1    wreg      unsigned char 
  6892 ;; Registers used:
  6893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6899 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6902 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6903 ;;Total ram usage:        3 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; Hardware stack levels required when called:    8
  6906 ;; This function calls:
  6907 ;;		_Byte_GetZone
  6908 ;; This function is called by:
  6909 ;;		_Word_GetPair
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           	psect	text28
  6914  011B1C                     __ptext28:
  6915                           	opt stack 0
  6916  011B1C                     _Byte_GetPair:
  6917                           	opt stack 15
  6918                           
  6919                           ;Types.c: 89: return Byte_GetZone(pInput, 4, pPair, 2);
  6920                           
  6921                           ;incstack = 0
  6922  011B1C  C0D1  F0C8         	movff	Byte_GetPair@pInput,Byte_GetZone@pInput
  6923  011B20  C0D2  F0C9         	movff	Byte_GetPair@pInput+1,Byte_GetZone@pInput+1
  6924  011B24  0E04               	movlw	4
  6925  011B26  0100               	movlb	0	; () banked
  6926  011B28  6FCA               	movwf	Byte_GetZone@pMax& (0+255),b
  6927  011B2A  C0D3  F0CB         	movff	Byte_GetPair@pPair,Byte_GetZone@pChunk
  6928  011B2E  0E02               	movlw	2
  6929  011B30  0100               	movlb	0	; () banked
  6930  011B32  6FCC               	movwf	Byte_GetZone@pChunkSize& (0+255),b
  6931  011B34  ECF0  F089         	call	_Byte_GetZone	;wreg free
  6932  011B38  0012               	return	
  6933  011B3A                     __end_of_Byte_GetPair:
  6934                           	opt stack 0
  6935                           tosu	equ	0xFFF
  6936                           tosh	equ	0xFFE
  6937                           tosl	equ	0xFFD
  6938                           pclath	equ	0xFFA
  6939                           tblptru	equ	0xFF8
  6940                           tblptrh	equ	0xFF7
  6941                           tblptrl	equ	0xFF6
  6942                           tablat	equ	0xFF5
  6943                           prodh	equ	0xFF4
  6944                           prodl	equ	0xFF3
  6945                           intcon	equ	0xFF2
  6946                           postinc0	equ	0xFEE
  6947                           wreg	equ	0xFE8
  6948                           postdec1	equ	0xFE5
  6949                           fsr1h	equ	0xFE2
  6950                           fsr1l	equ	0xFE1
  6951                           indf2	equ	0xFDF
  6952                           postinc2	equ	0xFDE
  6953                           postdec2	equ	0xFDD
  6954                           plusw2	equ	0xFDB
  6955                           fsr2h	equ	0xFDA
  6956                           fsr2l	equ	0xFD9
  6957                           status	equ	0xFD8
  6958                           
  6959 ;; *************** function _Byte_GetZone *****************
  6960 ;; Defined at:
  6961 ;;		line 64 in file "Library/Types.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  pInput          2    0[BANK0 ] PTR struct Byte
  6964 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
  6965 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
  6966 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
  6967 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
  6968 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
  6969 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
  6970 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
  6971 ;;		 -> NULL(0), 
  6972 ;;  pMax            1    2[BANK0 ] unsigned char 
  6973 ;;  pChunk          1    3[BANK0 ] unsigned char 
  6974 ;;  pChunkSize      1    4[BANK0 ] unsigned char 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;  Output          1    8[BANK0 ] unsigned char 
  6977 ;;  Offset          1    7[BANK0 ] unsigned char 
  6978 ;;  MASK            1    6[BANK0 ] unsigned char 
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  1    wreg      unsigned char 
  6981 ;; Registers used:
  6982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6988 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6991 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6992 ;;Total ram usage:        9 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:    7
  6995 ;; This function calls:
  6996 ;;		Nothing
  6997 ;; This function is called by:
  6998 ;;		_Byte_GetPair
  6999 ;;		_Byte_GetTriple
  7000 ;;		_Byte_GetQuad
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           	psect	text29
  7005  0113E0                     __ptext29:
  7006                           	opt stack 0
  7007  0113E0                     _Byte_GetZone:
  7008                           	opt stack 15
  7009                           
  7010                           ;Types.c: 66: UINT8 Output = pInput->mBits;
  7011                           
  7012                           ;incstack = 0
  7013  0113E0  C0C8  FFF6         	movff	Byte_GetZone@pInput,tblptrl
  7014  0113E4  C0C9  FFF7         	movff	Byte_GetZone@pInput+1,tblptrh
  7015  0113E8  0E00               	movlw	low (__mediumconst shr (0+16))
  7016  0113EA  6EF8               	movwf	tblptru,c
  7017  0113EC  0E0F               	movlw	(high __ramtop+-1)
  7018  0113EE  64F7               	cpfsgt	tblptrh,c
  7019  0113F0  D003               	bra	u5587
  7020  0113F2  0008               	tblrd		*
  7021  0113F4  50F5               	movf	tablat,w,c
  7022  0113F6  D005               	bra	u5580
  7023  0113F8                     u5587:
  7024  0113F8  CFF6 FFE9          	movff	tblptrl,fsr0l
  7025  0113FC  CFF7 FFEA          	movff	tblptrh,fsr0h
  7026  011400  50EF               	movf	indf0,w,c
  7027  011402                     u5580:
  7028  011402  0100               	movlb	0	; () banked
  7029  011404  6FD0               	movwf	Byte_GetZone@Output& (0+255),b
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;Types.c: 67: UINT8 MASK = MASKS[pChunkSize];
  7033  011406  0100               	movlb	0	; () banked
  7034  011408  51CC               	movf	Byte_GetZone@pChunkSize& (0+255),w,b
  7035  01140A  0D01               	mullw	1
  7036  01140C  0E01               	movlw	low _MASKS
  7037  01140E  24F3               	addwf	prodl,w,c
  7038  011410  6EF6               	movwf	tblptrl,c
  7039  011412  0EFE               	movlw	high _MASKS
  7040  011414  20F4               	addwfc	prodh,w,c
  7041  011416  6EF7               	movwf	tblptrh,c
  7042  011418                     	if	1	;There are 3 active tblptr bytes
  7043  011418  6AF8               	clrf	tblptru,c
  7044  01141A  0E00               	movlw	low (__mediumconst shr (0+16))
  7045  01141C  22F8               	addwfc	tblptru,f,c
  7046  01141E                     	endif
  7047  01141E  0008               	tblrd		*
  7048  011420  CFF5 F0CE          	movff	tablat,Byte_GetZone@MASK
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;Types.c: 68: UINT8 Offset = 0;
  7052  011424  0E00               	movlw	0
  7053  011426  0100               	movlb	0	; () banked
  7054  011428  6FCF               	movwf	Byte_GetZone@Offset& (0+255),b
  7055                           
  7056                           ;Types.c: 70: while (pChunk >= pMax)
  7057  01142A  D006               	goto	l8973
  7058  01142C                     l8969:
  7059                           
  7060                           ; BSR set to: 0
  7061                           ;Types.c: 71: {
  7062                           ;Types.c: 72: pChunk -= pMax;
  7063  01142C  0100               	movlb	0	; () banked
  7064  01142E  51CA               	movf	Byte_GetZone@pMax& (0+255),w,b
  7065  011430  0100               	movlb	0	; () banked
  7066  011432  5FCB               	subwf	Byte_GetZone@pChunk& (0+255),f,b
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;Types.c: 73: Offset += 1;
  7070  011434  0100               	movlb	0	; () banked
  7071  011436  2BCF               	incf	Byte_GetZone@Offset& (0+255),f,b
  7072  011438                     l8973:
  7073                           
  7074                           ; BSR set to: 0
  7075  011438  0100               	movlb	0	; () banked
  7076  01143A  51CA               	movf	Byte_GetZone@pMax& (0+255),w,b
  7077  01143C  0100               	movlb	0	; () banked
  7078  01143E  5DCB               	subwf	Byte_GetZone@pChunk& (0+255),w,b
  7079  011440  B0D8               	btfsc	status,0,c
  7080  011442  D7F4               	goto	l8969
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;Types.c: 74: }
  7084                           ;Types.c: 75: pChunk *= pChunkSize;
  7085                           
  7086                           ; BSR set to: 0
  7087  011444  0100               	movlb	0	; () banked
  7088  011446  51CC               	movf	Byte_GetZone@pChunkSize& (0+255),w,b
  7089  011448  0100               	movlb	0	; () banked
  7090  01144A  03CB               	mulwf	Byte_GetZone@pChunk& (0+255),b
  7091  01144C  50F3               	movf	prodl,w,c
  7092  01144E  6FCB               	movwf	Byte_GetZone@pChunk& (0+255),b
  7093                           
  7094                           ; BSR set to: 0
  7095                           ;Types.c: 76: pChunk += Offset;
  7096  011450  0100               	movlb	0	; () banked
  7097  011452  51CF               	movf	Byte_GetZone@Offset& (0+255),w,b
  7098  011454  0100               	movlb	0	; () banked
  7099  011456  27CB               	addwf	Byte_GetZone@pChunk& (0+255),f,b
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;Types.c: 78: Output >>= pChunk;
  7103  011458  0100               	movlb	0	; () banked
  7104  01145A  29CB               	incf	Byte_GetZone@pChunk& (0+255),w,b
  7105  01145C  0100               	movlb	0	; () banked
  7106  01145E  6FCD               	movwf	??_Byte_GetZone& (0+255),b
  7107  011460  D003               	goto	u5600
  7108  011462                     u5605:
  7109  011462  0100               	movlb	0	; () banked
  7110  011464  90D8               	bcf	status,0,c
  7111  011466  33D0               	rrcf	Byte_GetZone@Output& (0+255),f,b
  7112  011468                     u5600:
  7113  011468  0100               	movlb	0	; () banked
  7114  01146A  2FCD               	decfsz	??_Byte_GetZone& (0+255),f,b
  7115  01146C  D7FA               	goto	u5605
  7116                           
  7117                           ;Types.c: 79: Output &= MASK;
  7118  01146E  0100               	movlb	0	; () banked
  7119  011470  51CE               	movf	Byte_GetZone@MASK& (0+255),w,b
  7120  011472  0100               	movlb	0	; () banked
  7121  011474  17D0               	andwf	Byte_GetZone@Output& (0+255),f,b
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;Types.c: 80: return Output;
  7125  011476  0100               	movlb	0	; () banked
  7126  011478  51D0               	movf	Byte_GetZone@Output& (0+255),w,b
  7127  01147A  0012               	return	
  7128  01147C                     __end_of_Byte_GetZone:
  7129                           	opt stack 0
  7130                           tosu	equ	0xFFF
  7131                           tosh	equ	0xFFE
  7132                           tosl	equ	0xFFD
  7133                           pclath	equ	0xFFA
  7134                           tblptru	equ	0xFF8
  7135                           tblptrh	equ	0xFF7
  7136                           tblptrl	equ	0xFF6
  7137                           tablat	equ	0xFF5
  7138                           prodh	equ	0xFF4
  7139                           prodl	equ	0xFF3
  7140                           intcon	equ	0xFF2
  7141                           indf0	equ	0xFEF
  7142                           postinc0	equ	0xFEE
  7143                           fsr0h	equ	0xFEA
  7144                           fsr0l	equ	0xFE9
  7145                           wreg	equ	0xFE8
  7146                           postdec1	equ	0xFE5
  7147                           fsr1h	equ	0xFE2
  7148                           fsr1l	equ	0xFE1
  7149                           indf2	equ	0xFDF
  7150                           postinc2	equ	0xFDE
  7151                           postdec2	equ	0xFDD
  7152                           plusw2	equ	0xFDB
  7153                           fsr2h	equ	0xFDA
  7154                           fsr2l	equ	0xFD9
  7155                           status	equ	0xFD8
  7156                           
  7157 ;; *************** function _Byte_SetBit *****************
  7158 ;; Defined at:
  7159 ;;		line 32 in file "Library/Types.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;  pInput          2    0[BANK0 ] PTR struct Byte
  7162 ;;		 -> SSP2CON2(1), SSP1CON2(1), SSP2CON1(1), SSP2STAT(1), 
  7163 ;;		 -> SSP1CON1(1), SSP1STAT(1), TRISG(1), TRISF(1), 
  7164 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
  7165 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
  7166 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
  7167 ;;		 -> NULL(0), 
  7168 ;;  pBit            1    2[BANK0 ] unsigned char 
  7169 ;;  pValue          1    3[BANK0 ] unsigned char 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;		None
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      void 
  7174 ;; Registers used:
  7175 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7181 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7183 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7184 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7185 ;;Total ram usage:        7 bytes
  7186 ;; Hardware stack levels used:    1
  7187 ;; Hardware stack levels required when called:    7
  7188 ;; This function calls:
  7189 ;;		Nothing
  7190 ;; This function is called by:
  7191 ;;		_Port_SetPinType
  7192 ;;		_Port_SetPin
  7193 ;;		_SPI_Init
  7194 ;;		_SPI_MinSpeed
  7195 ;;		_SPI_MaxSpeed
  7196 ;;		_Word_SetBit
  7197 ;;		_I2C_Init
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text30
  7202  011642                     __ptext30:
  7203                           	opt stack 0
  7204  011642                     _Byte_SetBit:
  7205                           	opt stack 21
  7206                           
  7207                           ;Types.c: 34: pValue &= 1;
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;incstack = 0
  7211  011642  0E01               	movlw	1
  7212  011644  0100               	movlb	0	; () banked
  7213  011646  17CB               	andwf	Byte_SetBit@pValue& (0+255),f,b
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;Types.c: 35: pInput->mBits &= ~(1 << pBit);
  7217  011648  C0CA  F0CC         	movff	Byte_SetBit@pBit,??_Byte_SetBit
  7218  01164C  0E01               	movlw	1
  7219  01164E  0100               	movlb	0	; () banked
  7220  011650  6FCD               	movwf	(??_Byte_SetBit+1)& (0+255),b
  7221  011652  0100               	movlb	0	; () banked
  7222  011654  2BCC               	incf	??_Byte_SetBit& (0+255),f,b
  7223  011656  D003               	goto	u5704
  7224  011658                     u5705:
  7225  011658  0100               	movlb	0	; () banked
  7226  01165A  90D8               	bcf	status,0,c
  7227  01165C  37CD               	rlcf	(??_Byte_SetBit+1)& (0+255),f,b
  7228  01165E                     u5704:
  7229  01165E  0100               	movlb	0	; () banked
  7230  011660  2FCC               	decfsz	??_Byte_SetBit& (0+255),f,b
  7231  011662  D7FA               	goto	u5705
  7232  011664  0100               	movlb	0	; () banked
  7233  011666  51CD               	movf	(??_Byte_SetBit+1)& (0+255),w,b
  7234  011668  0AFF               	xorlw	255
  7235  01166A  0100               	movlb	0	; () banked
  7236  01166C  6FCE               	movwf	(??_Byte_SetBit+2)& (0+255),b
  7237  01166E  C0C8  FFD9         	movff	Byte_SetBit@pInput,fsr2l
  7238  011672  C0C9  FFDA         	movff	Byte_SetBit@pInput+1,fsr2h
  7239  011676  0100               	movlb	0	; () banked
  7240  011678  51CE               	movf	(??_Byte_SetBit+2)& (0+255),w,b
  7241  01167A  16DF               	andwf	indf2,f,c
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;Types.c: 36: pInput->mBits |= pValue << pBit;
  7245  01167C  C0CA  F0CC         	movff	Byte_SetBit@pBit,??_Byte_SetBit
  7246  011680  C0CB  F0CD         	movff	Byte_SetBit@pValue,??_Byte_SetBit+1
  7247  011684  0100               	movlb	0	; () banked
  7248  011686  2BCC               	incf	??_Byte_SetBit& (0+255),f,b
  7249  011688  D003               	goto	u5714
  7250  01168A                     u5715:
  7251  01168A  0100               	movlb	0	; () banked
  7252  01168C  90D8               	bcf	status,0,c
  7253  01168E  37CD               	rlcf	(??_Byte_SetBit+1)& (0+255),f,b
  7254  011690                     u5714:
  7255  011690  0100               	movlb	0	; () banked
  7256  011692  2FCC               	decfsz	??_Byte_SetBit& (0+255),f,b
  7257  011694  D7FA               	goto	u5715
  7258  011696  C0C8  FFD9         	movff	Byte_SetBit@pInput,fsr2l
  7259  01169A  C0C9  FFDA         	movff	Byte_SetBit@pInput+1,fsr2h
  7260  01169E  0100               	movlb	0	; () banked
  7261  0116A0  51CD               	movf	(??_Byte_SetBit+1)& (0+255),w,b
  7262  0116A2  12DF               	iorwf	indf2,f,c
  7263                           
  7264                           ; BSR set to: 0
  7265  0116A4  0012               	return		;funcret
  7266  0116A6                     __end_of_Byte_SetBit:
  7267                           	opt stack 0
  7268                           tosu	equ	0xFFF
  7269                           tosh	equ	0xFFE
  7270                           tosl	equ	0xFFD
  7271                           pclath	equ	0xFFA
  7272                           tblptru	equ	0xFF8
  7273                           tblptrh	equ	0xFF7
  7274                           tblptrl	equ	0xFF6
  7275                           tablat	equ	0xFF5
  7276                           prodh	equ	0xFF4
  7277                           prodl	equ	0xFF3
  7278                           intcon	equ	0xFF2
  7279                           indf0	equ	0xFEF
  7280                           postinc0	equ	0xFEE
  7281                           fsr0h	equ	0xFEA
  7282                           fsr0l	equ	0xFE9
  7283                           wreg	equ	0xFE8
  7284                           postdec1	equ	0xFE5
  7285                           fsr1h	equ	0xFE2
  7286                           fsr1l	equ	0xFE1
  7287                           indf2	equ	0xFDF
  7288                           postinc2	equ	0xFDE
  7289                           postdec2	equ	0xFDD
  7290                           plusw2	equ	0xFDB
  7291                           fsr2h	equ	0xFDA
  7292                           fsr2l	equ	0xFD9
  7293                           status	equ	0xFD8
  7294                           
  7295 ;; *************** function _MXK_SwitchTo *****************
  7296 ;; Defined at:
  7297 ;;		line 105 in file "Library/MXK.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  pModule         1    wreg     enum E6927
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  pModule         1    7[BANK0 ] enum E6927
  7302 ;;  CUR             1    6[BANK0 ] unsigned char 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  1    wreg      unsigned char 
  7305 ;; Registers used:
  7306 ;;		wreg, status,2, status,0, cstack
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7313 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;Total ram usage:        2 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:    8
  7319 ;; This function calls:
  7320 ;;		_delay_us
  7321 ;; This function is called by:
  7322 ;;		_Motor_Step
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text31
  7327  0118DE                     __ptext31:
  7328                           	opt stack 0
  7329  0118DE                     _MXK_SwitchTo:
  7330                           	opt stack 20
  7331                           
  7332                           ; BSR set to: 0
  7333                           ;incstack = 0
  7334                           ;MXK_SwitchTo@pModule stored from wreg
  7335  0118DE  0100               	movlb	0	; () banked
  7336  0118E0  6FCF               	movwf	MXK_SwitchTo@pModule& (0+255),b
  7337                           
  7338                           ;MXK.c: 107: UINT8 CUR = 0xF & PORTG;
  7339  0118E2  5086               	movf	3974,w,c	;volatile
  7340  0118E4  0B0F               	andlw	15
  7341  0118E6  0100               	movlb	0	; () banked
  7342  0118E8  6FCE               	movwf	MXK_SwitchTo@CUR& (0+255),b
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;MXK.c: 109: if (Bus_State == eMXK_Busy)
  7346  0118EA  5044               	movf	_Bus_State,w,c
  7347  0118EC  A4D8               	btfss	status,2,c
  7348  0118EE  D002               	goto	l9367
  7349                           
  7350                           ; BSR set to: 0
  7351                           ;MXK.c: 110: return 0;
  7352  0118F0  0E00               	movlw	0
  7353                           
  7354                           ; BSR set to: 0
  7355  0118F2  0012               	return	
  7356  0118F4                     l9367:
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;MXK.c: 112: Bus_State = eMXK_Busy;
  7360  0118F4  0E00               	movlw	0
  7361  0118F6  6E44               	movwf	_Bus_State,c
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;MXK.c: 114: if (CUR != pModule)
  7365  0118F8  0100               	movlb	0	; () banked
  7366  0118FA  51CF               	movf	MXK_SwitchTo@pModule& (0+255),w,b
  7367  0118FC  0100               	movlb	0	; () banked
  7368  0118FE  19CE               	xorwf	MXK_SwitchTo@CUR& (0+255),w,b
  7369  011900  B4D8               	btfsc	status,2,c
  7370  011902  D00C               	goto	l9375
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;MXK.c: 115: {
  7374                           ;MXK.c: 116: PORTG &= ~(0xF);
  7375  011904  0EF0               	movlw	240
  7376  011906  1686               	andwf	3974,f,c	;volatile
  7377                           
  7378                           ;MXK.c: 117: PORTG |= pModule;
  7379  011908  0100               	movlb	0	; () banked
  7380  01190A  51CF               	movf	MXK_SwitchTo@pModule& (0+255),w,b
  7381  01190C  1286               	iorwf	3974,f,c	;volatile
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;MXK.c: 120: delay_us(10);
  7385  01190E  0E00               	movlw	0
  7386  011910  0100               	movlb	0	; () banked
  7387  011912  6FC9               	movwf	(delay_us@us+1)& (0+255),b
  7388  011914  0E0A               	movlw	10
  7389  011916  6FC8               	movwf	delay_us@us& (0+255),b
  7390  011918  ECB1  F08B         	call	_delay_us	;wreg free
  7391  01191C                     l9375:
  7392                           
  7393                           ;MXK.c: 121: }
  7394                           ;MXK.c: 122: return 1;
  7395  01191C  0E01               	movlw	1
  7396  01191E  0012               	return	
  7397  011920                     __end_of_MXK_SwitchTo:
  7398                           	opt stack 0
  7399                           tosu	equ	0xFFF
  7400                           tosh	equ	0xFFE
  7401                           tosl	equ	0xFFD
  7402                           pclath	equ	0xFFA
  7403                           tblptru	equ	0xFF8
  7404                           tblptrh	equ	0xFF7
  7405                           tblptrl	equ	0xFF6
  7406                           tablat	equ	0xFF5
  7407                           prodh	equ	0xFF4
  7408                           prodl	equ	0xFF3
  7409                           intcon	equ	0xFF2
  7410                           indf0	equ	0xFEF
  7411                           postinc0	equ	0xFEE
  7412                           fsr0h	equ	0xFEA
  7413                           fsr0l	equ	0xFE9
  7414                           wreg	equ	0xFE8
  7415                           postdec1	equ	0xFE5
  7416                           fsr1h	equ	0xFE2
  7417                           fsr1l	equ	0xFE1
  7418                           indf2	equ	0xFDF
  7419                           postinc2	equ	0xFDE
  7420                           postdec2	equ	0xFDD
  7421                           plusw2	equ	0xFDB
  7422                           fsr2h	equ	0xFDA
  7423                           fsr2l	equ	0xFD9
  7424                           status	equ	0xFD8
  7425                           
  7426 ;; *************** function _MXK_Release *****************
  7427 ;; Defined at:
  7428 ;;		line 130 in file "Library/MXK.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;		None
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;		None
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  1    wreg      unsigned char 
  7435 ;; Registers used:
  7436 ;;		wreg, status,2, status,0
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7446 ;;Total ram usage:        0 bytes
  7447 ;; Hardware stack levels used:    1
  7448 ;; Hardware stack levels required when called:    7
  7449 ;; This function calls:
  7450 ;;		Nothing
  7451 ;; This function is called by:
  7452 ;;		_Motor_Step
  7453 ;;		_main
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           	psect	text32
  7458  011B54                     __ptext32:
  7459                           	opt stack 0
  7460  011B54                     _MXK_Release:
  7461                           	opt stack 23
  7462                           
  7463                           ;MXK.c: 132: Bus_State = eMXK_Idle;
  7464                           
  7465                           ;incstack = 0
  7466  011B54  0E01               	movlw	1
  7467  011B56  6E44               	movwf	_Bus_State,c
  7468                           
  7469                           ;MXK.c: 134: if (lQueue != 0)
  7470  011B58  5025               	movf	_lQueue,w,c	;volatile
  7471  011B5A  1026               	iorwf	_lQueue+1,w,c	;volatile
  7472  011B5C  1027               	iorwf	_lQueue+2,w,c	;volatile
  7473  011B5E  B4D8               	btfsc	status,2,c
  7474  011B60  D002               	goto	l9387
  7475                           
  7476                           ;MXK.c: 135: return 1;
  7477  011B62  0E01               	movlw	1
  7478  011B64  0012               	return	
  7479  011B66                     l9387:
  7480                           
  7481                           ;MXK.c: 137: return 0;
  7482  011B66  0E00               	movlw	0
  7483  011B68  0012               	return	
  7484  011B6A                     __end_of_MXK_Release:
  7485                           	opt stack 0
  7486                           tosu	equ	0xFFF
  7487                           tosh	equ	0xFFE
  7488                           tosl	equ	0xFFD
  7489                           pclath	equ	0xFFA
  7490                           tblptru	equ	0xFF8
  7491                           tblptrh	equ	0xFF7
  7492                           tblptrl	equ	0xFF6
  7493                           tablat	equ	0xFF5
  7494                           prodh	equ	0xFF4
  7495                           prodl	equ	0xFF3
  7496                           intcon	equ	0xFF2
  7497                           indf0	equ	0xFEF
  7498                           postinc0	equ	0xFEE
  7499                           fsr0h	equ	0xFEA
  7500                           fsr0l	equ	0xFE9
  7501                           wreg	equ	0xFE8
  7502                           postdec1	equ	0xFE5
  7503                           fsr1h	equ	0xFE2
  7504                           fsr1l	equ	0xFE1
  7505                           indf2	equ	0xFDF
  7506                           postinc2	equ	0xFDE
  7507                           postdec2	equ	0xFDD
  7508                           plusw2	equ	0xFDB
  7509                           fsr2h	equ	0xFDA
  7510                           fsr2l	equ	0xFD9
  7511                           status	equ	0xFD8
  7512                           
  7513 ;; *************** function _MXK_Queue *****************
  7514 ;; Defined at:
  7515 ;;		line 144 in file "Library/MXK.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  pCallback       3    0[BANK0 ] PTR FTN()void 
  7518 ;;		 -> Absolute function(1), Motor_Step(1), 
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;		None
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  1    wreg      void 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7530 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7533 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;Total ram usage:        3 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:    7
  7537 ;; This function calls:
  7538 ;;		Nothing
  7539 ;; This function is called by:
  7540 ;;		_Motor_Step
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text33
  7545  011B78                     __ptext33:
  7546                           	opt stack 0
  7547  011B78                     _MXK_Queue:
  7548                           	opt stack 21
  7549                           
  7550                           ;MXK.c: 146: lQueue = pCallback;
  7551                           
  7552                           ;incstack = 0
  7553  011B78  C0C8  F025         	movff	MXK_Queue@pCallback,_lQueue	;volatile
  7554  011B7C  C0C9  F026         	movff	MXK_Queue@pCallback+1,_lQueue+1	;volatile
  7555  011B80  C0CA  F027         	movff	MXK_Queue@pCallback+2,_lQueue+2	;volatile
  7556  011B84  0012               	return		;funcret
  7557  011B86                     __end_of_MXK_Queue:
  7558                           	opt stack 0
  7559                           tosu	equ	0xFFF
  7560                           tosh	equ	0xFFE
  7561                           tosl	equ	0xFFD
  7562                           pclath	equ	0xFFA
  7563                           tblptru	equ	0xFF8
  7564                           tblptrh	equ	0xFF7
  7565                           tblptrl	equ	0xFF6
  7566                           tablat	equ	0xFF5
  7567                           prodh	equ	0xFF4
  7568                           prodl	equ	0xFF3
  7569                           intcon	equ	0xFF2
  7570                           indf0	equ	0xFEF
  7571                           postinc0	equ	0xFEE
  7572                           fsr0h	equ	0xFEA
  7573                           fsr0l	equ	0xFE9
  7574                           wreg	equ	0xFE8
  7575                           postdec1	equ	0xFE5
  7576                           fsr1h	equ	0xFE2
  7577                           fsr1l	equ	0xFE1
  7578                           indf2	equ	0xFDF
  7579                           postinc2	equ	0xFDE
  7580                           postdec2	equ	0xFDD
  7581                           plusw2	equ	0xFDB
  7582                           fsr2h	equ	0xFDA
  7583                           fsr2l	equ	0xFD9
  7584                           status	equ	0xFD8
  7585                           
  7586 ;; *************** function _MXK_BlockSwitchTo *****************
  7587 ;; Defined at:
  7588 ;;		line 82 in file "Library/MXK.c"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;  pModule         1    wreg     enum E6927
  7591 ;; Auto vars:     Size  Location     Type
  7592 ;;  pModule         1    7[BANK0 ] enum E6927
  7593 ;;  CUR             1    6[BANK0 ] unsigned char 
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  1    wreg      unsigned char 
  7596 ;; Registers used:
  7597 ;;		wreg, status,2, status,0, cstack
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7604 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7606 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7607 ;;Total ram usage:        2 bytes
  7608 ;; Hardware stack levels used:    1
  7609 ;; Hardware stack levels required when called:    8
  7610 ;; This function calls:
  7611 ;;		_delay_us
  7612 ;; This function is called by:
  7613 ;;		_main
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           	psect	text34
  7618  01199E                     __ptext34:
  7619                           	opt stack 0
  7620  01199E                     _MXK_BlockSwitchTo:
  7621                           	opt stack 22
  7622                           
  7623                           ;incstack = 0
  7624                           ;MXK_BlockSwitchTo@pModule stored from wreg
  7625  01199E  0100               	movlb	0	; () banked
  7626  0119A0  6FCF               	movwf	MXK_BlockSwitchTo@pModule& (0+255),b
  7627                           
  7628                           ;MXK.c: 85: UINT8 CUR = 0xF & PORTG;
  7629  0119A2  5086               	movf	3974,w,c	;volatile
  7630  0119A4  0B0F               	andlw	15
  7631  0119A6  0100               	movlb	0	; () banked
  7632  0119A8  6FCE               	movwf	MXK_BlockSwitchTo@CUR& (0+255),b
  7633  0119AA                     l9809:
  7634  0119AA  5044               	movf	_Bus_State,w,c
  7635  0119AC  B4D8               	btfsc	status,2,c
  7636  0119AE  D7FD               	goto	l9809
  7637                           
  7638                           ;MXK.c: 88: Bus_State = eMXK_Busy;
  7639  0119B0  0E00               	movlw	0
  7640  0119B2  6E44               	movwf	_Bus_State,c
  7641                           
  7642                           ;MXK.c: 90: if (CUR != pModule)
  7643  0119B4  0100               	movlb	0	; () banked
  7644  0119B6  51CF               	movf	MXK_BlockSwitchTo@pModule& (0+255),w,b
  7645  0119B8  0100               	movlb	0	; () banked
  7646  0119BA  19CE               	xorwf	MXK_BlockSwitchTo@CUR& (0+255),w,b
  7647  0119BC  B4D8               	btfsc	status,2,c
  7648  0119BE  D00C               	goto	l9819
  7649                           
  7650                           ; BSR set to: 0
  7651                           ;MXK.c: 91: {
  7652                           ;MXK.c: 92: PORTG &= ~(0xF);
  7653  0119C0  0EF0               	movlw	240
  7654  0119C2  1686               	andwf	3974,f,c	;volatile
  7655                           
  7656                           ;MXK.c: 93: PORTG |= pModule;
  7657  0119C4  0100               	movlb	0	; () banked
  7658  0119C6  51CF               	movf	MXK_BlockSwitchTo@pModule& (0+255),w,b
  7659  0119C8  1286               	iorwf	3974,f,c	;volatile
  7660                           
  7661                           ; BSR set to: 0
  7662                           ;MXK.c: 96: delay_us(10);
  7663  0119CA  0E00               	movlw	0
  7664  0119CC  0100               	movlb	0	; () banked
  7665  0119CE  6FC9               	movwf	(delay_us@us+1)& (0+255),b
  7666  0119D0  0E0A               	movlw	10
  7667  0119D2  6FC8               	movwf	delay_us@us& (0+255),b
  7668  0119D4  ECB1  F08B         	call	_delay_us	;wreg free
  7669  0119D8                     l9819:
  7670                           
  7671                           ;MXK.c: 97: }
  7672                           ;MXK.c: 98: return 1;
  7673  0119D8  0E01               	movlw	1
  7674  0119DA  0012               	return	
  7675  0119DC                     __end_of_MXK_BlockSwitchTo:
  7676                           	opt stack 0
  7677                           tosu	equ	0xFFF
  7678                           tosh	equ	0xFFE
  7679                           tosl	equ	0xFFD
  7680                           pclath	equ	0xFFA
  7681                           tblptru	equ	0xFF8
  7682                           tblptrh	equ	0xFF7
  7683                           tblptrl	equ	0xFF6
  7684                           tablat	equ	0xFF5
  7685                           prodh	equ	0xFF4
  7686                           prodl	equ	0xFF3
  7687                           intcon	equ	0xFF2
  7688                           indf0	equ	0xFEF
  7689                           postinc0	equ	0xFEE
  7690                           fsr0h	equ	0xFEA
  7691                           fsr0l	equ	0xFE9
  7692                           wreg	equ	0xFE8
  7693                           postdec1	equ	0xFE5
  7694                           fsr1h	equ	0xFE2
  7695                           fsr1l	equ	0xFE1
  7696                           indf2	equ	0xFDF
  7697                           postinc2	equ	0xFDE
  7698                           postdec2	equ	0xFDD
  7699                           plusw2	equ	0xFDB
  7700                           fsr2h	equ	0xFDA
  7701                           fsr2l	equ	0xFD9
  7702                           status	equ	0xFD8
  7703                           
  7704 ;; *************** function _delay_us *****************
  7705 ;; Defined at:
  7706 ;;		line 255 in file "Library/Types.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;  us              2    0[BANK0 ] unsigned short 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;  u               4    2[BANK0 ] unsigned long 
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1    wreg      void 
  7713 ;; Registers used:
  7714 ;;		wreg, status,2, status,0
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7720 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7721 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7723 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7724 ;;Total ram usage:        6 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    7
  7727 ;; This function calls:
  7728 ;;		Nothing
  7729 ;; This function is called by:
  7730 ;;		_MXK_BlockSwitchTo
  7731 ;;		_MXK_SwitchTo
  7732 ;; This function uses a non-reentrant model
  7733 ;;
  7734                           
  7735                           	psect	text35
  7736  011762                     __ptext35:
  7737                           	opt stack 0
  7738  011762                     _delay_us:
  7739                           	opt stack 20
  7740                           
  7741                           ;Types.c: 256: unsigned long u;
  7742                           ;Types.c: 257: while (us--) {
  7743                           
  7744                           ;incstack = 0
  7745  011762  D01C               	goto	l9139
  7746  011764                     l9131:
  7747                           
  7748                           ;Types.c: 259: for (u = 0; u < ((((48*1000000L) / 4000UL) / 10UL)/1000UL); u++) {
  7749  011764  0E00               	movlw	0
  7750  011766  0100               	movlb	0	; () banked
  7751  011768  6FCA               	movwf	delay_us@u& (0+255),b
  7752  01176A  0E00               	movlw	0
  7753  01176C  6FCB               	movwf	(delay_us@u+1)& (0+255),b
  7754  01176E  0E00               	movlw	0
  7755  011770  6FCC               	movwf	(delay_us@u+2)& (0+255),b
  7756  011772  0E00               	movlw	0
  7757  011774  6FCD               	movwf	(delay_us@u+3)& (0+255),b
  7758  011776                     l9133:
  7759                           
  7760                           ; BSR set to: 0
  7761  011776  0100               	movlb	0	; () banked
  7762  011778  51CA               	movf	delay_us@u& (0+255),w,b
  7763  01177A  0100               	movlb	0	; () banked
  7764  01177C  11CB               	iorwf	(delay_us@u+1)& (0+255),w,b
  7765  01177E  0100               	movlb	0	; () banked
  7766  011780  11CC               	iorwf	(delay_us@u+2)& (0+255),w,b
  7767  011782  0100               	movlb	0	; () banked
  7768  011784  11CD               	iorwf	(delay_us@u+3)& (0+255),w,b
  7769  011786  A4D8               	btfss	status,2,c
  7770  011788  D009               	goto	l9139
  7771                           
  7772                           ; BSR set to: 0
  7773                           
  7774                           ; BSR set to: 0
  7775  01178A  F000               	nop		; ;# 
  7776  01178C  0E01               	movlw	1
  7777  01178E  0100               	movlb	0	; () banked
  7778  011790  27CA               	addwf	delay_us@u& (0+255),f,b
  7779  011792  0E00               	movlw	0
  7780  011794  23CB               	addwfc	(delay_us@u+1)& (0+255),f,b
  7781  011796  23CC               	addwfc	(delay_us@u+2)& (0+255),f,b
  7782  011798  23CD               	addwfc	(delay_us@u+3)& (0+255),f,b
  7783  01179A  D7ED               	goto	l9133
  7784  01179C                     l9139:
  7785  01179C  0100               	movlb	0	; () banked
  7786  01179E  07C8               	decf	delay_us@us& (0+255),f,b
  7787  0117A0  A0D8               	btfss	status,0,c
  7788  0117A2  07C9               	decf	(delay_us@us+1)& (0+255),f,b
  7789  0117A4  0100               	movlb	0	; () banked
  7790  0117A6  29C8               	incf	delay_us@us& (0+255),w,b
  7791  0117A8  E1DD               	bnz	l9131
  7792  0117AA  0100               	movlb	0	; () banked
  7793  0117AC  29C9               	incf	(delay_us@us+1)& (0+255),w,b
  7794  0117AE  B4D8               	btfsc	status,2,c
  7795  0117B0  0012               	return	
  7796  0117B2  D7D8               	goto	l9131
  7797  0117B4                     __end_of_delay_us:
  7798                           	opt stack 0
  7799                           tosu	equ	0xFFF
  7800                           tosh	equ	0xFFE
  7801                           tosl	equ	0xFFD
  7802                           pclath	equ	0xFFA
  7803                           tblptru	equ	0xFF8
  7804                           tblptrh	equ	0xFF7
  7805                           tblptrl	equ	0xFF6
  7806                           tablat	equ	0xFF5
  7807                           prodh	equ	0xFF4
  7808                           prodl	equ	0xFF3
  7809                           intcon	equ	0xFF2
  7810                           indf0	equ	0xFEF
  7811                           postinc0	equ	0xFEE
  7812                           fsr0h	equ	0xFEA
  7813                           fsr0l	equ	0xFE9
  7814                           wreg	equ	0xFE8
  7815                           postdec1	equ	0xFE5
  7816                           fsr1h	equ	0xFE2
  7817                           fsr1l	equ	0xFE1
  7818                           indf2	equ	0xFDF
  7819                           postinc2	equ	0xFDE
  7820                           postdec2	equ	0xFDD
  7821                           plusw2	equ	0xFDB
  7822                           fsr2h	equ	0xFDA
  7823                           fsr2l	equ	0xFD9
  7824                           status	equ	0xFD8
  7825                           
  7826 ;; *************** function _ISR_Function *****************
  7827 ;; Defined at:
  7828 ;;		line 38 in file "Library/ISR.c"
  7829 ;; Parameters:    Size  Location     Type
  7830 ;;		None
  7831 ;; Auto vars:     Size  Location     Type
  7832 ;;		None
  7833 ;; Return value:  Size  Location     Type
  7834 ;;                  1    wreg      void 
  7835 ;; Registers used:
  7836 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7837 ;; Tracked objects:
  7838 ;;		On entry : 0/0
  7839 ;;		On exit  : 0/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7844 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7845 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7846 ;;Total ram usage:       14 bytes
  7847 ;; Hardware stack levels used:    1
  7848 ;; Hardware stack levels required when called:    6
  7849 ;; This function calls:
  7850 ;;		_Timer0_ISR
  7851 ;; This function is called by:
  7852 ;;		Interrupt level 2
  7853 ;; This function uses a non-reentrant model
  7854 ;;
  7855                           
  7856                           	psect	intcode
  7857  001408                     __pintcode:
  7858                           	opt stack 0
  7859  001408                     _ISR_Function:
  7860                           	opt stack 14
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;incstack = 0
  7864  001408  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7865  00140A  CFFA F017          	movff	pclath,??_ISR_Function
  7866  00140E  CFFB F018          	movff	pclatu,??_ISR_Function+1
  7867  001412  CFE9 F019          	movff	fsr0l,??_ISR_Function+2
  7868  001416  CFEA F01A          	movff	fsr0h,??_ISR_Function+3
  7869  00141A  CFE1 F01B          	movff	fsr1l,??_ISR_Function+4
  7870  00141E  CFE2 F01C          	movff	fsr1h,??_ISR_Function+5
  7871  001422  CFD9 F01D          	movff	fsr2l,??_ISR_Function+6
  7872  001426  CFDA F01E          	movff	fsr2h,??_ISR_Function+7
  7873  00142A  CFF3 F01F          	movff	prodl,??_ISR_Function+8
  7874  00142E  CFF4 F020          	movff	prodh,??_ISR_Function+9
  7875  001432  CFF6 F021          	movff	tblptrl,??_ISR_Function+10
  7876  001436  CFF7 F022          	movff	tblptrh,??_ISR_Function+11
  7877  00143A  CFF8 F023          	movff	tblptru,??_ISR_Function+12
  7878  00143E  CFF5 F024          	movff	tablat,??_ISR_Function+13
  7879                           
  7880                           ;ISR.c: 41: INTCONbits.INT0IF = 0;
  7881  001442  92F2               	bcf	intcon,1,c	;volatile
  7882                           
  7883                           ;ISR.c: 67: if (((INTCONbits.TMR0IF) && (INTCONbits.TMR0IE)))
  7884  001444  B4F2               	btfsc	intcon,2,c	;volatile
  7885  001446  AAF2               	btfss	intcon,5,c	;volatile
  7886  001448  D002               	goto	i2l1591
  7887                           
  7888                           ;ISR.c: 68: Timer0_ISR();
  7889  00144A  EC55  F08D         	call	_Timer0_ISR	;wreg free
  7890  00144E                     i2l1591:
  7891  00144E  C024  FFF5         	movff	??_ISR_Function+13,tablat
  7892  001452  C023  FFF8         	movff	??_ISR_Function+12,tblptru
  7893  001456  C022  FFF7         	movff	??_ISR_Function+11,tblptrh
  7894  00145A  C021  FFF6         	movff	??_ISR_Function+10,tblptrl
  7895  00145E  C020  FFF4         	movff	??_ISR_Function+9,prodh
  7896  001462  C01F  FFF3         	movff	??_ISR_Function+8,prodl
  7897  001466  C01E  FFDA         	movff	??_ISR_Function+7,fsr2h
  7898  00146A  C01D  FFD9         	movff	??_ISR_Function+6,fsr2l
  7899  00146E  C01C  FFE2         	movff	??_ISR_Function+5,fsr1h
  7900  001472  C01B  FFE1         	movff	??_ISR_Function+4,fsr1l
  7901  001476  C01A  FFEA         	movff	??_ISR_Function+3,fsr0h
  7902  00147A  C019  FFE9         	movff	??_ISR_Function+2,fsr0l
  7903  00147E  C018  FFFB         	movff	??_ISR_Function+1,pclatu
  7904  001482  C017  FFFA         	movff	??_ISR_Function,pclath
  7905  001486  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7906  001488  0011               	retfie		f
  7907  00148A                     __end_of_ISR_Function:
  7908                           	opt stack 0
  7909                           tosu	equ	0xFFF
  7910                           tosh	equ	0xFFE
  7911                           tosl	equ	0xFFD
  7912                           pclatu	equ	0xFFB
  7913                           pclath	equ	0xFFA
  7914                           tblptru	equ	0xFF8
  7915                           tblptrh	equ	0xFF7
  7916                           tblptrl	equ	0xFF6
  7917                           tablat	equ	0xFF5
  7918                           prodh	equ	0xFF4
  7919                           prodl	equ	0xFF3
  7920                           intcon	equ	0xFF2
  7921                           indf0	equ	0xFEF
  7922                           postinc0	equ	0xFEE
  7923                           fsr0h	equ	0xFEA
  7924                           fsr0l	equ	0xFE9
  7925                           wreg	equ	0xFE8
  7926                           postdec1	equ	0xFE5
  7927                           fsr1h	equ	0xFE2
  7928                           fsr1l	equ	0xFE1
  7929                           indf2	equ	0xFDF
  7930                           postinc2	equ	0xFDE
  7931                           postdec2	equ	0xFDD
  7932                           plusw2	equ	0xFDB
  7933                           fsr2h	equ	0xFDA
  7934                           fsr2l	equ	0xFD9
  7935                           status	equ	0xFD8
  7936                           
  7937 ;; *************** function _Timer0_ISR *****************
  7938 ;; Defined at:
  7939 ;;		line 94 in file "Library/Timer0.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;		None
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;		None
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  1    wreg      void 
  7946 ;; Registers used:
  7947 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7957 ;;Total ram usage:        0 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; Hardware stack levels required when called:    5
  7960 ;; This function calls:
  7961 ;;		Absolute function
  7962 ;;		i2_Motor_Step
  7963 ;;		i2_Timer0_Stop
  7964 ;; This function is called by:
  7965 ;;		_ISR_Function
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           	psect	text37
  7970  011AAA                     __ptext37:
  7971                           	opt stack 0
  7972  011AAA                     _Timer0_ISR:
  7973                           	opt stack 14
  7974                           
  7975                           ;Timer0.c: 96: Timer0_Stop();
  7976                           
  7977                           ;incstack = 0
  7978  011AAA  ECE6  F08D         	call	i2_Timer0_Stop	;wreg free
  7979                           
  7980                           ;Timer0.c: 99: if (gISR != 0)
  7981  011AAE  0100               	movlb	0	; () banked
  7982  011AB0  5168               	movf	_gISR& (0+255),w,b
  7983  011AB2  0100               	movlb	0	; () banked
  7984  011AB4  1169               	iorwf	(_gISR+1)& (0+255),w,b
  7985  011AB6  0100               	movlb	0	; () banked
  7986  011AB8  116A               	iorwf	(_gISR+2)& (0+255),w,b
  7987  011ABA  B4D8               	btfsc	status,2,c
  7988  011ABC  0012               	return	
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;Timer0.c: 100: gISR();
  7992  011ABE  D801               	call	i2u681_48
  7993  011AC0  0012               	return	
  7994  011AC2                     i2u681_48:
  7995  011AC2  0005               	push	
  7996  011AC4  6EFA               	movwf	pclath,c
  7997  011AC6  0100               	movlb	0	; () banked
  7998  011AC8  5168               	movf	_gISR& (0+255),w,b
  7999  011ACA  6EFD               	movwf	tosl,c
  8000  011ACC  5169               	movf	(_gISR+1)& (0+255),w,b
  8001  011ACE  6EFE               	movwf	tosh,c
  8002  011AD0  516A               	movf	(_gISR+2)& (0+255),w,b
  8003  011AD2  6EFF               	movwf	tosu,c
  8004  011AD4  50FA               	movf	pclath,w,c
  8005  011AD6  0012               	return		;indir
  8006  011AD8                     __end_of_Timer0_ISR:
  8007                           	opt stack 0
  8008                           tosu	equ	0xFFF
  8009                           tosh	equ	0xFFE
  8010                           tosl	equ	0xFFD
  8011                           pclatu	equ	0xFFB
  8012                           pclath	equ	0xFFA
  8013                           tblptru	equ	0xFF8
  8014                           tblptrh	equ	0xFF7
  8015                           tblptrl	equ	0xFF6
  8016                           tablat	equ	0xFF5
  8017                           prodh	equ	0xFF4
  8018                           prodl	equ	0xFF3
  8019                           intcon	equ	0xFF2
  8020                           indf0	equ	0xFEF
  8021                           postinc0	equ	0xFEE
  8022                           fsr0h	equ	0xFEA
  8023                           fsr0l	equ	0xFE9
  8024                           wreg	equ	0xFE8
  8025                           postdec1	equ	0xFE5
  8026                           fsr1h	equ	0xFE2
  8027                           fsr1l	equ	0xFE1
  8028                           indf2	equ	0xFDF
  8029                           postinc2	equ	0xFDE
  8030                           postdec2	equ	0xFDD
  8031                           plusw2	equ	0xFDB
  8032                           fsr2h	equ	0xFDA
  8033                           fsr2l	equ	0xFD9
  8034                           status	equ	0xFD8
  8035                           
  8036 ;; *************** function i2_Motor_Step *****************
  8037 ;; Defined at:
  8038 ;;		line 75 in file "Library/Motor.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;		None
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;		None
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  1    wreg      void 
  8045 ;; Registers used:
  8046 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8054 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8055 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8056 ;;Total ram usage:        2 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; Hardware stack levels required when called:    4
  8059 ;; This function calls:
  8060 ;;		i2_MXK_Queue
  8061 ;;		i2_MXK_Release
  8062 ;;		i2_MXK_SwitchTo
  8063 ;;		i2_Port_SetPin
  8064 ;;		i2_Timer0_Restart
  8065 ;;		i2_Timer0_Stop
  8066 ;; This function is called by:
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text38
  8071  010E2A                     __ptext38:
  8072                           	opt stack 0
  8073  010E2A                     i2_Motor_Step:
  8074                           	opt stack 14
  8075                           
  8076                           ;Motor.c: 77: if (MXK_SwitchTo(lMotor->mAddress))
  8077                           
  8078                           ;incstack = 0
  8079  010E2A  EE20 F004          	lfsr	2,4
  8080  010E2E  502C               	movf	_lMotor,w,c
  8081  010E30  26D9               	addwf	fsr2l,f,c
  8082  010E32  502D               	movf	_lMotor+1,w,c
  8083  010E34  22DA               	addwfc	fsr2h,f,c
  8084  010E36  50DF               	movf	indf2,w,c
  8085  010E38  EC0A  F08D         	call	i2_MXK_SwitchTo
  8086  010E3C  0900               	iorlw	0
  8087  010E3E  B4D8               	btfsc	status,2,c
  8088  010E40  D06A               	goto	i2l7233
  8089                           
  8090                           ;Motor.c: 78: {
  8091                           ;Motor.c: 79: if (lMotor->mDelta != 0)
  8092  010E42  C02C  FFD9         	movff	_lMotor,fsr2l
  8093  010E46  C02D  FFDA         	movff	_lMotor+1,fsr2h
  8094  010E4A  50DE               	movf	postinc2,w,c
  8095  010E4C  10DE               	iorwf	postinc2,w,c
  8096  010E4E  B4D8               	btfsc	status,2,c
  8097  010E50  D05D               	goto	i2l7227
  8098                           
  8099                           ;Motor.c: 80: {
  8100                           ;Motor.c: 82: if (lMotor->mDelta > 0)
  8101  010E52  C02C  FFD9         	movff	_lMotor,fsr2l
  8102  010E56  C02D  FFDA         	movff	_lMotor+1,fsr2h
  8103  010E5A  0E01               	movlw	1
  8104  010E5C  BEDB               	btfsc	plusw2,7,c
  8105  010E5E  D022               	goto	i2l7211
  8106  010E60  0E01               	movlw	1
  8107  010E62  50DB               	movf	plusw2,w,c
  8108  010E64  E103               	bnz	i2u382_40
  8109  010E66  04DE               	decf	postinc2,w,c
  8110  010E68  A0D8               	btfss	status,0,c
  8111  010E6A  D01C               	goto	i2l7211
  8112  010E6C                     i2u382_40:
  8113                           
  8114                           ;Motor.c: 83: {
  8115                           ;Motor.c: 84: if (lMotor->mDelta != 32767)
  8116  010E6C  C02C  FFD9         	movff	_lMotor,fsr2l
  8117  010E70  C02D  FFDA         	movff	_lMotor+1,fsr2h
  8118  010E74  28DE               	incf	postinc2,w,c
  8119  010E76  E104               	bnz	i2u383_40
  8120  010E78  0E7F               	movlw	127
  8121  010E7A  18DE               	xorwf	postinc2,w,c
  8122  010E7C  B4D8               	btfsc	status,2,c
  8123  010E7E  D007               	goto	i2l7209
  8124  010E80                     i2u383_40:
  8125                           
  8126                           ;Motor.c: 85: lMotor->mDelta --;
  8127  010E80  C02C  FFD9         	movff	_lMotor,fsr2l
  8128  010E84  C02D  FFDA         	movff	_lMotor+1,fsr2h
  8129  010E88  06DE               	decf	postinc2,f,c
  8130  010E8A  0E00               	movlw	0
  8131  010E8C  5ADD               	subwfb	postdec2,f,c
  8132  010E8E                     i2l7209:
  8133                           
  8134                           ;Motor.c: 87: Port_SetPin(&PortE, eP0, 1);
  8135  010E8E  0E76               	movlw	low _PortE
  8136  010E90  6E10               	movwf	i2Port_SetPin@pInput,c
  8137  010E92  0E00               	movlw	high _PortE
  8138  010E94  6E11               	movwf	i2Port_SetPin@pInput+1,c
  8139  010E96  0E00               	movlw	0
  8140  010E98  6E12               	movwf	i2Port_SetPin@pPin,c
  8141  010E9A  0E01               	movlw	1
  8142  010E9C  6E13               	movwf	i2Port_SetPin@pValue,c
  8143  010E9E  EC51  F088         	call	i2_Port_SetPin	;wreg free
  8144                           
  8145                           ;Motor.c: 88: }
  8146  010EA2  D01B               	goto	i2l7217
  8147  010EA4                     i2l7211:
  8148                           
  8149                           ;Motor.c: 89: else
  8150                           ;Motor.c: 90: {
  8151                           ;Motor.c: 91: if (lMotor->mDelta != -32767)
  8152  010EA4  C02C  FFD9         	movff	_lMotor,fsr2l
  8153  010EA8  C02D  FFDA         	movff	_lMotor+1,fsr2h
  8154  010EAC  04DE               	decf	postinc2,w,c
  8155  010EAE  E104               	bnz	i2u384_40
  8156  010EB0  0E80               	movlw	128
  8157  010EB2  18DE               	xorwf	postinc2,w,c
  8158  010EB4  B4D8               	btfsc	status,2,c
  8159  010EB6  D007               	goto	i2l7215
  8160  010EB8                     i2u384_40:
  8161                           
  8162                           ;Motor.c: 92: lMotor->mDelta ++;
  8163  010EB8  C02C  FFD9         	movff	_lMotor,fsr2l
  8164  010EBC  C02D  FFDA         	movff	_lMotor+1,fsr2h
  8165  010EC0  2ADE               	incf	postinc2,f,c
  8166  010EC2  0E00               	movlw	0
  8167  010EC4  22DD               	addwfc	postdec2,f,c
  8168  010EC6                     i2l7215:
  8169                           
  8170                           ;Motor.c: 94: Port_SetPin(&PortE, eP0, 0);
  8171  010EC6  0E76               	movlw	low _PortE
  8172  010EC8  6E10               	movwf	i2Port_SetPin@pInput,c
  8173  010ECA  0E00               	movlw	high _PortE
  8174  010ECC  6E11               	movwf	i2Port_SetPin@pInput+1,c
  8175  010ECE  0E00               	movlw	0
  8176  010ED0  6E12               	movwf	i2Port_SetPin@pPin,c
  8177  010ED2  0E00               	movlw	0
  8178  010ED4  6E13               	movwf	i2Port_SetPin@pValue,c
  8179  010ED6  EC51  F088         	call	i2_Port_SetPin	;wreg free
  8180  010EDA                     i2l7217:
  8181                           
  8182                           ;Motor.c: 95: }
  8183                           ;Motor.c: 98: Port_SetPin(&PortE, eP1, 1);
  8184  010EDA  0E76               	movlw	low _PortE
  8185  010EDC  6E10               	movwf	i2Port_SetPin@pInput,c
  8186  010EDE  0E00               	movlw	high _PortE
  8187  010EE0  6E11               	movwf	i2Port_SetPin@pInput+1,c
  8188  010EE2  0E01               	movlw	1
  8189  010EE4  6E12               	movwf	i2Port_SetPin@pPin,c
  8190  010EE6  0E01               	movlw	1
  8191  010EE8  6E13               	movwf	i2Port_SetPin@pValue,c
  8192  010EEA  EC51  F088         	call	i2_Port_SetPin	;wreg free
  8193                           
  8194                           ;Motor.c: 99: Port_SetPin(&PortE, eP1, 0);
  8195  010EEE  0E76               	movlw	low _PortE
  8196  010EF0  6E10               	movwf	i2Port_SetPin@pInput,c
  8197  010EF2  0E00               	movlw	high _PortE
  8198  010EF4  6E11               	movwf	i2Port_SetPin@pInput+1,c
  8199  010EF6  0E01               	movlw	1
  8200  010EF8  6E12               	movwf	i2Port_SetPin@pPin,c
  8201  010EFA  0E00               	movlw	0
  8202  010EFC  6E13               	movwf	i2Port_SetPin@pValue,c
  8203  010EFE  EC51  F088         	call	i2_Port_SetPin	;wreg free
  8204                           
  8205                           ;Motor.c: 101: MXK_Release();
  8206  010F02  ECE9  F08D         	call	i2_MXK_Release	;wreg free
  8207                           
  8208                           ;Motor.c: 102: Timer0_Restart();
  8209  010F06  ECD0  F08D         	call	i2_Timer0_Restart	;wreg free
  8210                           
  8211                           ;Motor.c: 103: return;
  8212  010F0A  0012               	return	
  8213  010F0C                     i2l7227:
  8214                           
  8215                           ;Motor.c: 104: }
  8216                           ;Motor.c: 105: MXK_Release();
  8217  010F0C  ECE9  F08D         	call	i2_MXK_Release	;wreg free
  8218                           
  8219                           ;Motor.c: 106: Timer0_Stop();
  8220  010F10  ECE6  F08D         	call	i2_Timer0_Stop	;wreg free
  8221                           
  8222                           ;Motor.c: 107: return;
  8223  010F14  0012               	return	
  8224  010F16                     i2l7233:
  8225                           
  8226                           ;Motor.c: 108: }
  8227                           ;Motor.c: 111: MXK_Queue(lStepFunction);
  8228  010F16  C06B  F001         	movff	_lStepFunction,i2MXK_Queue@pCallback
  8229  010F1A  C06C  F002         	movff	_lStepFunction+1,i2MXK_Queue@pCallback+1
  8230  010F1E  C06D  F003         	movff	_lStepFunction+2,i2MXK_Queue@pCallback+2
  8231  010F22  ECC3  F08D         	call	i2_MXK_Queue	;wreg free
  8232  010F26  0012               	return		;funcret
  8233  010F28                     __end_ofi2_Motor_Step:
  8234                           	opt stack 0
  8235                           tosu	equ	0xFFF
  8236                           tosh	equ	0xFFE
  8237                           tosl	equ	0xFFD
  8238                           pclatu	equ	0xFFB
  8239                           pclath	equ	0xFFA
  8240                           tblptru	equ	0xFF8
  8241                           tblptrh	equ	0xFF7
  8242                           tblptrl	equ	0xFF6
  8243                           tablat	equ	0xFF5
  8244                           prodh	equ	0xFF4
  8245                           prodl	equ	0xFF3
  8246                           intcon	equ	0xFF2
  8247                           indf0	equ	0xFEF
  8248                           postinc0	equ	0xFEE
  8249                           fsr0h	equ	0xFEA
  8250                           fsr0l	equ	0xFE9
  8251                           wreg	equ	0xFE8
  8252                           postdec1	equ	0xFE5
  8253                           fsr1h	equ	0xFE2
  8254                           fsr1l	equ	0xFE1
  8255                           indf2	equ	0xFDF
  8256                           postinc2	equ	0xFDE
  8257                           postdec2	equ	0xFDD
  8258                           plusw2	equ	0xFDB
  8259                           fsr2h	equ	0xFDA
  8260                           fsr2l	equ	0xFD9
  8261                           status	equ	0xFD8
  8262                           
  8263 ;; *************** function i2_Timer0_Stop *****************
  8264 ;; Defined at:
  8265 ;;		line 89 in file "Library/Timer0.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;		None
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      void 
  8272 ;; Registers used:
  8273 ;;		None
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8283 ;;Total ram usage:        0 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; This function calls:
  8286 ;;		Nothing
  8287 ;; This function is called by:
  8288 ;;		_Timer0_ISR
  8289 ;;		i2_Motor_Step
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           	psect	text39
  8294  011BCC                     __ptext39:
  8295                           	opt stack 0
  8296  011BCC                     i2_Timer0_Stop:
  8297                           	opt stack 18
  8298                           
  8299                           ;Timer0.c: 91: INTCONbits.TMR0IE = 0;
  8300                           
  8301                           ;incstack = 0
  8302  011BCC  9AF2               	bcf	intcon,5,c	;volatile
  8303                           
  8304                           ;Timer0.c: 92: INTCONbits.TMR0IF = 0;
  8305  011BCE  94F2               	bcf	intcon,2,c	;volatile
  8306  011BD0  0012               	return		;funcret
  8307  011BD2                     __end_ofi2_Timer0_Stop:
  8308                           	opt stack 0
  8309                           tosu	equ	0xFFF
  8310                           tosh	equ	0xFFE
  8311                           tosl	equ	0xFFD
  8312                           pclatu	equ	0xFFB
  8313                           pclath	equ	0xFFA
  8314                           tblptru	equ	0xFF8
  8315                           tblptrh	equ	0xFF7
  8316                           tblptrl	equ	0xFF6
  8317                           tablat	equ	0xFF5
  8318                           prodh	equ	0xFF4
  8319                           prodl	equ	0xFF3
  8320                           intcon	equ	0xFF2
  8321                           indf0	equ	0xFEF
  8322                           postinc0	equ	0xFEE
  8323                           fsr0h	equ	0xFEA
  8324                           fsr0l	equ	0xFE9
  8325                           wreg	equ	0xFE8
  8326                           postdec1	equ	0xFE5
  8327                           fsr1h	equ	0xFE2
  8328                           fsr1l	equ	0xFE1
  8329                           indf2	equ	0xFDF
  8330                           postinc2	equ	0xFDE
  8331                           postdec2	equ	0xFDD
  8332                           plusw2	equ	0xFDB
  8333                           fsr2h	equ	0xFDA
  8334                           fsr2l	equ	0xFD9
  8335                           status	equ	0xFD8
  8336                           
  8337 ;; *************** function i2_Timer0_Restart *****************
  8338 ;; Defined at:
  8339 ;;		line 83 in file "Library/Timer0.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;		None
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;		None
  8344 ;; Return value:  Size  Location     Type
  8345 ;;                  1    wreg      void 
  8346 ;; Registers used:
  8347 ;;		None
  8348 ;; Tracked objects:
  8349 ;;		On entry : 0/0
  8350 ;;		On exit  : 0/0
  8351 ;;		Unchanged: 0/0
  8352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8357 ;;Total ram usage:        0 bytes
  8358 ;; Hardware stack levels used:    1
  8359 ;; This function calls:
  8360 ;;		Nothing
  8361 ;; This function is called by:
  8362 ;;		i2_Motor_Step
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           	psect	text40
  8367  011BA0                     __ptext40:
  8368                           	opt stack 0
  8369  011BA0                     i2_Timer0_Restart:
  8370                           	opt stack 17
  8371                           
  8372                           ;Timer0.c: 85: TMR0 = COUNTER;
  8373                           
  8374                           ;incstack = 0
  8375  011BA0  C02A  FFD6         	movff	_COUNTER,4054	;volatile
  8376  011BA4  C02B  FFD7         	movff	_COUNTER+1,4055	;volatile
  8377                           
  8378                           ;Timer0.c: 87: INTCONbits.TMR0IE = 1;
  8379  011BA8  8AF2               	bsf	intcon,5,c	;volatile
  8380  011BAA  0012               	return		;funcret
  8381  011BAC                     __end_ofi2_Timer0_Restart:
  8382                           	opt stack 0
  8383                           tosu	equ	0xFFF
  8384                           tosh	equ	0xFFE
  8385                           tosl	equ	0xFFD
  8386                           pclatu	equ	0xFFB
  8387                           pclath	equ	0xFFA
  8388                           tblptru	equ	0xFF8
  8389                           tblptrh	equ	0xFF7
  8390                           tblptrl	equ	0xFF6
  8391                           tablat	equ	0xFF5
  8392                           prodh	equ	0xFF4
  8393                           prodl	equ	0xFF3
  8394                           intcon	equ	0xFF2
  8395                           indf0	equ	0xFEF
  8396                           postinc0	equ	0xFEE
  8397                           fsr0h	equ	0xFEA
  8398                           fsr0l	equ	0xFE9
  8399                           wreg	equ	0xFE8
  8400                           postdec1	equ	0xFE5
  8401                           fsr1h	equ	0xFE2
  8402                           fsr1l	equ	0xFE1
  8403                           indf2	equ	0xFDF
  8404                           postinc2	equ	0xFDE
  8405                           postdec2	equ	0xFDD
  8406                           plusw2	equ	0xFDB
  8407                           fsr2h	equ	0xFDA
  8408                           fsr2l	equ	0xFD9
  8409                           status	equ	0xFD8
  8410                           
  8411 ;; *************** function i2_Port_SetPin *****************
  8412 ;; Defined at:
  8413 ;;		line 247 in file "Library/Port.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  pInput          2   15[COMRAM] const PTR struct Port
  8416 ;;		 -> PortG(10), PortE(10), PortC(10), PortF(10), 
  8417 ;;  pPin            1   17[COMRAM] enum E6750
  8418 ;;  pValue          1   18[COMRAM] unsigned char 
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;  Port_SetPin     1   19[COMRAM] enum E6795
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  1    wreg      void 
  8423 ;; Registers used:
  8424 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8430 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8433 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8434 ;;Total ram usage:        5 bytes
  8435 ;; Hardware stack levels used:    1
  8436 ;; Hardware stack levels required when called:    3
  8437 ;; This function calls:
  8438 ;;		i2_Byte_SetBit
  8439 ;;		i2_Word_GetPair
  8440 ;; This function is called by:
  8441 ;;		i2_Motor_Step
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           	psect	text41
  8446  0110A2                     __ptext41:
  8447                           	opt stack 0
  8448  0110A2                     i2_Port_SetPin:
  8449                           	opt stack 14
  8450                           
  8451                           ;Port.c: 249: ePinType Type = (ePinType)Word_GetPair(&pInput->mType, (UINT8)pPin);
  8452                           
  8453                           ;incstack = 0
  8454  0110A2  0E08               	movlw	8
  8455  0110A4  2410               	addwf	i2Port_SetPin@pInput,w,c
  8456  0110A6  6E0D               	movwf	i2Word_GetPair@pInput,c
  8457  0110A8  0E00               	movlw	0
  8458  0110AA  2011               	addwfc	i2Port_SetPin@pInput+1,w,c
  8459  0110AC  6E0E               	movwf	i2Word_GetPair@pInput+1,c
  8460  0110AE  C012  F00F         	movff	i2Port_SetPin@pPin,i2Word_GetPair@pPair
  8461  0110B2  EC3D  F08D         	call	i2_Word_GetPair	;wreg free
  8462  0110B6  6E14               	movwf	i2Port_SetPin@Type,c
  8463                           
  8464                           ;Port.c: 250: switch (Type)
  8465  0110B8  D03B               	goto	i2l6833
  8466  0110BA                     i2l6819:
  8467                           
  8468                           ;Port.c: 256: pValue &= 1;
  8469  0110BA  0E01               	movlw	1
  8470  0110BC  1613               	andwf	i2Port_SetPin@pValue,f,c
  8471                           
  8472                           ;Port.c: 257: Byte_SetBit(pInput->mDirection, pPin, pValue);
  8473  0110BE  EE20 F002          	lfsr	2,2
  8474  0110C2  5010               	movf	i2Port_SetPin@pInput,w,c
  8475  0110C4  26D9               	addwf	fsr2l,f,c
  8476  0110C6  5011               	movf	i2Port_SetPin@pInput+1,w,c
  8477  0110C8  22DA               	addwfc	fsr2h,f,c
  8478  0110CA  CFDE F001          	movff	postinc2,i2Byte_SetBit@pInput
  8479  0110CE  CFDD F002          	movff	postdec2,i2Byte_SetBit@pInput+1
  8480  0110D2  C012  F003         	movff	i2Port_SetPin@pPin,i2Byte_SetBit@pBit
  8481  0110D6  C013  F004         	movff	i2Port_SetPin@pValue,i2Byte_SetBit@pValue
  8482  0110DA  EC02  F08C         	call	i2_Byte_SetBit	;wreg free
  8483                           
  8484                           ;Port.c: 258: break;
  8485  0110DE  0012               	return	
  8486  0110E0                     i2l6823:
  8487                           
  8488                           ;Port.c: 261: pValue &= 1;
  8489  0110E0  0E01               	movlw	1
  8490  0110E2  1613               	andwf	i2Port_SetPin@pValue,f,c
  8491                           
  8492                           ;Port.c: 262: pValue ^= 1;
  8493  0110E4  0E01               	movlw	1
  8494  0110E6  1A13               	xorwf	i2Port_SetPin@pValue,f,c
  8495                           
  8496                           ;Port.c: 263: Byte_SetBit(pInput->mDirection, pPin, pValue);
  8497  0110E8  EE20 F002          	lfsr	2,2
  8498  0110EC  5010               	movf	i2Port_SetPin@pInput,w,c
  8499  0110EE  26D9               	addwf	fsr2l,f,c
  8500  0110F0  5011               	movf	i2Port_SetPin@pInput+1,w,c
  8501  0110F2  22DA               	addwfc	fsr2h,f,c
  8502  0110F4  CFDE F001          	movff	postinc2,i2Byte_SetBit@pInput
  8503  0110F8  CFDD F002          	movff	postdec2,i2Byte_SetBit@pInput+1
  8504  0110FC  C012  F003         	movff	i2Port_SetPin@pPin,i2Byte_SetBit@pBit
  8505  011100  C013  F004         	movff	i2Port_SetPin@pValue,i2Byte_SetBit@pValue
  8506  011104  EC02  F08C         	call	i2_Byte_SetBit	;wreg free
  8507                           
  8508                           ;Port.c: 264: break;
  8509  011108  0012               	return	
  8510  01110A                     i2l6827:
  8511                           
  8512                           ;Port.c: 266: pValue &= 1;
  8513  01110A  0E01               	movlw	1
  8514  01110C  1613               	andwf	i2Port_SetPin@pValue,f,c
  8515                           
  8516                           ;Port.c: 267: Byte_SetBit(pInput->mOutput, pPin, pValue);
  8517  01110E  EE20 F004          	lfsr	2,4
  8518  011112  5010               	movf	i2Port_SetPin@pInput,w,c
  8519  011114  26D9               	addwf	fsr2l,f,c
  8520  011116  5011               	movf	i2Port_SetPin@pInput+1,w,c
  8521  011118  22DA               	addwfc	fsr2h,f,c
  8522  01111A  CFDE F001          	movff	postinc2,i2Byte_SetBit@pInput
  8523  01111E  CFDD F002          	movff	postdec2,i2Byte_SetBit@pInput+1
  8524  011122  C012  F003         	movff	i2Port_SetPin@pPin,i2Byte_SetBit@pBit
  8525  011126  C013  F004         	movff	i2Port_SetPin@pValue,i2Byte_SetBit@pValue
  8526  01112A  EC02  F08C         	call	i2_Byte_SetBit	;wreg free
  8527                           
  8528                           ;Port.c: 269: }
  8529                           
  8530                           ;Port.c: 268: break;
  8531  01112E  0012               	return	
  8532  011130                     i2l6833:
  8533  011130  5014               	movf	i2Port_SetPin@Type,w,c
  8534                           
  8535                           ; Switch size 1, requested type "space"
  8536                           ; Number of cases is 4, Range of values is 0 to 3
  8537                           ; switch strategies available:
  8538                           ; Name         Instructions Cycles
  8539                           ; simple_byte           13     7 (average)
  8540                           ;	Chosen strategy is simple_byte
  8541  011132  0A00               	xorlw	0	; case 0
  8542  011134  B4D8               	btfsc	status,2,c
  8543  011136  0012               	return	
  8544  011138  0A01               	xorlw	1	; case 1
  8545  01113A  B4D8               	btfsc	status,2,c
  8546  01113C  D7BE               	goto	i2l6819
  8547  01113E  0A03               	xorlw	3	; case 2
  8548  011140  B4D8               	btfsc	status,2,c
  8549  011142  D7CE               	goto	i2l6823
  8550  011144  0A01               	xorlw	1	; case 3
  8551  011146  A4D8               	btfss	status,2,c
  8552  011148  0012               	return	
  8553  01114A  D7DF               	goto	i2l6827
  8554  01114C                     __end_ofi2_Port_SetPin:
  8555                           	opt stack 0
  8556                           tosu	equ	0xFFF
  8557                           tosh	equ	0xFFE
  8558                           tosl	equ	0xFFD
  8559                           pclatu	equ	0xFFB
  8560                           pclath	equ	0xFFA
  8561                           tblptru	equ	0xFF8
  8562                           tblptrh	equ	0xFF7
  8563                           tblptrl	equ	0xFF6
  8564                           tablat	equ	0xFF5
  8565                           prodh	equ	0xFF4
  8566                           prodl	equ	0xFF3
  8567                           intcon	equ	0xFF2
  8568                           indf0	equ	0xFEF
  8569                           postinc0	equ	0xFEE
  8570                           fsr0h	equ	0xFEA
  8571                           fsr0l	equ	0xFE9
  8572                           wreg	equ	0xFE8
  8573                           postdec1	equ	0xFE5
  8574                           fsr1h	equ	0xFE2
  8575                           fsr1l	equ	0xFE1
  8576                           indf2	equ	0xFDF
  8577                           postinc2	equ	0xFDE
  8578                           postdec2	equ	0xFDD
  8579                           plusw2	equ	0xFDB
  8580                           fsr2h	equ	0xFDA
  8581                           fsr2l	equ	0xFD9
  8582                           status	equ	0xFD8
  8583                           
  8584 ;; *************** function i2_Word_GetPair *****************
  8585 ;; Defined at:
  8586 ;;		line 156 in file "Library/Types.c"
  8587 ;; Parameters:    Size  Location     Type
  8588 ;;  pInput          2   12[COMRAM] PTR struct Word
  8589 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  8590 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
  8591 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
  8592 ;;		 -> PortC(10), PortF(10), NULL(0), 
  8593 ;;  pPair           1   14[COMRAM] unsigned char 
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;		None
  8596 ;; Return value:  Size  Location     Type
  8597 ;;                  1    wreg      unsigned char 
  8598 ;; Registers used:
  8599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8600 ;; Tracked objects:
  8601 ;;		On entry : 0/0
  8602 ;;		On exit  : 0/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8605 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8608 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8609 ;;Total ram usage:        3 bytes
  8610 ;; Hardware stack levels used:    1
  8611 ;; Hardware stack levels required when called:    2
  8612 ;; This function calls:
  8613 ;;		i2_Byte_GetPair
  8614 ;; This function is called by:
  8615 ;;		i2_Port_SetPin
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           	psect	text42
  8620  011A7A                     __ptext42:
  8621                           	opt stack 0
  8622  011A7A                     i2_Word_GetPair:
  8623                           	opt stack 14
  8624                           
  8625                           ;Types.c: 158: if (pPair >= 4)
  8626                           
  8627                           ;incstack = 0
  8628  011A7A  0E03               	movlw	3
  8629  011A7C  640F               	cpfsgt	i2Word_GetPair@pPair,c
  8630  011A7E  D00C               	goto	i2l6467
  8631                           
  8632                           ;Types.c: 159: return Byte_GetPair(&(pInput->MS_Byte), pPair - 4);
  8633  011A80  0E01               	movlw	1
  8634  011A82  240D               	addwf	i2Word_GetPair@pInput,w,c
  8635  011A84  6E0A               	movwf	i2Byte_GetPair@pInput,c
  8636  011A86  0E00               	movlw	0
  8637  011A88  200E               	addwfc	i2Word_GetPair@pInput+1,w,c
  8638  011A8A  6E0B               	movwf	i2Byte_GetPair@pInput+1,c
  8639  011A8C  500F               	movf	i2Word_GetPair@pPair,w,c
  8640  011A8E  0FFC               	addlw	252
  8641  011A90  6E0C               	movwf	i2Byte_GetPair@pPair,c
  8642  011A92  EC9D  F08D         	call	i2_Byte_GetPair	;wreg free
  8643  011A96  0012               	return	
  8644  011A98                     i2l6467:
  8645                           
  8646                           ;Types.c: 160: else
  8647                           ;Types.c: 161: return Byte_GetPair(&(pInput->LS_Byte), pPair);
  8648  011A98  C00D  F00A         	movff	i2Word_GetPair@pInput,i2Byte_GetPair@pInput
  8649  011A9C  C00E  F00B         	movff	i2Word_GetPair@pInput+1,i2Byte_GetPair@pInput+1
  8650  011AA0  C00F  F00C         	movff	i2Word_GetPair@pPair,i2Byte_GetPair@pPair
  8651  011AA4  EC9D  F08D         	call	i2_Byte_GetPair	;wreg free
  8652  011AA8  0012               	return	
  8653  011AAA                     __end_ofi2_Word_GetPair:
  8654                           	opt stack 0
  8655                           tosu	equ	0xFFF
  8656                           tosh	equ	0xFFE
  8657                           tosl	equ	0xFFD
  8658                           pclatu	equ	0xFFB
  8659                           pclath	equ	0xFFA
  8660                           tblptru	equ	0xFF8
  8661                           tblptrh	equ	0xFF7
  8662                           tblptrl	equ	0xFF6
  8663                           tablat	equ	0xFF5
  8664                           prodh	equ	0xFF4
  8665                           prodl	equ	0xFF3
  8666                           intcon	equ	0xFF2
  8667                           indf0	equ	0xFEF
  8668                           postinc0	equ	0xFEE
  8669                           fsr0h	equ	0xFEA
  8670                           fsr0l	equ	0xFE9
  8671                           wreg	equ	0xFE8
  8672                           postdec1	equ	0xFE5
  8673                           fsr1h	equ	0xFE2
  8674                           fsr1l	equ	0xFE1
  8675                           indf2	equ	0xFDF
  8676                           postinc2	equ	0xFDE
  8677                           postdec2	equ	0xFDD
  8678                           plusw2	equ	0xFDB
  8679                           fsr2h	equ	0xFDA
  8680                           fsr2l	equ	0xFD9
  8681                           status	equ	0xFD8
  8682                           
  8683 ;; *************** function i2_Byte_GetPair *****************
  8684 ;; Defined at:
  8685 ;;		line 87 in file "Library/Types.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;  pInput          2    9[COMRAM] PTR struct Byte
  8688 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
  8689 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
  8690 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
  8691 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
  8692 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
  8693 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
  8694 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
  8695 ;;		 -> NULL(0), 
  8696 ;;  pPair           1   11[COMRAM] unsigned char 
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;		None
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  1    wreg      unsigned char 
  8701 ;; Registers used:
  8702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8708 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8711 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8712 ;;Total ram usage:        3 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; Hardware stack levels required when called:    1
  8715 ;; This function calls:
  8716 ;;		i2_Byte_GetZone
  8717 ;; This function is called by:
  8718 ;;		i2_Word_GetPair
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           	psect	text43
  8723  011B3A                     __ptext43:
  8724                           	opt stack 0
  8725  011B3A                     i2_Byte_GetPair:
  8726                           	opt stack 14
  8727                           
  8728                           ;Types.c: 89: return Byte_GetZone(pInput, 4, pPair, 2);
  8729                           
  8730                           ;incstack = 0
  8731  011B3A  C00A  F001         	movff	i2Byte_GetPair@pInput,i2Byte_GetZone@pInput
  8732  011B3E  C00B  F002         	movff	i2Byte_GetPair@pInput+1,i2Byte_GetZone@pInput+1
  8733  011B42  0E04               	movlw	4
  8734  011B44  6E03               	movwf	i2Byte_GetZone@pMax,c
  8735  011B46  C00C  F004         	movff	i2Byte_GetPair@pPair,i2Byte_GetZone@pChunk
  8736  011B4A  0E02               	movlw	2
  8737  011B4C  6E05               	movwf	i2Byte_GetZone@pChunkSize,c
  8738  011B4E  EC7C  F08A         	call	i2_Byte_GetZone	;wreg free
  8739  011B52  0012               	return	
  8740  011B54                     __end_ofi2_Byte_GetPair:
  8741                           	opt stack 0
  8742                           tosu	equ	0xFFF
  8743                           tosh	equ	0xFFE
  8744                           tosl	equ	0xFFD
  8745                           pclatu	equ	0xFFB
  8746                           pclath	equ	0xFFA
  8747                           tblptru	equ	0xFF8
  8748                           tblptrh	equ	0xFF7
  8749                           tblptrl	equ	0xFF6
  8750                           tablat	equ	0xFF5
  8751                           prodh	equ	0xFF4
  8752                           prodl	equ	0xFF3
  8753                           intcon	equ	0xFF2
  8754                           indf0	equ	0xFEF
  8755                           postinc0	equ	0xFEE
  8756                           fsr0h	equ	0xFEA
  8757                           fsr0l	equ	0xFE9
  8758                           wreg	equ	0xFE8
  8759                           postdec1	equ	0xFE5
  8760                           fsr1h	equ	0xFE2
  8761                           fsr1l	equ	0xFE1
  8762                           indf2	equ	0xFDF
  8763                           postinc2	equ	0xFDE
  8764                           postdec2	equ	0xFDD
  8765                           plusw2	equ	0xFDB
  8766                           fsr2h	equ	0xFDA
  8767                           fsr2l	equ	0xFD9
  8768                           status	equ	0xFD8
  8769                           
  8770 ;; *************** function i2_Byte_GetZone *****************
  8771 ;; Defined at:
  8772 ;;		line 64 in file "Library/Types.c"
  8773 ;; Parameters:    Size  Location     Type
  8774 ;;  pInput          2    0[COMRAM] PTR struct Byte
  8775 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
  8776 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
  8777 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
  8778 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
  8779 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
  8780 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
  8781 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
  8782 ;;		 -> NULL(0), 
  8783 ;;  pMax            1    2[COMRAM] unsigned char 
  8784 ;;  pChunk          1    3[COMRAM] unsigned char 
  8785 ;;  pChunkSize      1    4[COMRAM] unsigned char 
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;  Byte_GetZone    1    8[COMRAM] unsigned char 
  8788 ;;  Byte_GetZone    1    7[COMRAM] unsigned char 
  8789 ;;  Byte_GetZone    1    6[COMRAM] unsigned char 
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  1    wreg      unsigned char 
  8792 ;; Registers used:
  8793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8799 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8800 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8801 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8802 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8803 ;;Total ram usage:        9 bytes
  8804 ;; Hardware stack levels used:    1
  8805 ;; This function calls:
  8806 ;;		Nothing
  8807 ;; This function is called by:
  8808 ;;		i2_Byte_GetPair
  8809 ;; This function uses a non-reentrant model
  8810 ;;
  8811                           
  8812                           	psect	text44
  8813  0114F8                     __ptext44:
  8814                           	opt stack 0
  8815  0114F8                     i2_Byte_GetZone:
  8816                           	opt stack 14
  8817                           
  8818                           ;Types.c: 66: UINT8 Output = pInput->mBits;
  8819                           
  8820                           ;incstack = 0
  8821  0114F8  C001  FFF6         	movff	i2Byte_GetZone@pInput,tblptrl
  8822  0114FC  C002  FFF7         	movff	i2Byte_GetZone@pInput+1,tblptrh
  8823  011500  0E00               	movlw	low (__mediumconst shr (0+16))
  8824  011502  6EF8               	movwf	tblptru,c
  8825  011504  0E0F               	movlw	(high __ramtop+-1)
  8826  011506  64F7               	cpfsgt	tblptrh,c
  8827  011508  D003               	bra	i2u289_47
  8828  01150A  0008               	tblrd		*
  8829  01150C  50F5               	movf	tablat,w,c
  8830  01150E  D005               	bra	i2u289_40
  8831  011510                     i2u289_47:
  8832  011510  CFF6 FFE9          	movff	tblptrl,fsr0l
  8833  011514  CFF7 FFEA          	movff	tblptrh,fsr0h
  8834  011518  50EF               	movf	indf0,w,c
  8835  01151A                     i2u289_40:
  8836  01151A  6E09               	movwf	i2Byte_GetZone@Output,c
  8837                           
  8838                           ;Types.c: 67: UINT8 MASK = MASKS[pChunkSize];
  8839  01151C  5005               	movf	i2Byte_GetZone@pChunkSize,w,c
  8840  01151E  0D01               	mullw	1
  8841  011520  0E01               	movlw	low _MASKS
  8842  011522  24F3               	addwf	prodl,w,c
  8843  011524  6EF6               	movwf	tblptrl,c
  8844  011526  0EFE               	movlw	high _MASKS
  8845  011528  20F4               	addwfc	prodh,w,c
  8846  01152A  6EF7               	movwf	tblptrh,c
  8847  01152C                     	if	1	;There are 3 active tblptr bytes
  8848  01152C  6AF8               	clrf	tblptru,c
  8849  01152E  0E00               	movlw	low (__mediumconst shr (0+16))
  8850  011530  22F8               	addwfc	tblptru,f,c
  8851  011532                     	endif
  8852  011532  0008               	tblrd		*
  8853  011534  CFF5 F007          	movff	tablat,i2Byte_GetZone@MASK
  8854                           
  8855                           ;Types.c: 68: UINT8 Offset = 0;
  8856  011538  0E00               	movlw	0
  8857  01153A  6E08               	movwf	i2Byte_GetZone@Offset,c
  8858                           
  8859                           ;Types.c: 70: while (pChunk >= pMax)
  8860  01153C  D003               	goto	i2l6215
  8861  01153E                     i2l6211:
  8862                           
  8863                           ;Types.c: 71: {
  8864                           ;Types.c: 72: pChunk -= pMax;
  8865  01153E  5003               	movf	i2Byte_GetZone@pMax,w,c
  8866  011540  5E04               	subwf	i2Byte_GetZone@pChunk,f,c
  8867                           
  8868                           ;Types.c: 73: Offset += 1;
  8869  011542  2A08               	incf	i2Byte_GetZone@Offset,f,c
  8870  011544                     i2l6215:
  8871  011544  5003               	movf	i2Byte_GetZone@pMax,w,c
  8872  011546  5C04               	subwf	i2Byte_GetZone@pChunk,w,c
  8873  011548  B0D8               	btfsc	status,0,c
  8874  01154A  D7F9               	goto	i2l6211
  8875                           
  8876                           ;Types.c: 74: }
  8877                           ;Types.c: 75: pChunk *= pChunkSize;
  8878  01154C  5005               	movf	i2Byte_GetZone@pChunkSize,w,c
  8879  01154E  0204               	mulwf	i2Byte_GetZone@pChunk,c
  8880  011550  50F3               	movf	prodl,w,c
  8881  011552  6E04               	movwf	i2Byte_GetZone@pChunk,c
  8882                           
  8883                           ;Types.c: 76: pChunk += Offset;
  8884  011554  5008               	movf	i2Byte_GetZone@Offset,w,c
  8885  011556  2604               	addwf	i2Byte_GetZone@pChunk,f,c
  8886                           
  8887                           ;Types.c: 78: Output >>= pChunk;
  8888  011558  2804               	incf	i2Byte_GetZone@pChunk,w,c
  8889  01155A  6E06               	movwf	??i2_Byte_GetZone& (0+255),c
  8890  01155C  D002               	goto	i2u291_40
  8891  01155E                     i2u291_45:
  8892  01155E  90D8               	bcf	status,0,c
  8893  011560  3209               	rrcf	i2Byte_GetZone@Output,f,c
  8894  011562                     i2u291_40:
  8895  011562  2E06               	decfsz	??i2_Byte_GetZone& (0+255),f,c
  8896  011564  D7FC               	goto	i2u291_45
  8897                           
  8898                           ;Types.c: 79: Output &= MASK;
  8899  011566  5007               	movf	i2Byte_GetZone@MASK,w,c
  8900  011568  1609               	andwf	i2Byte_GetZone@Output,f,c
  8901                           
  8902                           ;Types.c: 80: return Output;
  8903  01156A  5009               	movf	i2Byte_GetZone@Output,w,c
  8904  01156C  0012               	return	
  8905  01156E                     __end_ofi2_Byte_GetZone:
  8906                           	opt stack 0
  8907                           tosu	equ	0xFFF
  8908                           tosh	equ	0xFFE
  8909                           tosl	equ	0xFFD
  8910                           pclatu	equ	0xFFB
  8911                           pclath	equ	0xFFA
  8912                           tblptru	equ	0xFF8
  8913                           tblptrh	equ	0xFF7
  8914                           tblptrl	equ	0xFF6
  8915                           tablat	equ	0xFF5
  8916                           prodh	equ	0xFF4
  8917                           prodl	equ	0xFF3
  8918                           intcon	equ	0xFF2
  8919                           indf0	equ	0xFEF
  8920                           postinc0	equ	0xFEE
  8921                           fsr0h	equ	0xFEA
  8922                           fsr0l	equ	0xFE9
  8923                           wreg	equ	0xFE8
  8924                           postdec1	equ	0xFE5
  8925                           fsr1h	equ	0xFE2
  8926                           fsr1l	equ	0xFE1
  8927                           indf2	equ	0xFDF
  8928                           postinc2	equ	0xFDE
  8929                           postdec2	equ	0xFDD
  8930                           plusw2	equ	0xFDB
  8931                           fsr2h	equ	0xFDA
  8932                           fsr2l	equ	0xFD9
  8933                           status	equ	0xFD8
  8934                           
  8935 ;; *************** function i2_Byte_SetBit *****************
  8936 ;; Defined at:
  8937 ;;		line 32 in file "Library/Types.c"
  8938 ;; Parameters:    Size  Location     Type
  8939 ;;  pInput          2    0[COMRAM] PTR struct Byte
  8940 ;;		 -> SSP2CON2(1), SSP1CON2(1), SSP2CON1(1), SSP2STAT(1), 
  8941 ;;		 -> SSP1CON1(1), SSP1STAT(1), TRISG(1), TRISF(1), 
  8942 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
  8943 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
  8944 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
  8945 ;;		 -> NULL(0), 
  8946 ;;  pBit            1    2[COMRAM] unsigned char 
  8947 ;;  pValue          1    3[COMRAM] unsigned char 
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;		None
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  1    wreg      void 
  8952 ;; Registers used:
  8953 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8959 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8961 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8962 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8963 ;;Total ram usage:        7 bytes
  8964 ;; Hardware stack levels used:    1
  8965 ;; This function calls:
  8966 ;;		Nothing
  8967 ;; This function is called by:
  8968 ;;		i2_Port_SetPin
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           	psect	text45
  8973  011804                     __ptext45:
  8974                           	opt stack 0
  8975  011804                     i2_Byte_SetBit:
  8976                           	opt stack 16
  8977                           
  8978                           ;Types.c: 34: pValue &= 1;
  8979                           
  8980                           ;incstack = 0
  8981  011804  0E01               	movlw	1
  8982  011806  1604               	andwf	i2Byte_SetBit@pValue,f,c
  8983                           
  8984                           ;Types.c: 35: pInput->mBits &= ~(1 << pBit);
  8985  011808  C003  F005         	movff	i2Byte_SetBit@pBit,??i2_Byte_SetBit
  8986  01180C  0E01               	movlw	1
  8987  01180E  6E06               	movwf	(??i2_Byte_SetBit+1)& (0+255),c
  8988  011810  2A05               	incf	??i2_Byte_SetBit,f,c
  8989  011812  D002               	goto	i2u316_44
  8990  011814                     i2u316_45:
  8991  011814  90D8               	bcf	status,0,c
  8992  011816  3606               	rlcf	??i2_Byte_SetBit+1,f,c
  8993  011818                     i2u316_44:
  8994  011818  2E05               	decfsz	??i2_Byte_SetBit,f,c
  8995  01181A  D7FC               	goto	i2u316_45
  8996  01181C  5006               	movf	??i2_Byte_SetBit+1,w,c
  8997  01181E  0AFF               	xorlw	255
  8998  011820  6E07               	movwf	(??i2_Byte_SetBit+2)& (0+255),c
  8999  011822  C001  FFD9         	movff	i2Byte_SetBit@pInput,fsr2l
  9000  011826  C002  FFDA         	movff	i2Byte_SetBit@pInput+1,fsr2h
  9001  01182A  5007               	movf	??i2_Byte_SetBit+2,w,c
  9002  01182C  16DF               	andwf	indf2,f,c
  9003                           
  9004                           ;Types.c: 36: pInput->mBits |= pValue << pBit;
  9005  01182E  C003  F005         	movff	i2Byte_SetBit@pBit,??i2_Byte_SetBit
  9006  011832  C004  F006         	movff	i2Byte_SetBit@pValue,??i2_Byte_SetBit+1
  9007  011836  2A05               	incf	??i2_Byte_SetBit,f,c
  9008  011838  D002               	goto	i2u317_44
  9009  01183A                     i2u317_45:
  9010  01183A  90D8               	bcf	status,0,c
  9011  01183C  3606               	rlcf	??i2_Byte_SetBit+1,f,c
  9012  01183E                     i2u317_44:
  9013  01183E  2E05               	decfsz	??i2_Byte_SetBit,f,c
  9014  011840  D7FC               	goto	i2u317_45
  9015  011842  C001  FFD9         	movff	i2Byte_SetBit@pInput,fsr2l
  9016  011846  C002  FFDA         	movff	i2Byte_SetBit@pInput+1,fsr2h
  9017  01184A  5006               	movf	??i2_Byte_SetBit+1,w,c
  9018  01184C  12DF               	iorwf	indf2,f,c
  9019  01184E  0012               	return		;funcret
  9020  011850                     __end_ofi2_Byte_SetBit:
  9021                           	opt stack 0
  9022                           tosu	equ	0xFFF
  9023                           tosh	equ	0xFFE
  9024                           tosl	equ	0xFFD
  9025                           pclatu	equ	0xFFB
  9026                           pclath	equ	0xFFA
  9027                           tblptru	equ	0xFF8
  9028                           tblptrh	equ	0xFF7
  9029                           tblptrl	equ	0xFF6
  9030                           tablat	equ	0xFF5
  9031                           prodh	equ	0xFF4
  9032                           prodl	equ	0xFF3
  9033                           intcon	equ	0xFF2
  9034                           indf0	equ	0xFEF
  9035                           postinc0	equ	0xFEE
  9036                           fsr0h	equ	0xFEA
  9037                           fsr0l	equ	0xFE9
  9038                           wreg	equ	0xFE8
  9039                           postdec1	equ	0xFE5
  9040                           fsr1h	equ	0xFE2
  9041                           fsr1l	equ	0xFE1
  9042                           indf2	equ	0xFDF
  9043                           postinc2	equ	0xFDE
  9044                           postdec2	equ	0xFDD
  9045                           plusw2	equ	0xFDB
  9046                           fsr2h	equ	0xFDA
  9047                           fsr2l	equ	0xFD9
  9048                           status	equ	0xFD8
  9049                           
  9050 ;; *************** function i2_MXK_SwitchTo *****************
  9051 ;; Defined at:
  9052 ;;		line 105 in file "Library/MXK.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;  pModule         1    wreg     enum E6927
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;  pModule         1    7[COMRAM] enum E6927
  9057 ;;  MXK_SwitchTo    1    6[COMRAM] unsigned char 
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      unsigned char 
  9060 ;; Registers used:
  9061 ;;		wreg, status,2, status,0, cstack
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9068 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9071 ;;Total ram usage:        2 bytes
  9072 ;; Hardware stack levels used:    1
  9073 ;; Hardware stack levels required when called:    1
  9074 ;; This function calls:
  9075 ;;		i2_delay_us
  9076 ;; This function is called by:
  9077 ;;		i2_Motor_Step
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           	psect	text46
  9082  011A14                     __ptext46:
  9083                           	opt stack 0
  9084  011A14                     i2_MXK_SwitchTo:
  9085                           	opt stack 16
  9086                           
  9087                           ;incstack = 0
  9088                           ;i2MXK_SwitchTo@pModule stored from wreg
  9089  011A14  6E08               	movwf	i2MXK_SwitchTo@pModule,c
  9090                           
  9091                           ;MXK.c: 107: UINT8 CUR = 0xF & PORTG;
  9092  011A16  5086               	movf	3974,w,c	;volatile
  9093  011A18  0B0F               	andlw	15
  9094  011A1A  6E07               	movwf	i2MXK_SwitchTo@CUR,c
  9095                           
  9096                           ;MXK.c: 109: if (Bus_State == eMXK_Busy)
  9097  011A1C  5044               	movf	_Bus_State,w,c
  9098  011A1E  A4D8               	btfss	status,2,c
  9099  011A20  D002               	goto	i2l6843
  9100                           
  9101                           ;MXK.c: 110: return 0;
  9102  011A22  0E00               	movlw	0
  9103  011A24  0012               	return	
  9104  011A26                     i2l6843:
  9105                           
  9106                           ;MXK.c: 112: Bus_State = eMXK_Busy;
  9107  011A26  0E00               	movlw	0
  9108  011A28  6E44               	movwf	_Bus_State,c
  9109                           
  9110                           ;MXK.c: 114: if (CUR != pModule)
  9111  011A2A  5008               	movf	i2MXK_SwitchTo@pModule,w,c
  9112  011A2C  1807               	xorwf	i2MXK_SwitchTo@CUR,w,c
  9113  011A2E  B4D8               	btfsc	status,2,c
  9114  011A30  D00A               	goto	i2l6851
  9115                           
  9116                           ;MXK.c: 115: {
  9117                           ;MXK.c: 116: PORTG &= ~(0xF);
  9118  011A32  0EF0               	movlw	240
  9119  011A34  1686               	andwf	3974,f,c	;volatile
  9120                           
  9121                           ;MXK.c: 117: PORTG |= pModule;
  9122  011A36  5008               	movf	i2MXK_SwitchTo@pModule,w,c
  9123  011A38  1286               	iorwf	3974,f,c	;volatile
  9124                           
  9125                           ;MXK.c: 120: delay_us(10);
  9126  011A3A  0E00               	movlw	0
  9127  011A3C  6E02               	movwf	i2delay_us@us+1,c
  9128  011A3E  0E0A               	movlw	10
  9129  011A40  6E01               	movwf	i2delay_us@us,c
  9130  011A42  EC90  F08C         	call	i2_delay_us	;wreg free
  9131  011A46                     i2l6851:
  9132                           
  9133                           ;MXK.c: 121: }
  9134                           ;MXK.c: 122: return 1;
  9135  011A46  0E01               	movlw	1
  9136  011A48  0012               	return	
  9137  011A4A                     __end_ofi2_MXK_SwitchTo:
  9138                           	opt stack 0
  9139                           tosu	equ	0xFFF
  9140                           tosh	equ	0xFFE
  9141                           tosl	equ	0xFFD
  9142                           pclatu	equ	0xFFB
  9143                           pclath	equ	0xFFA
  9144                           tblptru	equ	0xFF8
  9145                           tblptrh	equ	0xFF7
  9146                           tblptrl	equ	0xFF6
  9147                           tablat	equ	0xFF5
  9148                           prodh	equ	0xFF4
  9149                           prodl	equ	0xFF3
  9150                           intcon	equ	0xFF2
  9151                           indf0	equ	0xFEF
  9152                           postinc0	equ	0xFEE
  9153                           fsr0h	equ	0xFEA
  9154                           fsr0l	equ	0xFE9
  9155                           wreg	equ	0xFE8
  9156                           postdec1	equ	0xFE5
  9157                           fsr1h	equ	0xFE2
  9158                           fsr1l	equ	0xFE1
  9159                           indf2	equ	0xFDF
  9160                           postinc2	equ	0xFDE
  9161                           postdec2	equ	0xFDD
  9162                           plusw2	equ	0xFDB
  9163                           fsr2h	equ	0xFDA
  9164                           fsr2l	equ	0xFD9
  9165                           status	equ	0xFD8
  9166                           
  9167 ;; *************** function i2_delay_us *****************
  9168 ;; Defined at:
  9169 ;;		line 255 in file "Library/Types.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;  us              2    0[COMRAM] unsigned short 
  9172 ;; Auto vars:     Size  Location     Type
  9173 ;;  delay_us        4    2[COMRAM] unsigned long 
  9174 ;; Return value:  Size  Location     Type
  9175 ;;                  1    wreg      void 
  9176 ;; Registers used:
  9177 ;;		wreg, status,2, status,0
  9178 ;; Tracked objects:
  9179 ;;		On entry : 0/0
  9180 ;;		On exit  : 0/0
  9181 ;;		Unchanged: 0/0
  9182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9184 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9186 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9187 ;;Total ram usage:        6 bytes
  9188 ;; Hardware stack levels used:    1
  9189 ;; This function calls:
  9190 ;;		Nothing
  9191 ;; This function is called by:
  9192 ;;		i2_MXK_SwitchTo
  9193 ;; This function uses a non-reentrant model
  9194 ;;
  9195                           
  9196                           	psect	text47
  9197  011920                     __ptext47:
  9198                           	opt stack 0
  9199  011920                     i2_delay_us:
  9200                           	opt stack 16
  9201                           
  9202                           ;Types.c: 256: unsigned long u;
  9203                           ;Types.c: 257: while (us--) {
  9204                           
  9205                           ;incstack = 0
  9206  011920  D016               	goto	i2l6481
  9207  011922                     i2l6473:
  9208                           
  9209                           ;Types.c: 259: for (u = 0; u < ((((48*1000000L) / 4000UL) / 10UL)/1000UL); u++) {
  9210  011922  0E00               	movlw	0
  9211  011924  6E03               	movwf	i2delay_us@u,c
  9212  011926  0E00               	movlw	0
  9213  011928  6E04               	movwf	i2delay_us@u+1,c
  9214  01192A  0E00               	movlw	0
  9215  01192C  6E05               	movwf	i2delay_us@u+2,c
  9216  01192E  0E00               	movlw	0
  9217  011930  6E06               	movwf	i2delay_us@u+3,c
  9218  011932                     i2l6475:
  9219  011932  5003               	movf	i2delay_us@u,w,c
  9220  011934  1004               	iorwf	i2delay_us@u+1,w,c
  9221  011936  1005               	iorwf	i2delay_us@u+2,w,c
  9222  011938  1006               	iorwf	i2delay_us@u+3,w,c
  9223  01193A  A4D8               	btfss	status,2,c
  9224  01193C  D008               	goto	i2l6481
  9225  01193E  F000               	nop		; ;# 
  9226  011940  0E01               	movlw	1
  9227  011942  2603               	addwf	i2delay_us@u,f,c
  9228  011944  0E00               	movlw	0
  9229  011946  2204               	addwfc	i2delay_us@u+1,f,c
  9230  011948  2205               	addwfc	i2delay_us@u+2,f,c
  9231  01194A  2206               	addwfc	i2delay_us@u+3,f,c
  9232  01194C  D7F2               	goto	i2l6475
  9233  01194E                     i2l6481:
  9234  01194E  0601               	decf	i2delay_us@us,f,c
  9235  011950  A0D8               	btfss	status,0,c
  9236  011952  0602               	decf	i2delay_us@us+1,f,c
  9237  011954  2801               	incf	i2delay_us@us,w,c
  9238  011956  E1E5               	bnz	i2l6473
  9239  011958  2802               	incf	i2delay_us@us+1,w,c
  9240  01195A  B4D8               	btfsc	status,2,c
  9241  01195C  0012               	return	
  9242  01195E  D7E1               	goto	i2l6473
  9243  011960                     __end_ofi2_delay_us:
  9244                           	opt stack 0
  9245                           tosu	equ	0xFFF
  9246                           tosh	equ	0xFFE
  9247                           tosl	equ	0xFFD
  9248                           pclatu	equ	0xFFB
  9249                           pclath	equ	0xFFA
  9250                           tblptru	equ	0xFF8
  9251                           tblptrh	equ	0xFF7
  9252                           tblptrl	equ	0xFF6
  9253                           tablat	equ	0xFF5
  9254                           prodh	equ	0xFF4
  9255                           prodl	equ	0xFF3
  9256                           intcon	equ	0xFF2
  9257                           indf0	equ	0xFEF
  9258                           postinc0	equ	0xFEE
  9259                           fsr0h	equ	0xFEA
  9260                           fsr0l	equ	0xFE9
  9261                           wreg	equ	0xFE8
  9262                           postdec1	equ	0xFE5
  9263                           fsr1h	equ	0xFE2
  9264                           fsr1l	equ	0xFE1
  9265                           indf2	equ	0xFDF
  9266                           postinc2	equ	0xFDE
  9267                           postdec2	equ	0xFDD
  9268                           plusw2	equ	0xFDB
  9269                           fsr2h	equ	0xFDA
  9270                           fsr2l	equ	0xFD9
  9271                           status	equ	0xFD8
  9272                           
  9273 ;; *************** function i2_MXK_Release *****************
  9274 ;; Defined at:
  9275 ;;		line 130 in file "Library/MXK.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;		None
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;		None
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  1    wreg      unsigned char 
  9282 ;; Registers used:
  9283 ;;		wreg, status,2, status,0
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/0
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9293 ;;Total ram usage:        0 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; This function calls:
  9296 ;;		Nothing
  9297 ;; This function is called by:
  9298 ;;		i2_Motor_Step
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           	psect	text48
  9303  011BD2                     __ptext48:
  9304                           	opt stack 0
  9305  011BD2                     i2_MXK_Release:
  9306                           	opt stack 17
  9307                           
  9308                           ;MXK.c: 132: Bus_State = eMXK_Idle;
  9309                           
  9310                           ;incstack = 0
  9311  011BD2  0E01               	movlw	1
  9312  011BD4  6E44               	movwf	_Bus_State,c
  9313                           
  9314                           ;MXK.c: 135: return 1;
  9315                           ;	Return value of i2_MXK_Release is never used
  9316  011BD6  0012               	return	
  9317  011BD8                     __end_ofi2_MXK_Release:
  9318                           	opt stack 0
  9319                           tosu	equ	0xFFF
  9320                           tosh	equ	0xFFE
  9321                           tosl	equ	0xFFD
  9322                           pclatu	equ	0xFFB
  9323                           pclath	equ	0xFFA
  9324                           tblptru	equ	0xFF8
  9325                           tblptrh	equ	0xFF7
  9326                           tblptrl	equ	0xFF6
  9327                           tablat	equ	0xFF5
  9328                           prodh	equ	0xFF4
  9329                           prodl	equ	0xFF3
  9330                           intcon	equ	0xFF2
  9331                           indf0	equ	0xFEF
  9332                           postinc0	equ	0xFEE
  9333                           fsr0h	equ	0xFEA
  9334                           fsr0l	equ	0xFE9
  9335                           wreg	equ	0xFE8
  9336                           postdec1	equ	0xFE5
  9337                           fsr1h	equ	0xFE2
  9338                           fsr1l	equ	0xFE1
  9339                           indf2	equ	0xFDF
  9340                           postinc2	equ	0xFDE
  9341                           postdec2	equ	0xFDD
  9342                           plusw2	equ	0xFDB
  9343                           fsr2h	equ	0xFDA
  9344                           fsr2l	equ	0xFD9
  9345                           status	equ	0xFD8
  9346                           
  9347 ;; *************** function i2_MXK_Queue *****************
  9348 ;; Defined at:
  9349 ;;		line 144 in file "Library/MXK.c"
  9350 ;; Parameters:    Size  Location     Type
  9351 ;;  pCallback       3    0[COMRAM] PTR FTN()void 
  9352 ;;		 -> Absolute function(1), Motor_Step(1), 
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;		None
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  1    wreg      void 
  9357 ;; Registers used:
  9358 ;;		wreg, status,2, status,0
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9364 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9367 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9368 ;;Total ram usage:        3 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; This function calls:
  9371 ;;		Nothing
  9372 ;; This function is called by:
  9373 ;;		i2_Motor_Step
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           	psect	text49
  9378  011B86                     __ptext49:
  9379                           	opt stack 0
  9380  011B86                     i2_MXK_Queue:
  9381                           	opt stack 17
  9382                           
  9383                           ;MXK.c: 146: lQueue = pCallback;
  9384                           
  9385                           ;incstack = 0
  9386  011B86  C001  F025         	movff	i2MXK_Queue@pCallback,_lQueue	;volatile
  9387  011B8A  C002  F026         	movff	i2MXK_Queue@pCallback+1,_lQueue+1	;volatile
  9388  011B8E  C003  F027         	movff	i2MXK_Queue@pCallback+2,_lQueue+2	;volatile
  9389  011B92  0012               	return		;funcret
  9390  011B94                     __end_ofi2_MXK_Queue:
  9391                           	opt stack 0
  9392                           tosu	equ	0xFFF
  9393                           tosh	equ	0xFFE
  9394                           tosl	equ	0xFFD
  9395                           pclatu	equ	0xFFB
  9396                           pclath	equ	0xFFA
  9397                           tblptru	equ	0xFF8
  9398                           tblptrh	equ	0xFF7
  9399                           tblptrl	equ	0xFF6
  9400                           tablat	equ	0xFF5
  9401                           prodh	equ	0xFF4
  9402                           prodl	equ	0xFF3
  9403                           intcon	equ	0xFF2
  9404                           indf0	equ	0xFEF
  9405                           postinc0	equ	0xFEE
  9406                           fsr0h	equ	0xFEA
  9407                           fsr0l	equ	0xFE9
  9408                           wreg	equ	0xFE8
  9409                           postdec1	equ	0xFE5
  9410                           fsr1h	equ	0xFE2
  9411                           fsr1l	equ	0xFE1
  9412                           indf2	equ	0xFDF
  9413                           postinc2	equ	0xFDE
  9414                           postdec2	equ	0xFDD
  9415                           plusw2	equ	0xFDB
  9416                           fsr2h	equ	0xFDA
  9417                           fsr2l	equ	0xFD9
  9418                           status	equ	0xFD8
  9419                           tosu	equ	0xFFF
  9420                           tosh	equ	0xFFE
  9421                           tosl	equ	0xFFD
  9422                           pclatu	equ	0xFFB
  9423                           pclath	equ	0xFFA
  9424                           tblptru	equ	0xFF8
  9425                           tblptrh	equ	0xFF7
  9426                           tblptrl	equ	0xFF6
  9427                           tablat	equ	0xFF5
  9428                           prodh	equ	0xFF4
  9429                           prodl	equ	0xFF3
  9430                           intcon	equ	0xFF2
  9431                           indf0	equ	0xFEF
  9432                           postinc0	equ	0xFEE
  9433                           fsr0h	equ	0xFEA
  9434                           fsr0l	equ	0xFE9
  9435                           wreg	equ	0xFE8
  9436                           postdec1	equ	0xFE5
  9437                           fsr1h	equ	0xFE2
  9438                           fsr1l	equ	0xFE1
  9439                           indf2	equ	0xFDF
  9440                           postinc2	equ	0xFDE
  9441                           postdec2	equ	0xFDD
  9442                           plusw2	equ	0xFDB
  9443                           fsr2h	equ	0xFDA
  9444                           fsr2l	equ	0xFD9
  9445                           status	equ	0xFD8
  9446                           
  9447                           	psect	text50
  9448  000000                     __ptext50:
  9449                           	opt stack 0
  9450                           tosu	equ	0xFFF
  9451                           tosh	equ	0xFFE
  9452                           tosl	equ	0xFFD
  9453                           pclatu	equ	0xFFB
  9454                           pclath	equ	0xFFA
  9455                           tblptru	equ	0xFF8
  9456                           tblptrh	equ	0xFF7
  9457                           tblptrl	equ	0xFF6
  9458                           tablat	equ	0xFF5
  9459                           prodh	equ	0xFF4
  9460                           prodl	equ	0xFF3
  9461                           intcon	equ	0xFF2
  9462                           indf0	equ	0xFEF
  9463                           postinc0	equ	0xFEE
  9464                           fsr0h	equ	0xFEA
  9465                           fsr0l	equ	0xFE9
  9466                           wreg	equ	0xFE8
  9467                           postdec1	equ	0xFE5
  9468                           fsr1h	equ	0xFE2
  9469                           fsr1l	equ	0xFE1
  9470                           indf2	equ	0xFDF
  9471                           postinc2	equ	0xFDE
  9472                           postdec2	equ	0xFDD
  9473                           plusw2	equ	0xFDB
  9474                           fsr2h	equ	0xFDA
  9475                           fsr2l	equ	0xFD9
  9476                           status	equ	0xFD8
  9477                           
  9478                           	psect	rparam
  9479  0000                     tosu	equ	0xFFF
  9480                           tosh	equ	0xFFE
  9481                           tosl	equ	0xFFD
  9482                           pclatu	equ	0xFFB
  9483                           pclath	equ	0xFFA
  9484                           tblptru	equ	0xFF8
  9485                           tblptrh	equ	0xFF7
  9486                           tblptrl	equ	0xFF6
  9487                           tablat	equ	0xFF5
  9488                           prodh	equ	0xFF4
  9489                           prodl	equ	0xFF3
  9490                           intcon	equ	0xFF2
  9491                           indf0	equ	0xFEF
  9492                           postinc0	equ	0xFEE
  9493                           fsr0h	equ	0xFEA
  9494                           fsr0l	equ	0xFE9
  9495                           wreg	equ	0xFE8
  9496                           postdec1	equ	0xFE5
  9497                           fsr1h	equ	0xFE2
  9498                           fsr1l	equ	0xFE1
  9499                           indf2	equ	0xFDF
  9500                           postinc2	equ	0xFDE
  9501                           postdec2	equ	0xFDD
  9502                           plusw2	equ	0xFDB
  9503                           fsr2h	equ	0xFDA
  9504                           fsr2l	equ	0xFD9
  9505                           status	equ	0xFD8
  9506                           
  9507                           	psect	temp
  9508  000049                     btemp:
  9509                           	opt stack 0
  9510  000049                     	ds	1
  9511  0000                     int$flags	set	btemp
  9512                           tosu	equ	0xFFF
  9513                           tosh	equ	0xFFE
  9514                           tosl	equ	0xFFD
  9515                           pclatu	equ	0xFFB
  9516                           pclath	equ	0xFFA
  9517                           tblptru	equ	0xFF8
  9518                           tblptrh	equ	0xFF7
  9519                           tblptrl	equ	0xFF6
  9520                           tablat	equ	0xFF5
  9521                           prodh	equ	0xFF4
  9522                           prodl	equ	0xFF3
  9523                           intcon	equ	0xFF2
  9524                           indf0	equ	0xFEF
  9525                           postinc0	equ	0xFEE
  9526                           fsr0h	equ	0xFEA
  9527                           fsr0l	equ	0xFE9
  9528                           wreg	equ	0xFE8
  9529                           postdec1	equ	0xFE5
  9530                           fsr1h	equ	0xFE2
  9531                           fsr1l	equ	0xFE1
  9532                           indf2	equ	0xFDF
  9533                           postinc2	equ	0xFDE
  9534                           postdec2	equ	0xFDD
  9535                           plusw2	equ	0xFDB
  9536                           fsr2h	equ	0xFDA
  9537                           fsr2l	equ	0xFD9
  9538                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    720
    Data        25
    BSS         673
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      72
    BANK0           160     48     160
    BANK1           256      6     256
    BANK2           256     16      16
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    ADC_AN0.mNext.mNext	PTR struct ADC size(2) Largest target is 0
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_AN1.mNext.mNext	PTR struct ADC size(2) Largest target is 0
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_AN2.mNext.mNext	PTR struct ADC size(2) Largest target is 0
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    HMIBoard.mGetState	PTR FTN()unsigned char  size(3) Largest target is 0
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    I2C1_More$0	const PTR struct I2CT size(2) Largest target is 7
		 -> I2C1T(BANK0[7]), 

    ADC_AN3.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_AN2.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_AN1.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_AN0.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    gISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    MXK_Queue@pCallback	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    lQueue	volatile PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    DIPSwitch.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    DIPSwitch.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    TestButton.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    TestButton.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    lMotor	PTR struct Motor size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    lStepFunction	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    I2C2_More	PTR FTN(const PTR struct I2CT,)unsigned char  size(3) Largest target is 1
		 -> Absolute function(), 

    I2C2_Done	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    I2C1_More	PTR FTN(const PTR struct I2CT,)unsigned char  size(3) Largest target is 1
		 -> Absolute function(), 

    I2C1_Done	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    I2CT_WAddress@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Stop@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Continue@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Next@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_IsWrite@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_IsRead@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_At@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Put@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Get@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Reset@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_InitW@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_InitR@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Init@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2C2T.mData	PTR unsigned char  size(2) Largest target is 0

    S11800I2CT$mData	PTR unsigned char  size(2) Largest target is 0

    I2C1T.mData	PTR unsigned char  size(2) Largest target is 0

    ADC_Voltage@pInput.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_Start@pInput.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_Sequence@pItemB.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_Sequence@pItemA.mNext.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_Sequence@pItemA.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_Init@pInput.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    S11482ADC$mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    lCurrent.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    lCurrent	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), ADC_AN0(BANK0[5]), 
		 -> NULL(NULL[0]), 

    HMIBoard.mDIP.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mDIP.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    HMIBoard.mDown.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mDown.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    HMIBoard.mUp.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mUp.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    HMIBoard.mLeft.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mLeft.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    HMIBoard.mRight.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mRight.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    sp__Console_MakeField	PTR unsigned short  size(2) Largest target is 70
		 -> Console_MakeField@Fill(BANK1[70]), 

    PortProperty_Valid@pInput	PTR struct PortProperty size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), 
		 -> PortD_Property(CODE[2]), PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), 
		 -> PortC(BANK0[10]), PortF(BANK0[10]), NULL(NULL[0]), 

    Word_GetPair@pInput	PTR struct Word size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), 
		 -> PortD_Property(CODE[2]), PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), 
		 -> PortC(BANK0[10]), PortF(BANK0[10]), NULL(NULL[0]), 

    Word_SetPair@pInput	PTR struct Word size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Byte_SetByte@pInput	PTR struct Byte size(2) Largest target is 1
		 -> SSP2CON2(SFR_1[1]), SSP1CON2(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> NULL(NULL[0]), 

    Byte_SetQuad@pInput	PTR struct Byte size(2) Largest target is 1
		 -> SSP2CON1(SFR_1[1]), SSP1CON1(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> NULL(NULL[0]), 

    Byte_GetPair@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortA_Property..(CODE[2]), PortB_Property..(CODE[2]), PortC_Property..(CODE[2]), PortD_Property..(CODE[2]), 
		 -> PortE_Property..(CODE[2]), PortF_Property..(CODE[2]), PortG_Property..(CODE[2]), PortF..(BANK0[2]), 
		 -> PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), PortB..(BANK1[2]), 
		 -> PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), PortA(BANK1[10]), 
		 -> PortB(BANK1[10]), PortE(BANK0[10]), PortD(BANK0[10]), PortG_Property(CODE[2]), 
		 -> PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), PortC_Property(CODE[2]), 
		 -> PortB_Property(CODE[2]), PortA_Property(CODE[2]), PortC(BANK0[10]), PortF(BANK0[10]), 
		 -> NULL(NULL[0]), 

    Byte_SetPair@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortF..(BANK0[2]), PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), 
		 -> PortB..(BANK1[2]), PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), 
		 -> PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), PortD(BANK0[10]), 
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), PORTG(SFR_1[1]), 
		 -> PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), PORTC(SFR_1[1]), 
		 -> PORTB(SFR_1[1]), PORTA(SFR_1[1]), PortC(BANK0[10]), PortF(BANK0[10]), 
		 -> NULL(NULL[0]), 

    Byte_GetZone@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortA_Property..(CODE[2]), PortB_Property..(CODE[2]), PortC_Property..(CODE[2]), PortD_Property..(CODE[2]), 
		 -> PortE_Property..(CODE[2]), PortF_Property..(CODE[2]), PortG_Property..(CODE[2]), PortF..(BANK0[2]), 
		 -> PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), PortB..(BANK1[2]), 
		 -> PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), PortA(BANK1[10]), 
		 -> PortB(BANK1[10]), PortE(BANK0[10]), PortD(BANK0[10]), PortG_Property(CODE[2]), 
		 -> PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), PortC_Property(CODE[2]), 
		 -> PortB_Property(CODE[2]), PortA_Property(CODE[2]), PortC(BANK0[10]), PortF(BANK0[10]), 
		 -> NULL(NULL[0]), 

    Byte_SetZone@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortF..(BANK0[2]), PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), 
		 -> PortB..(BANK1[2]), PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), 
		 -> PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), SSP2CON1(SFR_1[1]), 
		 -> PortD(BANK0[10]), SSP1CON1(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> PortC(BANK0[10]), PortF(BANK0[10]), NULL(NULL[0]), 

    Byte_SetBit@pInput	PTR struct Byte size(2) Largest target is 1
		 -> SSP2CON2(SFR_1[1]), SSP1CON2(SFR_1[1]), SSP2CON1(SFR_1[1]), SSP2STAT(SFR_1[1]), 
		 -> SSP1CON1(SFR_1[1]), SSP1STAT(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> NULL(NULL[0]), 

    SPI_Send9@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Send9@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Send9@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Send9@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_Send@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Send@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Send@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Send@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_DCS@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_DCS@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_DCS@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_DCS@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_CS@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_CS@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_CS@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_CS@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_MaxSpeed@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_MaxSpeed@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_MaxSpeed@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_MaxSpeed@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_MinSpeed@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_MinSpeed@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_MinSpeed@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_MinSpeed@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_DisableISR@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_DisableISR@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_DisableISR@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_DisableISR@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_EnableISR@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_EnableISR@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_EnableISR@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_EnableISR@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_SetFlags@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_SetFlags@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_SetFlags@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_SetFlags@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_ClearFlags@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_ClearFlags@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_ClearFlags@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_ClearFlags@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    sp__SPI_Buffer	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Buffer@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Buffer@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Buffer@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Buffer@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_BF@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_BF@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_BF@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_BF@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_Init@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Init@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Init@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Init@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI1.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI1...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI1...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI1...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    Port_Get@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Get@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Get@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_Get@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Set@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Set@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Set@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_Set@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Set@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_SetType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_GetQuad@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetQuad@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetQuad@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetQuad@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetQuadType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortB(BANK1[10]), PortD(BANK0[10]), 

    Port_GetPair@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPair@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPair@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPair@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPair@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPair@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPair@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPair@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_GetPin@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPin@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPin@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPin@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPin@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPin@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPin@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPin@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPin@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortE(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_SetPinType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPinType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPinType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPinType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPinType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_SetPinType@Props	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Init@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Init@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Init@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_Init@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Init@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_CheckPortType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_CheckQuadType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_CheckPairType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_CheckPairType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_CheckPairType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_CheckPairType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_CheckPairType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_CheckPairType@Props	PTR struct PortProperty size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), 
		 -> PortD_Property(CODE[2]), PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), 
		 -> PortC(BANK0[10]), PortF(BANK0[10]), NULL(NULL[0]), 

    sp__GetPortLAT	PTR struct Byte size(2) Largest target is 1
		 -> LATG(SFR_1[1]), LATF(SFR_1[1]), LATE(SFR_1[1]), LATD(SFR_1[1]), 
		 -> LATC(SFR_1[1]), LATB(SFR_1[1]), LATA(SFR_1[1]), NULL(NULL[0]), 

    sp__GetPortTRIS	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    sp__GetPortPORT	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    sp__GetPortProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortG.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortG.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortG.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortG.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortE.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortE.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortE.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortE.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortD.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortD.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortD.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortD.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortB.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortB.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortB.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortB.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortA.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortA.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortA.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortA.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortC.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortC.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortC.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortC.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    S509SPI$SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI2.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    S506$SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI2...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    S479$SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI2...SSPSTATTb	PTR struct . size(2) Largest target is 0

    S479$SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI2...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    S139Port$mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortF.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    S139Port$mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortF.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    S139Port$mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortF.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    S139Port$mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortF.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Button_Poll@pButton.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    Button_Poll@pButton.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    S23Button$mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    Button_Init@pInput.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    S23Button$mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    Button_Init@pInput.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Function in COMRAM

    _Timer0_ISR->i2_Motor_Step
    i2_Motor_Step->i2_Port_SetPin
    i2_Port_SetPin->i2_Word_GetPair
    i2_Word_GetPair->i2_Byte_GetPair
    i2_Byte_GetPair->i2_Byte_GetZone
    i2_MXK_SwitchTo->i2_delay_us

Critical Paths under _main in BANK0

    _MXK_Init->_Port_SetQuadType
    _Byte_SetQuad->_Byte_SetZone
    _Port_SetType->_Port_CheckPortType
    _Port_CheckQuadType->_Port_CheckPairType
    _Port_CheckPairType->_PortProperty_Valid
    _Port_Set->_Word_GetPair
    _LED_Init->_Port_SetPinType
    _Port_SetPinType->_PortProperty_Valid
    _Word_SetPair->_Byte_SetPair
    _Byte_SetPair->_Byte_SetZone
    _PortProperty_Valid->_Word_GetPair
    _LED_Set->_Port_SetPin
    _MXK_Dequeue->_Motor_Step
    _Motor_Step->_Port_SetPin
    _Port_SetPin->_Word_GetPair
    _Word_GetPair->_Byte_GetPair
    _Byte_GetPair->_Byte_GetZone
    _MXK_SwitchTo->_delay_us
    _MXK_BlockSwitchTo->_delay_us

Critical Paths under _ISR_Function in BANK0

    None.

Critical Paths under _main in BANK1

    _MXK_Init->_Port_SetType
    _Port_SetQuadType->_Port_CheckQuadType
    _Port_Init->_Port_SetType
    _Port_CheckPortType->_Port_CheckQuadType

Critical Paths under _ISR_Function in BANK1

    None.

Critical Paths under _main in BANK2

    _MXK_Init->_Port_Init
    _Port_SetQuadType->_Port_CheckQuadType
    _Port_Init->_Port_SetType
    _Port_SetType->_Port_CheckPortType
    _Port_CheckPortType->_Port_CheckQuadType

Critical Paths under _ISR_Function in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Function in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Function in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Function in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Function in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Function in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Function in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Function in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Function in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Function in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Function in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR_Function in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR_Function in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR_Function in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  393472
                  _MXK_BlockSwitchTo
                        _MXK_Dequeue
                           _MXK_Init
                        _MXK_Release
 ---------------------------------------------------------------------------------
 (1) _MXK_Init                                             0     0      0  362160
                           _LED_Init
                          _Port_Init
                        _Port_SetPin
                    _Port_SetPinType
                   _Port_SetQuadType
                       _Port_SetType
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             6     4      2    1166
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _Port_SetQuadType                                     5     1      4   44669
                                             47 BANK0      1     1      0
                                              3 BANK2      4     0      4
                       _Byte_SetQuad
                 _Port_CheckQuadType
                       _Word_SetPair
 ---------------------------------------------------------------------------------
 (3) _Byte_SetQuad                                         4     0      4   10549
                                             11 BANK0      4     0      4
                       _Byte_SetZone
 ---------------------------------------------------------------------------------
 (2) _Port_Init                                            6     3      3  111429
                                             10 BANK2      6     3      3
                        _GetPortPORT
                  _GetPortProperties
                        _GetPortTRIS
                           _Port_Set
                    _Port_SetPinType
                       _Port_SetType
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (2) _Port_SetType                                         6     3      3   34613
                                              4 BANK1      2     2      0
                                              6 BANK2      4     1      3
                 _Port_CheckPortType
                       _Word_SetPair
 ---------------------------------------------------------------------------------
 (3) _Port_CheckPortType                                   4     1      3   16921
                                             47 BANK0      1     1      0
                                              3 BANK2      3     0      3
                 _Port_CheckQuadType
 ---------------------------------------------------------------------------------
 (4) _Port_CheckQuadType                                   7     3      4   15845
                                              0 BANK1      4     0      4
                                              0 BANK2      3     3      0
                 _Port_CheckPairType
 ---------------------------------------------------------------------------------
 (5) _Port_CheckPairType                                   9     5      4   13271
                                             38 BANK0      9     5      4
                 _PortProperty_Valid
 ---------------------------------------------------------------------------------
 (3) _Port_Set                                            24    21      3   10910
                                             15 BANK0     24    21      3
                       _Byte_SetByte
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (4) _Byte_SetByte                                         3     0      3    1278
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _GetPortTRIS                                          3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _GetPortProperties                                    3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _GetPortPORT                                          3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _LED_Init                                             1     1      0   85371
                                             45 BANK0      1     1      0
                            _LED_Set
                    _Port_SetPinType
 ---------------------------------------------------------------------------------
 (2) _Port_SetPinType                                      7     3      4   54781
                                             38 BANK0      7     3      4
                        _Byte_SetBit
                 _PortProperty_Valid
                       _Word_SetPair
 ---------------------------------------------------------------------------------
 (3) _Word_SetPair                                         4     0      4   16238
                                             15 BANK0      4     0      4
                       _Byte_SetPair
 ---------------------------------------------------------------------------------
 (4) _Byte_SetPair                                         4     0      4    8725
                                             11 BANK0      4     0      4
                       _Byte_SetZone
 ---------------------------------------------------------------------------------
 (5) _Byte_SetZone                                        11     5      6    2704
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _PortProperty_Valid                                  23    19      4   10663
                                             15 BANK0     23    19      4
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (3) _LED_Set                                              2     1      1   30528
                                             20 BANK0      2     1      1
                        _Port_SetPin
 ---------------------------------------------------------------------------------
 (1) _MXK_Dequeue                                          0     0      0   30813
                   Absolute function *
                         _Motor_Step *
 ---------------------------------------------------------------------------------
 (2) _Motor_Step                                           2     2      0   30813
                                             20 BANK0      2     2      0
                          _MXK_Queue
                        _MXK_Release
                       _MXK_SwitchTo
                        _Port_SetPin
                     _Timer0_Restart
                        _Timer0_Stop
 ---------------------------------------------------------------------------------
 (3) _Timer0_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timer0_Restart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Port_SetPin                                          5     1      4   30131
                                             15 BANK0      5     1      4
                        _Byte_SetBit
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (7) _Word_GetPair                                         3     0      3    8154
                                             12 BANK0      3     0      3
                       _Byte_GetPair
 ---------------------------------------------------------------------------------
 (8) _Byte_GetPair                                         3     0      3    2831
                                              9 BANK0      3     0      3
                       _Byte_GetZone
 ---------------------------------------------------------------------------------
 (9) _Byte_GetZone                                         9     4      5    2161
                                              0 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (3) _Byte_SetBit                                          7     3      4   15662
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _MXK_SwitchTo                                         2     2      0     499
                                              6 BANK0      2     2      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _MXK_Release                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MXK_Queue                                            3     0      3     183
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MXK_BlockSwitchTo                                    2     2      0     499
                                              6 BANK0      2     2      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             6     4      2     403
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR_Function                                       14    14      0    1778
                                             22 COMRAM    14    14      0
                         _Timer0_ISR
 ---------------------------------------------------------------------------------
 (12) _Timer0_ISR                                          0     0      0    1778
                   Absolute function *
                       i2_Motor_Step *
                      i2_Timer0_Stop
 ---------------------------------------------------------------------------------
 (13) i2_Motor_Step                                        2     2      0    1778
                                             20 COMRAM     2     2      0
                        i2_MXK_Queue
                      i2_MXK_Release
                     i2_MXK_SwitchTo
                      i2_Port_SetPin
                   i2_Timer0_Restart
                      i2_Timer0_Stop
 ---------------------------------------------------------------------------------
 (13) i2_Timer0_Stop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_Timer0_Restart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_Port_SetPin                                       5     1      4    1569
                                             15 COMRAM     5     1      4
                      i2_Byte_SetBit
                     i2_Word_GetPair
 ---------------------------------------------------------------------------------
 (15) i2_Word_GetPair                                      3     0      3     643
                                             12 COMRAM     3     0      3
                     i2_Byte_GetPair
 ---------------------------------------------------------------------------------
 (16) i2_Byte_GetPair                                      3     0      3     481
                                              9 COMRAM     3     0      3
                     i2_Byte_GetZone
 ---------------------------------------------------------------------------------
 (17) i2_Byte_GetZone                                      9     4      5     333
                                              0 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (15) i2_Byte_SetBit                                       7     3      4     345
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (14) i2_MXK_SwitchTo                                      2     2      0     161
                                              6 COMRAM     2     2      0
                         i2_delay_us
 ---------------------------------------------------------------------------------
 (15) i2_delay_us                                          6     4      2      94
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (14) i2_MXK_Release                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_MXK_Queue                                         3     0      3      48
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MXK_BlockSwitchTo
     _delay_us
   _MXK_Dequeue
     Absolute function(Fake) *
     _Motor_Step *
       _MXK_Queue
       _MXK_Release
       _MXK_SwitchTo
         _delay_us
       _Port_SetPin
         _Byte_SetBit
         _Word_GetPair
           _Byte_GetPair
             _Byte_GetZone
       _Timer0_Restart
       _Timer0_Stop
   _MXK_Init
     _LED_Init
       _LED_Set
         _Port_SetPin
           _Byte_SetBit
           _Word_GetPair
             _Byte_GetPair
               _Byte_GetZone
       _Port_SetPinType
         _Byte_SetBit
         _PortProperty_Valid
           _Word_GetPair
             _Byte_GetPair
               _Byte_GetZone
         _Word_SetPair
           _Byte_SetPair
             _Byte_SetZone
     _Port_Init
       _GetPortPORT
       _GetPortProperties
       _GetPortTRIS
       _Port_Set
         _Byte_SetByte
         _Word_GetPair
           _Byte_GetPair
             _Byte_GetZone
       _Port_SetPinType
         _Byte_SetBit
         _PortProperty_Valid
           _Word_GetPair
             _Byte_GetPair
               _Byte_GetZone
         _Word_SetPair
           _Byte_SetPair
             _Byte_SetZone
       _Port_SetType
         _Port_CheckPortType
           _Port_CheckQuadType
             _Port_CheckPairType
               _PortProperty_Valid
                 _Word_GetPair
                   _Byte_GetPair
                     _Byte_GetZone
         _Word_SetPair
           _Byte_SetPair
             _Byte_SetZone
       _Word_GetPair
         _Byte_GetPair
           _Byte_GetZone
     _Port_SetPin
       _Byte_SetBit
       _Word_GetPair
         _Byte_GetPair
           _Byte_GetZone
     _Port_SetPinType
       _Byte_SetBit
       _PortProperty_Valid
         _Word_GetPair
           _Byte_GetPair
             _Byte_GetZone
       _Word_SetPair
         _Byte_SetPair
           _Byte_SetZone
     _Port_SetQuadType
       _Byte_SetQuad
         _Byte_SetZone
       _Port_CheckQuadType
         _Port_CheckPairType
           _PortProperty_Valid
             _Word_GetPair
               _Byte_GetPair
                 _Byte_GetZone
       _Word_SetPair
         _Byte_SetPair
           _Byte_SetZone
     _Port_SetType
       _Port_CheckPortType
         _Port_CheckQuadType
           _Port_CheckPairType
             _PortProperty_Valid
               _Word_GetPair
                 _Byte_GetPair
                   _Byte_GetZone
       _Word_SetPair
         _Byte_SetPair
           _Byte_SetZone
     _delay_ms
   _MXK_Release

 _ISR_Function (ROOT)
   _Timer0_ISR
     Absolute function(Fake) *
     i2_Motor_Step *
       i2_MXK_Queue
       i2_MXK_Release
       i2_MXK_SwitchTo
         i2_delay_us
       i2_Port_SetPin
         i2_Byte_SetBit
         i2_Word_GetPair
           i2_Byte_GetPair
             i2_Byte_GetZone
       i2_Timer0_Restart
       i2_Timer0_Stop
     i2_Timer0_Stop *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0     12C      37        7.7%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     10      10       9        6.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     30      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      48       1       76.6%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F8      12        0.0%
DATA                 0      0     324       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Aug 27 20:54:25 2017

                  i2_Timer0_Stop 1BCC       __size_of_MXK_BlockSwitchTo 003E  
                   i2_Motor_Step 0E2A                                _A 00FE  
                              _a 00FF                                _i 0074  
                              _j 0073                                _l 0047  
                              _u 0072                                _w 0048  
                  _HMI_DIPSwitch 000000                 i2_Timer0_Restart 1BA0  
                            l528 03B8                              _PR2 000FCB  
                            _val 006E                     _Word_GetPair 1960  
            MXK_SwitchTo@pModule 00CF                              tosl 000FFD  
                            wreg 000FE8                       i2_delay_us 1920  
           Port_Set@TypeRequired 00EA            Port_SetPinType@Output 00F2  
                Port_SetPin@Type 00DB                  Port_SetPin@pPin 00D9  
                  ?_Byte_GetPair 00D1                  __end_of_LED_Set 1804  
        __size_ofi2_Word_GetPair 0030                    i2_Port_SetPin 10A2  
                   _Word_SetPair 1898                    ?_Byte_GetZone 00C8  
                           l9015 14F4                             l9031 163C  
                           l9131 1764                             l9043 101E  
                           l9211 124C                             l9203 1230  
                           l9133 1776                             l9125 18C8  
                           l9221 1268                             l9117 1892  
                           l9301 0618                             l9039 1012  
                           l9151 0878                             l9215 125A  
                           l9207 123E                             l9071 175C  
                           l9311 06CA                             l9303 063A  
                           l9241 12D6                             l9233 12BA  
                           l9225 129E                             l9139 179C  
                           l9163 0950                             l9171 09D8  
                           l9307 0682                             l9093 0FA4  
                           l9085 0F4A                             l9157 08E4  
                           l9149 0852                             l9253 1300  
                           l9245 12E4                             l9237 12C8  
                           l9229 12AC                             l9317 070C  
                           l9501 0B12                             l9183 17F2  
                           l9191 1206                             l9271 116E  
                           l9263 1152                             l9351 037A  
                           l9319 0728                             l9503 0B2A  
                           l9089 0F74                             l9177 17BA  
                           l9169 09BC                             l9249 12F2  
                           l9345 0336                             l9513 0B78  
                           l9099 0FCE                             l9179 17D6  
                           l9259 130E                             l9195 1214  
                           l9187 11F8                             l9291 11B4  
                           l9283 1198                             l9275 117C  
                           l9267 1160                             l9347 0356  
                           l9355 039A                             l9507 0B42  
                           l9523 0478                             l9509 0B72  
                           l9517 03C2                             l9533 0550  
                           l9461 1582                             l9375 191C  
                           l9367 18F4                             l9551 0D8E  
                           l9199 1222                             l9287 11A6  
                           l9279 118A                             l9527 04E4  
                           l9519 040C                             l9535 056C  
          Port_SetPinType@pInput 00EE                             l9481 16F8  
                           l9473 16AC                             l9297 11C2  
                           l9387 1B66                             l9555 0DB0  
                           l9475 16CA                             l9459 1570  
                           l9467 15AE                             l9557 0DCC  
                           l9549 0D70                             l9573 0E18  
                           l9493 0AD8                             l9567 0E0E  
                           l9479 16E8                             l9809 19AA  
                           l9497 0AE2                             l9819 19D8  
                           l9499 0AFA                             l8973 1438  
                           l8969 142C                             l8999 198C  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _LATD 000F8C  
                           _LATE 000F8D                             _LATF 000F8E  
                           _LATG 000F8F              __end_of_GetPortPORT 133E  
                           u6120 0D4E                             u6130 0D62  
                           u6140 0DA2                             u5600 1468  
                           u5620 148E                             u5605 1462  
                           u5704 165E                             u5705 1658  
                           _PIR1 000F9E                             u5714 1690  
                           _PIR2 000FA1                             u5715 168A  
                           _PIR3 000FA4                             u5580 1402  
            __end_of_GetPortTRIS 11F2                             u5905 0302  
                           u5674 105A                             u5587 13F8  
                           u5675 1054                             u5835 002E  
                           u5684 108C                             u5685 1086  
                           u5845 0046                             u5855 005E  
                           u5865 0080                             u5875 0200  
                           u5885 027E                             u6838 1A58  
                           u5895 02C0                             _SPI1 01AA  
                           _SPI2 01B5                             _TMR0 000FD6  
                           _gISR 0068                    ?_Byte_SetByte 00C8  
                  ?_Byte_SetPair 00D3                             _main 19DC  
                ??i2_Byte_SetBit 0005                    ?_Byte_SetQuad 00D3  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           indf0 000FEF                             fsr2h 000FDA  
                           fsr0l 000FE9                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                  ?_Byte_SetZone 00C8                             btemp 0049  
                           _zero 0046                    ??_Byte_SetBit 00CC  
                           prodh 000FF4                             prodl 000FF3  
                           start 148A                    __CFG_IESO$OFF 000000  
                 ?i2_Timer0_Stop 0001                i2Byte_SetBit@pBit 0003  
                   ___param_bank 000000                  __end_of_Font5x7 FFF1  
                  __CFG_PLLDIV$3 000000                 __end_of_LED_Init 1708  
        GetPortProperties@pInput 00CA                            l10211 1A6C  
                          l10227 19F8                            _I2C1T 00A5  
                          _I2C2T 009E                            ?_main 0001  
                _Event_DIPSwitch 000000                            _INDEX 0038  
                          _MASKS FE01                            _PORTA 000F80  
                          _PORTB 000F81                            _PORTC 000F82  
                          _PORTD 000F83                            _PORTE 000F84  
                          _PORTF 000F85                            _PORTG 000F86  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                            _TRISF 000F97  
                          _TRISG 000F98                 ??i2_Byte_GetPair 000D  
               ??i2_Byte_GetZone 0006                   __CFG_FCMEN$OFF 000000  
                          _PortA 01E8                            _PortB 01DE  
                          _PortC 008A                            _PortD 0080  
                          _PortE 0076                            _PortF 0094  
                          _PortG 01D4          __end_of_Port_SetPinType 09FA  
                _ADC_Initialised 0075                   ??_Byte_GetPair 00D4  
                 ?i2_Port_SetPin 0010                      LED_Set@pLED 00DD  
                 ??_Byte_GetZone 00CD                 __end_of_MXK_Init 0D06  
           i2Byte_GetPair@pInput 000A            __end_ofi2_MXK_Release 1BD8  
                          pclath 000FFA                            tablat 000FF5  
             __size_of_MXK_Queue 000E                   ??_Byte_SetByte 00CB  
                 ??_Byte_SetPair 00D7                   ??_Byte_SetQuad 00D7  
                          plusw2 000FDB                   ??_Byte_SetZone 00CE  
                          status 000FD8             i2MXK_Queue@pCallback 0001  
                    i2delay_us@u 0003                       _Event_NULL 000000  
    __size_of_Port_CheckPairType 006A                  __initialization 133E  
                   __end_of_main 1A14                     SPI_Send9@dat 0070  
            __end_of_Byte_SetBit 16A6                 __end_of_InitList FDE1  
    __size_of_Port_CheckQuadType 005A      __size_of_Port_CheckPortType 0048  
                         ??_main 00F8                    __activetblptr 000003  
              Port_SetPin@pInput 00D7                Port_SetPin@pValue 00DA  
                      ??_LED_Set 00DD                _MXK_InitDIPSwitch 000000  
              GetPortPORT@pInput 00CA           Port_CheckPairType@Pin1 00F2  
         Port_CheckPairType@Pin2 00F3                      _GetPortPORT 1298  
                   ?i2_MXK_Queue 0001                      _GetPortTRIS 114C  
     __end_of_PortProperty_Valid 14F8                 __end_of_Port_Set 03BA  
                    ?i2_delay_us 0001                Word_GetPair@pPair 00D6  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
         Port_SetQuadType@Output 00F7                           _ANCON0 000FC1  
         Port_SetQuadType@pInput 0203                   __CFG_WDTEN$OFF 000000  
                         i2l1591 144E                           i2l6211 153E  
                         i2l6215 1544                           i2l7211 0EA4  
                         i2l7215 0EC6                           i2l7217 0EDA  
                         i2l7209 0E8E                           i2l7233 0F16  
                         i2l7227 0F0C                           i2l6473 1922  
                         i2l6481 194E                           i2l6475 1932  
                         i2l6467 1A98                           i2l6823 10E0  
                         i2l6833 1130                           i2l6851 1A46  
                         i2l6843 1A26                           i2l6827 110A  
                         i2l6819 10BA                   _Timer0_Restart 1B94  
                 i2_MXK_SwitchTo 1A14                  ??i2_Timer0_Stop 0001  
               __end_of_delay_ms 15D8                     LED_Init@pLED 00F5  
               __end_of_delay_us 17B4                    ??_Timer0_Stop 00C8  
                     _Timer0_ISR 1AAA                   __CFG_XINST$OFF 000000  
                     _Motor_Step 0D06                   __CFG_STVREN$ON 000000  
                         _change 0045                           _lMotor 002C  
                         _lQueue 0025                       _TestButton 01CA  
       __end_of_Port_SetQuadType 0610         i2Byte_GetZone@pChunkSize 0005  
                   HMI_GRender@a 0030                GetPortTRIS@pInput 00CA  
                         clear_0 13A6                           clear_1 13B8  
                         clear_2 13C4                           clear_3 13D0  
                     Port_Init@i 020F                __end_of_MXK_Queue 1B86  
     __end_ofHMI_SetButton@F7213 FE0E                     __pdataCOMRAM 0040  
             __size_of_Port_Init 0192         Port_CheckPortType@Output 00F7  
                ??i2_Port_SetPin 0014                     __mediumconst FD2E  
    __end_ofTimer2_Init@PRESCALE FE11         Port_CheckPortType@pDrive 0205  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                     ?_MXK_Dequeue 0001  
       Port_CheckPortType@pInput 0203                    ??_Port_SetPin 00DB  
          Console_MakeField@Fill 012A                 ?_Port_SetPinType 00EE  
                 i2_Word_GetPair 1A7A           __end_of_Timer0_Restart 1BA0  
                   ?_MXK_Release 0001                  __CFG_FOSC$HSPLL 000000  
         __end_ofi2_MXK_SwitchTo 1A4A                     i2delay_us@us 0001  
                     __accesstop 0060          __end_of__initialization 13D6  
                      ?_LED_Init 0001         __end_ofi2_Timer0_Restart 1BAC  
                  ___rparam_used 000001                      _Byte_SetBit 1642  
                  __end_of_MASKS FE0A                   _PortA_Property FFFD  
                 __pcstackCOMRAM 0001                   _PortB_Property FFFB  
            __size_ofi2_delay_us 0040                     __pidataBANK0 1BB5  
                   __pidataBANK1 1BBD              i2Byte_SetBit@pInput 0001  
           __end_of_Byte_GetPair 1B3A              i2Byte_SetBit@pValue 0004  
            Timer0_Init@PRESCALE FDE1             __end_of_Byte_GetZone 147C  
                 _PortC_Property FFF9                        ?_MXK_Init 0001  
            __end_of_Timer0_Stop 1BCC                Port_SetType@pType 0208  
           __end_of_Byte_SetByte 1B78             __end_of_Byte_SetPair 1B1C  
                 _HMI_LeftSwitch 000000                   _PortD_Property FFF7  
           __end_of_Byte_SetQuad 1AFA             __end_of_Byte_SetZone 10A2  
                 _HMI_DownSwitch 000000                   _PortE_Property FFF5  
         __end_ofi2_Word_GetPair 1AAA                   _PortF_Property FFF3  
        Port_CheckQuadType@Pair1 0200          Port_CheckQuadType@Pair2 0201  
       MXK_BlockSwitchTo@pModule 00CF                  ?_Timer0_Restart 0001  
                 _PortG_Property FFF1                       __pbssBANK0 0060  
                     __pbssBANK1 0100          Port_CheckQuadType@pQuad 01FC  
                ?i2_MXK_SwitchTo 0001              __end_of_Port_SetPin 0FEC  
         __end_of_PortA_Property FFFF               Byte_SetByte@pInput 00C8  
                     ??_LED_Init 00F5               Byte_SetByte@pValue 00CA  
                  ?_ISR_Function 0001          Port_CheckPairType@Props 00F5  
         __end_of_PortB_Property FFFD                __end_of_Port_Init 0B8C  
                    ?_Timer0_ISR 0001          Port_CheckPairType@pPair 00F0  
             Byte_SetPair@pInput 00D3                      ?_Motor_Step 0001  
             Byte_SetPair@pValue 00D6           __end_of_PortC_Property FFFB  
             Word_GetPair@pInput 00D4                        ?_Port_Set 00D7  
         __end_of_PortD_Property FFF9                          _ADC_AN0 00BB  
                        _ADC_AN1 00B6                          _ADC_AN2 00B1  
                        _ADC_AN3 00AC                       ??_MXK_Init 00F8  
         __end_of_PortE_Property FFF7              Console_Render@F6956 01F2  
                        _COUNTER 002A                          _LED_Set 17B4  
         __end_of_PortF_Property FFF5                      _gBackcolour 0032  
                      _I2C1_Done 0127                  ?i2_Word_GetPair 000D  
                      _I2C2_Done 0124                        _I2C1_More 0121  
                      _I2C2_More 011E                        ?_delay_ms 00C8  
                      ?_delay_us 00C8                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9                          _SSP2BUF 000F6F  
         __end_of_PortG_Property FFF3             __size_ofi2_MXK_Queue 000E  
           i2Byte_GetZone@Offset 0008                   ??_ISR_Function 0017  
           i2Byte_GetZone@Output 0009                Event_TestButton@j 0034  
                        _Font5x7 FE11             i2Byte_GetZone@pChunk 0004  
           i2Byte_GetZone@pInput 0001                  Byte_SetBit@pBit 00CA  
          __end_ofi2_Byte_SetBit 1850                          __Hparam 0000  
                        __Lparam 0000                      _Timer0_Stop 1BC6  
                        OutSeg@a 003A  __end_ofPortProperty_Valid@F6830 FE01  
                     ??_Port_Set 00DA                    ?_Port_SetType 0206  
                        _gCursor 0040                          _lBuffer 0210  
                        __pcinit 133E                          __ramtop 1000  
                        __ptext0 19DC                          __ptext1 0B8C  
                        __ptext2 156E                          __ptext3 03BA  
                        __ptext4 1AD8                          __ptext5 09FA  
                        __ptext6 0610                          __ptext7 1850  
                        __ptext8 1708                          __ptext9 15D8  
                      _T0CONbits 000FD5                i2MXK_SwitchTo@CUR 0007  
                      _T2CONbits 000FCA                    LED_Set@pValue 00DC  
                   ?_GetPortPORT 00C8                     ?_GetPortTRIS 00C8  
              __CFG_MSSPMSK$MSK5 000000              LCD_DrawRectangle@p2 00C4  
            LCD_DrawRectangle@p4 00C0                     ??i2_delay_us 0003  
                     ??_delay_ms 00CA                       ??_delay_us 00CA  
                      _DIPSwitch 01C0              __size_of_Timer0_ISR 002E  
                    _Port_SetPin 0F28              __size_of_Motor_Step 0124  
           __size_of_MXK_Dequeue 0030                       delay_ms@ms 00C8  
           end_of_initialization 13D6                       delay_us@us 00C8  
           __size_of_MXK_Release 0016       __end_of_Port_CheckPairType 1642  
             _PortProperty_Valid 147C               Byte_SetQuad@pInput 00D3  
             Byte_SetQuad@pValue 00D6            __size_of_Byte_GetPair 001E  
          __size_of_Byte_GetZone 009C                   ??_Port_SetType 01FE  
     __end_of_Port_CheckQuadType 1762                   Port_Init@pPort 020C  
                        postdec1 000FE5                          postdec2 000FDD  
          __size_of_Byte_SetByte 000E            __size_of_Byte_SetPair 0022  
                        postinc0 000FEE                          postinc2 000FDE  
            ?_PortProperty_Valid 00D7            __size_of_Byte_SetQuad 0022  
     __end_of_Port_CheckPortType 1898            __size_of_Byte_SetZone 00B6  
             __end_ofi2_delay_us 1960                ?_Port_SetQuadType 0203  
                    _gForecolour 00FC           __size_ofi2_MXK_Release 0006  
                      _PORTFbits 000F85               ??_Port_SetQuadType 00F7  
               Byte_GetZone@MASK 00CE                        _MXK_Queue 1B78  
               __CFG_CPUDIV$OSC1 000000                 Byte_GetZone@pMax 00CA  
                 Port_Set@pInput 00D7             ??_PortProperty_Valid 00DB  
                 Port_Set@pValue 00D9                     _Byte_GetPair 1B1C  
             HMI_SetButton@F7213 FE0A                     _Byte_GetZone 13E0  
                  ?_MXK_SwitchTo 0001                 _Event_TestButton 000000  
           Port_SetPinType@Props 00F3          __size_ofi2_Byte_GetPair 001A  
                   _Byte_SetByte 1B6A                     _Byte_SetPair 1AFA  
                   _Byte_SetQuad 1AD8          __size_ofi2_Byte_GetZone 0076  
                   _Byte_SetZone 0FEC             Port_SetPinType@pType 00F1  
              ?i2_Timer0_Restart 0001                     ?_Byte_SetBit 00C8  
              __size_of_LED_Init 0062            __end_ofi2_Timer0_Stop 1BD2  
             ??i2_Timer0_Restart 0001                    ?i2_Motor_Step 0001  
                  __pidataCOMRAM 1BAC                        _Bus_State 0044  
            i2Byte_GetPair@pPair 000C             __end_of_ISR_Function 148A  
              __size_of_MXK_Init 017A                    ?_Word_GetPair 00D4  
               ??_Timer0_Restart 00C8               Port_SetType@Output 0209  
            start_initialization 133E                       ?_MXK_Queue 00C8  
       PortProperty_Valid@Errors 00DD                 ??i2_MXK_SwitchTo 0007  
             Port_SetType@pInput 0206            __end_ofi2_Port_SetPin 114C  
                  ?_Word_SetPair 00D7                Byte_SetBit@pInput 00C8  
                 ??_MXK_SwitchTo 00CE                Byte_SetBit@pValue 00CB  
    PortProperty_Valid@pPinDrive 00D9             MXK_BlockSwitchTo@CUR 00CE  
       PortProperty_Valid@pInput 00D7                    i2_MXK_Release 1BD2  
       __size_of_Port_SetPinType 01C0            Port_SetQuadType@pQuad 0205  
          Port_SetQuadType@pType 0206                     _HMI_UpSwitch 000000  
                   ??_Timer0_ISR 0017                  _HMI_InitButtons 000000  
                      _gCharSize 00F8                 Timer2_Init@INDEX 0036  
                      OutSeg@cur 003C                   ??i2_Motor_Step 0015  
                   ??_Motor_Step 00DC               Byte_SetZone@Offset 00D1  
                      _Port_Init 09FA                      __pdataBANK0 00F8  
                    __pdataBANK1 01F2                __size_of_Port_Set 03BA  
             Byte_SetZone@pChunk 00CB                 ??i2_Word_GetPair 0010  
             Byte_SetZone@pInput 00C8               Byte_SetZone@pValue 00CD  
       Port_CheckQuadType@Output 0202                        _gLineSize 01F6  
       Port_CheckQuadType@pDrive 01FD                   ??_Word_GetPair 00D7  
       Port_CheckQuadType@pInput 01FA                      __pbssBIGRAM 0210  
                       ?_LED_Set 00DC                      __pbssCOMRAM 0025  
                  __pcstackBANK0 00C8                    __pcstackBANK1 01FA  
                  __pcstackBANK2 0200                   ??_Word_SetPair 00DB  
             __end_of_Timer0_ISR 1AD8             __size_of_GetPortPORT 00A6  
           __size_of_GetPortTRIS 00A6             __end_of_Port_SetType 083A  
              __size_of_delay_ms 006A                __size_of_delay_us 0052  
            __CFG_CCP2MX$DEFAULT 000000               __end_of_Motor_Step 0E2A  
                 ?i2_MXK_Release 0001         Port_CheckPairType@Output 00F4  
       Port_CheckPairType@pDrive 00F1         Port_CheckPairType@pInput 00EE  
             _MXK_InitTestButton 000000                     ?_Timer0_Stop 0001  
                  _lStepFunction 006B                Byte_SetPair@pPair 00D5  
                      __pintcode 1408                    __pmediumconst FD2E  
                      _pShiftVal 0028                       ?_Port_Init 020A  
              _GetPortProperties 11F2      __end_ofTimer0_Init@PRESCALE FDF1  
             ?_GetPortProperties 00C8                    ??i2_MXK_Queue 0004  
                    ??_MXK_Queue 00CB                     ?_Port_SetPin 00D7  
                _HMI_RightSwitch 000000              ??_GetPortProperties 00CA  
             Byte_GetPair@pInput 00D1                i2Port_SetPin@Type 0014  
              i2Port_SetPin@pPin 0012                   i2_Byte_GetPair 1B3A  
                       _HMIBoard 0170                   i2_Byte_GetZone 14F8  
                       _LED_Init 16A6                        delay_ms@u 00CA  
                      delay_us@u 00CA               MXK_Queue@pCallback 00C8  
                       _IPR1bits 000F9F                         _IPR3bits 000FA5  
                       _PIE1bits 000F9D                         _PIE3bits 000FA3  
              Byte_SetQuad@pQuad 00D5                         i2u316_44 1818  
                       i2u316_45 1814                         i2u317_44 183E  
                       i2u317_45 183A                         _PIR1bits 000F9E  
                       i2u291_40 1562                         i2u291_45 155E  
                       _PIR3bits 000FA4                         i2u382_40 0E6C  
                       i2u383_40 0E80                         i2u384_40 0EB8  
                       i2u289_40 151A                         i2u289_47 1510  
                       i2u681_48 1AC2             __size_of_Byte_SetBit 0064  
                       _RCONbits 000FD0             i2Word_GetPair@pInput 000D  
               __CFG_WDTPS$32768 000000                         _SSP1CON1 000FC6  
              ??_Port_SetPinType 00F2                         _SSP1CON2 000FC5  
                       _SSP2CON1 000F6C                         _SSP2CON2 000F6B  
          __size_of_ISR_Function 0082                         _SSP1STAT 000FC7  
      __end_of_GetPortProperties 1298                         _SSP2STAT 000F6D  
           __end_of_MXK_SwitchTo 1920               _Port_CheckPairType 15D8  
                       _MXK_Init 0B8C                  MXK_SwitchTo@CUR 00CE  
                     _ADCON0bits 000FC2                       _ADCON1bits 000FC1  
            Port_SetPinType@pPin 00F0               _Port_CheckQuadType 1708  
                  _MXK_DIPSwitch 000000              ?_Port_CheckPairType 00EE  
                  ??_MXK_Dequeue 00DE                 __size_of_LED_Set 0050  
         __size_ofi2_Byte_SetBit 004C               _Port_CheckPortType 1850  
        PortProperty_Valid@F6830 FDF1             __end_ofi2_Motor_Step 0F28  
                ??i2_MXK_Release 0001                        copy_data0 1352  
                      copy_data1 1372                        copy_data2 1392  
                  ??_MXK_Release 00C8           __end_ofi2_Byte_GetPair 1B54  
      __size_of_Port_SetQuadType 0256              ?_Port_CheckQuadType 01FA  
         __end_ofi2_Byte_GetZone 156E              __end_ofi2_MXK_Queue 1B94  
            ?_Port_CheckPortType 0203                         _InitList FD2F  
           _Motor_Step$intlevel0 0D0C                     _ISR_Function 1408  
           __end_of_Word_GetPair 199E                         _lCBuffer 0100  
           ??_Port_CheckPairType 00F2                         __Hrparam 0000  
                       __Lrparam 0000                         _Port_Set 0000  
                   OutSeg@segset 003B                        rand@screw 0039  
           __end_of_Word_SetPair 18DE                      ??_Port_Init 020D  
           ??_Port_CheckQuadType 00F7                _MXK_BlockSwitchTo 199E  
           ??_Port_CheckPortType 00F7                         _lBufferX 003E  
                       _lBufferY 003D              Timer2_Init@PRESCALE FE0E  
             ?_MXK_BlockSwitchTo 0001        __size_ofi2_Timer0_Restart 000C  
                       _lCurrent 002E           Byte_GetZone@pChunkSize 00CC  
         Byte_SetZone@pChunkSize 00CC            __size_of_Port_SetType 022A  
          i2MXK_SwitchTo@pModule 0008                         _delay_ms 156E  
                       _delay_us 1762                         _clearall 003F  
                       __ptext10 0000                         __ptext11 1B6A  
                       __ptext20 147C                         __ptext12 114C  
                       __ptext21 17B4                         __ptext13 11F2  
                       __ptext30 1642                         __ptext22 1A4A  
                       __ptext14 1298                         __ptext31 18DE  
                       __ptext23 0D06                         __ptext15 16A6  
                       __ptext40 1BA0                         __ptext32 1B54  
                       __ptext24 1BC6                         __ptext16 083A  
                       __ptext41 10A2                         __ptext33 1B78  
                       __ptext25 1B94                         __ptext17 1898  
                       __ptext50 0000                         __ptext42 1A7A  
                       __ptext34 199E                         __ptext26 0F28  
                       __ptext18 1AFA                         __ptext43 1B3A  
                       __ptext35 1762                         __ptext27 1960  
                       __ptext19 0FEC                         __ptext44 14F8  
                       __ptext28 1B1C                         __ptext45 1804  
                       __ptext37 1AAA                         __ptext29 13E0  
                       __ptext46 1A14                         __ptext38 0E2A  
                       __ptext47 1920                         __ptext39 1BCC  
            ??_MXK_BlockSwitchTo 00CE                         __ptext48 1BD2  
                       __ptext49 1B86                     _SSP1CON1bits 000FC6  
                   _SSP1CON2bits 000FC5      __size_of_PortProperty_Valid 007C  
             i2Byte_GetZone@MASK 0007                     _SSP2CON1bits 000F6C  
                   _SSP2CON2bits 000F6B                  ?i2_Byte_GetPair 000A  
                ?i2_Byte_GetZone 0001               i2Byte_GetZone@pMax 0003  
            __end_of_MXK_Dequeue 1A7A                    __size_of_main 0038  
              Byte_GetPair@pPair 00D3              i2Port_SetPin@pInput 0010  
            i2Port_SetPin@pValue 0013              __end_of_MXK_Release 1B6A  
                 _MXK_TestButton 000000                    i2_Byte_SetBit 1804  
            i2Word_GetPair@pPair 000F        __end_of_MXK_BlockSwitchTo 19DC  
                       int$flags 0049             __size_of_Timer0_Stop 0006  
                   _Port_SetType 0610                     Port_Set@Type 00EE  
     __size_of_GetPortProperties 00A6                     _SSP1STATbits 000FC7  
                 Timer0_Init@DIV 0064                   Timer0_Init@PRE 0037  
                   _SSP2STATbits 000F6D           PortProperty_Valid@Pair 00ED  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
         PortProperty_Valid@pPin 00DA                 Byte_SetZone@MASK 00D2  
                    i2_MXK_Queue 1B86                   Timer2_Init@DIV 0060  
                 Timer2_Init@PRE 0035                 Byte_SetZone@pMax 00CA  
         __size_ofi2_Timer0_Stop 0006             __size_of_Port_SetPin 00C4  
                       intlevel2 0000                   ?i2_Byte_SetBit 0001  
          __size_of_MXK_SwitchTo 0042                  Port_Init@pInput 020A  
         __size_ofi2_Port_SetPin 00AA            __size_ofi2_Motor_Step 00FE  
                  ??_GetPortPORT 00CA                    ??_GetPortTRIS 00CA  
             Word_SetPair@pInput 00D7               Word_SetPair@pValue 00DA  
                    _MXK_Dequeue 1A4A                 _Port_SetQuadType 03BA  
                    _MXK_Release 1B54                     _MXK_SwitchTo 18DE  
          __size_of_Word_GetPair 003E               Byte_GetZone@Offset 00CF  
              Word_SetPair@pPair 00D9                  _Port_SetPinType 083A  
        __size_of_Timer0_Restart 000C               Byte_GetZone@Output 00D0  
             Byte_GetZone@pChunk 00CB               Byte_GetZone@pInput 00C8  
        __size_ofi2_MXK_SwitchTo 0036            __size_of_Word_SetPair 0046  
             Port_Set@TypeActual 00EC  
