/* 
 * File:   Button.h
 * Author: David Ledger
 *
 * Created on 1 November 2016, 12:13 PM
 */

#ifndef BUTTON_H
#define	BUTTON_H
#include "Types.h"
#include "Events.h"
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
typedef UINT8 (*Button_State)();
typedef Function Button_InitIO;
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
typedef struct Button Button;
typedef Button * const ButtonPtr;
struct Button
{           
    UINT8           mState;
    UINT8           mCount;
    UINT16          mThreshold;
    EventFunction   mFunction;
    Button_State    mGetState;
};

void Button_Init(ButtonPtr pInput, UINT16 pThreshold, 
	Button_InitIO pInitIO, Button_State pGetState, EventFunction pFunction);
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//Button_Poll:
// 	pButton is a pointer to the button to initialize.
//	pIncrement time that has elapsed since the last update.
//	pPinState is the current pin state.
//Output: 
//	bTRUE if successful.
//Conds:  
//	None.
bool Button_Poll(ButtonPtr pButton, UINT8 pIncrement);
#endif	/* BUTTON_H */

