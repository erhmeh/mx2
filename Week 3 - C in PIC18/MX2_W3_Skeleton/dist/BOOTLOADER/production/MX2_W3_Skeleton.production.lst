

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Aug 06 18:53:43 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F67J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75  0000                     
    76 ;; Function _HMI_InitButtons is unused but had its address taken
    77  0000                     
    78 ;; Function _HMI_LeftSwitch is unused but had its address taken
    79  0000                     
    80 ;; Function _HMI_RightSwitch is unused but had its address taken
    81  0000                     
    82 ;; Function _HMI_UpSwitch is unused but had its address taken
    83  0000                     
    84 ;; Function _HMI_DownSwitch is unused but had its address taken
    85  0000                     
    86 ;; Function _HMI_DIPSwitch is unused but had its address taken
    87  0000                     
    88 ;; Function _MXK_InitTestButton is unused but had its address taken
    89  0000                     
    90 ;; Function _MXK_TestButton is unused but had its address taken
    91  0000                     
    92 ;; Function _MXK_InitDIPSwitch is unused but had its address taken
    93  0000                     
    94 ;; Function _MXK_DIPSwitch is unused but had its address taken
    95  0000                     
    96 ;; Function _Event_DIPSwitch is unused but had its address taken
    97  0000                     
    98 ;; Function _Event_HMI_DIPSwitch is unused but had its address taken
    99  0000                     
   100 ;; Function _Event_TestButton is unused but had its address taken
   101  0000                     
   102 ;; Function _Event_HMI_LeftButton is unused but had its address taken
   103  0000                     
   104 ;; Function _Event_HMI_RightButton is unused but had its address taken
   105  0000                     
   106 ;; Function _Event_HMI_UpButton is unused but had its address taken
   107  0000                     
   108 ;; Function _Event_HMI_DownButton is unused but had its address taken
   109  0000                     
   110                           	psect	idataCOMRAM
   111  011BF4                     __pidataCOMRAM:
   112                           	opt stack 0
   113                           
   114                           ;initializer for _gCursor
   115  011BF4  0006               	dw	6
   116  011BF6  0006               	dw	6
   117                           
   118                           ;initializer for _Bus_State
   119  011BF8  01                 	db	1
   120                           
   121                           ;initializer for _change
   122  011BF9  01                 	db	1
   123                           
   124                           ;initializer for _l
   125  011BFA  80                 	db	128
   126                           
   127                           ;initializer for _w
   128  011BFB  80                 	db	128
   129                           
   130                           ;initializer for _zero
   131  011BFC  30                 	db	48
   132                           
   133                           	psect	idataBANK0
   134  011BFD                     __pidataBANK0:
   135                           	opt stack 0
   136                           
   137                           ;initializer for _gCharSize
   138  011BFD  0005               	dw	5
   139  011BFF  0007               	dw	7
   140                           
   141                           ;initializer for _gForecolour
   142  011C01  FFFF               	dw	65535
   143                           
   144                           ;initializer for _A
   145  011C03  41                 	db	65
   146                           
   147                           ;initializer for _a
   148  011C04  61                 	db	97
   149                           
   150                           	psect	idataBANK1
   151  011C05                     __pidataBANK1:
   152                           	opt stack 0
   153                           
   154                           ;initializer for Console_Render@F7900
   155  011C05  0006               	dw	6
   156  011C07  0006               	dw	6
   157                           
   158                           ;initializer for _gLineSize
   159  011C09  0080               	dw	128
   160  011C0B  0007               	dw	7
   161                           
   162                           	psect	mediumconst
   163  00FD2E                     __pmediumconst:
   164                           	opt stack 0
   165  00FD2E  00                 	db	0
   166  00FD2F                     _InitList:
   167                           	opt stack 0
   168  00FD2F  1100               	dw	4352
   169  00FD31  0080               	dw	128
   170  00FD33  012C               	dw	300
   171  00FD35  B100               	dw	45312
   172  00FD37  0002               	dw	2
   173  00FD39  0035               	dw	53
   174  00FD3B  0036               	dw	54
   175  00FD3D  B200               	dw	45568
   176  00FD3F  0002               	dw	2
   177  00FD41  0035               	dw	53
   178  00FD43  0036               	dw	54
   179  00FD45  B300               	dw	45824
   180  00FD47  0002               	dw	2
   181  00FD49  0035               	dw	53
   182  00FD4B  0036               	dw	54
   183  00FD4D  0002               	dw	2
   184  00FD4F  0035               	dw	53
   185  00FD51  0036               	dw	54
   186  00FD53  B400               	dw	46080
   187  00FD55  0000               	dw	0
   188  00FD57  C000               	dw	49152
   189  00FD59  00A2               	dw	162
   190  00FD5B  0002               	dw	2
   191  00FD5D  0084               	dw	132
   192  00FD5F  C100               	dw	49408
   193  00FD61  00C5               	dw	197
   194  00FD63  C200               	dw	49664
   195  00FD65  000D               	dw	13
   196  00FD67  0000               	dw	0
   197  00FD69  C300               	dw	49920
   198  00FD6B  008D               	dw	141
   199  00FD6D  002A               	dw	42
   200  00FD6F  C400               	dw	50176
   201  00FD71  008D               	dw	141
   202  00FD73  00EE               	dw	238
   203  00FD75  C500               	dw	50432
   204  00FD77  000A               	dw	10
   205  00FD79  3600               	dw	13824
   206  00FD7B  00C8               	dw	200
   207  00FD7D  E000               	dw	57344
   208  00FD7F  0012               	dw	18
   209  00FD81  001C               	dw	28
   210  00FD83  0010               	dw	16
   211  00FD85  0018               	dw	24
   212  00FD87  0033               	dw	51
   213  00FD89  002C               	dw	44
   214  00FD8B  0025               	dw	37
   215  00FD8D  0028               	dw	40
   216  00FD8F  0028               	dw	40
   217  00FD91  0027               	dw	39
   218  00FD93  002F               	dw	47
   219  00FD95  003C               	dw	60
   220  00FD97  0000               	dw	0
   221  00FD99  0003               	dw	3
   222  00FD9B  0003               	dw	3
   223  00FD9D  0010               	dw	16
   224  00FD9F  0080               	dw	128
   225  00FDA1  0078               	dw	120
   226  00FDA3  E100               	dw	57600
   227  00FDA5  0012               	dw	18
   228  00FDA7  001C               	dw	28
   229  00FDA9  0010               	dw	16
   230  00FDAB  0018               	dw	24
   231  00FDAD  002D               	dw	45
   232  00FDAF  0028               	dw	40
   233  00FDB1  0023               	dw	35
   234  00FDB3  0028               	dw	40
   235  00FDB5  0028               	dw	40
   236  00FDB7  0026               	dw	38
   237  00FDB9  002F               	dw	47
   238  00FDBB  003B               	dw	59
   239  00FDBD  0000               	dw	0
   240  00FDBF  0003               	dw	3
   241  00FDC1  0003               	dw	3
   242  00FDC3  0010               	dw	16
   243  00FDC5  3A00               	dw	14848
   244  00FDC7  0005               	dw	5
   245  00FDC9  2A00               	dw	10752
   246  00FDCB  0000               	dw	0
   247  00FDCD  0002               	dw	2
   248  00FDCF  0000               	dw	0
   249  00FDD1  0081               	dw	129
   250  00FDD3  2B00               	dw	11008
   251  00FDD5  0000               	dw	0
   252  00FDD7  0003               	dw	3
   253  00FDD9  0000               	dw	0
   254  00FDDB  00A2               	dw	162
   255  00FDDD  2900               	dw	10496
   256  00FDDF  2C00               	dw	11264
   257  00FDE1                     __end_of_InitList:
   258                           	opt stack 0
   259  00FDE1                     PortProperty_Valid@F7774:
   260                           	opt stack 0
   261  00FDE1  00                 	db	0
   262  00FDE2  01                 	db	1
   263  00FDE3  02                 	db	2
   264  00FDE4  00                 	db	0
   265  00FDE5  01                 	db	1
   266  00FDE6  00                 	db	0
   267  00FDE7  01                 	db	1
   268  00FDE8  00                 	db	0
   269  00FDE9  02                 	db	2
   270  00FDEA  02                 	db	2
   271  00FDEB  00                 	db	0
   272  00FDEC  00                 	db	0
   273  00FDED  03                 	db	3
   274  00FDEE  03                 	db	3
   275  00FDEF  03                 	db	3
   276  00FDF0  00                 	db	0
   277  00FDF1                     __end_ofPortProperty_Valid@F7774:
   278                           	opt stack 0
   279  00FDF1                     Timer0_Init@PRESCALE:
   280                           	opt stack 0
   281  00FDF1  0002               	dw	2
   282  00FDF3  0004               	dw	4
   283  00FDF5  0008               	dw	8
   284  00FDF7  0010               	dw	16
   285  00FDF9  0020               	dw	32
   286  00FDFB  0040               	dw	64
   287  00FDFD  0080               	dw	128
   288  00FDFF  0100               	dw	256
   289  00FE01                     __end_ofTimer0_Init@PRESCALE:
   290                           	opt stack 0
   291  00FE01                     _MASKS:
   292                           	opt stack 0
   293  00FE01  00                 	db	0
   294  00FE02  01                 	db	1
   295  00FE03  03                 	db	3
   296  00FE04  07                 	db	7
   297  00FE05  0F                 	db	15
   298  00FE06  1F                 	db	31
   299  00FE07  3F                 	db	63
   300  00FE08  7F                 	db	127
   301  00FE09  FF                 	db	255
   302  00FE0A                     __end_of_MASKS:
   303                           	opt stack 0
   304  00FE0A                     HMI_SetButton@F8155:
   305                           	opt stack 0
   306  00FE0A  00                 	db	0
   307  00FE0B  02                 	db	2
   308  00FE0C  01                 	db	1
   309  00FE0D  03                 	db	3
   310  00FE0E                     __end_ofHMI_SetButton@F8155:
   311                           	opt stack 0
   312  00FE0E                     Timer2_Init@PRESCALE:
   313                           	opt stack 0
   314  00FE0E  01                 	db	1
   315  00FE0F  04                 	db	4
   316  00FE10  10                 	db	16
   317  00FE11                     __end_ofTimer2_Init@PRESCALE:
   318                           	opt stack 0
   319  00FE11                     _Font5x7:
   320                           	opt stack 0
   321  00FE11  00                 	db	0
   322  00FE12  00                 	db	0
   323  00FE13  00                 	db	0
   324  00FE14  00                 	db	0
   325  00FE15  00                 	db	0
   326  00FE16  00                 	db	0
   327  00FE17  00                 	db	0
   328  00FE18  5F                 	db	95
   329  00FE19  00                 	db	0
   330  00FE1A  00                 	db	0
   331  00FE1B  00                 	db	0
   332  00FE1C  07                 	db	7
   333  00FE1D  00                 	db	0
   334  00FE1E  07                 	db	7
   335  00FE1F  00                 	db	0
   336  00FE20  14                 	db	20
   337  00FE21  7F                 	db	127
   338  00FE22  14                 	db	20
   339  00FE23  7F                 	db	127
   340  00FE24  14                 	db	20
   341  00FE25  24                 	db	36
   342  00FE26  2A                 	db	42
   343  00FE27  7F                 	db	127
   344  00FE28  2A                 	db	42
   345  00FE29  12                 	db	18
   346  00FE2A  23                 	db	35
   347  00FE2B  13                 	db	19
   348  00FE2C  08                 	db	8
   349  00FE2D  64                 	db	100
   350  00FE2E  62                 	db	98
   351  00FE2F  36                 	db	54
   352  00FE30  49                 	db	73
   353  00FE31  55                 	db	85
   354  00FE32  22                 	db	34
   355  00FE33  50                 	db	80
   356  00FE34  00                 	db	0
   357  00FE35  05                 	db	5
   358  00FE36  03                 	db	3
   359  00FE37  00                 	db	0
   360  00FE38  00                 	db	0
   361  00FE39  00                 	db	0
   362  00FE3A  1C                 	db	28
   363  00FE3B  22                 	db	34
   364  00FE3C  41                 	db	65
   365  00FE3D  00                 	db	0
   366  00FE3E  00                 	db	0
   367  00FE3F  41                 	db	65
   368  00FE40  22                 	db	34
   369  00FE41  1C                 	db	28
   370  00FE42  00                 	db	0
   371  00FE43  08                 	db	8
   372  00FE44  2A                 	db	42
   373  00FE45  1C                 	db	28
   374  00FE46  2A                 	db	42
   375  00FE47  08                 	db	8
   376  00FE48  08                 	db	8
   377  00FE49  08                 	db	8
   378  00FE4A  3E                 	db	62
   379  00FE4B  08                 	db	8
   380  00FE4C  08                 	db	8
   381  00FE4D  00                 	db	0
   382  00FE4E  50                 	db	80
   383  00FE4F  30                 	db	48
   384  00FE50  00                 	db	0
   385  00FE51  00                 	db	0
   386  00FE52  08                 	db	8
   387  00FE53  08                 	db	8
   388  00FE54  08                 	db	8
   389  00FE55  08                 	db	8
   390  00FE56  08                 	db	8
   391  00FE57  00                 	db	0
   392  00FE58  60                 	db	96
   393  00FE59  60                 	db	96
   394  00FE5A  00                 	db	0
   395  00FE5B  00                 	db	0
   396  00FE5C  20                 	db	32
   397  00FE5D  10                 	db	16
   398  00FE5E  08                 	db	8
   399  00FE5F  04                 	db	4
   400  00FE60  02                 	db	2
   401  00FE61  3E                 	db	62
   402  00FE62  51                 	db	81
   403  00FE63  49                 	db	73
   404  00FE64  45                 	db	69
   405  00FE65  3E                 	db	62
   406  00FE66  00                 	db	0
   407  00FE67  42                 	db	66
   408  00FE68  7F                 	db	127
   409  00FE69  40                 	db	64
   410  00FE6A  00                 	db	0
   411  00FE6B  42                 	db	66
   412  00FE6C  61                 	db	97
   413  00FE6D  51                 	db	81
   414  00FE6E  49                 	db	73
   415  00FE6F  46                 	db	70
   416  00FE70  21                 	db	33
   417  00FE71  41                 	db	65
   418  00FE72  45                 	db	69
   419  00FE73  4B                 	db	75
   420  00FE74  31                 	db	49
   421  00FE75  18                 	db	24
   422  00FE76  14                 	db	20
   423  00FE77  12                 	db	18
   424  00FE78  7F                 	db	127
   425  00FE79  10                 	db	16
   426  00FE7A  27                 	db	39
   427  00FE7B  45                 	db	69
   428  00FE7C  45                 	db	69
   429  00FE7D  45                 	db	69
   430  00FE7E  39                 	db	57
   431  00FE7F  3C                 	db	60
   432  00FE80  4A                 	db	74
   433  00FE81  49                 	db	73
   434  00FE82  49                 	db	73
   435  00FE83  30                 	db	48
   436  00FE84  01                 	db	1
   437  00FE85  71                 	db	113
   438  00FE86  09                 	db	9
   439  00FE87  05                 	db	5
   440  00FE88  03                 	db	3
   441  00FE89  36                 	db	54
   442  00FE8A  49                 	db	73
   443  00FE8B  49                 	db	73
   444  00FE8C  49                 	db	73
   445  00FE8D  36                 	db	54
   446  00FE8E  06                 	db	6
   447  00FE8F  49                 	db	73
   448  00FE90  49                 	db	73
   449  00FE91  29                 	db	41
   450  00FE92  1E                 	db	30
   451  00FE93  00                 	db	0
   452  00FE94  36                 	db	54
   453  00FE95  36                 	db	54
   454  00FE96  00                 	db	0
   455  00FE97  00                 	db	0
   456  00FE98  00                 	db	0
   457  00FE99  56                 	db	86
   458  00FE9A  36                 	db	54
   459  00FE9B  00                 	db	0
   460  00FE9C  00                 	db	0
   461  00FE9D  00                 	db	0
   462  00FE9E  08                 	db	8
   463  00FE9F  14                 	db	20
   464  00FEA0  22                 	db	34
   465  00FEA1  41                 	db	65
   466  00FEA2  14                 	db	20
   467  00FEA3  14                 	db	20
   468  00FEA4  14                 	db	20
   469  00FEA5  14                 	db	20
   470  00FEA6  14                 	db	20
   471  00FEA7  41                 	db	65
   472  00FEA8  22                 	db	34
   473  00FEA9  14                 	db	20
   474  00FEAA  08                 	db	8
   475  00FEAB  00                 	db	0
   476  00FEAC  02                 	db	2
   477  00FEAD  01                 	db	1
   478  00FEAE  51                 	db	81
   479  00FEAF  09                 	db	9
   480  00FEB0  06                 	db	6
   481  00FEB1  32                 	db	50
   482  00FEB2  49                 	db	73
   483  00FEB3  79                 	db	121
   484  00FEB4  41                 	db	65
   485  00FEB5  3E                 	db	62
   486  00FEB6  7E                 	db	126
   487  00FEB7  11                 	db	17
   488  00FEB8  11                 	db	17
   489  00FEB9  11                 	db	17
   490  00FEBA  7E                 	db	126
   491  00FEBB  7F                 	db	127
   492  00FEBC  49                 	db	73
   493  00FEBD  49                 	db	73
   494  00FEBE  49                 	db	73
   495  00FEBF  36                 	db	54
   496  00FEC0  3E                 	db	62
   497  00FEC1  41                 	db	65
   498  00FEC2  41                 	db	65
   499  00FEC3  41                 	db	65
   500  00FEC4  22                 	db	34
   501  00FEC5  7F                 	db	127
   502  00FEC6  41                 	db	65
   503  00FEC7  41                 	db	65
   504  00FEC8  22                 	db	34
   505  00FEC9  1C                 	db	28
   506  00FECA  7F                 	db	127
   507  00FECB  49                 	db	73
   508  00FECC  49                 	db	73
   509  00FECD  49                 	db	73
   510  00FECE  41                 	db	65
   511  00FECF  7F                 	db	127
   512  00FED0  09                 	db	9
   513  00FED1  09                 	db	9
   514  00FED2  01                 	db	1
   515  00FED3  01                 	db	1
   516  00FED4  3E                 	db	62
   517  00FED5  41                 	db	65
   518  00FED6  41                 	db	65
   519  00FED7  51                 	db	81
   520  00FED8  32                 	db	50
   521  00FED9  7F                 	db	127
   522  00FEDA  08                 	db	8
   523  00FEDB  08                 	db	8
   524  00FEDC  08                 	db	8
   525  00FEDD  7F                 	db	127
   526  00FEDE  00                 	db	0
   527  00FEDF  41                 	db	65
   528  00FEE0  7F                 	db	127
   529  00FEE1  41                 	db	65
   530  00FEE2  00                 	db	0
   531  00FEE3  20                 	db	32
   532  00FEE4  40                 	db	64
   533  00FEE5  41                 	db	65
   534  00FEE6  3F                 	db	63
   535  00FEE7  01                 	db	1
   536  00FEE8  7F                 	db	127
   537  00FEE9  08                 	db	8
   538  00FEEA  14                 	db	20
   539  00FEEB  22                 	db	34
   540  00FEEC  41                 	db	65
   541  00FEED  7F                 	db	127
   542  00FEEE  40                 	db	64
   543  00FEEF  40                 	db	64
   544  00FEF0  40                 	db	64
   545  00FEF1  40                 	db	64
   546  00FEF2  7F                 	db	127
   547  00FEF3  02                 	db	2
   548  00FEF4  04                 	db	4
   549  00FEF5  02                 	db	2
   550  00FEF6  7F                 	db	127
   551  00FEF7  7F                 	db	127
   552  00FEF8  04                 	db	4
   553  00FEF9  08                 	db	8
   554  00FEFA  10                 	db	16
   555  00FEFB  7F                 	db	127
   556  00FEFC  3E                 	db	62
   557  00FEFD  41                 	db	65
   558  00FEFE  41                 	db	65
   559  00FEFF  41                 	db	65
   560  00FF00  3E                 	db	62
   561  00FF01  7F                 	db	127
   562  00FF02  09                 	db	9
   563  00FF03  09                 	db	9
   564  00FF04  09                 	db	9
   565  00FF05  06                 	db	6
   566  00FF06  3E                 	db	62
   567  00FF07  41                 	db	65
   568  00FF08  51                 	db	81
   569  00FF09  21                 	db	33
   570  00FF0A  5E                 	db	94
   571  00FF0B  7F                 	db	127
   572  00FF0C  09                 	db	9
   573  00FF0D  19                 	db	25
   574  00FF0E  29                 	db	41
   575  00FF0F  46                 	db	70
   576  00FF10  46                 	db	70
   577  00FF11  49                 	db	73
   578  00FF12  49                 	db	73
   579  00FF13  49                 	db	73
   580  00FF14  31                 	db	49
   581  00FF15  01                 	db	1
   582  00FF16  01                 	db	1
   583  00FF17  7F                 	db	127
   584  00FF18  01                 	db	1
   585  00FF19  01                 	db	1
   586  00FF1A  3F                 	db	63
   587  00FF1B  40                 	db	64
   588  00FF1C  40                 	db	64
   589  00FF1D  40                 	db	64
   590  00FF1E  3F                 	db	63
   591  00FF1F  1F                 	db	31
   592  00FF20  20                 	db	32
   593  00FF21  40                 	db	64
   594  00FF22  20                 	db	32
   595  00FF23  1F                 	db	31
   596  00FF24  7F                 	db	127
   597  00FF25  20                 	db	32
   598  00FF26  18                 	db	24
   599  00FF27  20                 	db	32
   600  00FF28  7F                 	db	127
   601  00FF29  63                 	db	99
   602  00FF2A  14                 	db	20
   603  00FF2B  08                 	db	8
   604  00FF2C  14                 	db	20
   605  00FF2D  63                 	db	99
   606  00FF2E  03                 	db	3
   607  00FF2F  04                 	db	4
   608  00FF30  78                 	db	120
   609  00FF31  04                 	db	4
   610  00FF32  03                 	db	3
   611  00FF33  61                 	db	97
   612  00FF34  51                 	db	81
   613  00FF35  49                 	db	73
   614  00FF36  45                 	db	69
   615  00FF37  43                 	db	67
   616  00FF38  00                 	db	0
   617  00FF39  00                 	db	0
   618  00FF3A  7F                 	db	127
   619  00FF3B  41                 	db	65
   620  00FF3C  41                 	db	65
   621  00FF3D  02                 	db	2
   622  00FF3E  04                 	db	4
   623  00FF3F  08                 	db	8
   624  00FF40  10                 	db	16
   625  00FF41  20                 	db	32
   626  00FF42  41                 	db	65
   627  00FF43  41                 	db	65
   628  00FF44  7F                 	db	127
   629  00FF45  00                 	db	0
   630  00FF46  00                 	db	0
   631  00FF47  04                 	db	4
   632  00FF48  02                 	db	2
   633  00FF49  01                 	db	1
   634  00FF4A  02                 	db	2
   635  00FF4B  04                 	db	4
   636  00FF4C  40                 	db	64
   637  00FF4D  40                 	db	64
   638  00FF4E  40                 	db	64
   639  00FF4F  40                 	db	64
   640  00FF50  40                 	db	64
   641  00FF51  00                 	db	0
   642  00FF52  01                 	db	1
   643  00FF53  02                 	db	2
   644  00FF54  04                 	db	4
   645  00FF55  00                 	db	0
   646  00FF56  20                 	db	32
   647  00FF57  54                 	db	84
   648  00FF58  54                 	db	84
   649  00FF59  54                 	db	84
   650  00FF5A  78                 	db	120
   651  00FF5B  7F                 	db	127
   652  00FF5C  48                 	db	72
   653  00FF5D  44                 	db	68
   654  00FF5E  44                 	db	68
   655  00FF5F  38                 	db	56
   656  00FF60  38                 	db	56
   657  00FF61  44                 	db	68
   658  00FF62  44                 	db	68
   659  00FF63  44                 	db	68
   660  00FF64  20                 	db	32
   661  00FF65  38                 	db	56
   662  00FF66  44                 	db	68
   663  00FF67  44                 	db	68
   664  00FF68  48                 	db	72
   665  00FF69  7F                 	db	127
   666  00FF6A  38                 	db	56
   667  00FF6B  54                 	db	84
   668  00FF6C  54                 	db	84
   669  00FF6D  54                 	db	84
   670  00FF6E  18                 	db	24
   671  00FF6F  08                 	db	8
   672  00FF70  7E                 	db	126
   673  00FF71  09                 	db	9
   674  00FF72  01                 	db	1
   675  00FF73  02                 	db	2
   676  00FF74  08                 	db	8
   677  00FF75  14                 	db	20
   678  00FF76  54                 	db	84
   679  00FF77  54                 	db	84
   680  00FF78  3C                 	db	60
   681  00FF79  7F                 	db	127
   682  00FF7A  08                 	db	8
   683  00FF7B  04                 	db	4
   684  00FF7C  04                 	db	4
   685  00FF7D  78                 	db	120
   686  00FF7E  00                 	db	0
   687  00FF7F  44                 	db	68
   688  00FF80  7D                 	db	125
   689  00FF81  40                 	db	64
   690  00FF82  00                 	db	0
   691  00FF83  20                 	db	32
   692  00FF84  40                 	db	64
   693  00FF85  44                 	db	68
   694  00FF86  3D                 	db	61
   695  00FF87  00                 	db	0
   696  00FF88  00                 	db	0
   697  00FF89  7F                 	db	127
   698  00FF8A  10                 	db	16
   699  00FF8B  28                 	db	40
   700  00FF8C  44                 	db	68
   701  00FF8D  00                 	db	0
   702  00FF8E  41                 	db	65
   703  00FF8F  7F                 	db	127
   704  00FF90  40                 	db	64
   705  00FF91  00                 	db	0
   706  00FF92  7C                 	db	124
   707  00FF93  04                 	db	4
   708  00FF94  18                 	db	24
   709  00FF95  04                 	db	4
   710  00FF96  78                 	db	120
   711  00FF97  7C                 	db	124
   712  00FF98  08                 	db	8
   713  00FF99  04                 	db	4
   714  00FF9A  04                 	db	4
   715  00FF9B  78                 	db	120
   716  00FF9C  38                 	db	56
   717  00FF9D  44                 	db	68
   718  00FF9E  44                 	db	68
   719  00FF9F  44                 	db	68
   720  00FFA0  38                 	db	56
   721  00FFA1  7C                 	db	124
   722  00FFA2  14                 	db	20
   723  00FFA3  14                 	db	20
   724  00FFA4  14                 	db	20
   725  00FFA5  08                 	db	8
   726  00FFA6  08                 	db	8
   727  00FFA7  14                 	db	20
   728  00FFA8  14                 	db	20
   729  00FFA9  18                 	db	24
   730  00FFAA  7C                 	db	124
   731  00FFAB  7C                 	db	124
   732  00FFAC  08                 	db	8
   733  00FFAD  04                 	db	4
   734  00FFAE  04                 	db	4
   735  00FFAF  08                 	db	8
   736  00FFB0  48                 	db	72
   737  00FFB1  54                 	db	84
   738  00FFB2  54                 	db	84
   739  00FFB3  54                 	db	84
   740  00FFB4  20                 	db	32
   741  00FFB5  04                 	db	4
   742  00FFB6  3F                 	db	63
   743  00FFB7  44                 	db	68
   744  00FFB8  40                 	db	64
   745  00FFB9  20                 	db	32
   746  00FFBA  3C                 	db	60
   747  00FFBB  40                 	db	64
   748  00FFBC  40                 	db	64
   749  00FFBD  20                 	db	32
   750  00FFBE  7C                 	db	124
   751  00FFBF  1C                 	db	28
   752  00FFC0  20                 	db	32
   753  00FFC1  40                 	db	64
   754  00FFC2  20                 	db	32
   755  00FFC3  1C                 	db	28
   756  00FFC4  3C                 	db	60
   757  00FFC5  40                 	db	64
   758  00FFC6  30                 	db	48
   759  00FFC7  40                 	db	64
   760  00FFC8  3C                 	db	60
   761  00FFC9  44                 	db	68
   762  00FFCA  28                 	db	40
   763  00FFCB  10                 	db	16
   764  00FFCC  28                 	db	40
   765  00FFCD  44                 	db	68
   766  00FFCE  0C                 	db	12
   767  00FFCF  50                 	db	80
   768  00FFD0  50                 	db	80
   769  00FFD1  50                 	db	80
   770  00FFD2  3C                 	db	60
   771  00FFD3  44                 	db	68
   772  00FFD4  64                 	db	100
   773  00FFD5  54                 	db	84
   774  00FFD6  4C                 	db	76
   775  00FFD7  44                 	db	68
   776  00FFD8  00                 	db	0
   777  00FFD9  08                 	db	8
   778  00FFDA  36                 	db	54
   779  00FFDB  41                 	db	65
   780  00FFDC  00                 	db	0
   781  00FFDD  00                 	db	0
   782  00FFDE  00                 	db	0
   783  00FFDF  7F                 	db	127
   784  00FFE0  00                 	db	0
   785  00FFE1  00                 	db	0
   786  00FFE2  00                 	db	0
   787  00FFE3  41                 	db	65
   788  00FFE4  36                 	db	54
   789  00FFE5  08                 	db	8
   790  00FFE6  00                 	db	0
   791  00FFE7  08                 	db	8
   792  00FFE8  08                 	db	8
   793  00FFE9  2A                 	db	42
   794  00FFEA  1C                 	db	28
   795  00FFEB  08                 	db	8
   796  00FFEC  08                 	db	8
   797  00FFED  1C                 	db	28
   798  00FFEE  2A                 	db	42
   799  00FFEF  08                 	db	8
   800  00FFF0  08                 	db	8
   801  00FFF1                     __end_of_Font5x7:
   802                           	opt stack 0
   803  00FFF1                     _PortA_Property:
   804                           	opt stack 0
   805  00FFF1  00FF               	dw	255
   806  00FFF3                     __end_of_PortA_Property:
   807                           	opt stack 0
   808  00FFF3                     _PortB_Property:
   809                           	opt stack 0
   810  00FFF3  FF00               	dw	65280
   811  00FFF5                     __end_of_PortB_Property:
   812                           	opt stack 0
   813  00FFF5                     _PortC_Property:
   814                           	opt stack 0
   815  00FFF5  FFF0               	dw	65520
   816  00FFF7                     __end_of_PortC_Property:
   817                           	opt stack 0
   818  00FFF7                     _PortD_Property:
   819                           	opt stack 0
   820  00FFF7  FFFF               	dw	65535
   821  00FFF9                     __end_of_PortD_Property:
   822                           	opt stack 0
   823  00FFF9                     _PortE_Property:
   824                           	opt stack 0
   825  00FFF9  0000               	dw	0
   826  00FFFB                     __end_of_PortE_Property:
   827                           	opt stack 0
   828  00FFFB                     _PortF_Property:
   829                           	opt stack 0
   830  00FFFB  0FFF               	dw	4095
   831  00FFFD                     __end_of_PortF_Property:
   832                           	opt stack 0
   833  00FFFD                     _PortG_Property:
   834                           	opt stack 0
   835  00FFFD  FC00               	dw	64512
   836  00FFFF                     __end_of_PortG_Property:
   837                           	opt stack 0
   838  0000                     _TMR0	set	4054
   839  0000                     _ADCON0bits	set	4034
   840  0000                     _ADCON1bits	set	4033
   841  0000                     _ADRESH	set	4036
   842  0000                     _ADRESL	set	4035
   843  0000                     _ANCON0	set	4033
   844  0000                     _INTCONbits	set	4082
   845  0000                     _IPR1bits	set	3999
   846  0000                     _IPR3bits	set	4005
   847  0000                     _OSCTUNEbits	set	3995
   848  0000                     _PIE1bits	set	3997
   849  0000                     _PIE3bits	set	4003
   850  0000                     _PIR1	set	3998
   851  0000                     _PIR1bits	set	3998
   852  0000                     _PIR2	set	4001
   853  0000                     _PIR3	set	4004
   854  0000                     _PIR3bits	set	4004
   855  0000                     _PORTFbits	set	3973
   856  0000                     _PR2	set	4043
   857  0000                     _RCONbits	set	4048
   858  0000                     _SSP1ADD	set	4040
   859  0000                     _SSP1CON1bits	set	4038
   860  0000                     _SSP1CON2bits	set	4037
   861  0000                     _SSP1STATbits	set	4039
   862  0000                     _SSP2CON1bits	set	3948
   863  0000                     _SSP2CON2bits	set	3947
   864  0000                     _SSP2STATbits	set	3949
   865  0000                     _T0CONbits	set	4053
   866  0000                     _T2CONbits	set	4042
   867  0000                     _LATA	set	3977
   868  0000                     _LATB	set	3978
   869  0000                     _LATC	set	3979
   870  0000                     _LATD	set	3980
   871  0000                     _LATE	set	3981
   872  0000                     _LATF	set	3982
   873  0000                     _LATG	set	3983
   874  0000                     _PORTA	set	3968
   875  0000                     _PORTB	set	3969
   876  0000                     _PORTC	set	3970
   877  0000                     _PORTD	set	3971
   878  0000                     _PORTE	set	3972
   879  0000                     _PORTF	set	3973
   880  0000                     _PORTG	set	3974
   881  0000                     _SSP1BUF	set	4041
   882  0000                     _SSP1CON1	set	4038
   883  0000                     _SSP1CON2	set	4037
   884  0000                     _SSP1STAT	set	4039
   885  0000                     _SSP2BUF	set	3951
   886  0000                     _SSP2CON1	set	3948
   887  0000                     _SSP2CON2	set	3947
   888  0000                     _SSP2STAT	set	3949
   889  0000                     _TRISA	set	3986
   890  0000                     _TRISB	set	3987
   891  0000                     _TRISC	set	3988
   892  0000                     _TRISD	set	3989
   893  0000                     _TRISE	set	3990
   894  0000                     _TRISF	set	3991
   895  0000                     _TRISG	set	3992
   896                           
   897                           ; #config settings
   898  00FFFF  00                 	db	0	; dummy byte at the end
   899  0000                     
   900                           	psect	cinit
   901  01133E                     __pcinit:
   902                           	opt stack 0
   903  01133E                     start_initialization:
   904                           	opt stack 0
   905  01133E                     __initialization:
   906                           	opt stack 0
   907                           
   908                           ; Initialize objects allocated to BANK1 (8 bytes)
   909                           ; load TBLPTR registers with __pidataBANK1
   910  01133E  0E05               	movlw	low __pidataBANK1
   911  011340  6EF6               	movwf	tblptrl,c
   912  011342  0E1C               	movlw	high __pidataBANK1
   913  011344  6EF7               	movwf	tblptrh,c
   914  011346  0E01               	movlw	low (__pidataBANK1 shr (0+16))
   915  011348  6EF8               	movwf	tblptru,c
   916  01134A  EE01  F0F2         	lfsr	0,__pdataBANK1
   917  01134E  EE10 F008          	lfsr	1,8
   918  011352                     copy_data0:
   919  011352  0009               	tblrd		*+
   920  011354  CFF5 FFEE          	movff	tablat,postinc0
   921  011358  50E5               	movf	postdec1,w,c
   922  01135A  50E1               	movf	fsr1l,w,c
   923  01135C  E1FA               	bnz	copy_data0
   924                           
   925                           ; Initialize objects allocated to BANK0 (8 bytes)
   926                           ; load TBLPTR registers with __pidataBANK0
   927  01135E  0EFD               	movlw	low __pidataBANK0
   928  011360  6EF6               	movwf	tblptrl,c
   929  011362  0E1B               	movlw	high __pidataBANK0
   930  011364  6EF7               	movwf	tblptrh,c
   931  011366  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   932  011368  6EF8               	movwf	tblptru,c
   933  01136A  EE00  F0F8         	lfsr	0,__pdataBANK0
   934  01136E  EE10 F008          	lfsr	1,8
   935  011372                     copy_data1:
   936  011372  0009               	tblrd		*+
   937  011374  CFF5 FFEE          	movff	tablat,postinc0
   938  011378  50E5               	movf	postdec1,w,c
   939  01137A  50E1               	movf	fsr1l,w,c
   940  01137C  E1FA               	bnz	copy_data1
   941                           
   942                           ; Initialize objects allocated to COMRAM (9 bytes)
   943                           ; load TBLPTR registers with __pidataCOMRAM
   944  01137E  0EF4               	movlw	low __pidataCOMRAM
   945  011380  6EF6               	movwf	tblptrl,c
   946  011382  0E1B               	movlw	high __pidataCOMRAM
   947  011384  6EF7               	movwf	tblptrh,c
   948  011386  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   949  011388  6EF8               	movwf	tblptru,c
   950  01138A  EE00  F040         	lfsr	0,__pdataCOMRAM
   951  01138E  EE10 F009          	lfsr	1,9
   952  011392                     copy_data2:
   953  011392  0009               	tblrd		*+
   954  011394  CFF5 FFEE          	movff	tablat,postinc0
   955  011398  50E5               	movf	postdec1,w,c
   956  01139A  50E1               	movf	fsr1l,w,c
   957  01139C  E1FA               	bnz	copy_data2
   958                           
   959                           ; Clear objects allocated to BIGRAM (300 bytes)
   960  01139E  EE02  F010         	lfsr	0,__pbssBIGRAM
   961  0113A2  EE11 F02C          	lfsr	1,300
   962  0113A6                     clear_0:
   963  0113A6  6AEE               	clrf	postinc0,c
   964  0113A8  50E5               	movf	postdec1,w,c
   965  0113AA  50E1               	movf	fsr1l,w,c
   966  0113AC  E1FC               	bnz	clear_0
   967  0113AE  50E2               	movf	fsr1h,w,c
   968  0113B0  E1FA               	bnz	clear_0
   969                           
   970                           ; Clear objects allocated to BANK1 (242 bytes)
   971  0113B2  EE01  F000         	lfsr	0,__pbssBANK1
   972  0113B6  0EF2               	movlw	242
   973  0113B8                     clear_1:
   974  0113B8  6AEE               	clrf	postinc0,c
   975  0113BA  06E8               	decf	wreg,f,c
   976  0113BC  E1FD               	bnz	clear_1
   977                           
   978                           ; Clear objects allocated to BANK0 (104 bytes)
   979  0113BE  EE00  F060         	lfsr	0,__pbssBANK0
   980  0113C2  0E68               	movlw	104
   981  0113C4                     clear_2:
   982  0113C4  6AEE               	clrf	postinc0,c
   983  0113C6  06E8               	decf	wreg,f,c
   984  0113C8  E1FD               	bnz	clear_2
   985                           
   986                           ; Clear objects allocated to COMRAM (27 bytes)
   987  0113CA  EE00  F025         	lfsr	0,__pbssCOMRAM
   988  0113CE  0E1B               	movlw	27
   989  0113D0                     clear_3:
   990  0113D0  6AEE               	clrf	postinc0,c
   991  0113D2  06E8               	decf	wreg,f,c
   992  0113D4  E1FD               	bnz	clear_3
   993  0113D6                     end_of_initialization:
   994                           	opt stack 0
   995  0113D6                     __end_of__initialization:
   996                           	opt stack 0
   997  0113D6  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   998  0113D8  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   999  0113DA  0100               	movlb	0
  1000  0113DC  EF3E  F08A         	goto	_main	;jump to C main() function
  1001                           tblptru	equ	0xFF8
  1002                           tblptrh	equ	0xFF7
  1003                           tblptrl	equ	0xFF6
  1004                           tablat	equ	0xFF5
  1005                           postinc0	equ	0xFEE
  1006                           wreg	equ	0xFE8
  1007                           postdec1	equ	0xFE5
  1008                           fsr1h	equ	0xFE2
  1009                           fsr1l	equ	0xFE1
  1010                           
  1011                           	psect	bssCOMRAM
  1012  000025                     __pbssCOMRAM:
  1013                           	opt stack 0
  1014  000025                     _lQueue:
  1015                           	opt stack 0
  1016  000025                     	ds	3
  1017  000028                     HMI_GRender@a:
  1018                           	opt stack 0
  1019  000028                     	ds	2
  1020  00002A                     _COUNTER:
  1021                           	opt stack 0
  1022  00002A                     	ds	2
  1023  00002C                     _gBackcolour:
  1024                           	opt stack 0
  1025  00002C                     	ds	2
  1026  00002E                     _lCurrent:
  1027                           	opt stack 0
  1028  00002E                     	ds	2
  1029  000030                     _lMotor:
  1030                           	opt stack 0
  1031  000030                     	ds	2
  1032  000032                     _pShiftVal:
  1033                           	opt stack 0
  1034  000032                     	ds	2
  1035  000034                     Event_TestButton@j:
  1036                           	opt stack 0
  1037  000034                     	ds	1
  1038  000035                     OutSeg@a:
  1039                           	opt stack 0
  1040  000035                     	ds	1
  1041  000036                     OutSeg@cur:
  1042                           	opt stack 0
  1043  000036                     	ds	1
  1044  000037                     OutSeg@segset:
  1045                           	opt stack 0
  1046  000037                     	ds	1
  1047  000038                     Timer0_Init@PRE:
  1048                           	opt stack 0
  1049  000038                     	ds	1
  1050  000039                     Timer2_Init@INDEX:
  1051                           	opt stack 0
  1052  000039                     	ds	1
  1053  00003A                     Timer2_Init@PRE:
  1054                           	opt stack 0
  1055  00003A                     	ds	1
  1056  00003B                     _INDEX:
  1057                           	opt stack 0
  1058  00003B                     	ds	1
  1059  00003C                     _clearall:
  1060                           	opt stack 0
  1061  00003C                     	ds	1
  1062  00003D                     _lBufferX:
  1063                           	opt stack 0
  1064  00003D                     	ds	1
  1065  00003E                     _lBufferY:
  1066                           	opt stack 0
  1067  00003E                     	ds	1
  1068  00003F                     rand@screw:
  1069                           	opt stack 0
  1070  00003F                     	ds	1
  1071                           tblptru	equ	0xFF8
  1072                           tblptrh	equ	0xFF7
  1073                           tblptrl	equ	0xFF6
  1074                           tablat	equ	0xFF5
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           postdec1	equ	0xFE5
  1078                           fsr1h	equ	0xFE2
  1079                           fsr1l	equ	0xFE1
  1080                           
  1081                           	psect	dataCOMRAM
  1082  000040                     __pdataCOMRAM:
  1083                           	opt stack 0
  1084  000040                     _gCursor:
  1085                           	opt stack 0
  1086  000040                     	ds	4
  1087  000044                     _Bus_State:
  1088                           	opt stack 0
  1089  000044                     	ds	1
  1090  000045                     _change:
  1091                           	opt stack 0
  1092  000045                     	ds	1
  1093  000046                     _l:
  1094                           	opt stack 0
  1095  000046                     	ds	1
  1096  000047                     _w:
  1097                           	opt stack 0
  1098  000047                     	ds	1
  1099  000048                     	ds	1
  1100                           tblptru	equ	0xFF8
  1101                           tblptrh	equ	0xFF7
  1102                           tblptrl	equ	0xFF6
  1103                           tablat	equ	0xFF5
  1104                           postinc0	equ	0xFEE
  1105                           wreg	equ	0xFE8
  1106                           postdec1	equ	0xFE5
  1107                           fsr1h	equ	0xFE2
  1108                           fsr1l	equ	0xFE1
  1109                           
  1110                           	psect	bssBANK0
  1111  000060                     __pbssBANK0:
  1112                           	opt stack 0
  1113  000060                     Timer0_Init@DIV:
  1114                           	opt stack 0
  1115  000060                     	ds	4
  1116  000064                     Timer2_Init@DIV:
  1117                           	opt stack 0
  1118  000064                     	ds	4
  1119  000068                     _gISR:
  1120                           	opt stack 0
  1121  000068                     	ds	3
  1122  00006B                     _lStepFunction:
  1123                           	opt stack 0
  1124  00006B                     	ds	3
  1125  00006E                     SPI_Send9@dat:
  1126                           	opt stack 0
  1127  00006E                     	ds	2
  1128  000070                     _val:
  1129                           	opt stack 0
  1130  000070                     	ds	2
  1131  000072                     _ADC_Initialised:
  1132                           	opt stack 0
  1133  000072                     	ds	1
  1134  000073                     _i:
  1135                           	opt stack 0
  1136  000073                     	ds	1
  1137  000074                     _j:
  1138                           	opt stack 0
  1139  000074                     	ds	1
  1140  000075                     _u:
  1141                           	opt stack 0
  1142  000075                     	ds	1
  1143  000076                     _PortC:
  1144                           	opt stack 0
  1145  000076                     	ds	10
  1146  000080                     _PortD:
  1147                           	opt stack 0
  1148  000080                     	ds	10
  1149  00008A                     _PortE:
  1150                           	opt stack 0
  1151  00008A                     	ds	10
  1152  000094                     _PortF:
  1153                           	opt stack 0
  1154  000094                     	ds	10
  1155  00009E                     _I2C1T:
  1156                           	opt stack 0
  1157  00009E                     	ds	7
  1158  0000A5                     _I2C2T:
  1159                           	opt stack 0
  1160  0000A5                     	ds	7
  1161  0000AC                     _ADC_AN0:
  1162                           	opt stack 0
  1163  0000AC                     	ds	5
  1164  0000B1                     _ADC_AN1:
  1165                           	opt stack 0
  1166  0000B1                     	ds	5
  1167  0000B6                     _ADC_AN2:
  1168                           	opt stack 0
  1169  0000B6                     	ds	5
  1170  0000BB                     _ADC_AN3:
  1171                           	opt stack 0
  1172  0000BB                     	ds	5
  1173  0000C0                     LCD_DrawRectangle@p2:
  1174                           	opt stack 0
  1175  0000C0                     	ds	4
  1176  0000C4                     LCD_DrawRectangle@p4:
  1177                           	opt stack 0
  1178  0000C4                     	ds	4
  1179                           tblptru	equ	0xFF8
  1180                           tblptrh	equ	0xFF7
  1181                           tblptrl	equ	0xFF6
  1182                           tablat	equ	0xFF5
  1183                           postinc0	equ	0xFEE
  1184                           wreg	equ	0xFE8
  1185                           postdec1	equ	0xFE5
  1186                           fsr1h	equ	0xFE2
  1187                           fsr1l	equ	0xFE1
  1188                           
  1189                           	psect	dataBANK0
  1190  0000F8                     __pdataBANK0:
  1191                           	opt stack 0
  1192  0000F8                     _gCharSize:
  1193                           	opt stack 0
  1194  0000F8                     	ds	4
  1195  0000FC                     _gForecolour:
  1196                           	opt stack 0
  1197  0000FC                     	ds	2
  1198  0000FE                     	ds	1
  1199  0000FF                     	ds	1
  1200                           tblptru	equ	0xFF8
  1201                           tblptrh	equ	0xFF7
  1202                           tblptrl	equ	0xFF6
  1203                           tablat	equ	0xFF5
  1204                           postinc0	equ	0xFEE
  1205                           wreg	equ	0xFE8
  1206                           postdec1	equ	0xFE5
  1207                           fsr1h	equ	0xFE2
  1208                           fsr1l	equ	0xFE1
  1209                           
  1210                           	psect	bssBANK1
  1211  000100                     __pbssBANK1:
  1212                           	opt stack 0
  1213  000100                     _lCBuffer:
  1214                           	opt stack 0
  1215  000100                     	ds	30
  1216  00011E                     _I2C1_Done:
  1217                           	opt stack 0
  1218  00011E                     	ds	3
  1219  000121                     _I2C1_More:
  1220                           	opt stack 0
  1221  000121                     	ds	3
  1222  000124                     _I2C2_Done:
  1223                           	opt stack 0
  1224  000124                     	ds	3
  1225  000127                     _I2C2_More:
  1226                           	opt stack 0
  1227  000127                     	ds	3
  1228  00012A                     Console_MakeField@Fill:
  1229                           	opt stack 0
  1230  00012A                     	ds	70
  1231  000170                     _HMIBoard:
  1232                           	opt stack 0
  1233  000170                     	ds	58
  1234  0001AA                     _SPI1:
  1235                           	opt stack 0
  1236  0001AA                     	ds	11
  1237  0001B5                     _SPI2:
  1238                           	opt stack 0
  1239  0001B5                     	ds	11
  1240  0001C0                     _DIPSwitch:
  1241                           	opt stack 0
  1242  0001C0                     	ds	10
  1243  0001CA                     _PortA:
  1244                           	opt stack 0
  1245  0001CA                     	ds	10
  1246  0001D4                     _PortB:
  1247                           	opt stack 0
  1248  0001D4                     	ds	10
  1249  0001DE                     _PortG:
  1250                           	opt stack 0
  1251  0001DE                     	ds	10
  1252  0001E8                     _TestButton:
  1253                           	opt stack 0
  1254  0001E8                     	ds	10
  1255                           tblptru	equ	0xFF8
  1256                           tblptrh	equ	0xFF7
  1257                           tblptrl	equ	0xFF6
  1258                           tablat	equ	0xFF5
  1259                           postinc0	equ	0xFEE
  1260                           wreg	equ	0xFE8
  1261                           postdec1	equ	0xFE5
  1262                           fsr1h	equ	0xFE2
  1263                           fsr1l	equ	0xFE1
  1264                           
  1265                           	psect	dataBANK1
  1266  0001F2                     __pdataBANK1:
  1267                           	opt stack 0
  1268  0001F2                     Console_Render@F7900:
  1269                           	opt stack 0
  1270  0001F2                     	ds	4
  1271  0001F6                     _gLineSize:
  1272                           	opt stack 0
  1273  0001F6                     	ds	4
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           postdec1	equ	0xFE5
  1281                           fsr1h	equ	0xFE2
  1282                           fsr1l	equ	0xFE1
  1283                           
  1284                           	psect	bssBIGRAM
  1285  000210                     __pbssBIGRAM:
  1286                           	opt stack 0
  1287  000210                     _lBuffer:
  1288                           	opt stack 0
  1289  000210                     	ds	300
  1290                           tblptru	equ	0xFF8
  1291                           tblptrh	equ	0xFF7
  1292                           tblptrl	equ	0xFF6
  1293                           tablat	equ	0xFF5
  1294                           postinc0	equ	0xFEE
  1295                           wreg	equ	0xFE8
  1296                           postdec1	equ	0xFE5
  1297                           fsr1h	equ	0xFE2
  1298                           fsr1l	equ	0xFE1
  1299                           
  1300                           	psect	cstackBANK2
  1301  000200                     __pcstackBANK2:
  1302                           	opt stack 0
  1303  000200                     Port_CheckQuadType@Pair1:
  1304                           	opt stack 0
  1305                           
  1306                           ; 1 bytes @ 0x0
  1307  000200                     	ds	1
  1308  000201                     Port_CheckQuadType@Pair2:
  1309                           	opt stack 0
  1310                           
  1311                           ; 1 bytes @ 0x1
  1312  000201                     	ds	1
  1313  000202                     Port_CheckQuadType@Output:
  1314                           	opt stack 0
  1315                           
  1316                           ; 1 bytes @ 0x2
  1317  000202                     	ds	1
  1318  000203                     Port_CheckPortType@pInput:
  1319                           	opt stack 0
  1320  000203                     Port_SetQuadType@pInput:
  1321                           	opt stack 0
  1322                           
  1323                           ; 2 bytes @ 0x3
  1324  000203                     	ds	2
  1325  000205                     Port_CheckPortType@pDrive:
  1326                           	opt stack 0
  1327  000205                     Port_SetQuadType@pQuad:
  1328                           	opt stack 0
  1329                           
  1330                           ; 1 bytes @ 0x5
  1331  000205                     	ds	1
  1332  000206                     Port_SetQuadType@pType:
  1333                           	opt stack 0
  1334  000206                     Port_SetType@pInput:
  1335                           	opt stack 0
  1336                           
  1337                           ; 2 bytes @ 0x6
  1338  000206                     	ds	2
  1339  000208                     Port_SetType@pType:
  1340                           	opt stack 0
  1341                           
  1342                           ; 1 bytes @ 0x8
  1343  000208                     	ds	1
  1344  000209                     Port_SetType@Output:
  1345                           	opt stack 0
  1346                           
  1347                           ; 1 bytes @ 0x9
  1348  000209                     	ds	1
  1349  00020A                     Port_Init@pInput:
  1350                           	opt stack 0
  1351                           
  1352                           ; 2 bytes @ 0xA
  1353  00020A                     	ds	2
  1354  00020C                     Port_Init@pPort:
  1355                           	opt stack 0
  1356                           
  1357                           ; 1 bytes @ 0xC
  1358  00020C                     	ds	1
  1359  00020D                     ??_Port_Init:
  1360                           
  1361                           ; 1 bytes @ 0xD
  1362  00020D                     	ds	2
  1363  00020F                     Port_Init@i:
  1364                           	opt stack 0
  1365                           
  1366                           ; 1 bytes @ 0xF
  1367  00020F                     	ds	1
  1368                           tblptru	equ	0xFF8
  1369                           tblptrh	equ	0xFF7
  1370                           tblptrl	equ	0xFF6
  1371                           tablat	equ	0xFF5
  1372                           postinc0	equ	0xFEE
  1373                           wreg	equ	0xFE8
  1374                           postdec1	equ	0xFE5
  1375                           fsr1h	equ	0xFE2
  1376                           fsr1l	equ	0xFE1
  1377                           
  1378                           	psect	cstackBANK1
  1379  0001FA                     __pcstackBANK1:
  1380                           	opt stack 0
  1381  0001FA                     Port_CheckQuadType@pInput:
  1382                           	opt stack 0
  1383                           
  1384                           ; 2 bytes @ 0x0
  1385  0001FA                     	ds	2
  1386  0001FC                     Port_CheckQuadType@pQuad:
  1387                           	opt stack 0
  1388                           
  1389                           ; 1 bytes @ 0x2
  1390  0001FC                     	ds	1
  1391  0001FD                     Port_CheckQuadType@pDrive:
  1392                           	opt stack 0
  1393                           
  1394                           ; 1 bytes @ 0x3
  1395  0001FD                     	ds	1
  1396  0001FE                     ??_Port_SetType:
  1397                           
  1398                           ; 1 bytes @ 0x4
  1399  0001FE                     	ds	2
  1400                           tblptru	equ	0xFF8
  1401                           tblptrh	equ	0xFF7
  1402                           tblptrl	equ	0xFF6
  1403                           tablat	equ	0xFF5
  1404                           postinc0	equ	0xFEE
  1405                           wreg	equ	0xFE8
  1406                           postdec1	equ	0xFE5
  1407                           fsr1h	equ	0xFE2
  1408                           fsr1l	equ	0xFE1
  1409                           
  1410                           	psect	cstackBANK0
  1411  0000C8                     __pcstackBANK0:
  1412                           	opt stack 0
  1413  0000C8                     ?_GetPortProperties:
  1414                           	opt stack 0
  1415  0000C8                     ?_GetPortPORT:
  1416                           	opt stack 0
  1417  0000C8                     ?_GetPortTRIS:
  1418                           	opt stack 0
  1419  0000C8                     Byte_SetBit@pInput:
  1420                           	opt stack 0
  1421  0000C8                     Byte_SetZone@pInput:
  1422                           	opt stack 0
  1423  0000C8                     Byte_GetZone@pInput:
  1424                           	opt stack 0
  1425  0000C8                     Byte_SetByte@pInput:
  1426                           	opt stack 0
  1427  0000C8                     delay_ms@ms:
  1428                           	opt stack 0
  1429  0000C8                     delay_us@us:
  1430                           	opt stack 0
  1431  0000C8                     MXK_Queue@pCallback:
  1432                           	opt stack 0
  1433                           
  1434                           ; 3 bytes @ 0x0
  1435  0000C8                     	ds	2
  1436  0000CA                     GetPortProperties@pInput:
  1437                           	opt stack 0
  1438  0000CA                     GetPortPORT@pInput:
  1439                           	opt stack 0
  1440  0000CA                     GetPortTRIS@pInput:
  1441                           	opt stack 0
  1442  0000CA                     Byte_SetBit@pBit:
  1443                           	opt stack 0
  1444  0000CA                     Byte_SetZone@pMax:
  1445                           	opt stack 0
  1446  0000CA                     Byte_GetZone@pMax:
  1447                           	opt stack 0
  1448  0000CA                     Byte_SetByte@pValue:
  1449                           	opt stack 0
  1450  0000CA                     delay_ms@u:
  1451                           	opt stack 0
  1452  0000CA                     delay_us@u:
  1453                           	opt stack 0
  1454                           
  1455                           ; 4 bytes @ 0x2
  1456  0000CA                     	ds	1
  1457  0000CB                     Byte_SetBit@pValue:
  1458                           	opt stack 0
  1459  0000CB                     Byte_SetZone@pChunk:
  1460                           	opt stack 0
  1461  0000CB                     Byte_GetZone@pChunk:
  1462                           	opt stack 0
  1463                           
  1464                           ; 1 bytes @ 0x3
  1465  0000CB                     	ds	1
  1466  0000CC                     ??_Byte_SetBit:
  1467  0000CC                     Byte_SetZone@pChunkSize:
  1468                           	opt stack 0
  1469  0000CC                     Byte_GetZone@pChunkSize:
  1470                           	opt stack 0
  1471                           
  1472                           ; 1 bytes @ 0x4
  1473  0000CC                     	ds	1
  1474  0000CD                     ??_Byte_GetZone:
  1475  0000CD                     Byte_SetZone@pValue:
  1476                           	opt stack 0
  1477                           
  1478                           ; 1 bytes @ 0x5
  1479  0000CD                     	ds	1
  1480  0000CE                     ??_Byte_SetZone:
  1481  0000CE                     Byte_GetZone@MASK:
  1482                           	opt stack 0
  1483  0000CE                     MXK_BlockSwitchTo@CUR:
  1484                           	opt stack 0
  1485  0000CE                     MXK_SwitchTo@CUR:
  1486                           	opt stack 0
  1487                           
  1488                           ; 1 bytes @ 0x6
  1489  0000CE                     	ds	1
  1490  0000CF                     Byte_GetZone@Offset:
  1491                           	opt stack 0
  1492  0000CF                     MXK_BlockSwitchTo@pModule:
  1493                           	opt stack 0
  1494  0000CF                     MXK_SwitchTo@pModule:
  1495                           	opt stack 0
  1496                           
  1497                           ; 1 bytes @ 0x7
  1498  0000CF                     	ds	1
  1499  0000D0                     Byte_GetZone@Output:
  1500                           	opt stack 0
  1501                           
  1502                           ; 1 bytes @ 0x8
  1503  0000D0                     	ds	1
  1504  0000D1                     Byte_SetZone@Offset:
  1505                           	opt stack 0
  1506  0000D1                     Byte_GetPair@pInput:
  1507                           	opt stack 0
  1508                           
  1509                           ; 2 bytes @ 0x9
  1510  0000D1                     	ds	1
  1511  0000D2                     Byte_SetZone@MASK:
  1512                           	opt stack 0
  1513                           
  1514                           ; 1 bytes @ 0xA
  1515  0000D2                     	ds	1
  1516  0000D3                     Byte_GetPair@pPair:
  1517                           	opt stack 0
  1518  0000D3                     Byte_SetPair@pInput:
  1519                           	opt stack 0
  1520  0000D3                     Byte_SetQuad@pInput:
  1521                           	opt stack 0
  1522                           
  1523                           ; 2 bytes @ 0xB
  1524  0000D3                     	ds	1
  1525  0000D4                     Word_GetPair@pInput:
  1526                           	opt stack 0
  1527                           
  1528                           ; 2 bytes @ 0xC
  1529  0000D4                     	ds	1
  1530  0000D5                     Byte_SetPair@pPair:
  1531                           	opt stack 0
  1532  0000D5                     Byte_SetQuad@pQuad:
  1533                           	opt stack 0
  1534                           
  1535                           ; 1 bytes @ 0xD
  1536  0000D5                     	ds	1
  1537  0000D6                     Byte_SetPair@pValue:
  1538                           	opt stack 0
  1539  0000D6                     Byte_SetQuad@pValue:
  1540                           	opt stack 0
  1541  0000D6                     Word_GetPair@pPair:
  1542                           	opt stack 0
  1543                           
  1544                           ; 1 bytes @ 0xE
  1545  0000D6                     	ds	1
  1546  0000D7                     Port_SetPin@pInput:
  1547                           	opt stack 0
  1548  0000D7                     Port_Set@pInput:
  1549                           	opt stack 0
  1550  0000D7                     Word_SetPair@pInput:
  1551                           	opt stack 0
  1552  0000D7                     PortProperty_Valid@pInput:
  1553                           	opt stack 0
  1554                           
  1555                           ; 2 bytes @ 0xF
  1556  0000D7                     	ds	2
  1557  0000D9                     Port_SetPin@pPin:
  1558                           	opt stack 0
  1559  0000D9                     Port_Set@pValue:
  1560                           	opt stack 0
  1561  0000D9                     Word_SetPair@pPair:
  1562                           	opt stack 0
  1563  0000D9                     PortProperty_Valid@pPinDrive:
  1564                           	opt stack 0
  1565                           
  1566                           ; 1 bytes @ 0x11
  1567  0000D9                     	ds	1
  1568  0000DA                     ??_Port_Set:
  1569  0000DA                     Port_SetPin@pValue:
  1570                           	opt stack 0
  1571  0000DA                     Word_SetPair@pValue:
  1572                           	opt stack 0
  1573  0000DA                     PortProperty_Valid@pPin:
  1574                           	opt stack 0
  1575                           
  1576                           ; 1 bytes @ 0x12
  1577  0000DA                     	ds	1
  1578  0000DB                     ??_PortProperty_Valid:
  1579  0000DB                     Port_SetPin@Type:
  1580                           	opt stack 0
  1581                           
  1582                           ; 1 bytes @ 0x13
  1583  0000DB                     	ds	1
  1584  0000DC                     LED_Set@pValue:
  1585                           	opt stack 0
  1586                           
  1587                           ; 1 bytes @ 0x14
  1588  0000DC                     	ds	1
  1589  0000DD                     LED_Set@pLED:
  1590                           	opt stack 0
  1591  0000DD                     PortProperty_Valid@Errors:
  1592                           	opt stack 0
  1593                           
  1594                           ; 16 bytes @ 0x15
  1595  0000DD                     	ds	1
  1596  0000DE                     
  1597                           ; 1 bytes @ 0x16
  1598  0000DE                     	ds	12
  1599  0000EA                     Port_Set@TypeRequired:
  1600                           	opt stack 0
  1601                           
  1602                           ; 2 bytes @ 0x22
  1603  0000EA                     	ds	2
  1604  0000EC                     Port_Set@TypeActual:
  1605                           	opt stack 0
  1606                           
  1607                           ; 2 bytes @ 0x24
  1608  0000EC                     	ds	1
  1609  0000ED                     PortProperty_Valid@Pair:
  1610                           	opt stack 0
  1611                           
  1612                           ; 1 bytes @ 0x25
  1613  0000ED                     	ds	1
  1614  0000EE                     Port_Set@Type:
  1615                           	opt stack 0
  1616  0000EE                     Port_CheckPairType@pInput:
  1617                           	opt stack 0
  1618  0000EE                     Port_SetPinType@pInput:
  1619                           	opt stack 0
  1620                           
  1621                           ; 2 bytes @ 0x26
  1622  0000EE                     	ds	2
  1623  0000F0                     Port_CheckPairType@pPair:
  1624                           	opt stack 0
  1625  0000F0                     Port_SetPinType@pPin:
  1626                           	opt stack 0
  1627                           
  1628                           ; 1 bytes @ 0x28
  1629  0000F0                     	ds	1
  1630  0000F1                     Port_CheckPairType@pDrive:
  1631                           	opt stack 0
  1632  0000F1                     Port_SetPinType@pType:
  1633                           	opt stack 0
  1634                           
  1635                           ; 1 bytes @ 0x29
  1636  0000F1                     	ds	1
  1637  0000F2                     Port_CheckPairType@Pin1:
  1638                           	opt stack 0
  1639  0000F2                     Port_SetPinType@Output:
  1640                           	opt stack 0
  1641                           
  1642                           ; 1 bytes @ 0x2A
  1643  0000F2                     	ds	1
  1644  0000F3                     Port_CheckPairType@Pin2:
  1645                           	opt stack 0
  1646  0000F3                     Port_SetPinType@Props:
  1647                           	opt stack 0
  1648                           
  1649                           ; 2 bytes @ 0x2B
  1650  0000F3                     	ds	1
  1651  0000F4                     Port_CheckPairType@Output:
  1652                           	opt stack 0
  1653                           
  1654                           ; 1 bytes @ 0x2C
  1655  0000F4                     	ds	1
  1656  0000F5                     LED_Init@pLED:
  1657                           	opt stack 0
  1658  0000F5                     Port_CheckPairType@Props:
  1659                           	opt stack 0
  1660                           
  1661                           ; 2 bytes @ 0x2D
  1662  0000F5                     	ds	2
  1663  0000F7                     Port_CheckPortType@Output:
  1664                           	opt stack 0
  1665  0000F7                     Port_SetQuadType@Output:
  1666                           	opt stack 0
  1667                           
  1668                           ; 1 bytes @ 0x2F
  1669  0000F7                     	ds	1
  1670  0000F8                     tblptru	equ	0xFF8
  1671                           tblptrh	equ	0xFF7
  1672                           tblptrl	equ	0xFF6
  1673                           tablat	equ	0xFF5
  1674                           postinc0	equ	0xFEE
  1675                           wreg	equ	0xFE8
  1676                           postdec1	equ	0xFE5
  1677                           fsr1h	equ	0xFE2
  1678                           fsr1l	equ	0xFE1
  1679                           
  1680                           ; 1 bytes @ 0x30
  1681                           
  1682                           	psect	cstackCOMRAM
  1683  000001                     __pcstackCOMRAM:
  1684                           	opt stack 0
  1685  000001                     i2Byte_SetBit@pInput:
  1686                           	opt stack 0
  1687  000001                     i2Byte_GetZone@pInput:
  1688                           	opt stack 0
  1689  000001                     i2delay_us@us:
  1690                           	opt stack 0
  1691  000001                     i2MXK_Queue@pCallback:
  1692                           	opt stack 0
  1693                           
  1694                           ; 3 bytes @ 0x0
  1695  000001                     	ds	2
  1696  000003                     i2Byte_SetBit@pBit:
  1697                           	opt stack 0
  1698  000003                     i2Byte_GetZone@pMax:
  1699                           	opt stack 0
  1700  000003                     i2delay_us@u:
  1701                           	opt stack 0
  1702                           
  1703                           ; 4 bytes @ 0x2
  1704  000003                     	ds	1
  1705  000004                     i2Byte_SetBit@pValue:
  1706                           	opt stack 0
  1707  000004                     i2Byte_GetZone@pChunk:
  1708                           	opt stack 0
  1709                           
  1710                           ; 1 bytes @ 0x3
  1711  000004                     	ds	1
  1712  000005                     ??i2_Byte_SetBit:
  1713  000005                     i2Byte_GetZone@pChunkSize:
  1714                           	opt stack 0
  1715                           
  1716                           ; 1 bytes @ 0x4
  1717  000005                     	ds	1
  1718  000006                     ??i2_Byte_GetZone:
  1719                           
  1720                           ; 1 bytes @ 0x5
  1721  000006                     	ds	1
  1722  000007                     i2Byte_GetZone@MASK:
  1723                           	opt stack 0
  1724  000007                     i2MXK_SwitchTo@CUR:
  1725                           	opt stack 0
  1726                           
  1727                           ; 1 bytes @ 0x6
  1728  000007                     	ds	1
  1729  000008                     i2Byte_GetZone@Offset:
  1730                           	opt stack 0
  1731  000008                     i2MXK_SwitchTo@pModule:
  1732                           	opt stack 0
  1733                           
  1734                           ; 1 bytes @ 0x7
  1735  000008                     	ds	1
  1736  000009                     i2Byte_GetZone@Output:
  1737                           	opt stack 0
  1738                           
  1739                           ; 1 bytes @ 0x8
  1740  000009                     	ds	1
  1741  00000A                     i2Byte_GetPair@pInput:
  1742                           	opt stack 0
  1743                           
  1744                           ; 2 bytes @ 0x9
  1745  00000A                     	ds	2
  1746  00000C                     i2Byte_GetPair@pPair:
  1747                           	opt stack 0
  1748                           
  1749                           ; 1 bytes @ 0xB
  1750  00000C                     	ds	1
  1751  00000D                     i2Word_GetPair@pInput:
  1752                           	opt stack 0
  1753                           
  1754                           ; 2 bytes @ 0xC
  1755  00000D                     	ds	2
  1756  00000F                     i2Word_GetPair@pPair:
  1757                           	opt stack 0
  1758                           
  1759                           ; 1 bytes @ 0xE
  1760  00000F                     	ds	1
  1761  000010                     i2Port_SetPin@pInput:
  1762                           	opt stack 0
  1763                           
  1764                           ; 2 bytes @ 0xF
  1765  000010                     	ds	2
  1766  000012                     i2Port_SetPin@pPin:
  1767                           	opt stack 0
  1768                           
  1769                           ; 1 bytes @ 0x11
  1770  000012                     	ds	1
  1771  000013                     i2Port_SetPin@pValue:
  1772                           	opt stack 0
  1773                           
  1774                           ; 1 bytes @ 0x12
  1775  000013                     	ds	1
  1776  000014                     i2Port_SetPin@Type:
  1777                           	opt stack 0
  1778                           
  1779                           ; 1 bytes @ 0x13
  1780  000014                     	ds	1
  1781  000015                     
  1782                           ; 1 bytes @ 0x14
  1783  000015                     	ds	2
  1784  000017                     ??_ISR_Function:
  1785                           
  1786                           ; 1 bytes @ 0x16
  1787  000017                     	ds	14
  1788                           tblptru	equ	0xFF8
  1789                           tblptrh	equ	0xFF7
  1790                           tblptrl	equ	0xFF6
  1791                           tablat	equ	0xFF5
  1792                           postinc0	equ	0xFEE
  1793                           wreg	equ	0xFE8
  1794                           postdec1	equ	0xFE5
  1795                           fsr1h	equ	0xFE2
  1796                           fsr1l	equ	0xFE1
  1797                           
  1798 ;;
  1799 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1800 ;;
  1801 ;; *************** function _main *****************
  1802 ;; Defined at:
  1803 ;;		line 22 in file "main.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;		None
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;Total ram usage:        0 bytes
  1822 ;; Hardware stack levels required when called:   17
  1823 ;; This function calls:
  1824 ;;		_MXK_BlockSwitchTo
  1825 ;;		_MXK_Dequeue
  1826 ;;		_MXK_Init
  1827 ;;		_MXK_Release
  1828 ;; This function is called by:
  1829 ;;		Startup code after reset
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text0
  1834  01147C                     __ptext0:
  1835                           	opt stack 0
  1836  01147C                     _main:
  1837                           	opt stack 14
  1838                           
  1839                           ;main.c: 28: MXK_Init();
  1840                           
  1841                           ;incstack = 0
  1842  01147C  ECC6  F085         	call	_MXK_Init	;wreg free
  1843                           
  1844                           ;main.c: 31: if (MXK_BlockSwitchTo(eMXK_HMI)) {
  1845  011480  0E01               	movlw	1
  1846  011482  EC0F  F08D         	call	_MXK_BlockSwitchTo
  1847  011486  0900               	iorlw	0
  1848  011488  B4D8               	btfsc	status,2,c
  1849  01148A  D006               	goto	l10300
  1850                           
  1851                           ;main.c: 34: if (MXK_Release())
  1852  01148C  ECCE  F08D         	call	_MXK_Release	;wreg free
  1853  011490  0900               	iorlw	0
  1854  011492  A4D8               	btfss	status,2,c
  1855                           
  1856                           ;main.c: 35: MXK_Dequeue();
  1857  011494  EC49  F08D         	call	_MXK_Dequeue	;wreg free
  1858  011498                     l10300:
  1859                           
  1860                           ;main.c: 36: }
  1861                           ;main.c: 39: if (MXK_BlockSwitchTo(eMXK_HMI))
  1862  011498  0E01               	movlw	1
  1863  01149A  EC0F  F08D         	call	_MXK_BlockSwitchTo
  1864  01149E  0900               	iorlw	0
  1865  0114A0  B4D8               	btfsc	status,2,c
  1866  0114A2  D006               	goto	l10306
  1867                           
  1868                           ;main.c: 40: {
  1869                           ;main.c: 43: if (MXK_Release())
  1870  0114A4  ECCE  F08D         	call	_MXK_Release	;wreg free
  1871  0114A8  0900               	iorlw	0
  1872  0114AA  A4D8               	btfss	status,2,c
  1873                           
  1874                           ;main.c: 44: MXK_Dequeue();
  1875  0114AC  EC49  F08D         	call	_MXK_Dequeue	;wreg free
  1876  0114B0                     l10306:
  1877                           
  1878                           ;main.c: 54: {
  1879                           ;main.c: 56: if (MXK_BlockSwitchTo(eMXK_HMI)) {
  1880  0114B0  0E01               	movlw	1
  1881  0114B2  EC0F  F08D         	call	_MXK_BlockSwitchTo
  1882  0114B6  0900               	iorlw	0
  1883  0114B8  B4D8               	btfsc	status,2,c
  1884  0114BA  D006               	goto	l10312
  1885                           
  1886                           ;main.c: 59: if (MXK_Release())
  1887  0114BC  ECCE  F08D         	call	_MXK_Release	;wreg free
  1888  0114C0  0900               	iorlw	0
  1889  0114C2  A4D8               	btfss	status,2,c
  1890                           
  1891                           ;main.c: 60: MXK_Dequeue();
  1892  0114C4  EC49  F08D         	call	_MXK_Dequeue	;wreg free
  1893  0114C8                     l10312:
  1894                           
  1895                           ;main.c: 61: }
  1896                           ;main.c: 64: if (MXK_BlockSwitchTo(eMXK_HMI)) {
  1897  0114C8  0E01               	movlw	1
  1898  0114CA  EC0F  F08D         	call	_MXK_BlockSwitchTo
  1899  0114CE  0900               	iorlw	0
  1900  0114D0  B4D8               	btfsc	status,2,c
  1901  0114D2  D006               	goto	l10318
  1902                           
  1903                           ;main.c: 67: if (MXK_Release())
  1904  0114D4  ECCE  F08D         	call	_MXK_Release	;wreg free
  1905  0114D8  0900               	iorlw	0
  1906  0114DA  A4D8               	btfss	status,2,c
  1907                           
  1908                           ;main.c: 68: MXK_Dequeue();
  1909  0114DC  EC49  F08D         	call	_MXK_Dequeue	;wreg free
  1910  0114E0                     l10318:
  1911                           
  1912                           ;main.c: 69: }
  1913                           ;main.c: 72: if (MXK_BlockSwitchTo(eMXK_HMI)) {
  1914  0114E0  0E01               	movlw	1
  1915  0114E2  EC0F  F08D         	call	_MXK_BlockSwitchTo
  1916  0114E6  0900               	iorlw	0
  1917  0114E8  B4D8               	btfsc	status,2,c
  1918  0114EA  D7E2               	goto	l10306
  1919                           
  1920                           ;main.c: 79: if (MXK_Release())
  1921  0114EC  ECCE  F08D         	call	_MXK_Release	;wreg free
  1922  0114F0  0900               	iorlw	0
  1923  0114F2  B4D8               	btfsc	status,2,c
  1924  0114F4  D7DD               	goto	l10306
  1925                           
  1926                           ;main.c: 80: MXK_Dequeue();
  1927  0114F6  EC49  F08D         	call	_MXK_Dequeue	;wreg free
  1928                           
  1929                           ;main.c: 81: }
  1930                           ;main.c: 82: }
  1931  0114FA  D7DA               	goto	l10306
  1932  0114FC                     __end_of_main:
  1933                           	opt stack 0
  1934                           tblptru	equ	0xFF8
  1935                           tblptrh	equ	0xFF7
  1936                           tblptrl	equ	0xFF6
  1937                           tablat	equ	0xFF5
  1938                           postinc0	equ	0xFEE
  1939                           wreg	equ	0xFE8
  1940                           postdec1	equ	0xFE5
  1941                           fsr1h	equ	0xFE2
  1942                           fsr1l	equ	0xFE1
  1943                           status	equ	0xFD8
  1944                           
  1945 ;; *************** function _MXK_Init *****************
  1946 ;; Defined at:
  1947 ;;		line 33 in file "Library/MXK.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;Total ram usage:        0 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:   16
  1968 ;; This function calls:
  1969 ;;		_LED_Init
  1970 ;;		_Port_Init
  1971 ;;		_Port_SetPin
  1972 ;;		_Port_SetPinType
  1973 ;;		_Port_SetQuadType
  1974 ;;		_Port_SetType
  1975 ;;		_delay_ms
  1976 ;; This function is called by:
  1977 ;;		_main
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text1
  1982  010B8C                     __ptext1:
  1983                           	opt stack 0
  1984  010B8C                     _MXK_Init:
  1985                           	opt stack 14
  1986                           
  1987                           ;MXK.c: 35: Bus_State = eMXK_Idle;
  1988                           
  1989                           ;incstack = 0
  1990  010B8C  0E01               	movlw	1
  1991  010B8E  6E44               	movwf	_Bus_State,c
  1992                           
  1993                           ;MXK.c: 36: lQueue = (Function)0;
  1994  010B90  0E00               	movlw	0
  1995  010B92  6E25               	movwf	_lQueue,c	;volatile
  1996  010B94  0E00               	movlw	0
  1997  010B96  6E26               	movwf	_lQueue+1,c	;volatile
  1998  010B98  0E00               	movlw	0
  1999  010B9A  6E27               	movwf	_lQueue+2,c	;volatile
  2000                           
  2001                           ;MXK.c: 38: Port_Init(&PortA, ePortA);
  2002  010B9C  0ECA               	movlw	low _PortA
  2003  010B9E  0102               	movlb	2	; () banked
  2004  010BA0  6F0A               	movwf	Port_Init@pInput& (0+255),b
  2005  010BA2  0E01               	movlw	high _PortA
  2006  010BA4  0102               	movlb	2	; () banked
  2007  010BA6  6F0B               	movwf	(Port_Init@pInput+1)& (0+255),b
  2008  010BA8  0E00               	movlw	0
  2009  010BAA  0102               	movlb	2	; () banked
  2010  010BAC  6F0C               	movwf	Port_Init@pPort& (0+255),b
  2011  010BAE  ECFD  F084         	call	_Port_Init	;wreg free
  2012                           
  2013                           ;MXK.c: 39: Port_Init(&PortB, ePortB);
  2014  010BB2  0ED4               	movlw	low _PortB
  2015  010BB4  0102               	movlb	2	; () banked
  2016  010BB6  6F0A               	movwf	Port_Init@pInput& (0+255),b
  2017  010BB8  0E01               	movlw	high _PortB
  2018  010BBA  0102               	movlb	2	; () banked
  2019  010BBC  6F0B               	movwf	(Port_Init@pInput+1)& (0+255),b
  2020  010BBE  0E01               	movlw	1
  2021  010BC0  0102               	movlb	2	; () banked
  2022  010BC2  6F0C               	movwf	Port_Init@pPort& (0+255),b
  2023  010BC4  ECFD  F084         	call	_Port_Init	;wreg free
  2024                           
  2025                           ;MXK.c: 40: Port_Init(&PortC, ePortC);
  2026  010BC8  0E76               	movlw	low _PortC
  2027  010BCA  0102               	movlb	2	; () banked
  2028  010BCC  6F0A               	movwf	Port_Init@pInput& (0+255),b
  2029  010BCE  0E00               	movlw	high _PortC
  2030  010BD0  0102               	movlb	2	; () banked
  2031  010BD2  6F0B               	movwf	(Port_Init@pInput+1)& (0+255),b
  2032  010BD4  0E02               	movlw	2
  2033  010BD6  0102               	movlb	2	; () banked
  2034  010BD8  6F0C               	movwf	Port_Init@pPort& (0+255),b
  2035  010BDA  ECFD  F084         	call	_Port_Init	;wreg free
  2036                           
  2037                           ;MXK.c: 41: Port_Init(&PortD, ePortD);
  2038  010BDE  0E80               	movlw	low _PortD
  2039  010BE0  0102               	movlb	2	; () banked
  2040  010BE2  6F0A               	movwf	Port_Init@pInput& (0+255),b
  2041  010BE4  0E00               	movlw	high _PortD
  2042  010BE6  0102               	movlb	2	; () banked
  2043  010BE8  6F0B               	movwf	(Port_Init@pInput+1)& (0+255),b
  2044  010BEA  0E03               	movlw	3
  2045  010BEC  0102               	movlb	2	; () banked
  2046  010BEE  6F0C               	movwf	Port_Init@pPort& (0+255),b
  2047  010BF0  ECFD  F084         	call	_Port_Init	;wreg free
  2048                           
  2049                           ;MXK.c: 42: Port_Init(&PortE, ePortE);
  2050  010BF4  0E8A               	movlw	low _PortE
  2051  010BF6  0102               	movlb	2	; () banked
  2052  010BF8  6F0A               	movwf	Port_Init@pInput& (0+255),b
  2053  010BFA  0E00               	movlw	high _PortE
  2054  010BFC  0102               	movlb	2	; () banked
  2055  010BFE  6F0B               	movwf	(Port_Init@pInput+1)& (0+255),b
  2056  010C00  0E04               	movlw	4
  2057  010C02  0102               	movlb	2	; () banked
  2058  010C04  6F0C               	movwf	Port_Init@pPort& (0+255),b
  2059  010C06  ECFD  F084         	call	_Port_Init	;wreg free
  2060                           
  2061                           ;MXK.c: 43: Port_Init(&PortF, ePortF);
  2062  010C0A  0E94               	movlw	low _PortF
  2063  010C0C  0102               	movlb	2	; () banked
  2064  010C0E  6F0A               	movwf	Port_Init@pInput& (0+255),b
  2065  010C10  0E00               	movlw	high _PortF
  2066  010C12  0102               	movlb	2	; () banked
  2067  010C14  6F0B               	movwf	(Port_Init@pInput+1)& (0+255),b
  2068  010C16  0E05               	movlw	5
  2069  010C18  0102               	movlb	2	; () banked
  2070  010C1A  6F0C               	movwf	Port_Init@pPort& (0+255),b
  2071  010C1C  ECFD  F084         	call	_Port_Init	;wreg free
  2072                           
  2073                           ;MXK.c: 44: Port_Init(&PortG, ePortG);
  2074  010C20  0EDE               	movlw	low _PortG
  2075  010C22  0102               	movlb	2	; () banked
  2076  010C24  6F0A               	movwf	Port_Init@pInput& (0+255),b
  2077  010C26  0E01               	movlw	high _PortG
  2078  010C28  0102               	movlb	2	; () banked
  2079  010C2A  6F0B               	movwf	(Port_Init@pInput+1)& (0+255),b
  2080  010C2C  0E06               	movlw	6
  2081  010C2E  0102               	movlb	2	; () banked
  2082  010C30  6F0C               	movwf	Port_Init@pPort& (0+255),b
  2083  010C32  ECFD  F084         	call	_Port_Init	;wreg free
  2084                           
  2085                           ;MXK.c: 46: Port_SetPinType (&PortF, eP5, eTypeInput);
  2086  010C36  0E94               	movlw	low _PortF
  2087  010C38  0100               	movlb	0	; () banked
  2088  010C3A  6FEE               	movwf	Port_SetPinType@pInput& (0+255),b
  2089  010C3C  0E00               	movlw	high _PortF
  2090  010C3E  0100               	movlb	0	; () banked
  2091  010C40  6FEF               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  2092  010C42  0E05               	movlw	5
  2093  010C44  0100               	movlb	0	; () banked
  2094  010C46  6FF0               	movwf	Port_SetPinType@pPin& (0+255),b
  2095  010C48  0E00               	movlw	0
  2096  010C4A  0100               	movlb	0	; () banked
  2097  010C4C  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2098  010C4E  EC1D  F084         	call	_Port_SetPinType	;wreg free
  2099                           
  2100                           ;MXK.c: 47: Port_SetQuadType (&PortB, eP0_3, eTypeInput);
  2101  010C52  0ED4               	movlw	low _PortB
  2102  010C54  0102               	movlb	2	; () banked
  2103  010C56  6F03               	movwf	Port_SetQuadType@pInput& (0+255),b
  2104  010C58  0E01               	movlw	high _PortB
  2105  010C5A  0102               	movlb	2	; () banked
  2106  010C5C  6F04               	movwf	(Port_SetQuadType@pInput+1)& (0+255),b
  2107  010C5E  0E00               	movlw	0
  2108  010C60  0102               	movlb	2	; () banked
  2109  010C62  6F05               	movwf	Port_SetQuadType@pQuad& (0+255),b
  2110  010C64  0E00               	movlw	0
  2111  010C66  0102               	movlb	2	; () banked
  2112  010C68  6F06               	movwf	Port_SetQuadType@pType& (0+255),b
  2113  010C6A  ECDD  F081         	call	_Port_SetQuadType	;wreg free
  2114                           
  2115                           ;MXK.c: 48: Port_SetPinType (&PortF, eP6, eTypeOutputPushPull);
  2116  010C6E  0E94               	movlw	low _PortF
  2117  010C70  0100               	movlb	0	; () banked
  2118  010C72  6FEE               	movwf	Port_SetPinType@pInput& (0+255),b
  2119  010C74  0E00               	movlw	high _PortF
  2120  010C76  0100               	movlb	0	; () banked
  2121  010C78  6FEF               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  2122  010C7A  0E06               	movlw	6
  2123  010C7C  0100               	movlb	0	; () banked
  2124  010C7E  6FF0               	movwf	Port_SetPinType@pPin& (0+255),b
  2125  010C80  0E03               	movlw	3
  2126  010C82  0100               	movlb	0	; () banked
  2127  010C84  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2128  010C86  EC1D  F084         	call	_Port_SetPinType	;wreg free
  2129                           
  2130                           ;MXK.c: 49: Port_SetType (&PortG, eTypeOutputPushPull);
  2131  010C8A  0EDE               	movlw	low _PortG
  2132  010C8C  0102               	movlb	2	; () banked
  2133  010C8E  6F06               	movwf	Port_SetType@pInput& (0+255),b
  2134  010C90  0E01               	movlw	high _PortG
  2135  010C92  0102               	movlb	2	; () banked
  2136  010C94  6F07               	movwf	(Port_SetType@pInput+1)& (0+255),b
  2137  010C96  0E03               	movlw	3
  2138  010C98  0102               	movlb	2	; () banked
  2139  010C9A  6F08               	movwf	Port_SetType@pType& (0+255),b
  2140  010C9C  EC08  F083         	call	_Port_SetType	;wreg free
  2141                           
  2142                           ;MXK.c: 51: Port_SetPin(&PortG, eP4, 0);
  2143  010CA0  0EDE               	movlw	low _PortG
  2144  010CA2  0100               	movlb	0	; () banked
  2145  010CA4  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  2146  010CA6  0E01               	movlw	high _PortG
  2147  010CA8  0100               	movlb	0	; () banked
  2148  010CAA  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  2149  010CAC  0E04               	movlw	4
  2150  010CAE  0100               	movlb	0	; () banked
  2151  010CB0  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  2152  010CB2  0E00               	movlw	0
  2153  010CB4  0100               	movlb	0	; () banked
  2154  010CB6  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  2155  010CB8  EC94  F087         	call	_Port_SetPin	;wreg free
  2156                           
  2157                           ;MXK.c: 52: Port_SetPin(&PortF, eP6,1);
  2158  010CBC  0E94               	movlw	low _PortF
  2159  010CBE  0100               	movlb	0	; () banked
  2160  010CC0  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  2161  010CC2  0E00               	movlw	high _PortF
  2162  010CC4  0100               	movlb	0	; () banked
  2163  010CC6  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  2164  010CC8  0E06               	movlw	6
  2165  010CCA  0100               	movlb	0	; () banked
  2166  010CCC  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  2167  010CCE  0E01               	movlw	1
  2168  010CD0  0100               	movlb	0	; () banked
  2169  010CD2  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  2170  010CD4  EC94  F087         	call	_Port_SetPin	;wreg free
  2171                           
  2172                           ;MXK.c: 55: LED_Init(eLED1);
  2173  010CD8  0E00               	movlw	0
  2174  010CDA  EC93  F08B         	call	_LED_Init
  2175                           
  2176                           ;MXK.c: 56: LED_Init(eLED2);
  2177  010CDE  0E01               	movlw	1
  2178  010CE0  EC93  F08B         	call	_LED_Init
  2179                           
  2180                           ;MXK.c: 58: PIR1 = 0;
  2181  010CE4  0E00               	movlw	0
  2182  010CE6  6E9E               	movwf	3998,c	;volatile
  2183                           
  2184                           ;MXK.c: 59: PIR2 = 0;
  2185  010CE8  0E00               	movlw	0
  2186  010CEA  6EA1               	movwf	4001,c	;volatile
  2187                           
  2188                           ;MXK.c: 60: PIR3 = 0;
  2189  010CEC  0E00               	movlw	0
  2190  010CEE  6EA4               	movwf	4004,c	;volatile
  2191                           
  2192                           ;MXK.c: 62: OSCTUNEbits.INTSRC = 1;
  2193  010CF0  8E9B               	bsf	3995,7,c	;volatile
  2194                           
  2195                           ;MXK.c: 63: OSCTUNEbits.PLLEN = 1;
  2196  010CF2  8C9B               	bsf	3995,6,c	;volatile
  2197                           
  2198                           ;MXK.c: 66: delay_ms(100);
  2199  010CF4  0E00               	movlw	0
  2200  010CF6  0100               	movlb	0	; () banked
  2201  010CF8  6FC9               	movwf	(delay_ms@ms+1)& (0+255),b
  2202  010CFA  0E64               	movlw	100
  2203  010CFC  6FC8               	movwf	delay_ms@ms& (0+255),b
  2204  010CFE  ECF7  F08A         	call	_delay_ms	;wreg free
  2205                           
  2206                           ;MXK.c: 68: RCONbits.IPEN = 1;
  2207  010D02  8ED0               	bsf	4048,7,c	;volatile
  2208  010D04  0012               	return		;funcret
  2209  010D06                     __end_of_MXK_Init:
  2210                           	opt stack 0
  2211                           tblptru	equ	0xFF8
  2212                           tblptrh	equ	0xFF7
  2213                           tblptrl	equ	0xFF6
  2214                           tablat	equ	0xFF5
  2215                           postinc0	equ	0xFEE
  2216                           wreg	equ	0xFE8
  2217                           postdec1	equ	0xFE5
  2218                           fsr1h	equ	0xFE2
  2219                           fsr1l	equ	0xFE1
  2220                           status	equ	0xFD8
  2221                           
  2222 ;; *************** function _delay_ms *****************
  2223 ;; Defined at:
  2224 ;;		line 240 in file "Library/Types.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  ms              2    0[BANK0 ] unsigned short 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  u               4    2[BANK0 ] volatile unsigned long 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2238 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;Total ram usage:        6 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    7
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_MXK_Init
  2249 ;;		_LCD_Reset
  2250 ;;		_LCD_Init
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text2
  2255  0115EE                     __ptext2:
  2256                           	opt stack 0
  2257  0115EE                     _delay_ms:
  2258                           	opt stack 22
  2259                           
  2260                           ;Types.c: 242: volatile unsigned long u;
  2261                           ;Types.c: 243: while (ms--)
  2262                           
  2263                           ;incstack = 0
  2264  0115EE  D01F               	goto	l9556
  2265  0115F0                     l9548:
  2266                           
  2267                           ;Types.c: 244: {
  2268                           ;Types.c: 246: for (u = 0; u < (((48*1000000L) / 4000UL) / 10UL); u++) {
  2269  0115F0  0E00               	movlw	0
  2270  0115F2  0100               	movlb	0	; () banked
  2271  0115F4  6FCA               	movwf	delay_ms@u& (0+255),b	;volatile
  2272  0115F6  0E00               	movlw	0
  2273  0115F8  6FCB               	movwf	(delay_ms@u+1)& (0+255),b	;volatile
  2274  0115FA  0E00               	movlw	0
  2275  0115FC  6FCC               	movwf	(delay_ms@u+2)& (0+255),b	;volatile
  2276  0115FE  0E00               	movlw	0
  2277  011600  6FCD               	movwf	(delay_ms@u+3)& (0+255),b	;volatile
  2278  011602                     l9550:
  2279                           
  2280                           ; BSR set to: 0
  2281  011602  0100               	movlb	0	; () banked
  2282  011604  51CD               	movf	(delay_ms@u+3)& (0+255),w,b	;volatile
  2283  011606  0100               	movlb	0	; () banked
  2284  011608  11CC               	iorwf	(delay_ms@u+2)& (0+255),w,b	;volatile
  2285  01160A  E111               	bnz	l9556
  2286  01160C  0EB0               	movlw	176
  2287  01160E  0100               	movlb	0	; () banked
  2288  011610  5DCA               	subwf	delay_ms@u& (0+255),w,b	;volatile
  2289  011612  0E04               	movlw	4
  2290  011614  0100               	movlb	0	; () banked
  2291  011616  59CB               	subwfb	(delay_ms@u+1)& (0+255),w,b	;volatile
  2292  011618  B0D8               	btfsc	status,0,c
  2293  01161A  D009               	goto	l9556
  2294                           
  2295                           ; BSR set to: 0
  2296                           
  2297                           ; BSR set to: 0
  2298  01161C  F000               	nop		; ;# 
  2299  01161E  0E01               	movlw	1
  2300  011620  0100               	movlb	0	; () banked
  2301  011622  27CA               	addwf	delay_ms@u& (0+255),f,b	;volatile
  2302  011624  0E00               	movlw	0
  2303  011626  23CB               	addwfc	(delay_ms@u+1)& (0+255),f,b	;volatile
  2304  011628  23CC               	addwfc	(delay_ms@u+2)& (0+255),f,b	;volatile
  2305  01162A  23CD               	addwfc	(delay_ms@u+3)& (0+255),f,b	;volatile
  2306  01162C  D7EA               	goto	l9550
  2307  01162E                     l9556:
  2308  01162E  0100               	movlb	0	; () banked
  2309  011630  07C8               	decf	delay_ms@ms& (0+255),f,b
  2310  011632  A0D8               	btfss	status,0,c
  2311  011634  07C9               	decf	(delay_ms@ms+1)& (0+255),f,b
  2312  011636  0100               	movlb	0	; () banked
  2313  011638  29C8               	incf	delay_ms@ms& (0+255),w,b
  2314  01163A  E1DA               	bnz	l9548
  2315  01163C  0100               	movlb	0	; () banked
  2316  01163E  29C9               	incf	(delay_ms@ms+1)& (0+255),w,b
  2317  011640  A4D8               	btfss	status,2,c
  2318  011642  D7D6               	goto	l9548
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;Types.c: 251: }
  2322                           ;Types.c: 252: }
  2323                           ;Types.c: 253: u = 0x8008;
  2324                           
  2325                           ; BSR set to: 0
  2326  011644  0E08               	movlw	8
  2327  011646  0100               	movlb	0	; () banked
  2328  011648  6FCA               	movwf	delay_ms@u& (0+255),b	;volatile
  2329  01164A  0E80               	movlw	128
  2330  01164C  6FCB               	movwf	(delay_ms@u+1)& (0+255),b	;volatile
  2331  01164E  0E00               	movlw	0
  2332  011650  6FCC               	movwf	(delay_ms@u+2)& (0+255),b	;volatile
  2333  011652  0E00               	movlw	0
  2334  011654  6FCD               	movwf	(delay_ms@u+3)& (0+255),b	;volatile
  2335                           
  2336                           ; BSR set to: 0
  2337  011656  0012               	return		;funcret
  2338  011658                     __end_of_delay_ms:
  2339                           	opt stack 0
  2340                           tblptru	equ	0xFF8
  2341                           tblptrh	equ	0xFF7
  2342                           tblptrl	equ	0xFF6
  2343                           tablat	equ	0xFF5
  2344                           postinc0	equ	0xFEE
  2345                           wreg	equ	0xFE8
  2346                           postdec1	equ	0xFE5
  2347                           fsr1h	equ	0xFE2
  2348                           fsr1l	equ	0xFE1
  2349                           status	equ	0xFD8
  2350                           
  2351 ;; *************** function _Port_SetQuadType *****************
  2352 ;; Defined at:
  2353 ;;		line 399 in file "Library/Port.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  pInput          2    3[BANK2 ] const PTR struct Port
  2356 ;;		 -> PortB(10), PortD(10), 
  2357 ;;  pQuad           1    5[BANK2 ] enum E7720
  2358 ;;  pType           1    6[BANK2 ] enum E7739
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  Output          1   47[BANK0 ] enum E7419
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      enum E7419
  2363 ;; Registers used:
  2364 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2370 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;      Totals:         0       1       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;Total ram usage:        5 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:   13
  2377 ;; This function calls:
  2378 ;;		_Byte_SetQuad
  2379 ;;		_Port_CheckQuadType
  2380 ;;		_Word_SetPair
  2381 ;; This function is called by:
  2382 ;;		_MXK_Init
  2383 ;;		_MXK_InitDIPSwitch
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text3
  2388  0103BA                     __ptext3:
  2389                           	opt stack 0
  2390  0103BA                     _Port_SetQuadType:
  2391                           	opt stack 16
  2392                           
  2393                           ;Port.c: 401: ePinError Output = ePinErrorState;
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;incstack = 0
  2397  0103BA  0E05               	movlw	5
  2398  0103BC  0100               	movlb	0	; () banked
  2399  0103BE  6FF7               	movwf	Port_SetQuadType@Output& (0+255),b
  2400                           
  2401                           ;Port.c: 403: switch (pType)
  2402  0103C0  D0C7               	goto	l9622
  2403  0103C2                     l9606:
  2404                           
  2405                           ;Port.c: 407: {
  2406                           ;Port.c: 409: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0xF);
  2407  0103C2  0102               	movlb	2	; () banked
  2408  0103C4  EE20 F002          	lfsr	2,2
  2409  0103C8  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2410  0103CA  26D9               	addwf	fsr2l,f,c
  2411  0103CC  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2412  0103CE  22DA               	addwfc	fsr2h,f,c
  2413  0103D0  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2414  0103D4  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2415  0103D8  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2416  0103DC  0E0F               	movlw	15
  2417  0103DE  0100               	movlb	0	; () banked
  2418  0103E0  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2419  0103E2  EC90  F08D         	call	_Byte_SetQuad	;wreg free
  2420                           
  2421                           ;Port.c: 412: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0);
  2422  0103E6  0102               	movlb	2	; () banked
  2423  0103E8  EE20 F004          	lfsr	2,4
  2424  0103EC  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2425  0103EE  26D9               	addwf	fsr2l,f,c
  2426  0103F0  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2427  0103F2  22DA               	addwfc	fsr2h,f,c
  2428  0103F4  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2429  0103F8  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2430  0103FC  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2431  010400  0E00               	movlw	0
  2432  010402  0100               	movlb	0	; () banked
  2433  010404  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2434  010406  EC90  F08D         	call	_Byte_SetQuad	;wreg free
  2435                           
  2436                           ;Port.c: 413: }
  2437                           ;Port.c: 415: break;
  2438  01040A  D0B0               	goto	l9624
  2439  01040C                     l9608:
  2440                           
  2441                           ;Port.c: 417: if ((Output = Port_CheckQuadType(pInput, pQuad, eNone)) == ePinErrorNone)
  2442  01040C  C203  F1FA         	movff	Port_SetQuadType@pInput,Port_CheckQuadType@pInput
  2443  010410  C204  F1FB         	movff	Port_SetQuadType@pInput+1,Port_CheckQuadType@pInput+1
  2444  010414  C205  F1FC         	movff	Port_SetQuadType@pQuad,Port_CheckQuadType@pQuad
  2445  010418  0E03               	movlw	3
  2446  01041A  0101               	movlb	1	; () banked
  2447  01041C  6FFD               	movwf	Port_CheckQuadType@pDrive& (0+255),b
  2448  01041E  ECC4  F08B         	call	_Port_CheckQuadType	;wreg free
  2449  010422  0100               	movlb	0	; () banked
  2450  010424  6FF7               	movwf	Port_SetQuadType@Output& (0+255),b
  2451  010426  0100               	movlb	0	; () banked
  2452  010428  51F7               	movf	Port_SetQuadType@Output& (0+255),w,b
  2453  01042A  A4D8               	btfss	status,2,c
  2454  01042C  0012               	return	
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;Port.c: 418: {
  2458                           ;Port.c: 420: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0);
  2459  01042E  0102               	movlb	2	; () banked
  2460  010430  EE20 F002          	lfsr	2,2
  2461  010434  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2462  010436  26D9               	addwf	fsr2l,f,c
  2463  010438  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2464  01043A  22DA               	addwfc	fsr2h,f,c
  2465  01043C  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2466  010440  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2467  010444  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2468  010448  0E00               	movlw	0
  2469  01044A  0100               	movlb	0	; () banked
  2470  01044C  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2471  01044E  EC90  F08D         	call	_Byte_SetQuad	;wreg free
  2472                           
  2473                           ;Port.c: 423: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0);
  2474  010452  0102               	movlb	2	; () banked
  2475  010454  EE20 F004          	lfsr	2,4
  2476  010458  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2477  01045A  26D9               	addwf	fsr2l,f,c
  2478  01045C  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2479  01045E  22DA               	addwfc	fsr2h,f,c
  2480  010460  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2481  010464  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2482  010468  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2483  01046C  0E00               	movlw	0
  2484  01046E  0100               	movlb	0	; () banked
  2485  010470  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2486  010472  EC90  F08D         	call	_Byte_SetQuad	;wreg free
  2487                           
  2488                           ;Port.c: 424: }
  2489  010476  D07A               	goto	l9624
  2490  010478                     l9612:
  2491                           
  2492                           ;Port.c: 428: if ((Output = Port_CheckQuadType(pInput, pQuad, eNone)) == ePinErrorNone)
  2493  010478  C203  F1FA         	movff	Port_SetQuadType@pInput,Port_CheckQuadType@pInput
  2494  01047C  C204  F1FB         	movff	Port_SetQuadType@pInput+1,Port_CheckQuadType@pInput+1
  2495  010480  C205  F1FC         	movff	Port_SetQuadType@pQuad,Port_CheckQuadType@pQuad
  2496  010484  0E03               	movlw	3
  2497  010486  0101               	movlb	1	; () banked
  2498  010488  6FFD               	movwf	Port_CheckQuadType@pDrive& (0+255),b
  2499  01048A  ECC4  F08B         	call	_Port_CheckQuadType	;wreg free
  2500  01048E  0100               	movlb	0	; () banked
  2501  010490  6FF7               	movwf	Port_SetQuadType@Output& (0+255),b
  2502  010492  0100               	movlb	0	; () banked
  2503  010494  51F7               	movf	Port_SetQuadType@Output& (0+255),w,b
  2504  010496  A4D8               	btfss	status,2,c
  2505  010498  0012               	return	
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;Port.c: 429: {
  2509                           ;Port.c: 431: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0xF);
  2510  01049A  0102               	movlb	2	; () banked
  2511  01049C  EE20 F002          	lfsr	2,2
  2512  0104A0  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2513  0104A2  26D9               	addwf	fsr2l,f,c
  2514  0104A4  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2515  0104A6  22DA               	addwfc	fsr2h,f,c
  2516  0104A8  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2517  0104AC  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2518  0104B0  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2519  0104B4  0E0F               	movlw	15
  2520  0104B6  0100               	movlb	0	; () banked
  2521  0104B8  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2522  0104BA  EC90  F08D         	call	_Byte_SetQuad	;wreg free
  2523                           
  2524                           ;Port.c: 434: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0xF);
  2525  0104BE  0102               	movlb	2	; () banked
  2526  0104C0  EE20 F004          	lfsr	2,4
  2527  0104C4  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2528  0104C6  26D9               	addwf	fsr2l,f,c
  2529  0104C8  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2530  0104CA  22DA               	addwfc	fsr2h,f,c
  2531  0104CC  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2532  0104D0  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2533  0104D4  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2534  0104D8  0E0F               	movlw	15
  2535  0104DA  0100               	movlb	0	; () banked
  2536  0104DC  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2537  0104DE  EC90  F08D         	call	_Byte_SetQuad	;wreg free
  2538                           
  2539                           ;Port.c: 435: }
  2540  0104E2  D044               	goto	l9624
  2541  0104E4                     l9616:
  2542                           
  2543                           ;Port.c: 439: if ((Output = Port_CheckQuadType(pInput, pQuad, eNone)) == ePinErrorNone)
  2544  0104E4  C203  F1FA         	movff	Port_SetQuadType@pInput,Port_CheckQuadType@pInput
  2545  0104E8  C204  F1FB         	movff	Port_SetQuadType@pInput+1,Port_CheckQuadType@pInput+1
  2546  0104EC  C205  F1FC         	movff	Port_SetQuadType@pQuad,Port_CheckQuadType@pQuad
  2547  0104F0  0E03               	movlw	3
  2548  0104F2  0101               	movlb	1	; () banked
  2549  0104F4  6FFD               	movwf	Port_CheckQuadType@pDrive& (0+255),b
  2550  0104F6  ECC4  F08B         	call	_Port_CheckQuadType	;wreg free
  2551  0104FA  0100               	movlb	0	; () banked
  2552  0104FC  6FF7               	movwf	Port_SetQuadType@Output& (0+255),b
  2553  0104FE  0100               	movlb	0	; () banked
  2554  010500  51F7               	movf	Port_SetQuadType@Output& (0+255),w,b
  2555  010502  A4D8               	btfss	status,2,c
  2556  010504  0012               	return	
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;Port.c: 440: {
  2560                           ;Port.c: 442: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0);
  2561  010506  0102               	movlb	2	; () banked
  2562  010508  EE20 F002          	lfsr	2,2
  2563  01050C  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2564  01050E  26D9               	addwf	fsr2l,f,c
  2565  010510  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2566  010512  22DA               	addwfc	fsr2h,f,c
  2567  010514  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2568  010518  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2569  01051C  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2570  010520  0E00               	movlw	0
  2571  010522  0100               	movlb	0	; () banked
  2572  010524  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2573  010526  EC90  F08D         	call	_Byte_SetQuad	;wreg free
  2574                           
  2575                           ;Port.c: 445: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0);
  2576  01052A  0102               	movlb	2	; () banked
  2577  01052C  EE20 F004          	lfsr	2,4
  2578  010530  5103               	movf	Port_SetQuadType@pInput& (0+255),w,b
  2579  010532  26D9               	addwf	fsr2l,f,c
  2580  010534  5104               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2581  010536  22DA               	addwfc	fsr2h,f,c
  2582  010538  CFDE F0D3          	movff	postinc2,Byte_SetQuad@pInput
  2583  01053C  CFDD F0D4          	movff	postdec2,Byte_SetQuad@pInput+1
  2584  010540  C205  F0D5         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
  2585  010544  0E00               	movlw	0
  2586  010546  0100               	movlb	0	; () banked
  2587  010548  6FD6               	movwf	Byte_SetQuad@pValue& (0+255),b
  2588  01054A  EC90  F08D         	call	_Byte_SetQuad	;wreg free
  2589                           
  2590                           ;Port.c: 446: }
  2591  01054E  D00E               	goto	l9624
  2592  010550                     l9622:
  2593  010550  0102               	movlb	2	; () banked
  2594  010552  5106               	movf	Port_SetQuadType@pType& (0+255),w,b
  2595                           
  2596                           ; Switch size 1, requested type "space"
  2597                           ; Number of cases is 4, Range of values is 0 to 3
  2598                           ; switch strategies available:
  2599                           ; Name         Instructions Cycles
  2600                           ; simple_byte           13     7 (average)
  2601                           ;	Chosen strategy is simple_byte
  2602  010554  0A00               	xorlw	0	; case 0
  2603  010556  B4D8               	btfsc	status,2,c
  2604  010558  D734               	goto	l9606
  2605  01055A  0A01               	xorlw	1	; case 1
  2606  01055C  B4D8               	btfsc	status,2,c
  2607  01055E  D756               	goto	l9608
  2608  010560  0A03               	xorlw	3	; case 2
  2609  010562  B4D8               	btfsc	status,2,c
  2610  010564  D789               	goto	l9612
  2611  010566  0A01               	xorlw	1	; case 3
  2612  010568  B4D8               	btfsc	status,2,c
  2613  01056A  D7BC               	goto	l9616
  2614  01056C                     l9624:
  2615                           
  2616                           ;Port.c: 454: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4, (UINT8)pType);
  2617  01056C  0E08               	movlw	8
  2618  01056E  0102               	movlb	2	; () banked
  2619  010570  2503               	addwf	Port_SetQuadType@pInput& (0+255),w,b
  2620  010572  0100               	movlb	0	; () banked
  2621  010574  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  2622  010576  0E00               	movlw	0
  2623  010578  0102               	movlb	2	; () banked
  2624  01057A  2104               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2625  01057C  0100               	movlb	0	; () banked
  2626  01057E  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  2627  010580  0102               	movlb	2	; () banked
  2628  010582  5105               	movf	Port_SetQuadType@pQuad& (0+255),w,b
  2629  010584  0D04               	mullw	4
  2630  010586  CFF3 F0D9          	movff	prodl,Word_SetPair@pPair
  2631  01058A  C206  F0DA         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
  2632  01058E  EC8C  F08C         	call	_Word_SetPair	;wreg free
  2633                           
  2634                           ;Port.c: 455: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4 + 1, (UINT8)pType);
  2635  010592  0E08               	movlw	8
  2636  010594  0102               	movlb	2	; () banked
  2637  010596  2503               	addwf	Port_SetQuadType@pInput& (0+255),w,b
  2638  010598  0100               	movlb	0	; () banked
  2639  01059A  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  2640  01059C  0E00               	movlw	0
  2641  01059E  0102               	movlb	2	; () banked
  2642  0105A0  2104               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2643  0105A2  0100               	movlb	0	; () banked
  2644  0105A4  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  2645  0105A6  0102               	movlb	2	; () banked
  2646  0105A8  5105               	movf	Port_SetQuadType@pQuad& (0+255),w,b
  2647  0105AA  0D04               	mullw	4
  2648  0105AC  28F3               	incf	prodl,w,c
  2649  0105AE  0100               	movlb	0	; () banked
  2650  0105B0  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  2651  0105B2  C206  F0DA         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
  2652  0105B6  EC8C  F08C         	call	_Word_SetPair	;wreg free
  2653                           
  2654                           ;Port.c: 456: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4 + 2, (UINT8)pType);
  2655  0105BA  0E08               	movlw	8
  2656  0105BC  0102               	movlb	2	; () banked
  2657  0105BE  2503               	addwf	Port_SetQuadType@pInput& (0+255),w,b
  2658  0105C0  0100               	movlb	0	; () banked
  2659  0105C2  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  2660  0105C4  0E00               	movlw	0
  2661  0105C6  0102               	movlb	2	; () banked
  2662  0105C8  2104               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2663  0105CA  0100               	movlb	0	; () banked
  2664  0105CC  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  2665  0105CE  0102               	movlb	2	; () banked
  2666  0105D0  5105               	movf	Port_SetQuadType@pQuad& (0+255),w,b
  2667  0105D2  0D04               	mullw	4
  2668  0105D4  50F3               	movf	prodl,w,c
  2669  0105D6  0F02               	addlw	2
  2670  0105D8  0100               	movlb	0	; () banked
  2671  0105DA  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  2672  0105DC  C206  F0DA         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
  2673  0105E0  EC8C  F08C         	call	_Word_SetPair	;wreg free
  2674                           
  2675                           ;Port.c: 457: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4 + 3, (UINT8)pType);
  2676  0105E4  0E08               	movlw	8
  2677  0105E6  0102               	movlb	2	; () banked
  2678  0105E8  2503               	addwf	Port_SetQuadType@pInput& (0+255),w,b
  2679  0105EA  0100               	movlb	0	; () banked
  2680  0105EC  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  2681  0105EE  0E00               	movlw	0
  2682  0105F0  0102               	movlb	2	; () banked
  2683  0105F2  2104               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
  2684  0105F4  0100               	movlb	0	; () banked
  2685  0105F6  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  2686  0105F8  0102               	movlb	2	; () banked
  2687  0105FA  5105               	movf	Port_SetQuadType@pQuad& (0+255),w,b
  2688  0105FC  0D04               	mullw	4
  2689  0105FE  50F3               	movf	prodl,w,c
  2690  010600  0F03               	addlw	3
  2691  010602  0100               	movlb	0	; () banked
  2692  010604  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  2693  010606  C206  F0DA         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
  2694  01060A  EC8C  F08C         	call	_Word_SetPair	;wreg free
  2695  01060E  0012               	return	
  2696  010610                     __end_of_Port_SetQuadType:
  2697                           	opt stack 0
  2698                           tblptru	equ	0xFF8
  2699                           tblptrh	equ	0xFF7
  2700                           tblptrl	equ	0xFF6
  2701                           tablat	equ	0xFF5
  2702                           prodl	equ	0xFF3
  2703                           postinc0	equ	0xFEE
  2704                           wreg	equ	0xFE8
  2705                           postdec1	equ	0xFE5
  2706                           fsr1h	equ	0xFE2
  2707                           fsr1l	equ	0xFE1
  2708                           postinc2	equ	0xFDE
  2709                           postdec2	equ	0xFDD
  2710                           fsr2h	equ	0xFDA
  2711                           fsr2l	equ	0xFD9
  2712                           status	equ	0xFD8
  2713                           
  2714 ;; *************** function _Byte_SetQuad *****************
  2715 ;; Defined at:
  2716 ;;		line 101 in file "Library/Types.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  pInput          2   11[BANK0 ] PTR struct Byte
  2719 ;;		 -> SSP2CON1(1), SSP1CON1(1), TRISG(1), TRISF(1), 
  2720 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
  2721 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
  2722 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
  2723 ;;		 -> NULL(0), 
  2724 ;;  pQuad           1   13[BANK0 ] unsigned char 
  2725 ;;  pValue          1   14[BANK0 ] unsigned char 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;		None
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2737 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;Total ram usage:        4 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    8
  2744 ;; This function calls:
  2745 ;;		_Byte_SetZone
  2746 ;; This function is called by:
  2747 ;;		_Port_SetQuadType
  2748 ;;		_Port_SetQuad
  2749 ;;		_SPI_Init
  2750 ;;		_SPI_MinSpeed
  2751 ;;		_SPI_MaxSpeed
  2752 ;;		_Word_SetQuad
  2753 ;;		_I2C_Init
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text4
  2758  011B20                     __ptext4:
  2759                           	opt stack 0
  2760  011B20                     _Byte_SetQuad:
  2761                           	opt stack 20
  2762                           
  2763                           ;Types.c: 103: Byte_SetZone(pInput, 2, pQuad, 4, pValue);
  2764                           
  2765                           ;incstack = 0
  2766  011B20  C0D3  F0C8         	movff	Byte_SetQuad@pInput,Byte_SetZone@pInput
  2767  011B24  C0D4  F0C9         	movff	Byte_SetQuad@pInput+1,Byte_SetZone@pInput+1
  2768  011B28  0E02               	movlw	2
  2769  011B2A  0100               	movlb	0	; () banked
  2770  011B2C  6FCA               	movwf	Byte_SetZone@pMax& (0+255),b
  2771  011B2E  C0D5  F0CB         	movff	Byte_SetQuad@pQuad,Byte_SetZone@pChunk
  2772  011B32  0E04               	movlw	4
  2773  011B34  0100               	movlb	0	; () banked
  2774  011B36  6FCC               	movwf	Byte_SetZone@pChunkSize& (0+255),b
  2775  011B38  C0D6  F0CD         	movff	Byte_SetQuad@pValue,Byte_SetZone@pValue
  2776  011B3C  ECF6  F087         	call	_Byte_SetZone	;wreg free
  2777  011B40  0012               	return		;funcret
  2778  011B42                     __end_of_Byte_SetQuad:
  2779                           	opt stack 0
  2780                           tblptru	equ	0xFF8
  2781                           tblptrh	equ	0xFF7
  2782                           tblptrl	equ	0xFF6
  2783                           tablat	equ	0xFF5
  2784                           prodl	equ	0xFF3
  2785                           postinc0	equ	0xFEE
  2786                           wreg	equ	0xFE8
  2787                           postdec1	equ	0xFE5
  2788                           fsr1h	equ	0xFE2
  2789                           fsr1l	equ	0xFE1
  2790                           postinc2	equ	0xFDE
  2791                           postdec2	equ	0xFDD
  2792                           fsr2h	equ	0xFDA
  2793                           fsr2l	equ	0xFD9
  2794                           status	equ	0xFD8
  2795                           
  2796 ;; *************** function _Port_Init *****************
  2797 ;; Defined at:
  2798 ;;		line 150 in file "Library/Port.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  pInput          2   10[BANK2 ] const PTR struct Port
  2801 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  2802 ;;		 -> PortD(10), PortC(10), PortF(10), 
  2803 ;;  pPort           1   12[BANK2 ] enum E7730
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  i               1   15[BANK2 ] unsigned char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2815 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;Total ram usage:        6 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:   15
  2822 ;; This function calls:
  2823 ;;		_GetPortPORT
  2824 ;;		_GetPortProperties
  2825 ;;		_GetPortTRIS
  2826 ;;		_Port_Set
  2827 ;;		_Port_SetPinType
  2828 ;;		_Port_SetType
  2829 ;;		_Word_GetPair
  2830 ;; This function is called by:
  2831 ;;		_MXK_Init
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text5
  2836  0109FA                     __ptext5:
  2837                           	opt stack 0
  2838  0109FA                     _Port_Init:
  2839                           	opt stack 14
  2840                           
  2841                           ;Port.c: 153: pInput->mProperties = GetPortProperties(pPort);
  2842                           
  2843                           ;incstack = 0
  2844  0109FA  0102               	movlb	2	; () banked
  2845  0109FC  510C               	movf	Port_Init@pPort& (0+255),w,b
  2846  0109FE  ECF9  F088         	call	_GetPortProperties
  2847  010A02  C20A  FFD9         	movff	Port_Init@pInput,fsr2l
  2848  010A06  C20B  FFDA         	movff	Port_Init@pInput+1,fsr2h
  2849  010A0A  0100               	movlb	0	; () banked
  2850  010A0C  C0C8  FFDE         	movff	?_GetPortProperties,postinc2
  2851  010A10  0100               	movlb	0	; () banked
  2852  010A12  C0C9  FFDD         	movff	?_GetPortProperties+1,postdec2
  2853                           
  2854                           ;Port.c: 154: pInput->mInput = GetPortPORT(pPort);
  2855  010A16  0102               	movlb	2	; () banked
  2856  010A18  510C               	movf	Port_Init@pPort& (0+255),w,b
  2857  010A1A  EC4C  F089         	call	_GetPortPORT
  2858  010A1E  0102               	movlb	2	; () banked
  2859  010A20  EE20 F006          	lfsr	2,6
  2860  010A24  510A               	movf	Port_Init@pInput& (0+255),w,b
  2861  010A26  26D9               	addwf	fsr2l,f,c
  2862  010A28  510B               	movf	(Port_Init@pInput+1)& (0+255),w,b
  2863  010A2A  22DA               	addwfc	fsr2h,f,c
  2864  010A2C  0100               	movlb	0	; () banked
  2865  010A2E  C0C8  FFDE         	movff	?_GetPortPORT,postinc2
  2866  010A32  0100               	movlb	0	; () banked
  2867  010A34  C0C9  FFDD         	movff	?_GetPortPORT+1,postdec2
  2868                           
  2869                           ;Port.c: 155: pInput->mOutput = GetPortPORT(pPort);
  2870  010A38  0102               	movlb	2	; () banked
  2871  010A3A  510C               	movf	Port_Init@pPort& (0+255),w,b
  2872  010A3C  EC4C  F089         	call	_GetPortPORT
  2873  010A40  0102               	movlb	2	; () banked
  2874  010A42  EE20 F004          	lfsr	2,4
  2875  010A46  510A               	movf	Port_Init@pInput& (0+255),w,b
  2876  010A48  26D9               	addwf	fsr2l,f,c
  2877  010A4A  510B               	movf	(Port_Init@pInput+1)& (0+255),w,b
  2878  010A4C  22DA               	addwfc	fsr2h,f,c
  2879  010A4E  0100               	movlb	0	; () banked
  2880  010A50  C0C8  FFDE         	movff	?_GetPortPORT,postinc2
  2881  010A54  0100               	movlb	0	; () banked
  2882  010A56  C0C9  FFDD         	movff	?_GetPortPORT+1,postdec2
  2883                           
  2884                           ;Port.c: 156: pInput->mDirection = GetPortTRIS(pPort);
  2885  010A5A  0102               	movlb	2	; () banked
  2886  010A5C  510C               	movf	Port_Init@pPort& (0+255),w,b
  2887  010A5E  ECA6  F088         	call	_GetPortTRIS
  2888  010A62  0102               	movlb	2	; () banked
  2889  010A64  EE20 F002          	lfsr	2,2
  2890  010A68  510A               	movf	Port_Init@pInput& (0+255),w,b
  2891  010A6A  26D9               	addwf	fsr2l,f,c
  2892  010A6C  510B               	movf	(Port_Init@pInput+1)& (0+255),w,b
  2893  010A6E  22DA               	addwfc	fsr2h,f,c
  2894  010A70  0100               	movlb	0	; () banked
  2895  010A72  C0C8  FFDE         	movff	?_GetPortTRIS,postinc2
  2896  010A76  0100               	movlb	0	; () banked
  2897  010A78  C0C9  FFDD         	movff	?_GetPortTRIS+1,postdec2
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;Port.c: 159: pInput->mOutput->mBits = 0x00;
  2901  010A7C  0102               	movlb	2	; () banked
  2902  010A7E  EE20 F004          	lfsr	2,4
  2903  010A82  510A               	movf	Port_Init@pInput& (0+255),w,b
  2904  010A84  26D9               	addwf	fsr2l,f,c
  2905  010A86  510B               	movf	(Port_Init@pInput+1)& (0+255),w,b
  2906  010A88  22DA               	addwfc	fsr2h,f,c
  2907  010A8A  CFDE F20D          	movff	postinc2,??_Port_Init
  2908  010A8E  CFDD F20E          	movff	postdec2,??_Port_Init+1
  2909  010A92  C20D  FFD9         	movff	??_Port_Init,fsr2l
  2910  010A96  C20E  FFDA         	movff	??_Port_Init+1,fsr2h
  2911  010A9A  0E00               	movlw	0
  2912  010A9C  6EDF               	movwf	indf2,c
  2913                           
  2914                           ; BSR set to: 2
  2915                           ;Port.c: 160: pInput->mDirection->mBits = 0xFF;
  2916  010A9E  0102               	movlb	2	; () banked
  2917  010AA0  EE20 F002          	lfsr	2,2
  2918  010AA4  510A               	movf	Port_Init@pInput& (0+255),w,b
  2919  010AA6  26D9               	addwf	fsr2l,f,c
  2920  010AA8  510B               	movf	(Port_Init@pInput+1)& (0+255),w,b
  2921  010AAA  22DA               	addwfc	fsr2h,f,c
  2922  010AAC  CFDE F20D          	movff	postinc2,??_Port_Init
  2923  010AB0  CFDD F20E          	movff	postdec2,??_Port_Init+1
  2924  010AB4  C20D  FFD9         	movff	??_Port_Init,fsr2l
  2925  010AB8  C20E  FFDA         	movff	??_Port_Init+1,fsr2h
  2926  010ABC  0EFF               	movlw	255
  2927  010ABE  6EDF               	movwf	indf2,c
  2928                           
  2929                           ; BSR set to: 2
  2930                           ;Port.c: 163: Port_SetType(pInput, eTypeInput);
  2931  010AC0  C20A  F206         	movff	Port_Init@pInput,Port_SetType@pInput
  2932  010AC4  C20B  F207         	movff	Port_Init@pInput+1,Port_SetType@pInput+1
  2933  010AC8  0E00               	movlw	0
  2934  010ACA  0102               	movlb	2	; () banked
  2935  010ACC  6F08               	movwf	Port_SetType@pType& (0+255),b
  2936  010ACE  EC08  F083         	call	_Port_SetType	;wreg free
  2937                           
  2938                           ;Port.c: 166: UINT8 i;
  2939                           ;Port.c: 167: for (i=0; i<8; i++)
  2940  010AD2  0E00               	movlw	0
  2941  010AD4  0102               	movlb	2	; () banked
  2942  010AD6  6F0F               	movwf	Port_Init@i& (0+255),b
  2943  010AD8                     l9582:
  2944                           
  2945                           ; BSR set to: 2
  2946  010AD8  0E07               	movlw	7
  2947  010ADA  0102               	movlb	2	; () banked
  2948  010ADC  650F               	cpfsgt	Port_Init@i& (0+255),b
  2949  010ADE  D031               	goto	l9596
  2950  010AE0  D04B               	goto	l9602
  2951  010AE2                     l9586:
  2952                           
  2953                           ;Port.c: 172: Port_SetPinType(pInput, i, eTypeOutputPushPull);
  2954  010AE2  C20A  F0EE         	movff	Port_Init@pInput,Port_SetPinType@pInput
  2955  010AE6  C20B  F0EF         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  2956  010AEA  C20F  F0F0         	movff	Port_Init@i,Port_SetPinType@pPin
  2957  010AEE  0E03               	movlw	3
  2958  010AF0  0100               	movlb	0	; () banked
  2959  010AF2  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2960  010AF4  EC1D  F084         	call	_Port_SetPinType	;wreg free
  2961                           
  2962                           ;Port.c: 173: break;
  2963  010AF8  D03C               	goto	l9598
  2964  010AFA                     l9588:
  2965                           
  2966                           ;Port.c: 175: Port_SetPinType(pInput, i, eTypeOutputOpenSource);
  2967  010AFA  C20A  F0EE         	movff	Port_Init@pInput,Port_SetPinType@pInput
  2968  010AFE  C20B  F0EF         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  2969  010B02  C20F  F0F0         	movff	Port_Init@i,Port_SetPinType@pPin
  2970  010B06  0E02               	movlw	2
  2971  010B08  0100               	movlb	0	; () banked
  2972  010B0A  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2973  010B0C  EC1D  F084         	call	_Port_SetPinType	;wreg free
  2974                           
  2975                           ;Port.c: 176: break;
  2976  010B10  D030               	goto	l9598
  2977  010B12                     l9590:
  2978                           
  2979                           ;Port.c: 178: Port_SetPinType(pInput, i, eTypeOutputOpenDrain);
  2980  010B12  C20A  F0EE         	movff	Port_Init@pInput,Port_SetPinType@pInput
  2981  010B16  C20B  F0EF         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  2982  010B1A  C20F  F0F0         	movff	Port_Init@i,Port_SetPinType@pPin
  2983  010B1E  0E01               	movlw	1
  2984  010B20  0100               	movlb	0	; () banked
  2985  010B22  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2986  010B24  EC1D  F084         	call	_Port_SetPinType	;wreg free
  2987                           
  2988                           ;Port.c: 179: break;
  2989  010B28  D024               	goto	l9598
  2990  010B2A                     l9592:
  2991                           
  2992                           ;Port.c: 181: Port_SetPinType(pInput, i, eTypeInput);
  2993  010B2A  C20A  F0EE         	movff	Port_Init@pInput,Port_SetPinType@pInput
  2994  010B2E  C20B  F0EF         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  2995  010B32  C20F  F0F0         	movff	Port_Init@i,Port_SetPinType@pPin
  2996  010B36  0E00               	movlw	0
  2997  010B38  0100               	movlb	0	; () banked
  2998  010B3A  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  2999  010B3C  EC1D  F084         	call	_Port_SetPinType	;wreg free
  3000                           
  3001                           ;Port.c: 183: }
  3002                           
  3003                           ;Port.c: 182: break;
  3004  010B40  D018               	goto	l9598
  3005  010B42                     l9596:
  3006  010B42  C20A  FFD9         	movff	Port_Init@pInput,fsr2l
  3007  010B46  C20B  FFDA         	movff	Port_Init@pInput+1,fsr2h
  3008  010B4A  CFDE F0D4          	movff	postinc2,Word_GetPair@pInput
  3009  010B4E  CFDD F0D5          	movff	postdec2,Word_GetPair@pInput+1
  3010  010B52  C20F  F0D6         	movff	Port_Init@i,Word_GetPair@pPair
  3011  010B56  ECF0  F08C         	call	_Word_GetPair	;wreg free
  3012                           
  3013                           ; Switch size 1, requested type "space"
  3014                           ; Number of cases is 4, Range of values is 0 to 3
  3015                           ; switch strategies available:
  3016                           ; Name         Instructions Cycles
  3017                           ; simple_byte           13     7 (average)
  3018                           ;	Chosen strategy is simple_byte
  3019  010B5A  0A00               	xorlw	0	; case 0
  3020  010B5C  B4D8               	btfsc	status,2,c
  3021  010B5E  D7C1               	goto	l9586
  3022  010B60  0A01               	xorlw	1	; case 1
  3023  010B62  B4D8               	btfsc	status,2,c
  3024  010B64  D7D6               	goto	l9590
  3025  010B66  0A03               	xorlw	3	; case 2
  3026  010B68  B4D8               	btfsc	status,2,c
  3027  010B6A  D7C7               	goto	l9588
  3028  010B6C  0A01               	xorlw	1	; case 3
  3029  010B6E  B4D8               	btfsc	status,2,c
  3030  010B70  D7DC               	goto	l9592
  3031  010B72                     l9598:
  3032  010B72  0102               	movlb	2	; () banked
  3033  010B74  2B0F               	incf	Port_Init@i& (0+255),f,b
  3034  010B76  D7B0               	goto	l9582
  3035  010B78                     l9602:
  3036                           
  3037                           ; BSR set to: 2
  3038                           ;Port.c: 184: }
  3039                           ;Port.c: 185: Port_Set(pInput, 0x00);
  3040  010B78  C20A  F0D7         	movff	Port_Init@pInput,Port_Set@pInput
  3041  010B7C  C20B  F0D8         	movff	Port_Init@pInput+1,Port_Set@pInput+1
  3042  010B80  0E00               	movlw	0
  3043  010B82  0100               	movlb	0	; () banked
  3044  010B84  6FD9               	movwf	Port_Set@pValue& (0+255),b
  3045  010B86  EC00  F080         	call	_Port_Set	;wreg free
  3046  010B8A  0012               	return		;funcret
  3047  010B8C                     __end_of_Port_Init:
  3048                           	opt stack 0
  3049                           tblptru	equ	0xFF8
  3050                           tblptrh	equ	0xFF7
  3051                           tblptrl	equ	0xFF6
  3052                           tablat	equ	0xFF5
  3053                           prodl	equ	0xFF3
  3054                           postinc0	equ	0xFEE
  3055                           wreg	equ	0xFE8
  3056                           postdec1	equ	0xFE5
  3057                           fsr1h	equ	0xFE2
  3058                           fsr1l	equ	0xFE1
  3059                           indf2	equ	0xFDF
  3060                           postinc2	equ	0xFDE
  3061                           postdec2	equ	0xFDD
  3062                           fsr2h	equ	0xFDA
  3063                           fsr2l	equ	0xFD9
  3064                           status	equ	0xFD8
  3065                           
  3066 ;; *************** function _Port_SetType *****************
  3067 ;; Defined at:
  3068 ;;		line 513 in file "Library/Port.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  pInput          2    6[BANK2 ] const PTR struct Port
  3071 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  3072 ;;		 -> PortD(10), PortC(10), PortF(10), 
  3073 ;;  pType           1    8[BANK2 ] enum E7739
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  Output          1    9[BANK2 ] enum E7419
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      enum E7419
  3078 ;; Registers used:
  3079 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3085 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Totals:         0       0       2       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;Total ram usage:        6 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:   14
  3092 ;; This function calls:
  3093 ;;		_Port_CheckPortType
  3094 ;;		_Word_SetPair
  3095 ;; This function is called by:
  3096 ;;		_Port_Init
  3097 ;;		_MXK_Init
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text6
  3102  010610                     __ptext6:
  3103                           	opt stack 0
  3104  010610                     _Port_SetType:
  3105                           	opt stack 15
  3106                           
  3107                           ;Port.c: 515: ePinError Output = ePinErrorState;
  3108                           
  3109                           ;incstack = 0
  3110  010610  0E05               	movlw	5
  3111  010612  0102               	movlb	2	; () banked
  3112  010614  6F09               	movwf	Port_SetType@Output& (0+255),b
  3113                           
  3114                           ;Port.c: 517: switch (pType)
  3115  010616  D07A               	goto	l9344
  3116  010618                     l9328:
  3117                           
  3118                           ; BSR set to: 2
  3119                           ;Port.c: 522: pInput->mDirection->mBits = 0xFF;
  3120  010618  0102               	movlb	2	; () banked
  3121  01061A  EE20 F002          	lfsr	2,2
  3122  01061E  5106               	movf	Port_SetType@pInput& (0+255),w,b
  3123  010620  26D9               	addwf	fsr2l,f,c
  3124  010622  5107               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  3125  010624  22DA               	addwfc	fsr2h,f,c
  3126  010626  CFDE F1FE          	movff	postinc2,??_Port_SetType
  3127  01062A  CFDD F1FF          	movff	postdec2,??_Port_SetType+1
  3128  01062E  C1FE  FFD9         	movff	??_Port_SetType,fsr2l
  3129  010632  C1FF  FFDA         	movff	??_Port_SetType+1,fsr2h
  3130  010636  0EFF               	movlw	255
  3131  010638  D067               	goto	L3
  3132  01063A                     l9330:
  3133                           
  3134                           ; BSR set to: 2
  3135                           ;Port.c: 526: if ((Output=Port_CheckPortType(pInput, eLow)) == ePinErrorNone)
  3136  01063A  C206  F203         	movff	Port_SetType@pInput,Port_CheckPortType@pInput
  3137  01063E  C207  F204         	movff	Port_SetType@pInput+1,Port_CheckPortType@pInput+1
  3138  010642  0E01               	movlw	1
  3139  010644  0102               	movlb	2	; () banked
  3140  010646  6F05               	movwf	Port_CheckPortType@pDrive& (0+255),b
  3141  010648  EC68  F08C         	call	_Port_CheckPortType	;wreg free
  3142  01064C  0102               	movlb	2	; () banked
  3143  01064E  6F09               	movwf	Port_SetType@Output& (0+255),b
  3144  010650  0102               	movlb	2	; () banked
  3145  010652  5109               	movf	Port_SetType@Output& (0+255),w,b
  3146  010654  A4D8               	btfss	status,2,c
  3147  010656  0012               	return	
  3148                           
  3149                           ; BSR set to: 2
  3150                           ;Port.c: 527: {
  3151                           ;Port.c: 529: pInput->mDirection->mBits = 0x00;
  3152  010658  0102               	movlb	2	; () banked
  3153  01065A  EE20 F002          	lfsr	2,2
  3154  01065E  5106               	movf	Port_SetType@pInput& (0+255),w,b
  3155  010660  26D9               	addwf	fsr2l,f,c
  3156  010662  5107               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  3157  010664  22DA               	addwfc	fsr2h,f,c
  3158  010666  CFDE F1FE          	movff	postinc2,??_Port_SetType
  3159  01066A  CFDD F1FF          	movff	postdec2,??_Port_SetType+1
  3160  01066E  C1FE  FFD9         	movff	??_Port_SetType,fsr2l
  3161  010672  C1FF  FFDA         	movff	??_Port_SetType+1,fsr2h
  3162  010676  0E00               	movlw	0
  3163  010678  6EDF               	movwf	indf2,c
  3164                           
  3165                           ;Port.c: 532: pInput->mOutput->mBits = 0x00;
  3166  01067A  0102               	movlb	2	; () banked
  3167  01067C  EE20 F004          	lfsr	2,4
  3168  010680  D036               	goto	L5
  3169  010682                     l9334:
  3170                           
  3171                           ; BSR set to: 2
  3172                           ;Port.c: 537: if ((Output=Port_CheckPortType(pInput, eHigh)) == ePinErrorNone)
  3173  010682  C206  F203         	movff	Port_SetType@pInput,Port_CheckPortType@pInput
  3174  010686  C207  F204         	movff	Port_SetType@pInput+1,Port_CheckPortType@pInput+1
  3175  01068A  0E02               	movlw	2
  3176  01068C  0102               	movlb	2	; () banked
  3177  01068E  6F05               	movwf	Port_CheckPortType@pDrive& (0+255),b
  3178  010690  EC68  F08C         	call	_Port_CheckPortType	;wreg free
  3179  010694  0102               	movlb	2	; () banked
  3180  010696  6F09               	movwf	Port_SetType@Output& (0+255),b
  3181  010698  0102               	movlb	2	; () banked
  3182  01069A  5109               	movf	Port_SetType@Output& (0+255),w,b
  3183  01069C  A4D8               	btfss	status,2,c
  3184  01069E  0012               	return	
  3185                           
  3186                           ; BSR set to: 2
  3187                           ;Port.c: 538: {
  3188                           ;Port.c: 540: pInput->mDirection->mBits = 0xFF;
  3189  0106A0  0102               	movlb	2	; () banked
  3190  0106A2  EE20 F002          	lfsr	2,2
  3191  0106A6  5106               	movf	Port_SetType@pInput& (0+255),w,b
  3192  0106A8  26D9               	addwf	fsr2l,f,c
  3193  0106AA  5107               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  3194  0106AC  22DA               	addwfc	fsr2h,f,c
  3195  0106AE  CFDE F1FE          	movff	postinc2,??_Port_SetType
  3196  0106B2  CFDD F1FF          	movff	postdec2,??_Port_SetType+1
  3197  0106B6  C1FE  FFD9         	movff	??_Port_SetType,fsr2l
  3198  0106BA  C1FF  FFDA         	movff	??_Port_SetType+1,fsr2h
  3199  0106BE  0EFF               	movlw	255
  3200  0106C0  6EDF               	movwf	indf2,c
  3201                           
  3202                           ;Port.c: 543: pInput->mOutput->mBits = 0xFF;
  3203  0106C2  0102               	movlb	2	; () banked
  3204  0106C4  EE20 F004          	lfsr	2,4
  3205  0106C8  D7AA               	goto	L4
  3206  0106CA                     l9338:
  3207                           
  3208                           ; BSR set to: 2
  3209                           ;Port.c: 548: if ((Output=Port_CheckPortType(pInput, eHL)) == ePinErrorNone)
  3210  0106CA  C206  F203         	movff	Port_SetType@pInput,Port_CheckPortType@pInput
  3211  0106CE  C207  F204         	movff	Port_SetType@pInput+1,Port_CheckPortType@pInput+1
  3212  0106D2  0E00               	movlw	0
  3213  0106D4  0102               	movlb	2	; () banked
  3214  0106D6  6F05               	movwf	Port_CheckPortType@pDrive& (0+255),b
  3215  0106D8  EC68  F08C         	call	_Port_CheckPortType	;wreg free
  3216  0106DC  0102               	movlb	2	; () banked
  3217  0106DE  6F09               	movwf	Port_SetType@Output& (0+255),b
  3218  0106E0  0102               	movlb	2	; () banked
  3219  0106E2  5109               	movf	Port_SetType@Output& (0+255),w,b
  3220  0106E4  A4D8               	btfss	status,2,c
  3221  0106E6  0012               	return	
  3222                           
  3223                           ; BSR set to: 2
  3224                           ;Port.c: 549: {
  3225                           ;Port.c: 551: pInput->mDirection->mBits = 0x00;
  3226  0106E8  0102               	movlb	2	; () banked
  3227  0106EA  EE20 F002          	lfsr	2,2
  3228  0106EE                     L5:
  3229  0106EE  5106               	movf	Port_SetType@pInput& (0+255),w,b
  3230  0106F0  26D9               	addwf	fsr2l,f,c
  3231  0106F2  5107               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  3232  0106F4  22DA               	addwfc	fsr2h,f,c
  3233  0106F6  CFDE F1FE          	movff	postinc2,??_Port_SetType
  3234  0106FA  CFDD F1FF          	movff	postdec2,??_Port_SetType+1
  3235  0106FE  C1FE  FFD9         	movff	??_Port_SetType,fsr2l
  3236  010702  C1FF  FFDA         	movff	??_Port_SetType+1,fsr2h
  3237  010706  0E00               	movlw	0
  3238  010708                     L3:
  3239  010708  6EDF               	movwf	indf2,c
  3240                           
  3241                           ;Port.c: 552: }
  3242  01070A  D00E               	goto	l9346
  3243  01070C                     l9344:
  3244                           
  3245                           ; BSR set to: 2
  3246  01070C  0102               	movlb	2	; () banked
  3247  01070E  5108               	movf	Port_SetType@pType& (0+255),w,b
  3248                           
  3249                           ; Switch size 1, requested type "space"
  3250                           ; Number of cases is 4, Range of values is 0 to 3
  3251                           ; switch strategies available:
  3252                           ; Name         Instructions Cycles
  3253                           ; simple_byte           13     7 (average)
  3254                           ;	Chosen strategy is simple_byte
  3255  010710  0A00               	xorlw	0	; case 0
  3256  010712  B4D8               	btfsc	status,2,c
  3257  010714  D781               	goto	l9328
  3258  010716  0A01               	xorlw	1	; case 1
  3259  010718  B4D8               	btfsc	status,2,c
  3260  01071A  D78F               	goto	l9330
  3261  01071C  0A03               	xorlw	3	; case 2
  3262  01071E  B4D8               	btfsc	status,2,c
  3263  010720  D7B0               	goto	l9334
  3264  010722  0A01               	xorlw	1	; case 3
  3265  010724  B4D8               	btfsc	status,2,c
  3266  010726  D7D1               	goto	l9338
  3267  010728                     l9346:
  3268                           
  3269                           ; BSR set to: 2
  3270                           ;Port.c: 560: Word_SetPair(&pInput->mType, 0, (UINT8)pType);
  3271  010728  0E08               	movlw	8
  3272  01072A  0102               	movlb	2	; () banked
  3273  01072C  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3274  01072E  0100               	movlb	0	; () banked
  3275  010730  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3276  010732  0E00               	movlw	0
  3277  010734  0102               	movlb	2	; () banked
  3278  010736  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3279  010738  0100               	movlb	0	; () banked
  3280  01073A  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3281  01073C  0E00               	movlw	0
  3282  01073E  0100               	movlb	0	; () banked
  3283  010740  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3284  010742  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3285  010746  EC8C  F08C         	call	_Word_SetPair	;wreg free
  3286                           
  3287                           ;Port.c: 561: Word_SetPair(&pInput->mType, 1, (UINT8)pType);
  3288  01074A  0E08               	movlw	8
  3289  01074C  0102               	movlb	2	; () banked
  3290  01074E  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3291  010750  0100               	movlb	0	; () banked
  3292  010752  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3293  010754  0E00               	movlw	0
  3294  010756  0102               	movlb	2	; () banked
  3295  010758  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3296  01075A  0100               	movlb	0	; () banked
  3297  01075C  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3298  01075E  0E01               	movlw	1
  3299  010760  0100               	movlb	0	; () banked
  3300  010762  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3301  010764  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3302  010768  EC8C  F08C         	call	_Word_SetPair	;wreg free
  3303                           
  3304                           ;Port.c: 562: Word_SetPair(&pInput->mType, 2, (UINT8)pType);
  3305  01076C  0E08               	movlw	8
  3306  01076E  0102               	movlb	2	; () banked
  3307  010770  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3308  010772  0100               	movlb	0	; () banked
  3309  010774  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3310  010776  0E00               	movlw	0
  3311  010778  0102               	movlb	2	; () banked
  3312  01077A  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3313  01077C  0100               	movlb	0	; () banked
  3314  01077E  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3315  010780  0E02               	movlw	2
  3316  010782  0100               	movlb	0	; () banked
  3317  010784  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3318  010786  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3319  01078A  EC8C  F08C         	call	_Word_SetPair	;wreg free
  3320                           
  3321                           ;Port.c: 563: Word_SetPair(&pInput->mType, 3, (UINT8)pType);
  3322  01078E  0E08               	movlw	8
  3323  010790  0102               	movlb	2	; () banked
  3324  010792  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3325  010794  0100               	movlb	0	; () banked
  3326  010796  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3327  010798  0E00               	movlw	0
  3328  01079A  0102               	movlb	2	; () banked
  3329  01079C  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3330  01079E  0100               	movlb	0	; () banked
  3331  0107A0  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3332  0107A2  0E03               	movlw	3
  3333  0107A4  0100               	movlb	0	; () banked
  3334  0107A6  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3335  0107A8  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3336  0107AC  EC8C  F08C         	call	_Word_SetPair	;wreg free
  3337                           
  3338                           ;Port.c: 564: Word_SetPair(&pInput->mType, 4, (UINT8)pType);
  3339  0107B0  0E08               	movlw	8
  3340  0107B2  0102               	movlb	2	; () banked
  3341  0107B4  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3342  0107B6  0100               	movlb	0	; () banked
  3343  0107B8  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3344  0107BA  0E00               	movlw	0
  3345  0107BC  0102               	movlb	2	; () banked
  3346  0107BE  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3347  0107C0  0100               	movlb	0	; () banked
  3348  0107C2  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3349  0107C4  0E04               	movlw	4
  3350  0107C6  0100               	movlb	0	; () banked
  3351  0107C8  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3352  0107CA  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3353  0107CE  EC8C  F08C         	call	_Word_SetPair	;wreg free
  3354                           
  3355                           ;Port.c: 565: Word_SetPair(&pInput->mType, 5, (UINT8)pType);
  3356  0107D2  0E08               	movlw	8
  3357  0107D4  0102               	movlb	2	; () banked
  3358  0107D6  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3359  0107D8  0100               	movlb	0	; () banked
  3360  0107DA  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3361  0107DC  0E00               	movlw	0
  3362  0107DE  0102               	movlb	2	; () banked
  3363  0107E0  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3364  0107E2  0100               	movlb	0	; () banked
  3365  0107E4  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3366  0107E6  0E05               	movlw	5
  3367  0107E8  0100               	movlb	0	; () banked
  3368  0107EA  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3369  0107EC  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3370  0107F0  EC8C  F08C         	call	_Word_SetPair	;wreg free
  3371                           
  3372                           ;Port.c: 566: Word_SetPair(&pInput->mType, 6, (UINT8)pType);
  3373  0107F4  0E08               	movlw	8
  3374  0107F6  0102               	movlb	2	; () banked
  3375  0107F8  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3376  0107FA  0100               	movlb	0	; () banked
  3377  0107FC  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3378  0107FE  0E00               	movlw	0
  3379  010800  0102               	movlb	2	; () banked
  3380  010802  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3381  010804  0100               	movlb	0	; () banked
  3382  010806  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3383  010808  0E06               	movlw	6
  3384  01080A  0100               	movlb	0	; () banked
  3385  01080C  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3386  01080E  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3387  010812  EC8C  F08C         	call	_Word_SetPair	;wreg free
  3388                           
  3389                           ;Port.c: 567: Word_SetPair(&pInput->mType, 7, (UINT8)pType);
  3390  010816  0E08               	movlw	8
  3391  010818  0102               	movlb	2	; () banked
  3392  01081A  2506               	addwf	Port_SetType@pInput& (0+255),w,b
  3393  01081C  0100               	movlb	0	; () banked
  3394  01081E  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  3395  010820  0E00               	movlw	0
  3396  010822  0102               	movlb	2	; () banked
  3397  010824  2107               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  3398  010826  0100               	movlb	0	; () banked
  3399  010828  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  3400  01082A  0E07               	movlw	7
  3401  01082C  0100               	movlb	0	; () banked
  3402  01082E  6FD9               	movwf	Word_SetPair@pPair& (0+255),b
  3403  010830  C208  F0DA         	movff	Port_SetType@pType,Word_SetPair@pValue
  3404  010834  EC8C  F08C         	call	_Word_SetPair	;wreg free
  3405  010838  0012               	return	
  3406  01083A                     __end_of_Port_SetType:
  3407                           	opt stack 0
  3408                           tblptru	equ	0xFF8
  3409                           tblptrh	equ	0xFF7
  3410                           tblptrl	equ	0xFF6
  3411                           tablat	equ	0xFF5
  3412                           prodl	equ	0xFF3
  3413                           postinc0	equ	0xFEE
  3414                           wreg	equ	0xFE8
  3415                           postdec1	equ	0xFE5
  3416                           fsr1h	equ	0xFE2
  3417                           fsr1l	equ	0xFE1
  3418                           indf2	equ	0xFDF
  3419                           postinc2	equ	0xFDE
  3420                           postdec2	equ	0xFDD
  3421                           fsr2h	equ	0xFDA
  3422                           fsr2l	equ	0xFD9
  3423                           status	equ	0xFD8
  3424                           
  3425 ;; *************** function _Port_CheckPortType *****************
  3426 ;; Defined at:
  3427 ;;		line 138 in file "Library/Port.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  pInput          2    3[BANK2 ] const PTR struct Port
  3430 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  3431 ;;		 -> PortD(10), PortC(10), PortF(10), 
  3432 ;;  pDrive          1    5[BANK2 ] enum E7413
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  Output          1   47[BANK0 ] enum E7419
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      enum E7419
  3437 ;; Registers used:
  3438 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3444 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3447 ;;      Totals:         0       1       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3448 ;;Total ram usage:        4 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:   13
  3451 ;; This function calls:
  3452 ;;		_Port_CheckQuadType
  3453 ;; This function is called by:
  3454 ;;		_Port_SetType
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text7
  3459  0118D0                     __ptext7:
  3460                           	opt stack 0
  3461  0118D0                     _Port_CheckPortType:
  3462                           	opt stack 15
  3463                           
  3464                           ;Port.c: 140: ePinError Output = ePinErrorState;
  3465                           
  3466                           ;incstack = 0
  3467  0118D0  0E05               	movlw	5
  3468  0118D2  0100               	movlb	0	; () banked
  3469  0118D4  6FF7               	movwf	Port_CheckPortType@Output& (0+255),b
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;Port.c: 143: if ((Output = Port_CheckQuadType(pInput, eP0_3, pDrive)) == ePinErrorNone)
  3473  0118D6  C203  F1FA         	movff	Port_CheckPortType@pInput,Port_CheckQuadType@pInput
  3474  0118DA  C204  F1FB         	movff	Port_CheckPortType@pInput+1,Port_CheckQuadType@pInput+1
  3475  0118DE  0E00               	movlw	0
  3476  0118E0  0101               	movlb	1	; () banked
  3477  0118E2  6FFC               	movwf	Port_CheckQuadType@pQuad& (0+255),b
  3478  0118E4  C205  F1FD         	movff	Port_CheckPortType@pDrive,Port_CheckQuadType@pDrive
  3479  0118E8  ECC4  F08B         	call	_Port_CheckQuadType	;wreg free
  3480  0118EC  0100               	movlb	0	; () banked
  3481  0118EE  6FF7               	movwf	Port_CheckPortType@Output& (0+255),b
  3482  0118F0  0100               	movlb	0	; () banked
  3483  0118F2  51F7               	movf	Port_CheckPortType@Output& (0+255),w,b
  3484  0118F4  A4D8               	btfss	status,2,c
  3485  0118F6  D00D               	goto	l9144
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;Port.c: 144: Output = Port_CheckQuadType(pInput, eP4_7, pDrive);
  3489  0118F8  C203  F1FA         	movff	Port_CheckPortType@pInput,Port_CheckQuadType@pInput
  3490  0118FC  C204  F1FB         	movff	Port_CheckPortType@pInput+1,Port_CheckQuadType@pInput+1
  3491  011900  0E01               	movlw	1
  3492  011902  0101               	movlb	1	; () banked
  3493  011904  6FFC               	movwf	Port_CheckQuadType@pQuad& (0+255),b
  3494  011906  C205  F1FD         	movff	Port_CheckPortType@pDrive,Port_CheckQuadType@pDrive
  3495  01190A  ECC4  F08B         	call	_Port_CheckQuadType	;wreg free
  3496  01190E  0100               	movlb	0	; () banked
  3497  011910  6FF7               	movwf	Port_CheckPortType@Output& (0+255),b
  3498  011912                     l9144:
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;Port.c: 146: return Output;
  3502  011912  0100               	movlb	0	; () banked
  3503  011914  51F7               	movf	Port_CheckPortType@Output& (0+255),w,b
  3504  011916  0012               	return	
  3505  011918                     __end_of_Port_CheckPortType:
  3506                           	opt stack 0
  3507                           tblptru	equ	0xFF8
  3508                           tblptrh	equ	0xFF7
  3509                           tblptrl	equ	0xFF6
  3510                           tablat	equ	0xFF5
  3511                           prodl	equ	0xFF3
  3512                           postinc0	equ	0xFEE
  3513                           wreg	equ	0xFE8
  3514                           postdec1	equ	0xFE5
  3515                           fsr1h	equ	0xFE2
  3516                           fsr1l	equ	0xFE1
  3517                           indf2	equ	0xFDF
  3518                           postinc2	equ	0xFDE
  3519                           postdec2	equ	0xFDD
  3520                           fsr2h	equ	0xFDA
  3521                           fsr2l	equ	0xFD9
  3522                           status	equ	0xFD8
  3523                           
  3524 ;; *************** function _Port_CheckQuadType *****************
  3525 ;; Defined at:
  3526 ;;		line 126 in file "Library/Port.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  pInput          2    0[BANK1 ] const PTR struct Port
  3529 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  3530 ;;		 -> PortD(10), PortC(10), PortF(10), 
  3531 ;;  pQuad           1    2[BANK1 ] enum E7720
  3532 ;;  pDrive          1    3[BANK1 ] enum E7413
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  Output          1    2[BANK2 ] enum E7419
  3535 ;;  Pair2           1    1[BANK2 ] enum E7704
  3536 ;;  Pair1           1    0[BANK2 ] enum E7704
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      enum E7419
  3539 ;; Registers used:
  3540 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3546 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Totals:         0       0       4       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;Total ram usage:        7 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:   12
  3553 ;; This function calls:
  3554 ;;		_Port_CheckPairType
  3555 ;; This function is called by:
  3556 ;;		_Port_CheckPortType
  3557 ;;		_Port_SetQuadType
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text8
  3562  011788                     __ptext8:
  3563                           	opt stack 0
  3564  011788                     _Port_CheckQuadType:
  3565                           	opt stack 15
  3566                           
  3567                           ;Port.c: 128: ePinError Output = ePinErrorState;
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;incstack = 0
  3571  011788  0E05               	movlw	5
  3572  01178A  0102               	movlb	2	; () banked
  3573  01178C  6F02               	movwf	Port_CheckQuadType@Output& (0+255),b
  3574                           
  3575                           ; BSR set to: 2
  3576                           ;Port.c: 129: ePair Pair1 = (ePair)((int)pQuad * 2);
  3577  01178E  0101               	movlb	1	; () banked
  3578  011790  51FC               	movf	Port_CheckQuadType@pQuad& (0+255),w,b
  3579  011792  0D02               	mullw	2
  3580  011794  CFF3 F200          	movff	prodl,Port_CheckQuadType@Pair1
  3581                           
  3582                           ; BSR set to: 1
  3583                           ;Port.c: 130: ePair Pair2 = (ePair)((int)pQuad * 2 + 1);
  3584  011798  0101               	movlb	1	; () banked
  3585  01179A  51FC               	movf	Port_CheckQuadType@pQuad& (0+255),w,b
  3586  01179C  0D02               	mullw	2
  3587  01179E  28F3               	incf	prodl,w,c
  3588  0117A0  0102               	movlb	2	; () banked
  3589  0117A2  6F01               	movwf	Port_CheckQuadType@Pair2& (0+255),b
  3590                           
  3591                           ; BSR set to: 2
  3592                           ;Port.c: 133: if ((Output = Port_CheckPairType(pInput, Pair1, pDrive)) == ePinErrorNone)
  3593  0117A4  C1FA  F0EE         	movff	Port_CheckQuadType@pInput,Port_CheckPairType@pInput
  3594  0117A8  C1FB  F0EF         	movff	Port_CheckQuadType@pInput+1,Port_CheckPairType@pInput+1
  3595  0117AC  C200  F0F0         	movff	Port_CheckQuadType@Pair1,Port_CheckPairType@pPair
  3596  0117B0  C1FD  F0F1         	movff	Port_CheckQuadType@pDrive,Port_CheckPairType@pDrive
  3597  0117B4  EC2C  F08B         	call	_Port_CheckPairType	;wreg free
  3598  0117B8  0102               	movlb	2	; () banked
  3599  0117BA  6F02               	movwf	Port_CheckQuadType@Output& (0+255),b
  3600  0117BC  0102               	movlb	2	; () banked
  3601  0117BE  5102               	movf	Port_CheckQuadType@Output& (0+255),w,b
  3602  0117C0  A4D8               	btfss	status,2,c
  3603  0117C2  D00C               	goto	l9098
  3604                           
  3605                           ; BSR set to: 2
  3606                           ;Port.c: 134: Output = Port_CheckPairType(pInput, Pair2, pDrive);
  3607  0117C4  C1FA  F0EE         	movff	Port_CheckQuadType@pInput,Port_CheckPairType@pInput
  3608  0117C8  C1FB  F0EF         	movff	Port_CheckQuadType@pInput+1,Port_CheckPairType@pInput+1
  3609  0117CC  C201  F0F0         	movff	Port_CheckQuadType@Pair2,Port_CheckPairType@pPair
  3610  0117D0  C1FD  F0F1         	movff	Port_CheckQuadType@pDrive,Port_CheckPairType@pDrive
  3611  0117D4  EC2C  F08B         	call	_Port_CheckPairType	;wreg free
  3612  0117D8  0102               	movlb	2	; () banked
  3613  0117DA  6F02               	movwf	Port_CheckQuadType@Output& (0+255),b
  3614  0117DC                     l9098:
  3615                           
  3616                           ; BSR set to: 2
  3617                           ;Port.c: 136: return Output;
  3618  0117DC  0102               	movlb	2	; () banked
  3619  0117DE  5102               	movf	Port_CheckQuadType@Output& (0+255),w,b
  3620  0117E0  0012               	return	
  3621  0117E2                     __end_of_Port_CheckQuadType:
  3622                           	opt stack 0
  3623                           tblptru	equ	0xFF8
  3624                           tblptrh	equ	0xFF7
  3625                           tblptrl	equ	0xFF6
  3626                           tablat	equ	0xFF5
  3627                           prodl	equ	0xFF3
  3628                           postinc0	equ	0xFEE
  3629                           wreg	equ	0xFE8
  3630                           postdec1	equ	0xFE5
  3631                           fsr1h	equ	0xFE2
  3632                           fsr1l	equ	0xFE1
  3633                           indf2	equ	0xFDF
  3634                           postinc2	equ	0xFDE
  3635                           postdec2	equ	0xFDD
  3636                           fsr2h	equ	0xFDA
  3637                           fsr2l	equ	0xFD9
  3638                           status	equ	0xFD8
  3639                           
  3640 ;; *************** function _Port_CheckPairType *****************
  3641 ;; Defined at:
  3642 ;;		line 112 in file "Library/Port.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  pInput          2   38[BANK0 ] const PTR struct Port
  3645 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  3646 ;;		 -> PortD(10), PortC(10), PortF(10), 
  3647 ;;  pPair           1   40[BANK0 ] enum E7704
  3648 ;;  pDrive          1   41[BANK0 ] enum E7413
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  Props           2   45[BANK0 ] PTR struct PortProperty
  3651 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  3652 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
  3653 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
  3654 ;;		 -> PortC(10), PortF(10), NULL(0), 
  3655 ;;  Output          1   44[BANK0 ] enum E7419
  3656 ;;  Pin2            1   43[BANK0 ] enum E7694
  3657 ;;  Pin1            1   42[BANK0 ] enum E7694
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      enum E7419
  3660 ;; Registers used:
  3661 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3667 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3668 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;Total ram usage:        9 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:   11
  3674 ;; This function calls:
  3675 ;;		_PortProperty_Valid
  3676 ;; This function is called by:
  3677 ;;		_Port_CheckQuadType
  3678 ;;		_Port_SetPairType
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text9
  3683  011658                     __ptext9:
  3684                           	opt stack 0
  3685  011658                     _Port_CheckPairType:
  3686                           	opt stack 15
  3687                           
  3688                           ;Port.c: 114: ePinError Output = ePinErrorState;
  3689                           
  3690                           ; BSR set to: 2
  3691                           ;incstack = 0
  3692  011658  0E05               	movlw	5
  3693  01165A  0100               	movlb	0	; () banked
  3694  01165C  6FF4               	movwf	Port_CheckPairType@Output& (0+255),b
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;Port.c: 116: PortPropertyPtr Props = (PortPropertyPtr)&(pInput->mProperties->mWord);
  3698  01165E  C0EE  FFD9         	movff	Port_CheckPairType@pInput,fsr2l
  3699  011662  C0EF  FFDA         	movff	Port_CheckPairType@pInput+1,fsr2h
  3700  011666  CFDE F0F5          	movff	postinc2,Port_CheckPairType@Props
  3701  01166A  CFDD F0F6          	movff	postdec2,Port_CheckPairType@Props+1
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;Port.c: 117: ePin Pin1 = (ePin)((int)pPair * 2);
  3705  01166E  0100               	movlb	0	; () banked
  3706  011670  51F0               	movf	Port_CheckPairType@pPair& (0+255),w,b
  3707  011672  0D02               	mullw	2
  3708  011674  CFF3 F0F2          	movff	prodl,Port_CheckPairType@Pin1
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;Port.c: 118: ePin Pin2 = (ePin)((int)pPair * 2 + 1);
  3712  011678  0100               	movlb	0	; () banked
  3713  01167A  51F0               	movf	Port_CheckPairType@pPair& (0+255),w,b
  3714  01167C  0D02               	mullw	2
  3715  01167E  28F3               	incf	prodl,w,c
  3716  011680  0100               	movlb	0	; () banked
  3717  011682  6FF3               	movwf	Port_CheckPairType@Pin2& (0+255),b
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;Port.c: 121: if ((Output = PortProperty_Valid(Props, pDrive, Pin1)) == ePinErrorNone)
  3721  011684  C0F5  F0D7         	movff	Port_CheckPairType@Props,PortProperty_Valid@pInput
  3722  011688  C0F6  F0D8         	movff	Port_CheckPairType@Props+1,PortProperty_Valid@pInput+1
  3723  01168C  C0F1  F0D9         	movff	Port_CheckPairType@pDrive,PortProperty_Valid@pPinDrive
  3724  011690  C0F2  F0DA         	movff	Port_CheckPairType@Pin1,PortProperty_Valid@pPin
  3725  011694  EC7E  F08A         	call	_PortProperty_Valid	;wreg free
  3726  011698  0100               	movlb	0	; () banked
  3727  01169A  6FF4               	movwf	Port_CheckPairType@Output& (0+255),b
  3728  01169C  0100               	movlb	0	; () banked
  3729  01169E  51F4               	movf	Port_CheckPairType@Output& (0+255),w,b
  3730  0116A0  A4D8               	btfss	status,2,c
  3731  0116A2  D00C               	goto	l9058
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;Port.c: 122: Output = PortProperty_Valid(Props, pDrive, Pin2);
  3735  0116A4  C0F5  F0D7         	movff	Port_CheckPairType@Props,PortProperty_Valid@pInput
  3736  0116A8  C0F6  F0D8         	movff	Port_CheckPairType@Props+1,PortProperty_Valid@pInput+1
  3737  0116AC  C0F1  F0D9         	movff	Port_CheckPairType@pDrive,PortProperty_Valid@pPinDrive
  3738  0116B0  C0F3  F0DA         	movff	Port_CheckPairType@Pin2,PortProperty_Valid@pPin
  3739  0116B4  EC7E  F08A         	call	_PortProperty_Valid	;wreg free
  3740  0116B8  0100               	movlb	0	; () banked
  3741  0116BA  6FF4               	movwf	Port_CheckPairType@Output& (0+255),b
  3742  0116BC                     l9058:
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;Port.c: 124: return Output;
  3746  0116BC  0100               	movlb	0	; () banked
  3747  0116BE  51F4               	movf	Port_CheckPairType@Output& (0+255),w,b
  3748  0116C0  0012               	return	
  3749  0116C2                     __end_of_Port_CheckPairType:
  3750                           	opt stack 0
  3751                           tblptru	equ	0xFF8
  3752                           tblptrh	equ	0xFF7
  3753                           tblptrl	equ	0xFF6
  3754                           tablat	equ	0xFF5
  3755                           prodl	equ	0xFF3
  3756                           postinc0	equ	0xFEE
  3757                           wreg	equ	0xFE8
  3758                           postdec1	equ	0xFE5
  3759                           fsr1h	equ	0xFE2
  3760                           fsr1l	equ	0xFE1
  3761                           indf2	equ	0xFDF
  3762                           postinc2	equ	0xFDE
  3763                           postdec2	equ	0xFDD
  3764                           fsr2h	equ	0xFDA
  3765                           fsr2l	equ	0xFD9
  3766                           status	equ	0xFD8
  3767                           
  3768 ;; *************** function _Port_Set *****************
  3769 ;; Defined at:
  3770 ;;		line 570 in file "Library/Port.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  pInput          2   15[BANK0 ] const PTR struct Port
  3773 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  3774 ;;		 -> PortD(10), PortC(10), PortF(10), 
  3775 ;;  pValue          1   17[BANK0 ] unsigned char 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  TypeActual      2   36[BANK0 ] unsigned short 
  3778 ;;  TypeRequired    2   34[BANK0 ] unsigned short 
  3779 ;;  Type            1   38[BANK0 ] enum E7739
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3789 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;Total ram usage:       24 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:   10
  3796 ;; This function calls:
  3797 ;;		_Byte_SetByte
  3798 ;;		_Word_GetPair
  3799 ;; This function is called by:
  3800 ;;		_Port_Init
  3801 ;;		_Port_Toggle
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text10
  3806  010000                     __ptext10:
  3807                           	opt stack 0
  3808  010000                     _Port_Set:
  3809                           	opt stack 18
  3810                           
  3811                           ;Port.c: 572: ePinType Type = (ePinType)Word_GetPair(&pInput->mType, 0);
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;incstack = 0
  3815  010000  0E08               	movlw	8
  3816  010002  0100               	movlb	0	; () banked
  3817  010004  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  3818  010006  0100               	movlb	0	; () banked
  3819  010008  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  3820  01000A  0E00               	movlw	0
  3821  01000C  0100               	movlb	0	; () banked
  3822  01000E  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  3823  010010  0100               	movlb	0	; () banked
  3824  010012  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  3825  010014  0E00               	movlw	0
  3826  010016  0100               	movlb	0	; () banked
  3827  010018  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  3828  01001A  ECF0  F08C         	call	_Word_GetPair	;wreg free
  3829  01001E  0100               	movlb	0	; () banked
  3830  010020  6FEE               	movwf	Port_Set@Type& (0+255),b
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;Port.c: 573: UINT16 TypeRequired = Type | (Type << 2) | (Type << 4) | (Type << 6) | (Ty
      +                          pe << 8) | (Type << 10) | (Type << 12) | (Type << 14);
  3834  010022  0100               	movlb	0	; () banked
  3835  010024  51EE               	movf	Port_Set@Type& (0+255),w,b
  3836  010026  0100               	movlb	0	; () banked
  3837  010028  6FDA               	movwf	??_Port_Set& (0+255),b
  3838  01002A  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  3839  01002C  0E0E               	movlw	14
  3840  01002E                     u5955:
  3841  01002E  90D8               	bcf	status,0,c
  3842  010030  0100               	movlb	0	; () banked
  3843  010032  37DA               	rlcf	??_Port_Set& (0+255),f,b
  3844  010034  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  3845  010036  2EE8               	decfsz	wreg,f,c
  3846  010038  D7FA               	goto	u5955
  3847  01003A  0100               	movlb	0	; () banked
  3848  01003C  51EE               	movf	Port_Set@Type& (0+255),w,b
  3849  01003E  0100               	movlb	0	; () banked
  3850  010040  6FDC               	movwf	(??_Port_Set+2)& (0+255),b
  3851  010042  6BDD               	clrf	(??_Port_Set+3)& (0+255),b
  3852  010044  0E0C               	movlw	12
  3853  010046                     u5965:
  3854  010046  90D8               	bcf	status,0,c
  3855  010048  0100               	movlb	0	; () banked
  3856  01004A  37DC               	rlcf	(??_Port_Set+2)& (0+255),f,b
  3857  01004C  37DD               	rlcf	(??_Port_Set+3)& (0+255),f,b
  3858  01004E  2EE8               	decfsz	wreg,f,c
  3859  010050  D7FA               	goto	u5965
  3860  010052  0100               	movlb	0	; () banked
  3861  010054  51EE               	movf	Port_Set@Type& (0+255),w,b
  3862  010056  0100               	movlb	0	; () banked
  3863  010058  6FDE               	movwf	(??_Port_Set+4)& (0+255),b
  3864  01005A  6BDF               	clrf	(??_Port_Set+5)& (0+255),b
  3865  01005C  0E0A               	movlw	10
  3866  01005E                     u5975:
  3867  01005E  90D8               	bcf	status,0,c
  3868  010060  0100               	movlb	0	; () banked
  3869  010062  37DE               	rlcf	(??_Port_Set+4)& (0+255),f,b
  3870  010064  37DF               	rlcf	(??_Port_Set+5)& (0+255),f,b
  3871  010066  2EE8               	decfsz	wreg,f,c
  3872  010068  D7FA               	goto	u5975
  3873  01006A  0100               	movlb	0	; () banked
  3874  01006C  51EE               	movf	Port_Set@Type& (0+255),w,b
  3875  01006E  0100               	movlb	0	; () banked
  3876  010070  6FE1               	movwf	(??_Port_Set+7)& (0+255),b
  3877  010072  6BE0               	clrf	(??_Port_Set+6)& (0+255),b
  3878  010074  0100               	movlb	0	; () banked
  3879  010076  51EE               	movf	Port_Set@Type& (0+255),w,b
  3880  010078  0100               	movlb	0	; () banked
  3881  01007A  6FE2               	movwf	(??_Port_Set+8)& (0+255),b
  3882  01007C  6BE3               	clrf	(??_Port_Set+9)& (0+255),b
  3883  01007E  0E06               	movlw	6
  3884  010080                     u5985:
  3885  010080  90D8               	bcf	status,0,c
  3886  010082  0100               	movlb	0	; () banked
  3887  010084  37E2               	rlcf	(??_Port_Set+8)& (0+255),f,b
  3888  010086  37E3               	rlcf	(??_Port_Set+9)& (0+255),f,b
  3889  010088  2EE8               	decfsz	wreg,f,c
  3890  01008A  D7FA               	goto	u5985
  3891  01008C  0100               	movlb	0	; () banked
  3892  01008E  51EE               	movf	Port_Set@Type& (0+255),w,b
  3893  010090  0100               	movlb	0	; () banked
  3894  010092  6FE4               	movwf	(??_Port_Set+10)& (0+255),b
  3895  010094  6BE5               	clrf	(??_Port_Set+11)& (0+255),b
  3896  010096  0100               	movlb	0	; () banked
  3897  010098  3BE4               	swapf	(??_Port_Set+10)& (0+255),f,b
  3898  01009A  3BE5               	swapf	(??_Port_Set+11)& (0+255),f,b
  3899  01009C  0EF0               	movlw	240
  3900  01009E  17E5               	andwf	(??_Port_Set+11)& (0+255),f,b
  3901  0100A0  51E4               	movf	(??_Port_Set+10)& (0+255),w,b
  3902  0100A2  0B0F               	andlw	15
  3903  0100A4  13E5               	iorwf	(??_Port_Set+11)& (0+255),f,b
  3904  0100A6  0EF0               	movlw	240
  3905  0100A8  17E4               	andwf	(??_Port_Set+10)& (0+255),f,b
  3906  0100AA  0100               	movlb	0	; () banked
  3907  0100AC  51EE               	movf	Port_Set@Type& (0+255),w,b
  3908  0100AE  0100               	movlb	0	; () banked
  3909  0100B0  6FE6               	movwf	(??_Port_Set+12)& (0+255),b
  3910  0100B2  6BE7               	clrf	(??_Port_Set+13)& (0+255),b
  3911  0100B4  0100               	movlb	0	; () banked
  3912  0100B6  90D8               	bcf	status,0,c
  3913  0100B8  37E6               	rlcf	(??_Port_Set+12)& (0+255),f,b
  3914  0100BA  37E7               	rlcf	(??_Port_Set+13)& (0+255),f,b
  3915  0100BC  0100               	movlb	0	; () banked
  3916  0100BE  90D8               	bcf	status,0,c
  3917  0100C0  37E6               	rlcf	(??_Port_Set+12)& (0+255),f,b
  3918  0100C2  37E7               	rlcf	(??_Port_Set+13)& (0+255),f,b
  3919  0100C4  0100               	movlb	0	; () banked
  3920  0100C6  51EE               	movf	Port_Set@Type& (0+255),w,b
  3921  0100C8  0100               	movlb	0	; () banked
  3922  0100CA  6FE8               	movwf	(??_Port_Set+14)& (0+255),b
  3923  0100CC  6BE9               	clrf	(??_Port_Set+15)& (0+255),b
  3924  0100CE  0100               	movlb	0	; () banked
  3925  0100D0  51E6               	movf	(??_Port_Set+12)& (0+255),w,b
  3926  0100D2  0100               	movlb	0	; () banked
  3927  0100D4  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  3928  0100D6  0100               	movlb	0	; () banked
  3929  0100D8  51E7               	movf	(??_Port_Set+13)& (0+255),w,b
  3930  0100DA  0100               	movlb	0	; () banked
  3931  0100DC  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  3932  0100DE  0100               	movlb	0	; () banked
  3933  0100E0  51E4               	movf	(??_Port_Set+10)& (0+255),w,b
  3934  0100E2  0100               	movlb	0	; () banked
  3935  0100E4  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  3936  0100E6  0100               	movlb	0	; () banked
  3937  0100E8  51E5               	movf	(??_Port_Set+11)& (0+255),w,b
  3938  0100EA  0100               	movlb	0	; () banked
  3939  0100EC  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  3940  0100EE  0100               	movlb	0	; () banked
  3941  0100F0  51E2               	movf	(??_Port_Set+8)& (0+255),w,b
  3942  0100F2  0100               	movlb	0	; () banked
  3943  0100F4  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  3944  0100F6  0100               	movlb	0	; () banked
  3945  0100F8  51E3               	movf	(??_Port_Set+9)& (0+255),w,b
  3946  0100FA  0100               	movlb	0	; () banked
  3947  0100FC  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  3948  0100FE  0100               	movlb	0	; () banked
  3949  010100  51E0               	movf	(??_Port_Set+6)& (0+255),w,b
  3950  010102  0100               	movlb	0	; () banked
  3951  010104  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  3952  010106  0100               	movlb	0	; () banked
  3953  010108  51E1               	movf	(??_Port_Set+7)& (0+255),w,b
  3954  01010A  0100               	movlb	0	; () banked
  3955  01010C  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  3956  01010E  0100               	movlb	0	; () banked
  3957  010110  51DE               	movf	(??_Port_Set+4)& (0+255),w,b
  3958  010112  0100               	movlb	0	; () banked
  3959  010114  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  3960  010116  0100               	movlb	0	; () banked
  3961  010118  51DF               	movf	(??_Port_Set+5)& (0+255),w,b
  3962  01011A  0100               	movlb	0	; () banked
  3963  01011C  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  3964  01011E  0100               	movlb	0	; () banked
  3965  010120  51DC               	movf	(??_Port_Set+2)& (0+255),w,b
  3966  010122  0100               	movlb	0	; () banked
  3967  010124  13E8               	iorwf	(??_Port_Set+14)& (0+255),f,b
  3968  010126  0100               	movlb	0	; () banked
  3969  010128  51DD               	movf	(??_Port_Set+3)& (0+255),w,b
  3970  01012A  0100               	movlb	0	; () banked
  3971  01012C  13E9               	iorwf	(??_Port_Set+15)& (0+255),f,b
  3972  01012E  0100               	movlb	0	; () banked
  3973  010130  51DA               	movf	??_Port_Set& (0+255),w,b
  3974  010132  0100               	movlb	0	; () banked
  3975  010134  11E8               	iorwf	(??_Port_Set+14)& (0+255),w,b
  3976  010136  0100               	movlb	0	; () banked
  3977  010138  6FEA               	movwf	Port_Set@TypeRequired& (0+255),b
  3978  01013A  0100               	movlb	0	; () banked
  3979  01013C  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  3980  01013E  0100               	movlb	0	; () banked
  3981  010140  11E9               	iorwf	(??_Port_Set+15)& (0+255),w,b
  3982  010142  0100               	movlb	0	; () banked
  3983  010144  6FEB               	movwf	(Port_Set@TypeRequired+1)& (0+255),b
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;Port.c: 574: UINT16 TypeActual = Type;
  3987  010146  C0EE  F0EC         	movff	Port_Set@Type,Port_Set@TypeActual
  3988  01014A  0100               	movlb	0	; () banked
  3989  01014C  6BED               	clrf	(Port_Set@TypeActual+1)& (0+255),b
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;Port.c: 575: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 1) << 2;
  3993  01014E  0E08               	movlw	8
  3994  010150  0100               	movlb	0	; () banked
  3995  010152  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  3996  010154  0100               	movlb	0	; () banked
  3997  010156  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  3998  010158  0E00               	movlw	0
  3999  01015A  0100               	movlb	0	; () banked
  4000  01015C  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4001  01015E  0100               	movlb	0	; () banked
  4002  010160  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4003  010162  0E01               	movlw	1
  4004  010164  0100               	movlb	0	; () banked
  4005  010166  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4006  010168  ECF0  F08C         	call	_Word_GetPair	;wreg free
  4007  01016C  0100               	movlb	0	; () banked
  4008  01016E  6FDA               	movwf	??_Port_Set& (0+255),b
  4009  010170  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4010  010172  0100               	movlb	0	; () banked
  4011  010174  90D8               	bcf	status,0,c
  4012  010176  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4013  010178  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4014  01017A  0100               	movlb	0	; () banked
  4015  01017C  90D8               	bcf	status,0,c
  4016  01017E  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4017  010180  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4018  010182  0100               	movlb	0	; () banked
  4019  010184  51DA               	movf	??_Port_Set& (0+255),w,b
  4020  010186  0100               	movlb	0	; () banked
  4021  010188  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4022  01018A  0100               	movlb	0	; () banked
  4023  01018C  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4024  01018E  0100               	movlb	0	; () banked
  4025  010190  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;Port.c: 576: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 2) << 4;
  4029  010192  0E08               	movlw	8
  4030  010194  0100               	movlb	0	; () banked
  4031  010196  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4032  010198  0100               	movlb	0	; () banked
  4033  01019A  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4034  01019C  0E00               	movlw	0
  4035  01019E  0100               	movlb	0	; () banked
  4036  0101A0  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4037  0101A2  0100               	movlb	0	; () banked
  4038  0101A4  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4039  0101A6  0E02               	movlw	2
  4040  0101A8  0100               	movlb	0	; () banked
  4041  0101AA  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4042  0101AC  ECF0  F08C         	call	_Word_GetPair	;wreg free
  4043  0101B0  0100               	movlb	0	; () banked
  4044  0101B2  6FDA               	movwf	??_Port_Set& (0+255),b
  4045  0101B4  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4046  0101B6  0100               	movlb	0	; () banked
  4047  0101B8  3BDA               	swapf	??_Port_Set& (0+255),f,b
  4048  0101BA  3BDB               	swapf	(??_Port_Set+1)& (0+255),f,b
  4049  0101BC  0EF0               	movlw	240
  4050  0101BE  17DB               	andwf	(??_Port_Set+1)& (0+255),f,b
  4051  0101C0  51DA               	movf	??_Port_Set& (0+255),w,b
  4052  0101C2  0B0F               	andlw	15
  4053  0101C4  13DB               	iorwf	(??_Port_Set+1)& (0+255),f,b
  4054  0101C6  0EF0               	movlw	240
  4055  0101C8  17DA               	andwf	??_Port_Set& (0+255),f,b
  4056  0101CA  0100               	movlb	0	; () banked
  4057  0101CC  51DA               	movf	??_Port_Set& (0+255),w,b
  4058  0101CE  0100               	movlb	0	; () banked
  4059  0101D0  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4060  0101D2  0100               	movlb	0	; () banked
  4061  0101D4  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4062  0101D6  0100               	movlb	0	; () banked
  4063  0101D8  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;Port.c: 577: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 3) << 6;
  4067  0101DA  0E08               	movlw	8
  4068  0101DC  0100               	movlb	0	; () banked
  4069  0101DE  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4070  0101E0  0100               	movlb	0	; () banked
  4071  0101E2  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4072  0101E4  0E00               	movlw	0
  4073  0101E6  0100               	movlb	0	; () banked
  4074  0101E8  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4075  0101EA  0100               	movlb	0	; () banked
  4076  0101EC  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4077  0101EE  0E03               	movlw	3
  4078  0101F0  0100               	movlb	0	; () banked
  4079  0101F2  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4080  0101F4  ECF0  F08C         	call	_Word_GetPair	;wreg free
  4081  0101F8  0100               	movlb	0	; () banked
  4082  0101FA  6FDA               	movwf	??_Port_Set& (0+255),b
  4083  0101FC  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4084  0101FE  0E06               	movlw	6
  4085  010200                     u5995:
  4086  010200  90D8               	bcf	status,0,c
  4087  010202  0100               	movlb	0	; () banked
  4088  010204  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4089  010206  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4090  010208  2EE8               	decfsz	wreg,f,c
  4091  01020A  D7FA               	goto	u5995
  4092  01020C  0100               	movlb	0	; () banked
  4093  01020E  51DA               	movf	??_Port_Set& (0+255),w,b
  4094  010210  0100               	movlb	0	; () banked
  4095  010212  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4096  010214  0100               	movlb	0	; () banked
  4097  010216  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4098  010218  0100               	movlb	0	; () banked
  4099  01021A  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;Port.c: 578: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 4) << 8;
  4103  01021C  0E08               	movlw	8
  4104  01021E  0100               	movlb	0	; () banked
  4105  010220  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4106  010222  0100               	movlb	0	; () banked
  4107  010224  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4108  010226  0E00               	movlw	0
  4109  010228  0100               	movlb	0	; () banked
  4110  01022A  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4111  01022C  0100               	movlb	0	; () banked
  4112  01022E  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4113  010230  0E04               	movlw	4
  4114  010232  0100               	movlb	0	; () banked
  4115  010234  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4116  010236  ECF0  F08C         	call	_Word_GetPair	;wreg free
  4117  01023A  0100               	movlb	0	; () banked
  4118  01023C  6FDA               	movwf	??_Port_Set& (0+255),b
  4119  01023E  0100               	movlb	0	; () banked
  4120  010240  51DA               	movf	??_Port_Set& (0+255),w,b
  4121  010242  0100               	movlb	0	; () banked
  4122  010244  6FDC               	movwf	(??_Port_Set+2)& (0+255),b
  4123  010246  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4124  010248  0100               	movlb	0	; () banked
  4125  01024A  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4126  01024C  0100               	movlb	0	; () banked
  4127  01024E  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4128  010250  0100               	movlb	0	; () banked
  4129  010252  51DC               	movf	(??_Port_Set+2)& (0+255),w,b
  4130  010254  0100               	movlb	0	; () banked
  4131  010256  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;Port.c: 579: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 5) << 10;
  4135  010258  0E08               	movlw	8
  4136  01025A  0100               	movlb	0	; () banked
  4137  01025C  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4138  01025E  0100               	movlb	0	; () banked
  4139  010260  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4140  010262  0E00               	movlw	0
  4141  010264  0100               	movlb	0	; () banked
  4142  010266  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4143  010268  0100               	movlb	0	; () banked
  4144  01026A  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4145  01026C  0E05               	movlw	5
  4146  01026E  0100               	movlb	0	; () banked
  4147  010270  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4148  010272  ECF0  F08C         	call	_Word_GetPair	;wreg free
  4149  010276  0100               	movlb	0	; () banked
  4150  010278  6FDA               	movwf	??_Port_Set& (0+255),b
  4151  01027A  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4152  01027C  0E0A               	movlw	10
  4153  01027E                     u6005:
  4154  01027E  90D8               	bcf	status,0,c
  4155  010280  0100               	movlb	0	; () banked
  4156  010282  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4157  010284  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4158  010286  2EE8               	decfsz	wreg,f,c
  4159  010288  D7FA               	goto	u6005
  4160  01028A  0100               	movlb	0	; () banked
  4161  01028C  51DA               	movf	??_Port_Set& (0+255),w,b
  4162  01028E  0100               	movlb	0	; () banked
  4163  010290  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4164  010292  0100               	movlb	0	; () banked
  4165  010294  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4166  010296  0100               	movlb	0	; () banked
  4167  010298  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;Port.c: 580: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 6) << 12;
  4171  01029A  0E08               	movlw	8
  4172  01029C  0100               	movlb	0	; () banked
  4173  01029E  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4174  0102A0  0100               	movlb	0	; () banked
  4175  0102A2  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4176  0102A4  0E00               	movlw	0
  4177  0102A6  0100               	movlb	0	; () banked
  4178  0102A8  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4179  0102AA  0100               	movlb	0	; () banked
  4180  0102AC  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4181  0102AE  0E06               	movlw	6
  4182  0102B0  0100               	movlb	0	; () banked
  4183  0102B2  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4184  0102B4  ECF0  F08C         	call	_Word_GetPair	;wreg free
  4185  0102B8  0100               	movlb	0	; () banked
  4186  0102BA  6FDA               	movwf	??_Port_Set& (0+255),b
  4187  0102BC  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4188  0102BE  0E0C               	movlw	12
  4189  0102C0                     u6015:
  4190  0102C0  90D8               	bcf	status,0,c
  4191  0102C2  0100               	movlb	0	; () banked
  4192  0102C4  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4193  0102C6  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4194  0102C8  2EE8               	decfsz	wreg,f,c
  4195  0102CA  D7FA               	goto	u6015
  4196  0102CC  0100               	movlb	0	; () banked
  4197  0102CE  51DA               	movf	??_Port_Set& (0+255),w,b
  4198  0102D0  0100               	movlb	0	; () banked
  4199  0102D2  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4200  0102D4  0100               	movlb	0	; () banked
  4201  0102D6  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4202  0102D8  0100               	movlb	0	; () banked
  4203  0102DA  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;Port.c: 581: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 7) << 14;
  4207  0102DC  0E08               	movlw	8
  4208  0102DE  0100               	movlb	0	; () banked
  4209  0102E0  25D7               	addwf	Port_Set@pInput& (0+255),w,b
  4210  0102E2  0100               	movlb	0	; () banked
  4211  0102E4  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  4212  0102E6  0E00               	movlw	0
  4213  0102E8  0100               	movlb	0	; () banked
  4214  0102EA  21D8               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
  4215  0102EC  0100               	movlb	0	; () banked
  4216  0102EE  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  4217  0102F0  0E07               	movlw	7
  4218  0102F2  0100               	movlb	0	; () banked
  4219  0102F4  6FD6               	movwf	Word_GetPair@pPair& (0+255),b
  4220  0102F6  ECF0  F08C         	call	_Word_GetPair	;wreg free
  4221  0102FA  0100               	movlb	0	; () banked
  4222  0102FC  6FDA               	movwf	??_Port_Set& (0+255),b
  4223  0102FE  6BDB               	clrf	(??_Port_Set+1)& (0+255),b
  4224  010300  0E0E               	movlw	14
  4225  010302                     u6025:
  4226  010302  90D8               	bcf	status,0,c
  4227  010304  0100               	movlb	0	; () banked
  4228  010306  37DA               	rlcf	??_Port_Set& (0+255),f,b
  4229  010308  37DB               	rlcf	(??_Port_Set+1)& (0+255),f,b
  4230  01030A  2EE8               	decfsz	wreg,f,c
  4231  01030C  D7FA               	goto	u6025
  4232  01030E  0100               	movlb	0	; () banked
  4233  010310  51DA               	movf	??_Port_Set& (0+255),w,b
  4234  010312  0100               	movlb	0	; () banked
  4235  010314  13EC               	iorwf	Port_Set@TypeActual& (0+255),f,b
  4236  010316  0100               	movlb	0	; () banked
  4237  010318  51DB               	movf	(??_Port_Set+1)& (0+255),w,b
  4238  01031A  0100               	movlb	0	; () banked
  4239  01031C  13ED               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
  4240                           
  4241                           ;Port.c: 584: if (TypeRequired == TypeActual)
  4242  01031E  0100               	movlb	0	; () banked
  4243  010320  51EC               	movf	Port_Set@TypeActual& (0+255),w,b
  4244  010322  0100               	movlb	0	; () banked
  4245  010324  19EA               	xorwf	Port_Set@TypeRequired& (0+255),w,b
  4246  010326  E148               	bnz	l528
  4247  010328  0100               	movlb	0	; () banked
  4248  01032A  51ED               	movf	(Port_Set@TypeActual+1)& (0+255),w,b
  4249  01032C  0100               	movlb	0	; () banked
  4250  01032E  19EB               	xorwf	(Port_Set@TypeRequired+1)& (0+255),w,b
  4251  010330  A4D8               	btfss	status,2,c
  4252  010332  0012               	return	
  4253  010334  D032               	goto	l9382
  4254  010336                     l9372:
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;Port.c: 593: Byte_SetByte(pInput->mDirection, pValue);
  4258  010336  0100               	movlb	0	; () banked
  4259  010338  EE20 F002          	lfsr	2,2
  4260  01033C  51D7               	movf	Port_Set@pInput& (0+255),w,b
  4261  01033E  26D9               	addwf	fsr2l,f,c
  4262  010340  51D8               	movf	(Port_Set@pInput+1)& (0+255),w,b
  4263  010342  22DA               	addwfc	fsr2h,f,c
  4264  010344  CFDE F0C8          	movff	postinc2,Byte_SetByte@pInput
  4265  010348  CFDD F0C9          	movff	postdec2,Byte_SetByte@pInput+1
  4266  01034C  C0D9  F0CA         	movff	Port_Set@pValue,Byte_SetByte@pValue
  4267  010350  ECD9  F08D         	call	_Byte_SetByte	;wreg free
  4268                           
  4269                           ;Port.c: 594: break;
  4270  010354  0012               	return	
  4271  010356                     l9374:
  4272                           
  4273                           ;Port.c: 597: pValue = ~pValue;
  4274  010356  0100               	movlb	0	; () banked
  4275  010358  1FD9               	comf	Port_Set@pValue& (0+255),f,b
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;Port.c: 598: Byte_SetByte(pInput->mDirection, pValue);
  4279  01035A  0100               	movlb	0	; () banked
  4280  01035C  EE20 F002          	lfsr	2,2
  4281  010360  51D7               	movf	Port_Set@pInput& (0+255),w,b
  4282  010362  26D9               	addwf	fsr2l,f,c
  4283  010364  51D8               	movf	(Port_Set@pInput+1)& (0+255),w,b
  4284  010366  22DA               	addwfc	fsr2h,f,c
  4285  010368  CFDE F0C8          	movff	postinc2,Byte_SetByte@pInput
  4286  01036C  CFDD F0C9          	movff	postdec2,Byte_SetByte@pInput+1
  4287  010370  C0D9  F0CA         	movff	Port_Set@pValue,Byte_SetByte@pValue
  4288  010374  ECD9  F08D         	call	_Byte_SetByte	;wreg free
  4289                           
  4290                           ;Port.c: 599: break;
  4291  010378  0012               	return	
  4292  01037A                     l9378:
  4293                           
  4294                           ;Port.c: 602: Byte_SetByte(pInput->mOutput, pValue);
  4295  01037A  0100               	movlb	0	; () banked
  4296  01037C  EE20 F004          	lfsr	2,4
  4297  010380  51D7               	movf	Port_Set@pInput& (0+255),w,b
  4298  010382  26D9               	addwf	fsr2l,f,c
  4299  010384  51D8               	movf	(Port_Set@pInput+1)& (0+255),w,b
  4300  010386  22DA               	addwfc	fsr2h,f,c
  4301  010388  CFDE F0C8          	movff	postinc2,Byte_SetByte@pInput
  4302  01038C  CFDD F0C9          	movff	postdec2,Byte_SetByte@pInput+1
  4303  010390  C0D9  F0CA         	movff	Port_Set@pValue,Byte_SetByte@pValue
  4304  010394  ECD9  F08D         	call	_Byte_SetByte	;wreg free
  4305                           
  4306                           ;Port.c: 606: }
  4307                           
  4308                           ;Port.c: 605: break;
  4309                           
  4310                           ;Port.c: 604: default:
  4311                           
  4312                           ;Port.c: 603: break;
  4313  010398  0012               	return	
  4314  01039A                     l9382:
  4315  01039A  0100               	movlb	0	; () banked
  4316  01039C  51EE               	movf	Port_Set@Type& (0+255),w,b
  4317                           
  4318                           ; Switch size 1, requested type "space"
  4319                           ; Number of cases is 4, Range of values is 0 to 3
  4320                           ; switch strategies available:
  4321                           ; Name         Instructions Cycles
  4322                           ; simple_byte           13     7 (average)
  4323                           ;	Chosen strategy is simple_byte
  4324  01039E  0A00               	xorlw	0	; case 0
  4325  0103A0  B4D8               	btfsc	status,2,c
  4326  0103A2  0012               	return	
  4327  0103A4  0A01               	xorlw	1	; case 1
  4328  0103A6  B4D8               	btfsc	status,2,c
  4329  0103A8  D7C6               	goto	l9372
  4330  0103AA  0A03               	xorlw	3	; case 2
  4331  0103AC  B4D8               	btfsc	status,2,c
  4332  0103AE  D7D3               	goto	l9374
  4333  0103B0  0A01               	xorlw	1	; case 3
  4334  0103B2  A4D8               	btfss	status,2,c
  4335                           
  4336                           ; BSR set to: 0
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;Port.c: 607: }
  4340  0103B4  0012               	return	
  4341  0103B6  D7E1               	goto	l9378
  4342  0103B8                     l528:
  4343  0103B8  0012               	return		;funcret
  4344  0103BA                     __end_of_Port_Set:
  4345                           	opt stack 0
  4346                           tblptru	equ	0xFF8
  4347                           tblptrh	equ	0xFF7
  4348                           tblptrl	equ	0xFF6
  4349                           tablat	equ	0xFF5
  4350                           prodl	equ	0xFF3
  4351                           postinc0	equ	0xFEE
  4352                           wreg	equ	0xFE8
  4353                           postdec1	equ	0xFE5
  4354                           fsr1h	equ	0xFE2
  4355                           fsr1l	equ	0xFE1
  4356                           indf2	equ	0xFDF
  4357                           postinc2	equ	0xFDE
  4358                           postdec2	equ	0xFDD
  4359                           fsr2h	equ	0xFDA
  4360                           fsr2l	equ	0xFD9
  4361                           status	equ	0xFD8
  4362                           
  4363 ;; *************** function _Byte_SetByte *****************
  4364 ;; Defined at:
  4365 ;;		line 110 in file "Library/Types.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;  pInput          2    0[BANK0 ] PTR struct Byte
  4368 ;;		 -> SSP2CON2(1), SSP1CON2(1), TRISG(1), TRISF(1), 
  4369 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
  4370 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
  4371 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
  4372 ;;		 -> NULL(0), 
  4373 ;;  pValue          1    2[BANK0 ] unsigned char 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		fsr2l, fsr2h
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4385 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;Total ram usage:        3 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    7
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_Port_Set
  4396 ;;		_I2C_Init
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text11
  4401  011BB2                     __ptext11:
  4402                           	opt stack 0
  4403  011BB2                     _Byte_SetByte:
  4404                           	opt stack 20
  4405                           
  4406                           ;Types.c: 112: pInput->mBits = (pValue & 0xFF);
  4407                           
  4408                           ;incstack = 0
  4409  011BB2  C0C8  FFD9         	movff	Byte_SetByte@pInput,fsr2l
  4410  011BB6  C0C9  FFDA         	movff	Byte_SetByte@pInput+1,fsr2h
  4411  011BBA  C0CA  FFDF         	movff	Byte_SetByte@pValue,indf2
  4412  011BBE  0012               	return		;funcret
  4413  011BC0                     __end_of_Byte_SetByte:
  4414                           	opt stack 0
  4415                           tblptru	equ	0xFF8
  4416                           tblptrh	equ	0xFF7
  4417                           tblptrl	equ	0xFF6
  4418                           tablat	equ	0xFF5
  4419                           prodl	equ	0xFF3
  4420                           postinc0	equ	0xFEE
  4421                           wreg	equ	0xFE8
  4422                           postdec1	equ	0xFE5
  4423                           fsr1h	equ	0xFE2
  4424                           fsr1l	equ	0xFE1
  4425                           indf2	equ	0xFDF
  4426                           postinc2	equ	0xFDE
  4427                           postdec2	equ	0xFDD
  4428                           fsr2h	equ	0xFDA
  4429                           fsr2l	equ	0xFD9
  4430                           status	equ	0xFD8
  4431                           
  4432 ;; *************** function _GetPortTRIS *****************
  4433 ;; Defined at:
  4434 ;;		line 67 in file "Library/Port.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  pInput          1    wreg     enum E7730
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  pInput          1    2[BANK0 ] enum E7730
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  2    0[BANK0 ] PTR struct Byte
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4448 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4449 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;Total ram usage:        3 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    7
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_Port_Init
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text12
  4463  01114C                     __ptext12:
  4464                           	opt stack 0
  4465  01114C                     _GetPortTRIS:
  4466                           	opt stack 21
  4467                           
  4468                           ;incstack = 0
  4469                           ;GetPortTRIS@pInput stored from wreg
  4470  01114C  0100               	movlb	0	; () banked
  4471  01114E  6FCA               	movwf	GetPortTRIS@pInput& (0+255),b
  4472                           
  4473                           ;Port.c: 69: switch (pInput)
  4474  011150  D038               	goto	l9324
  4475  011152                     l9290:
  4476                           
  4477                           ;Port.c: 72: return (BytePtr)&TRISA;
  4478  011152  0E92               	movlw	146
  4479  011154  0100               	movlb	0	; () banked
  4480  011156  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4481  011158  0E0F               	movlw	15
  4482  01115A  0100               	movlb	0	; () banked
  4483  01115C  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4484                           
  4485                           ; BSR set to: 0
  4486  01115E  0012               	return	
  4487  011160                     l9294:
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;Port.c: 74: return (BytePtr)&TRISB;
  4491  011160  0E93               	movlw	147
  4492  011162  0100               	movlb	0	; () banked
  4493  011164  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4494  011166  0E0F               	movlw	15
  4495  011168  0100               	movlb	0	; () banked
  4496  01116A  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4497                           
  4498                           ; BSR set to: 0
  4499  01116C  0012               	return	
  4500  01116E                     l9298:
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;Port.c: 76: return (BytePtr)&TRISC;
  4504  01116E  0E94               	movlw	148
  4505  011170  0100               	movlb	0	; () banked
  4506  011172  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4507  011174  0E0F               	movlw	15
  4508  011176  0100               	movlb	0	; () banked
  4509  011178  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4510                           
  4511                           ; BSR set to: 0
  4512  01117A  0012               	return	
  4513  01117C                     l9302:
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;Port.c: 78: return (BytePtr)&TRISD;
  4517  01117C  0E95               	movlw	149
  4518  01117E  0100               	movlb	0	; () banked
  4519  011180  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4520  011182  0E0F               	movlw	15
  4521  011184  0100               	movlb	0	; () banked
  4522  011186  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4523                           
  4524                           ; BSR set to: 0
  4525  011188  0012               	return	
  4526  01118A                     l9306:
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;Port.c: 80: return (BytePtr)&TRISE;
  4530  01118A  0E96               	movlw	150
  4531  01118C  0100               	movlb	0	; () banked
  4532  01118E  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4533  011190  0E0F               	movlw	15
  4534  011192  0100               	movlb	0	; () banked
  4535  011194  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4536                           
  4537                           ; BSR set to: 0
  4538  011196  0012               	return	
  4539  011198                     l9310:
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;Port.c: 82: return (BytePtr)&TRISF;
  4543  011198  0E97               	movlw	151
  4544  01119A  0100               	movlb	0	; () banked
  4545  01119C  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4546  01119E  0E0F               	movlw	15
  4547  0111A0  0100               	movlb	0	; () banked
  4548  0111A2  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4549                           
  4550                           ; BSR set to: 0
  4551  0111A4  0012               	return	
  4552  0111A6                     l9314:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;Port.c: 84: return (BytePtr)&TRISG;
  4556  0111A6  0E98               	movlw	152
  4557  0111A8  0100               	movlb	0	; () banked
  4558  0111AA  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4559  0111AC  0E0F               	movlw	15
  4560  0111AE  0100               	movlb	0	; () banked
  4561  0111B0  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4562                           
  4563                           ; BSR set to: 0
  4564  0111B2  0012               	return	
  4565  0111B4                     l9318:
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;Port.c: 86: return (void*)0;
  4569  0111B4  0E00               	movlw	0
  4570  0111B6  0100               	movlb	0	; () banked
  4571  0111B8  6FC8               	movwf	?_GetPortTRIS& (0+255),b
  4572  0111BA  0E00               	movlw	0
  4573  0111BC  0100               	movlb	0	; () banked
  4574  0111BE  6FC9               	movwf	(?_GetPortTRIS+1)& (0+255),b
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;Port.c: 87: }
  4578                           
  4579                           ; BSR set to: 0
  4580  0111C0  0012               	return	
  4581  0111C2                     l9324:
  4582  0111C2  0100               	movlb	0	; () banked
  4583  0111C4  51CA               	movf	GetPortTRIS@pInput& (0+255),w,b
  4584                           
  4585                           ; Switch size 1, requested type "space"
  4586                           ; Number of cases is 7, Range of values is 0 to 6
  4587                           ; switch strategies available:
  4588                           ; Name         Instructions Cycles
  4589                           ; simple_byte           22    12 (average)
  4590                           ;	Chosen strategy is simple_byte
  4591  0111C6  0A00               	xorlw	0	; case 0
  4592  0111C8  B4D8               	btfsc	status,2,c
  4593  0111CA  D7C3               	goto	l9290
  4594  0111CC  0A01               	xorlw	1	; case 1
  4595  0111CE  B4D8               	btfsc	status,2,c
  4596  0111D0  D7C7               	goto	l9294
  4597  0111D2  0A03               	xorlw	3	; case 2
  4598  0111D4  B4D8               	btfsc	status,2,c
  4599  0111D6  D7CB               	goto	l9298
  4600  0111D8  0A01               	xorlw	1	; case 3
  4601  0111DA  B4D8               	btfsc	status,2,c
  4602  0111DC  D7CF               	goto	l9302
  4603  0111DE  0A07               	xorlw	7	; case 4
  4604  0111E0  B4D8               	btfsc	status,2,c
  4605  0111E2  D7D3               	goto	l9306
  4606  0111E4  0A01               	xorlw	1	; case 5
  4607  0111E6  B4D8               	btfsc	status,2,c
  4608  0111E8  D7D7               	goto	l9310
  4609  0111EA  0A03               	xorlw	3	; case 6
  4610  0111EC  B4D8               	btfsc	status,2,c
  4611  0111EE  D7DB               	goto	l9314
  4612  0111F0  D7E1               	goto	l9318
  4613  0111F2                     __end_of_GetPortTRIS:
  4614                           	opt stack 0
  4615                           tblptru	equ	0xFF8
  4616                           tblptrh	equ	0xFF7
  4617                           tblptrl	equ	0xFF6
  4618                           tablat	equ	0xFF5
  4619                           prodl	equ	0xFF3
  4620                           postinc0	equ	0xFEE
  4621                           wreg	equ	0xFE8
  4622                           postdec1	equ	0xFE5
  4623                           fsr1h	equ	0xFE2
  4624                           fsr1l	equ	0xFE1
  4625                           indf2	equ	0xFDF
  4626                           postinc2	equ	0xFDE
  4627                           postdec2	equ	0xFDD
  4628                           fsr2h	equ	0xFDA
  4629                           fsr2l	equ	0xFD9
  4630                           status	equ	0xFD8
  4631                           
  4632 ;; *************** function _GetPortProperties *****************
  4633 ;; Defined at:
  4634 ;;		line 21 in file "Library/Port.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  pInput          1    wreg     enum E7730
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  pInput          1    2[BANK0 ] enum E7730
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  2    0[BANK0 ] PTR struct PortProperty
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4648 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4652 ;;Total ram usage:        3 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    7
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_Port_Init
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text13
  4663  0111F2                     __ptext13:
  4664                           	opt stack 0
  4665  0111F2                     _GetPortProperties:
  4666                           	opt stack 21
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;incstack = 0
  4670                           ;GetPortProperties@pInput stored from wreg
  4671  0111F2  0100               	movlb	0	; () banked
  4672  0111F4  6FCA               	movwf	GetPortProperties@pInput& (0+255),b
  4673                           
  4674                           ;Port.c: 23: switch (pInput)
  4675  0111F6  D038               	goto	l9248
  4676  0111F8                     l9214:
  4677                           
  4678                           ;Port.c: 26: return (PortPropertyPtr)&PortA_Property;
  4679  0111F8  0EF1               	movlw	low _PortA_Property
  4680  0111FA  0100               	movlb	0	; () banked
  4681  0111FC  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4682  0111FE  0EFF               	movlw	high _PortA_Property
  4683  011200  0100               	movlb	0	; () banked
  4684  011202  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4685                           
  4686                           ; BSR set to: 0
  4687  011204  0012               	return	
  4688  011206                     l9218:
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;Port.c: 28: return (PortPropertyPtr)&PortB_Property;
  4692  011206  0EF3               	movlw	low _PortB_Property
  4693  011208  0100               	movlb	0	; () banked
  4694  01120A  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4695  01120C  0EFF               	movlw	high _PortB_Property
  4696  01120E  0100               	movlb	0	; () banked
  4697  011210  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4698                           
  4699                           ; BSR set to: 0
  4700  011212  0012               	return	
  4701  011214                     l9222:
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;Port.c: 30: return (PortPropertyPtr)&PortC_Property;
  4705  011214  0EF5               	movlw	low _PortC_Property
  4706  011216  0100               	movlb	0	; () banked
  4707  011218  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4708  01121A  0EFF               	movlw	high _PortC_Property
  4709  01121C  0100               	movlb	0	; () banked
  4710  01121E  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4711                           
  4712                           ; BSR set to: 0
  4713  011220  0012               	return	
  4714  011222                     l9226:
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;Port.c: 32: return (PortPropertyPtr)&PortD_Property;
  4718  011222  0EF7               	movlw	low _PortD_Property
  4719  011224  0100               	movlb	0	; () banked
  4720  011226  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4721  011228  0EFF               	movlw	high _PortD_Property
  4722  01122A  0100               	movlb	0	; () banked
  4723  01122C  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4724                           
  4725                           ; BSR set to: 0
  4726  01122E  0012               	return	
  4727  011230                     l9230:
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;Port.c: 34: return (PortPropertyPtr)&PortE_Property;
  4731  011230  0EF9               	movlw	low _PortE_Property
  4732  011232  0100               	movlb	0	; () banked
  4733  011234  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4734  011236  0EFF               	movlw	high _PortE_Property
  4735  011238  0100               	movlb	0	; () banked
  4736  01123A  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4737                           
  4738                           ; BSR set to: 0
  4739  01123C  0012               	return	
  4740  01123E                     l9234:
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;Port.c: 36: return (PortPropertyPtr)&PortF_Property;
  4744  01123E  0EFB               	movlw	low _PortF_Property
  4745  011240  0100               	movlb	0	; () banked
  4746  011242  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4747  011244  0EFF               	movlw	high _PortF_Property
  4748  011246  0100               	movlb	0	; () banked
  4749  011248  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4750                           
  4751                           ; BSR set to: 0
  4752  01124A  0012               	return	
  4753  01124C                     l9238:
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;Port.c: 38: return (PortPropertyPtr)&PortG_Property;
  4757  01124C  0EFD               	movlw	low _PortG_Property
  4758  01124E  0100               	movlb	0	; () banked
  4759  011250  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4760  011252  0EFF               	movlw	high _PortG_Property
  4761  011254  0100               	movlb	0	; () banked
  4762  011256  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4763                           
  4764                           ; BSR set to: 0
  4765  011258  0012               	return	
  4766  01125A                     l9242:
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;Port.c: 40: return (void*)0;
  4770  01125A  0E00               	movlw	0
  4771  01125C  0100               	movlb	0	; () banked
  4772  01125E  6FC8               	movwf	?_GetPortProperties& (0+255),b
  4773  011260  0E00               	movlw	0
  4774  011262  0100               	movlb	0	; () banked
  4775  011264  6FC9               	movwf	(?_GetPortProperties+1)& (0+255),b
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;Port.c: 41: }
  4779                           
  4780                           ; BSR set to: 0
  4781  011266  0012               	return	
  4782  011268                     l9248:
  4783  011268  0100               	movlb	0	; () banked
  4784  01126A  51CA               	movf	GetPortProperties@pInput& (0+255),w,b
  4785                           
  4786                           ; Switch size 1, requested type "space"
  4787                           ; Number of cases is 7, Range of values is 0 to 6
  4788                           ; switch strategies available:
  4789                           ; Name         Instructions Cycles
  4790                           ; simple_byte           22    12 (average)
  4791                           ;	Chosen strategy is simple_byte
  4792  01126C  0A00               	xorlw	0	; case 0
  4793  01126E  B4D8               	btfsc	status,2,c
  4794  011270  D7C3               	goto	l9214
  4795  011272  0A01               	xorlw	1	; case 1
  4796  011274  B4D8               	btfsc	status,2,c
  4797  011276  D7C7               	goto	l9218
  4798  011278  0A03               	xorlw	3	; case 2
  4799  01127A  B4D8               	btfsc	status,2,c
  4800  01127C  D7CB               	goto	l9222
  4801  01127E  0A01               	xorlw	1	; case 3
  4802  011280  B4D8               	btfsc	status,2,c
  4803  011282  D7CF               	goto	l9226
  4804  011284  0A07               	xorlw	7	; case 4
  4805  011286  B4D8               	btfsc	status,2,c
  4806  011288  D7D3               	goto	l9230
  4807  01128A  0A01               	xorlw	1	; case 5
  4808  01128C  B4D8               	btfsc	status,2,c
  4809  01128E  D7D7               	goto	l9234
  4810  011290  0A03               	xorlw	3	; case 6
  4811  011292  B4D8               	btfsc	status,2,c
  4812  011294  D7DB               	goto	l9238
  4813  011296  D7E1               	goto	l9242
  4814  011298                     __end_of_GetPortProperties:
  4815                           	opt stack 0
  4816                           tblptru	equ	0xFF8
  4817                           tblptrh	equ	0xFF7
  4818                           tblptrl	equ	0xFF6
  4819                           tablat	equ	0xFF5
  4820                           prodl	equ	0xFF3
  4821                           postinc0	equ	0xFEE
  4822                           wreg	equ	0xFE8
  4823                           postdec1	equ	0xFE5
  4824                           fsr1h	equ	0xFE2
  4825                           fsr1l	equ	0xFE1
  4826                           indf2	equ	0xFDF
  4827                           postinc2	equ	0xFDE
  4828                           postdec2	equ	0xFDD
  4829                           fsr2h	equ	0xFDA
  4830                           fsr2l	equ	0xFD9
  4831                           status	equ	0xFD8
  4832                           
  4833 ;; *************** function _GetPortPORT *****************
  4834 ;; Defined at:
  4835 ;;		line 44 in file "Library/Port.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  pInput          1    wreg     enum E7730
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  pInput          1    2[BANK0 ] enum E7730
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  2    0[BANK0 ] PTR struct Byte
  4842 ;; Registers used:
  4843 ;;		wreg, status,2, status,0
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4849 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4850 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;Total ram usage:        3 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:    7
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		_Port_Init
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text14
  4864  011298                     __ptext14:
  4865                           	opt stack 0
  4866  011298                     _GetPortPORT:
  4867                           	opt stack 21
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;incstack = 0
  4871                           ;GetPortPORT@pInput stored from wreg
  4872  011298  0100               	movlb	0	; () banked
  4873  01129A  6FCA               	movwf	GetPortPORT@pInput& (0+255),b
  4874                           
  4875                           ;Port.c: 46: switch (pInput)
  4876  01129C  D038               	goto	l9286
  4877  01129E                     l9252:
  4878                           
  4879                           ;Port.c: 49: return (BytePtr)&PORTA;
  4880  01129E  0E80               	movlw	128
  4881  0112A0  0100               	movlb	0	; () banked
  4882  0112A2  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4883  0112A4  0E0F               	movlw	15
  4884  0112A6  0100               	movlb	0	; () banked
  4885  0112A8  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4886                           
  4887                           ; BSR set to: 0
  4888  0112AA  0012               	return	
  4889  0112AC                     l9256:
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;Port.c: 51: return (BytePtr)&PORTB;
  4893  0112AC  0E81               	movlw	129
  4894  0112AE  0100               	movlb	0	; () banked
  4895  0112B0  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4896  0112B2  0E0F               	movlw	15
  4897  0112B4  0100               	movlb	0	; () banked
  4898  0112B6  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4899                           
  4900                           ; BSR set to: 0
  4901  0112B8  0012               	return	
  4902  0112BA                     l9260:
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;Port.c: 53: return (BytePtr)&PORTC;
  4906  0112BA  0E82               	movlw	130
  4907  0112BC  0100               	movlb	0	; () banked
  4908  0112BE  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4909  0112C0  0E0F               	movlw	15
  4910  0112C2  0100               	movlb	0	; () banked
  4911  0112C4  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4912                           
  4913                           ; BSR set to: 0
  4914  0112C6  0012               	return	
  4915  0112C8                     l9264:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;Port.c: 55: return (BytePtr)&PORTD;
  4919  0112C8  0E83               	movlw	131
  4920  0112CA  0100               	movlb	0	; () banked
  4921  0112CC  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4922  0112CE  0E0F               	movlw	15
  4923  0112D0  0100               	movlb	0	; () banked
  4924  0112D2  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4925                           
  4926                           ; BSR set to: 0
  4927  0112D4  0012               	return	
  4928  0112D6                     l9268:
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;Port.c: 57: return (BytePtr)&PORTE;
  4932  0112D6  0E84               	movlw	132
  4933  0112D8  0100               	movlb	0	; () banked
  4934  0112DA  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4935  0112DC  0E0F               	movlw	15
  4936  0112DE  0100               	movlb	0	; () banked
  4937  0112E0  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4938                           
  4939                           ; BSR set to: 0
  4940  0112E2  0012               	return	
  4941  0112E4                     l9272:
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;Port.c: 59: return (BytePtr)&PORTF;
  4945  0112E4  0E85               	movlw	133
  4946  0112E6  0100               	movlb	0	; () banked
  4947  0112E8  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4948  0112EA  0E0F               	movlw	15
  4949  0112EC  0100               	movlb	0	; () banked
  4950  0112EE  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4951                           
  4952                           ; BSR set to: 0
  4953  0112F0  0012               	return	
  4954  0112F2                     l9276:
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;Port.c: 61: return (BytePtr)&PORTG;
  4958  0112F2  0E86               	movlw	134
  4959  0112F4  0100               	movlb	0	; () banked
  4960  0112F6  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4961  0112F8  0E0F               	movlw	15
  4962  0112FA  0100               	movlb	0	; () banked
  4963  0112FC  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4964                           
  4965                           ; BSR set to: 0
  4966  0112FE  0012               	return	
  4967  011300                     l9280:
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;Port.c: 63: return (void*)0;
  4971  011300  0E00               	movlw	0
  4972  011302  0100               	movlb	0	; () banked
  4973  011304  6FC8               	movwf	?_GetPortPORT& (0+255),b
  4974  011306  0E00               	movlw	0
  4975  011308  0100               	movlb	0	; () banked
  4976  01130A  6FC9               	movwf	(?_GetPortPORT+1)& (0+255),b
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;Port.c: 64: }
  4980                           
  4981                           ; BSR set to: 0
  4982  01130C  0012               	return	
  4983  01130E                     l9286:
  4984  01130E  0100               	movlb	0	; () banked
  4985  011310  51CA               	movf	GetPortPORT@pInput& (0+255),w,b
  4986                           
  4987                           ; Switch size 1, requested type "space"
  4988                           ; Number of cases is 7, Range of values is 0 to 6
  4989                           ; switch strategies available:
  4990                           ; Name         Instructions Cycles
  4991                           ; simple_byte           22    12 (average)
  4992                           ;	Chosen strategy is simple_byte
  4993  011312  0A00               	xorlw	0	; case 0
  4994  011314  B4D8               	btfsc	status,2,c
  4995  011316  D7C3               	goto	l9252
  4996  011318  0A01               	xorlw	1	; case 1
  4997  01131A  B4D8               	btfsc	status,2,c
  4998  01131C  D7C7               	goto	l9256
  4999  01131E  0A03               	xorlw	3	; case 2
  5000  011320  B4D8               	btfsc	status,2,c
  5001  011322  D7CB               	goto	l9260
  5002  011324  0A01               	xorlw	1	; case 3
  5003  011326  B4D8               	btfsc	status,2,c
  5004  011328  D7CF               	goto	l9264
  5005  01132A  0A07               	xorlw	7	; case 4
  5006  01132C  B4D8               	btfsc	status,2,c
  5007  01132E  D7D3               	goto	l9268
  5008  011330  0A01               	xorlw	1	; case 5
  5009  011332  B4D8               	btfsc	status,2,c
  5010  011334  D7D7               	goto	l9272
  5011  011336  0A03               	xorlw	3	; case 6
  5012  011338  B4D8               	btfsc	status,2,c
  5013  01133A  D7DB               	goto	l9276
  5014  01133C  D7E1               	goto	l9280
  5015  01133E                     __end_of_GetPortPORT:
  5016                           	opt stack 0
  5017                           tblptru	equ	0xFF8
  5018                           tblptrh	equ	0xFF7
  5019                           tblptrl	equ	0xFF6
  5020                           tablat	equ	0xFF5
  5021                           prodl	equ	0xFF3
  5022                           postinc0	equ	0xFEE
  5023                           wreg	equ	0xFE8
  5024                           postdec1	equ	0xFE5
  5025                           fsr1h	equ	0xFE2
  5026                           fsr1l	equ	0xFE1
  5027                           indf2	equ	0xFDF
  5028                           postinc2	equ	0xFDE
  5029                           postdec2	equ	0xFDD
  5030                           fsr2h	equ	0xFDA
  5031                           fsr2l	equ	0xFD9
  5032                           status	equ	0xFD8
  5033                           
  5034 ;; *************** function _LED_Init *****************
  5035 ;; Defined at:
  5036 ;;		line 15 in file "Library/LED.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  pLED            1    wreg     enum E7683
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;  pLED            1   45[BANK0 ] enum E7683
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      void 
  5043 ;; Registers used:
  5044 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5051 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;Total ram usage:        1 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:   12
  5057 ;; This function calls:
  5058 ;;		_LED_Set
  5059 ;;		_Port_SetPinType
  5060 ;; This function is called by:
  5061 ;;		_MXK_Init
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	text15
  5066  011726                     __ptext15:
  5067                           	opt stack 0
  5068  011726                     _LED_Init:
  5069                           	opt stack 17
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;incstack = 0
  5073                           ;LED_Init@pLED stored from wreg
  5074  011726  0100               	movlb	0	; () banked
  5075  011728  6FF5               	movwf	LED_Init@pLED& (0+255),b
  5076                           
  5077                           ;LED.c: 17: switch (pLED)
  5078  01172A  D01E               	goto	l9568
  5079  01172C                     l9562:
  5080                           
  5081                           ;LED.c: 20: Port_SetPinType(&PortC, eP0, eTypeOutputPushPull);
  5082  01172C  0E76               	movlw	low _PortC
  5083  01172E  0100               	movlb	0	; () banked
  5084  011730  6FEE               	movwf	Port_SetPinType@pInput& (0+255),b
  5085  011732  0E00               	movlw	high _PortC
  5086  011734  0100               	movlb	0	; () banked
  5087  011736  6FEF               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  5088  011738  0E00               	movlw	0
  5089  01173A  0100               	movlb	0	; () banked
  5090  01173C  6FF0               	movwf	Port_SetPinType@pPin& (0+255),b
  5091  01173E  0E03               	movlw	3
  5092  011740  0100               	movlb	0	; () banked
  5093  011742  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  5094  011744  EC1D  F084         	call	_Port_SetPinType	;wreg free
  5095                           
  5096                           ;LED.c: 21: break;
  5097  011748  D017               	goto	l9570
  5098  01174A                     l9564:
  5099                           
  5100                           ;LED.c: 23: Port_SetPinType(&PortC, eP1, eTypeOutputPushPull);
  5101  01174A  0E76               	movlw	low _PortC
  5102  01174C  0100               	movlb	0	; () banked
  5103  01174E  6FEE               	movwf	Port_SetPinType@pInput& (0+255),b
  5104  011750  0E00               	movlw	high _PortC
  5105  011752  0100               	movlb	0	; () banked
  5106  011754  6FEF               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  5107  011756  0E01               	movlw	1
  5108  011758  0100               	movlb	0	; () banked
  5109  01175A  6FF0               	movwf	Port_SetPinType@pPin& (0+255),b
  5110  01175C  0E03               	movlw	3
  5111  01175E  0100               	movlb	0	; () banked
  5112  011760  6FF1               	movwf	Port_SetPinType@pType& (0+255),b
  5113  011762  EC1D  F084         	call	_Port_SetPinType	;wreg free
  5114                           
  5115                           ;LED.c: 25: }
  5116                           
  5117                           ;LED.c: 24: break;
  5118  011766  D008               	goto	l9570
  5119  011768                     l9568:
  5120  011768  0100               	movlb	0	; () banked
  5121  01176A  51F5               	movf	LED_Init@pLED& (0+255),w,b
  5122                           
  5123                           ; Switch size 1, requested type "space"
  5124                           ; Number of cases is 2, Range of values is 0 to 1
  5125                           ; switch strategies available:
  5126                           ; Name         Instructions Cycles
  5127                           ; simple_byte            7     4 (average)
  5128                           ;	Chosen strategy is simple_byte
  5129  01176C  0A00               	xorlw	0	; case 0
  5130  01176E  B4D8               	btfsc	status,2,c
  5131  011770  D7DD               	goto	l9562
  5132  011772  0A01               	xorlw	1	; case 1
  5133  011774  B4D8               	btfsc	status,2,c
  5134  011776  D7E9               	goto	l9564
  5135  011778                     l9570:
  5136                           
  5137                           ;LED.c: 26: LED_Set(pLED, 0);
  5138  011778  0E00               	movlw	0
  5139  01177A  0100               	movlb	0	; () banked
  5140  01177C  6FDC               	movwf	LED_Set@pValue& (0+255),b
  5141  01177E  0100               	movlb	0	; () banked
  5142  011780  51F5               	movf	LED_Init@pLED& (0+255),w,b
  5143  011782  EC1A  F08C         	call	_LED_Set
  5144  011786  0012               	return		;funcret
  5145  011788                     __end_of_LED_Init:
  5146                           	opt stack 0
  5147                           tblptru	equ	0xFF8
  5148                           tblptrh	equ	0xFF7
  5149                           tblptrl	equ	0xFF6
  5150                           tablat	equ	0xFF5
  5151                           prodl	equ	0xFF3
  5152                           postinc0	equ	0xFEE
  5153                           wreg	equ	0xFE8
  5154                           postdec1	equ	0xFE5
  5155                           fsr1h	equ	0xFE2
  5156                           fsr1l	equ	0xFE1
  5157                           indf2	equ	0xFDF
  5158                           postinc2	equ	0xFDE
  5159                           postdec2	equ	0xFDD
  5160                           fsr2h	equ	0xFDA
  5161                           fsr2l	equ	0xFD9
  5162                           status	equ	0xFD8
  5163                           
  5164 ;; *************** function _Port_SetPinType *****************
  5165 ;; Defined at:
  5166 ;;		line 189 in file "Library/Port.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  pInput          2   38[BANK0 ] const PTR struct Port
  5169 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  5170 ;;		 -> PortD(10), PortC(10), PortF(10), 
  5171 ;;  pPin            1   40[BANK0 ] enum E7694
  5172 ;;  pType           1   41[BANK0 ] enum E7739
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;  Props           2   43[BANK0 ] PTR struct PortProperty
  5175 ;;		 -> PortG_Property(2), PortF_Property(2), PortE_Property(2), PortD_Property(2), 
  5176 ;;		 -> PortC_Property(2), PortB_Property(2), PortA_Property(2), NULL(0), 
  5177 ;;  Output          1   42[BANK0 ] enum E7419
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      enum E7419
  5180 ;; Registers used:
  5181 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5187 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;Total ram usage:        7 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:   11
  5194 ;; This function calls:
  5195 ;;		_Byte_SetBit
  5196 ;;		_PortProperty_Valid
  5197 ;;		_Word_SetPair
  5198 ;; This function is called by:
  5199 ;;		_LED_Init
  5200 ;;		_Port_Init
  5201 ;;		_MXK_Init
  5202 ;;		_Configure_GPIOs
  5203 ;;		_SPI_Init
  5204 ;;		_I2C_Init
  5205 ;;		_Motor_Init
  5206 ;;		_MXK_InitTestButton
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           	psect	text16
  5211  01083A                     __ptext16:
  5212                           	opt stack 0
  5213  01083A                     _Port_SetPinType:
  5214                           	opt stack 18
  5215                           
  5216                           ;Port.c: 191: PortProperty * Props = pInput->mProperties;
  5217                           
  5218                           ;incstack = 0
  5219  01083A  C0EE  FFD9         	movff	Port_SetPinType@pInput,fsr2l
  5220  01083E  C0EF  FFDA         	movff	Port_SetPinType@pInput+1,fsr2h
  5221  010842  CFDE F0F3          	movff	postinc2,Port_SetPinType@Props
  5222  010846  CFDD F0F4          	movff	postdec2,Port_SetPinType@Props+1
  5223                           
  5224                           ;Port.c: 192: ePinError Output = ePinErrorState;
  5225  01084A  0E05               	movlw	5
  5226  01084C  0100               	movlb	0	; () banked
  5227  01084E  6FF2               	movwf	Port_SetPinType@Output& (0+255),b
  5228                           
  5229                           ;Port.c: 193: switch (pType)
  5230  010850  D0B5               	goto	l9196
  5231  010852                     l9176:
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;Port.c: 197: {
  5235                           ;Port.c: 199: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)1);
  5236  010852  0100               	movlb	0	; () banked
  5237  010854  EE20 F002          	lfsr	2,2
  5238  010858  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5239  01085A  26D9               	addwf	fsr2l,f,c
  5240  01085C  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5241  01085E  22DA               	addwfc	fsr2h,f,c
  5242  010860  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5243  010864  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5244  010868  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5245  01086C  0E01               	movlw	1
  5246  01086E  0100               	movlb	0	; () banked
  5247  010870  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5248  010872  EC61  F08B         	call	_Byte_SetBit	;wreg free
  5249                           
  5250                           ;Port.c: 203: break;
  5251  010876  D0B0               	goto	l9198
  5252  010878                     l9178:
  5253                           
  5254                           ;Port.c: 207: if ((Output = PortProperty_Valid(Props, eLow, pPin)) == ePinErrorNone)
  5255  010878  C0F3  F0D7         	movff	Port_SetPinType@Props,PortProperty_Valid@pInput
  5256  01087C  C0F4  F0D8         	movff	Port_SetPinType@Props+1,PortProperty_Valid@pInput+1
  5257  010880  0E01               	movlw	1
  5258  010882  0100               	movlb	0	; () banked
  5259  010884  6FD9               	movwf	PortProperty_Valid@pPinDrive& (0+255),b
  5260  010886  C0F0  F0DA         	movff	Port_SetPinType@pPin,PortProperty_Valid@pPin
  5261  01088A  EC7E  F08A         	call	_PortProperty_Valid	;wreg free
  5262  01088E  0100               	movlb	0	; () banked
  5263  010890  6FF2               	movwf	Port_SetPinType@Output& (0+255),b
  5264  010892  0100               	movlb	0	; () banked
  5265  010894  51F2               	movf	Port_SetPinType@Output& (0+255),w,b
  5266  010896  A4D8               	btfss	status,2,c
  5267  010898  0012               	return	
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;Port.c: 208: {
  5271                           ;Port.c: 210: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)0);
  5272  01089A  0100               	movlb	0	; () banked
  5273  01089C  EE20 F002          	lfsr	2,2
  5274  0108A0  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5275  0108A2  26D9               	addwf	fsr2l,f,c
  5276  0108A4  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5277  0108A6  22DA               	addwfc	fsr2h,f,c
  5278  0108A8  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5279  0108AC  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5280  0108B0  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5281  0108B4  0E00               	movlw	0
  5282  0108B6  0100               	movlb	0	; () banked
  5283  0108B8  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5284  0108BA  EC61  F08B         	call	_Byte_SetBit	;wreg free
  5285                           
  5286                           ;Port.c: 213: Byte_SetBit(pInput->mOutput, (UINT8)pPin, 0);
  5287  0108BE  0100               	movlb	0	; () banked
  5288  0108C0  EE20 F004          	lfsr	2,4
  5289  0108C4  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5290  0108C6  26D9               	addwf	fsr2l,f,c
  5291  0108C8  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5292  0108CA  22DA               	addwfc	fsr2h,f,c
  5293  0108CC  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5294  0108D0  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5295  0108D4  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5296  0108D8  0E00               	movlw	0
  5297  0108DA  0100               	movlb	0	; () banked
  5298  0108DC  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5299  0108DE  EC61  F08B         	call	_Byte_SetBit	;wreg free
  5300                           
  5301                           ;Port.c: 214: break;
  5302  0108E2  D07A               	goto	l9198
  5303  0108E4                     l9184:
  5304                           
  5305                           ;Port.c: 219: if ((Output = PortProperty_Valid(Props, eHigh, pPin)) == ePinErrorNone)
  5306  0108E4  C0F3  F0D7         	movff	Port_SetPinType@Props,PortProperty_Valid@pInput
  5307  0108E8  C0F4  F0D8         	movff	Port_SetPinType@Props+1,PortProperty_Valid@pInput+1
  5308  0108EC  0E02               	movlw	2
  5309  0108EE  0100               	movlb	0	; () banked
  5310  0108F0  6FD9               	movwf	PortProperty_Valid@pPinDrive& (0+255),b
  5311  0108F2  C0F0  F0DA         	movff	Port_SetPinType@pPin,PortProperty_Valid@pPin
  5312  0108F6  EC7E  F08A         	call	_PortProperty_Valid	;wreg free
  5313  0108FA  0100               	movlb	0	; () banked
  5314  0108FC  6FF2               	movwf	Port_SetPinType@Output& (0+255),b
  5315  0108FE  0100               	movlb	0	; () banked
  5316  010900  51F2               	movf	Port_SetPinType@Output& (0+255),w,b
  5317  010902  A4D8               	btfss	status,2,c
  5318  010904  0012               	return	
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;Port.c: 220: {
  5322                           ;Port.c: 222: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)1);
  5323  010906  0100               	movlb	0	; () banked
  5324  010908  EE20 F002          	lfsr	2,2
  5325  01090C  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5326  01090E  26D9               	addwf	fsr2l,f,c
  5327  010910  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5328  010912  22DA               	addwfc	fsr2h,f,c
  5329  010914  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5330  010918  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5331  01091C  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5332  010920  0E01               	movlw	1
  5333  010922  0100               	movlb	0	; () banked
  5334  010924  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5335  010926  EC61  F08B         	call	_Byte_SetBit	;wreg free
  5336                           
  5337                           ;Port.c: 225: Byte_SetBit(pInput->mOutput, (UINT8)pPin, 1);
  5338  01092A  0100               	movlb	0	; () banked
  5339  01092C  EE20 F004          	lfsr	2,4
  5340  010930  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5341  010932  26D9               	addwf	fsr2l,f,c
  5342  010934  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5343  010936  22DA               	addwfc	fsr2h,f,c
  5344  010938  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5345  01093C  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5346  010940  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5347  010944  0E01               	movlw	1
  5348  010946  0100               	movlb	0	; () banked
  5349  010948  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5350  01094A  EC61  F08B         	call	_Byte_SetBit	;wreg free
  5351                           
  5352                           ;Port.c: 226: break;
  5353  01094E  D044               	goto	l9198
  5354  010950                     l9190:
  5355                           
  5356                           ;Port.c: 231: if ((Output = PortProperty_Valid(Props, eHL, pPin)) == ePinErrorNone)
  5357  010950  C0F3  F0D7         	movff	Port_SetPinType@Props,PortProperty_Valid@pInput
  5358  010954  C0F4  F0D8         	movff	Port_SetPinType@Props+1,PortProperty_Valid@pInput+1
  5359  010958  0E00               	movlw	0
  5360  01095A  0100               	movlb	0	; () banked
  5361  01095C  6FD9               	movwf	PortProperty_Valid@pPinDrive& (0+255),b
  5362  01095E  C0F0  F0DA         	movff	Port_SetPinType@pPin,PortProperty_Valid@pPin
  5363  010962  EC7E  F08A         	call	_PortProperty_Valid	;wreg free
  5364  010966  0100               	movlb	0	; () banked
  5365  010968  6FF2               	movwf	Port_SetPinType@Output& (0+255),b
  5366  01096A  0100               	movlb	0	; () banked
  5367  01096C  51F2               	movf	Port_SetPinType@Output& (0+255),w,b
  5368  01096E  A4D8               	btfss	status,2,c
  5369  010970  0012               	return	
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;Port.c: 232: {
  5373                           ;Port.c: 234: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)0);
  5374  010972  0100               	movlb	0	; () banked
  5375  010974  EE20 F002          	lfsr	2,2
  5376  010978  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5377  01097A  26D9               	addwf	fsr2l,f,c
  5378  01097C  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5379  01097E  22DA               	addwfc	fsr2h,f,c
  5380  010980  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5381  010984  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5382  010988  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5383  01098C  0E00               	movlw	0
  5384  01098E  0100               	movlb	0	; () banked
  5385  010990  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5386  010992  EC61  F08B         	call	_Byte_SetBit	;wreg free
  5387                           
  5388                           ;Port.c: 237: Byte_SetBit(pInput->mOutput, (UINT8)pPin, 0);
  5389  010996  0100               	movlb	0	; () banked
  5390  010998  EE20 F004          	lfsr	2,4
  5391  01099C  51EE               	movf	Port_SetPinType@pInput& (0+255),w,b
  5392  01099E  26D9               	addwf	fsr2l,f,c
  5393  0109A0  51EF               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
  5394  0109A2  22DA               	addwfc	fsr2h,f,c
  5395  0109A4  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  5396  0109A8  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  5397  0109AC  C0F0  F0CA         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
  5398  0109B0  0E00               	movlw	0
  5399  0109B2  0100               	movlb	0	; () banked
  5400  0109B4  6FCB               	movwf	Byte_SetBit@pValue& (0+255),b
  5401  0109B6  EC61  F08B         	call	_Byte_SetBit	;wreg free
  5402                           
  5403                           ;Port.c: 239: }
  5404                           
  5405                           ;Port.c: 238: break;
  5406  0109BA  D00E               	goto	l9198
  5407  0109BC                     l9196:
  5408  0109BC  0100               	movlb	0	; () banked
  5409  0109BE  51F1               	movf	Port_SetPinType@pType& (0+255),w,b
  5410                           
  5411                           ; Switch size 1, requested type "space"
  5412                           ; Number of cases is 4, Range of values is 0 to 3
  5413                           ; switch strategies available:
  5414                           ; Name         Instructions Cycles
  5415                           ; simple_byte           13     7 (average)
  5416                           ;	Chosen strategy is simple_byte
  5417  0109C0  0A00               	xorlw	0	; case 0
  5418  0109C2  B4D8               	btfsc	status,2,c
  5419  0109C4  D746               	goto	l9176
  5420  0109C6  0A01               	xorlw	1	; case 1
  5421  0109C8  B4D8               	btfsc	status,2,c
  5422  0109CA  D756               	goto	l9178
  5423  0109CC  0A03               	xorlw	3	; case 2
  5424  0109CE  B4D8               	btfsc	status,2,c
  5425  0109D0  D789               	goto	l9184
  5426  0109D2  0A01               	xorlw	1	; case 3
  5427  0109D4  B4D8               	btfsc	status,2,c
  5428  0109D6  D7BC               	goto	l9190
  5429  0109D8                     l9198:
  5430                           
  5431                           ;Port.c: 244: Word_SetPair(&pInput->mType, (UINT8)pPin, (UINT8)pType);
  5432  0109D8  0E08               	movlw	8
  5433  0109DA  0100               	movlb	0	; () banked
  5434  0109DC  25EE               	addwf	Port_SetPinType@pInput& (0+255),w,b
  5435  0109DE  0100               	movlb	0	; () banked
  5436  0109E0  6FD7               	movwf	Word_SetPair@pInput& (0+255),b
  5437  0109E2  0E00               	movlw	0
  5438  0109E4  0100               	movlb	0	; () banked
  5439  0109E6  21EF               	addwfc	(Port_SetPinType@pInput+1)& (0+255),w,b
  5440  0109E8  0100               	movlb	0	; () banked
  5441  0109EA  6FD8               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  5442  0109EC  C0F0  F0D9         	movff	Port_SetPinType@pPin,Word_SetPair@pPair
  5443  0109F0  C0F1  F0DA         	movff	Port_SetPinType@pType,Word_SetPair@pValue
  5444  0109F4  EC8C  F08C         	call	_Word_SetPair	;wreg free
  5445  0109F8  0012               	return	
  5446  0109FA                     __end_of_Port_SetPinType:
  5447                           	opt stack 0
  5448                           tblptru	equ	0xFF8
  5449                           tblptrh	equ	0xFF7
  5450                           tblptrl	equ	0xFF6
  5451                           tablat	equ	0xFF5
  5452                           prodl	equ	0xFF3
  5453                           postinc0	equ	0xFEE
  5454                           wreg	equ	0xFE8
  5455                           postdec1	equ	0xFE5
  5456                           fsr1h	equ	0xFE2
  5457                           fsr1l	equ	0xFE1
  5458                           indf2	equ	0xFDF
  5459                           postinc2	equ	0xFDE
  5460                           postdec2	equ	0xFDD
  5461                           fsr2h	equ	0xFDA
  5462                           fsr2l	equ	0xFD9
  5463                           status	equ	0xFD8
  5464                           
  5465 ;; *************** function _Word_SetPair *****************
  5466 ;; Defined at:
  5467 ;;		line 149 in file "Library/Types.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;  pInput          2   15[BANK0 ] PTR struct Word
  5470 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  5471 ;;		 -> PortD(10), PortC(10), PortF(10), 
  5472 ;;  pPair           1   17[BANK0 ] unsigned char 
  5473 ;;  pValue          1   18[BANK0 ] unsigned char 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5485 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;Total ram usage:        4 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    9
  5492 ;; This function calls:
  5493 ;;		_Byte_SetPair
  5494 ;; This function is called by:
  5495 ;;		_Port_SetPinType
  5496 ;;		_Port_SetQuadType
  5497 ;;		_Port_SetType
  5498 ;;		_Port_SetPairType
  5499 ;;		_PortProperty_Init
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text17
  5504  011918                     __ptext17:
  5505                           	opt stack 0
  5506  011918                     _Word_SetPair:
  5507                           	opt stack 19
  5508                           
  5509                           ;Types.c: 151: if (pPair >= 4)
  5510                           
  5511                           ;incstack = 0
  5512  011918  0E03               	movlw	3
  5513  01191A  0100               	movlb	0	; () banked
  5514  01191C  65D9               	cpfsgt	Word_SetPair@pPair& (0+255),b
  5515  01191E  D014               	goto	l9152
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;Types.c: 152: Byte_SetPair(&(pInput->MS_Byte), pPair - 4, pValue);
  5519  011920  0E01               	movlw	1
  5520  011922  0100               	movlb	0	; () banked
  5521  011924  25D7               	addwf	Word_SetPair@pInput& (0+255),w,b
  5522  011926  0100               	movlb	0	; () banked
  5523  011928  6FD3               	movwf	Byte_SetPair@pInput& (0+255),b
  5524  01192A  0E00               	movlw	0
  5525  01192C  0100               	movlb	0	; () banked
  5526  01192E  21D8               	addwfc	(Word_SetPair@pInput+1)& (0+255),w,b
  5527  011930  0100               	movlb	0	; () banked
  5528  011932  6FD4               	movwf	(Byte_SetPair@pInput+1)& (0+255),b
  5529  011934  0100               	movlb	0	; () banked
  5530  011936  51D9               	movf	Word_SetPair@pPair& (0+255),w,b
  5531  011938  0FFC               	addlw	252
  5532  01193A  0100               	movlb	0	; () banked
  5533  01193C  6FD5               	movwf	Byte_SetPair@pPair& (0+255),b
  5534  01193E  C0DA  F0D6         	movff	Word_SetPair@pValue,Byte_SetPair@pValue
  5535  011942  ECA1  F08D         	call	_Byte_SetPair	;wreg free
  5536  011946  0012               	return	
  5537  011948                     l9152:
  5538                           
  5539                           ;Types.c: 153: else
  5540                           ;Types.c: 154: Byte_SetPair(&(pInput->LS_Byte), pPair, pValue);
  5541  011948  C0D7  F0D3         	movff	Word_SetPair@pInput,Byte_SetPair@pInput
  5542  01194C  C0D8  F0D4         	movff	Word_SetPair@pInput+1,Byte_SetPair@pInput+1
  5543  011950  C0D9  F0D5         	movff	Word_SetPair@pPair,Byte_SetPair@pPair
  5544  011954  C0DA  F0D6         	movff	Word_SetPair@pValue,Byte_SetPair@pValue
  5545  011958  ECA1  F08D         	call	_Byte_SetPair	;wreg free
  5546  01195C  0012               	return	
  5547  01195E                     __end_of_Word_SetPair:
  5548                           	opt stack 0
  5549                           tblptru	equ	0xFF8
  5550                           tblptrh	equ	0xFF7
  5551                           tblptrl	equ	0xFF6
  5552                           tablat	equ	0xFF5
  5553                           prodl	equ	0xFF3
  5554                           postinc0	equ	0xFEE
  5555                           wreg	equ	0xFE8
  5556                           postdec1	equ	0xFE5
  5557                           fsr1h	equ	0xFE2
  5558                           fsr1l	equ	0xFE1
  5559                           indf2	equ	0xFDF
  5560                           postinc2	equ	0xFDE
  5561                           postdec2	equ	0xFDD
  5562                           fsr2h	equ	0xFDA
  5563                           fsr2l	equ	0xFD9
  5564                           status	equ	0xFD8
  5565                           
  5566 ;; *************** function _Byte_SetPair *****************
  5567 ;; Defined at:
  5568 ;;		line 83 in file "Library/Types.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  pInput          2   11[BANK0 ] PTR struct Byte
  5571 ;;		 -> PortF..(2), PortC..(2), PortD..(2), PortE..(2), 
  5572 ;;		 -> PortB..(2), PortA..(2), PortG..(2), PortG(10), 
  5573 ;;		 -> PortA(10), PortB(10), PortE(10), PortD(10), 
  5574 ;;		 -> TRISG(1), TRISF(1), TRISE(1), TRISD(1), 
  5575 ;;		 -> TRISC(1), TRISB(1), TRISA(1), PORTG(1), 
  5576 ;;		 -> PORTF(1), PORTE(1), PORTD(1), PORTC(1), 
  5577 ;;		 -> PORTB(1), PORTA(1), PortC(10), PortF(10), 
  5578 ;;		 -> NULL(0), 
  5579 ;;  pPair           1   13[BANK0 ] unsigned char 
  5580 ;;  pValue          1   14[BANK0 ] unsigned char 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      void 
  5585 ;; Registers used:
  5586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5592 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5595 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5596 ;;Total ram usage:        4 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:    8
  5599 ;; This function calls:
  5600 ;;		_Byte_SetZone
  5601 ;; This function is called by:
  5602 ;;		_Word_SetPair
  5603 ;;		_Port_SetPairType
  5604 ;;		_Port_SetPair
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           	psect	text18
  5609  011B42                     __ptext18:
  5610                           	opt stack 0
  5611  011B42                     _Byte_SetPair:
  5612                           	opt stack 19
  5613                           
  5614                           ;Types.c: 85: Byte_SetZone(pInput, 4, pPair, 2, pValue);
  5615                           
  5616                           ;incstack = 0
  5617  011B42  C0D3  F0C8         	movff	Byte_SetPair@pInput,Byte_SetZone@pInput
  5618  011B46  C0D4  F0C9         	movff	Byte_SetPair@pInput+1,Byte_SetZone@pInput+1
  5619  011B4A  0E04               	movlw	4
  5620  011B4C  0100               	movlb	0	; () banked
  5621  011B4E  6FCA               	movwf	Byte_SetZone@pMax& (0+255),b
  5622  011B50  C0D5  F0CB         	movff	Byte_SetPair@pPair,Byte_SetZone@pChunk
  5623  011B54  0E02               	movlw	2
  5624  011B56  0100               	movlb	0	; () banked
  5625  011B58  6FCC               	movwf	Byte_SetZone@pChunkSize& (0+255),b
  5626  011B5A  C0D6  F0CD         	movff	Byte_SetPair@pValue,Byte_SetZone@pValue
  5627  011B5E  ECF6  F087         	call	_Byte_SetZone	;wreg free
  5628  011B62  0012               	return		;funcret
  5629  011B64                     __end_of_Byte_SetPair:
  5630                           	opt stack 0
  5631                           tblptru	equ	0xFF8
  5632                           tblptrh	equ	0xFF7
  5633                           tblptrl	equ	0xFF6
  5634                           tablat	equ	0xFF5
  5635                           prodl	equ	0xFF3
  5636                           postinc0	equ	0xFEE
  5637                           wreg	equ	0xFE8
  5638                           postdec1	equ	0xFE5
  5639                           fsr1h	equ	0xFE2
  5640                           fsr1l	equ	0xFE1
  5641                           indf2	equ	0xFDF
  5642                           postinc2	equ	0xFDE
  5643                           postdec2	equ	0xFDD
  5644                           fsr2h	equ	0xFDA
  5645                           fsr2l	equ	0xFD9
  5646                           status	equ	0xFD8
  5647                           
  5648 ;; *************** function _Byte_SetZone *****************
  5649 ;; Defined at:
  5650 ;;		line 47 in file "Library/Types.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;  pInput          2    0[BANK0 ] PTR struct Byte
  5653 ;;		 -> PortF..(2), PortC..(2), PortD..(2), PortE..(2), 
  5654 ;;		 -> PortB..(2), PortA..(2), PortG..(2), PortG(10), 
  5655 ;;		 -> PortA(10), PortB(10), PortE(10), SSP2CON1(1), 
  5656 ;;		 -> PortD(10), SSP1CON1(1), TRISG(1), TRISF(1), 
  5657 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
  5658 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
  5659 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
  5660 ;;		 -> PortC(10), PortF(10), NULL(0), 
  5661 ;;  pMax            1    2[BANK0 ] unsigned char 
  5662 ;;  pChunk          1    3[BANK0 ] unsigned char 
  5663 ;;  pChunkSize      1    4[BANK0 ] unsigned char 
  5664 ;;  pValue          1    5[BANK0 ] unsigned char 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  MASK            1   10[BANK0 ] unsigned char 
  5667 ;;  Offset          1    9[BANK0 ] unsigned char 
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  1    wreg      void 
  5670 ;; Registers used:
  5671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5677 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5681 ;;Total ram usage:       11 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    7
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_Byte_SetPair
  5688 ;;		_Byte_SetQuad
  5689 ;;		_Byte_SetTriple
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text19
  5694  010FEC                     __ptext19:
  5695                           	opt stack 0
  5696  010FEC                     _Byte_SetZone:
  5697                           	opt stack 19
  5698                           
  5699                           ;Types.c: 49: UINT8 MASK = MASKS[pChunkSize];
  5700                           
  5701                           ;incstack = 0
  5702  010FEC  0100               	movlb	0	; () banked
  5703  010FEE  51CC               	movf	Byte_SetZone@pChunkSize& (0+255),w,b
  5704  010FF0  0D01               	mullw	1
  5705  010FF2  0E01               	movlw	low _MASKS
  5706  010FF4  24F3               	addwf	prodl,w,c
  5707  010FF6  6EF6               	movwf	tblptrl,c
  5708  010FF8  0EFE               	movlw	high _MASKS
  5709  010FFA  20F4               	addwfc	prodh,w,c
  5710  010FFC  6EF7               	movwf	tblptrh,c
  5711  010FFE                     	if	1	;There are 3 active tblptr bytes
  5712  010FFE  6AF8               	clrf	tblptru,c
  5713  011000  0E00               	movlw	low (__mediumconst shr (0+16))
  5714  011002  22F8               	addwfc	tblptru,f,c
  5715  011004                     	endif
  5716  011004  0008               	tblrd		*
  5717  011006  CFF5 F0D2          	movff	tablat,Byte_SetZone@MASK
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;Types.c: 50: UINT8 Offset = 0;
  5721  01100A  0E00               	movlw	0
  5722  01100C  0100               	movlb	0	; () banked
  5723  01100E  6FD1               	movwf	Byte_SetZone@Offset& (0+255),b
  5724                           
  5725                           ;Types.c: 52: while (pChunk >= pMax)
  5726  011010  D006               	goto	l9070
  5727  011012                     l9066:
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;Types.c: 53: {
  5731                           ;Types.c: 54: pChunk -= pMax;
  5732  011012  0100               	movlb	0	; () banked
  5733  011014  51CA               	movf	Byte_SetZone@pMax& (0+255),w,b
  5734  011016  0100               	movlb	0	; () banked
  5735  011018  5FCB               	subwf	Byte_SetZone@pChunk& (0+255),f,b
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;Types.c: 55: Offset += 1;
  5739  01101A  0100               	movlb	0	; () banked
  5740  01101C  2BD1               	incf	Byte_SetZone@Offset& (0+255),f,b
  5741  01101E                     l9070:
  5742                           
  5743                           ; BSR set to: 0
  5744  01101E  0100               	movlb	0	; () banked
  5745  011020  51CA               	movf	Byte_SetZone@pMax& (0+255),w,b
  5746  011022  0100               	movlb	0	; () banked
  5747  011024  5DCB               	subwf	Byte_SetZone@pChunk& (0+255),w,b
  5748  011026  B0D8               	btfsc	status,0,c
  5749  011028  D7F4               	goto	l9066
  5750                           
  5751                           ; BSR set to: 0
  5752                           ;Types.c: 56: }
  5753                           ;Types.c: 57: pChunk *= pChunkSize;
  5754                           
  5755                           ; BSR set to: 0
  5756  01102A  0100               	movlb	0	; () banked
  5757  01102C  51CC               	movf	Byte_SetZone@pChunkSize& (0+255),w,b
  5758  01102E  0100               	movlb	0	; () banked
  5759  011030  03CB               	mulwf	Byte_SetZone@pChunk& (0+255),b
  5760  011032  50F3               	movf	prodl,w,c
  5761  011034  6FCB               	movwf	Byte_SetZone@pChunk& (0+255),b
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;Types.c: 58: pChunk += Offset;
  5765  011036  0100               	movlb	0	; () banked
  5766  011038  51D1               	movf	Byte_SetZone@Offset& (0+255),w,b
  5767  01103A  0100               	movlb	0	; () banked
  5768  01103C  27CB               	addwf	Byte_SetZone@pChunk& (0+255),f,b
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;Types.c: 60: pValue &= MASK;
  5772  01103E  0100               	movlb	0	; () banked
  5773  011040  51D2               	movf	Byte_SetZone@MASK& (0+255),w,b
  5774  011042  0100               	movlb	0	; () banked
  5775  011044  17CD               	andwf	Byte_SetZone@pValue& (0+255),f,b
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;Types.c: 61: pInput->mBits &= ~(MASK << pChunk);
  5779  011046  C0CB  F0CE         	movff	Byte_SetZone@pChunk,??_Byte_SetZone
  5780  01104A  C0D2  F0CF         	movff	Byte_SetZone@MASK,??_Byte_SetZone+1
  5781  01104E  0100               	movlb	0	; () banked
  5782  011050  2BCE               	incf	??_Byte_SetZone& (0+255),f,b
  5783  011052  D003               	goto	u5794
  5784  011054                     u5795:
  5785  011054  0100               	movlb	0	; () banked
  5786  011056  90D8               	bcf	status,0,c
  5787  011058  37CF               	rlcf	(??_Byte_SetZone+1)& (0+255),f,b
  5788  01105A                     u5794:
  5789  01105A  0100               	movlb	0	; () banked
  5790  01105C  2FCE               	decfsz	??_Byte_SetZone& (0+255),f,b
  5791  01105E  D7FA               	goto	u5795
  5792  011060  0100               	movlb	0	; () banked
  5793  011062  51CF               	movf	(??_Byte_SetZone+1)& (0+255),w,b
  5794  011064  0AFF               	xorlw	255
  5795  011066  0100               	movlb	0	; () banked
  5796  011068  6FD0               	movwf	(??_Byte_SetZone+2)& (0+255),b
  5797  01106A  C0C8  FFD9         	movff	Byte_SetZone@pInput,fsr2l
  5798  01106E  C0C9  FFDA         	movff	Byte_SetZone@pInput+1,fsr2h
  5799  011072  0100               	movlb	0	; () banked
  5800  011074  51D0               	movf	(??_Byte_SetZone+2)& (0+255),w,b
  5801  011076  16DF               	andwf	indf2,f,c
  5802                           
  5803                           ; BSR set to: 0
  5804                           ;Types.c: 62: pInput->mBits |= pValue << pChunk;
  5805  011078  C0CB  F0CE         	movff	Byte_SetZone@pChunk,??_Byte_SetZone
  5806  01107C  C0CD  F0CF         	movff	Byte_SetZone@pValue,??_Byte_SetZone+1
  5807  011080  0100               	movlb	0	; () banked
  5808  011082  2BCE               	incf	??_Byte_SetZone& (0+255),f,b
  5809  011084  D003               	goto	u5804
  5810  011086                     u5805:
  5811  011086  0100               	movlb	0	; () banked
  5812  011088  90D8               	bcf	status,0,c
  5813  01108A  37CF               	rlcf	(??_Byte_SetZone+1)& (0+255),f,b
  5814  01108C                     u5804:
  5815  01108C  0100               	movlb	0	; () banked
  5816  01108E  2FCE               	decfsz	??_Byte_SetZone& (0+255),f,b
  5817  011090  D7FA               	goto	u5805
  5818  011092  C0C8  FFD9         	movff	Byte_SetZone@pInput,fsr2l
  5819  011096  C0C9  FFDA         	movff	Byte_SetZone@pInput+1,fsr2h
  5820  01109A  0100               	movlb	0	; () banked
  5821  01109C  51CF               	movf	(??_Byte_SetZone+1)& (0+255),w,b
  5822  01109E  12DF               	iorwf	indf2,f,c
  5823                           
  5824                           ; BSR set to: 0
  5825  0110A0  0012               	return		;funcret
  5826  0110A2                     __end_of_Byte_SetZone:
  5827                           	opt stack 0
  5828                           tblptru	equ	0xFF8
  5829                           tblptrh	equ	0xFF7
  5830                           tblptrl	equ	0xFF6
  5831                           tablat	equ	0xFF5
  5832                           prodh	equ	0xFF4
  5833                           prodl	equ	0xFF3
  5834                           postinc0	equ	0xFEE
  5835                           wreg	equ	0xFE8
  5836                           postdec1	equ	0xFE5
  5837                           fsr1h	equ	0xFE2
  5838                           fsr1l	equ	0xFE1
  5839                           indf2	equ	0xFDF
  5840                           postinc2	equ	0xFDE
  5841                           postdec2	equ	0xFDD
  5842                           fsr2h	equ	0xFDA
  5843                           fsr2l	equ	0xFD9
  5844                           status	equ	0xFD8
  5845                           
  5846 ;; *************** function _PortProperty_Valid *****************
  5847 ;; Defined at:
  5848 ;;		line 220 in file "Library/Types.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;  pInput          2   15[BANK0 ] PTR struct PortProperty
  5851 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  5852 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
  5853 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
  5854 ;;		 -> PortC(10), PortF(10), NULL(0), 
  5855 ;;  pPinDrive       1   17[BANK0 ] enum E7413
  5856 ;;  pPin            1   18[BANK0 ] unsigned char 
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;  Errors         16   21[BANK0 ] const enum E7419[4][4]
  5859 ;;  Pair            1   37[BANK0 ] enum E7413
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  1    wreg      enum E7419
  5862 ;; Registers used:
  5863 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5869 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5870 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;Total ram usage:       23 bytes
  5874 ;; Hardware stack levels used:    1
  5875 ;; Hardware stack levels required when called:   10
  5876 ;; This function calls:
  5877 ;;		_Word_GetPair
  5878 ;; This function is called by:
  5879 ;;		_Port_CheckPairType
  5880 ;;		_Port_SetPinType
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           	psect	text20
  5885  0114FC                     __ptext20:
  5886                           	opt stack 0
  5887  0114FC                     _PortProperty_Valid:
  5888                           	opt stack 15
  5889                           
  5890                           ;Types.c: 222: ePinDrive Pair;
  5891                           ;Types.c: 223: const ePinError Errors[4][4] =
  5892                           ;Types.c: 224: {
  5893                           ;Types.c: 226: { ePinErrorNone, ePinErrorCannotDriveHigh, ePinErrorCannotDriveLow, ePinE
      +                          rrorNone },
  5894                           ;Types.c: 227: { ePinErrorCannotDriveHigh, ePinErrorNone, ePinErrorCannotDriveHigh, ePin
      +                          ErrorNone },
  5895                           ;Types.c: 228: { ePinErrorCannotDriveLow, ePinErrorCannotDriveLow, ePinErrorNone, ePinEr
      +                          rorNone },
  5896                           ;Types.c: 229: { ePinErrorCannotDrive, ePinErrorCannotDrive, ePinErrorCannotDrive, ePinE
      +                          rrorNone }
  5897                           ;Types.c: 230: };
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;incstack = 0
  5901  0114FC  0EE1               	movlw	low PortProperty_Valid@F7774
  5902  0114FE  6EF6               	movwf	tblptrl,c
  5903  011500                     	if	1	;There is more than 1 active tblptr byte
  5904  011500  0EFD               	movlw	high PortProperty_Valid@F7774
  5905  011502  6EF7               	movwf	tblptrh,c
  5906  011504                     	endif
  5907  011504                     	if	1	;There are 3 active tblptr bytes
  5908  011504  0E00               	movlw	low (PortProperty_Valid@F7774 shr (0+16))
  5909  011506  6EF8               	movwf	tblptru,c
  5910  011508                     	endif
  5911  011508  EE20  F0DD         	lfsr	2,PortProperty_Valid@Errors
  5912  01150C  0E0F               	movlw	15
  5913  01150E                     u5740:
  5914  01150E  0009               	tblrd		*+
  5915  011510  CFF5 FFDE          	movff	tablat,postinc2
  5916  011514  06E8               	decf	wreg,f,c
  5917  011516  E2FB               	bc	u5740
  5918                           
  5919                           ;Types.c: 232: Pair = (ePinDrive)Word_GetPair(&(pInput->mType), pPin);
  5920  011518  C0D7  F0D4         	movff	PortProperty_Valid@pInput,Word_GetPair@pInput
  5921  01151C  C0D8  F0D5         	movff	PortProperty_Valid@pInput+1,Word_GetPair@pInput+1
  5922  011520  C0DA  F0D6         	movff	PortProperty_Valid@pPin,Word_GetPair@pPair
  5923  011524  ECF0  F08C         	call	_Word_GetPair	;wreg free
  5924  011528  0100               	movlb	0	; () banked
  5925  01152A  6FED               	movwf	PortProperty_Valid@Pair& (0+255),b
  5926                           
  5927                           ; BSR set to: 0
  5928                           ;Types.c: 234: if (pPinDrive < 4 && Pair < 4)
  5929  01152C  0E04               	movlw	4
  5930  01152E  0100               	movlb	0	; () banked
  5931  011530  61D9               	cpfslt	PortProperty_Valid@pPinDrive& (0+255),b
  5932  011532  D020               	goto	l9042
  5933                           
  5934                           ; BSR set to: 0
  5935  011534  0E04               	movlw	4
  5936  011536  0100               	movlb	0	; () banked
  5937  011538  61ED               	cpfslt	PortProperty_Valid@Pair& (0+255),b
  5938  01153A  D01C               	goto	l9042
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;Types.c: 235: return Errors[pPinDrive][Pair];
  5942  01153C  0100               	movlb	0	; () banked
  5943  01153E  51D9               	movf	PortProperty_Valid@pPinDrive& (0+255),w,b
  5944  011540  0D04               	mullw	4
  5945  011542  0EDD               	movlw	low PortProperty_Valid@Errors
  5946  011544  0100               	movlb	0	; () banked
  5947  011546  6FDB               	movwf	??_PortProperty_Valid& (0+255),b
  5948  011548  0E00               	movlw	high PortProperty_Valid@Errors
  5949  01154A  0100               	movlb	0	; () banked
  5950  01154C  6FDC               	movwf	(??_PortProperty_Valid+1)& (0+255),b
  5951  01154E  50F3               	movf	prodl,w,c
  5952  011550  0100               	movlb	0	; () banked
  5953  011552  27DB               	addwf	??_PortProperty_Valid& (0+255),f,b
  5954  011554  50F4               	movf	prodh,w,c
  5955  011556  0100               	movlb	0	; () banked
  5956  011558  23DC               	addwfc	(??_PortProperty_Valid+1)& (0+255),f,b
  5957  01155A  0100               	movlb	0	; () banked
  5958  01155C  51ED               	movf	PortProperty_Valid@Pair& (0+255),w,b
  5959  01155E  0D01               	mullw	1
  5960  011560  50F3               	movf	prodl,w,c
  5961  011562  0100               	movlb	0	; () banked
  5962  011564  25DB               	addwf	??_PortProperty_Valid& (0+255),w,b
  5963  011566  6ED9               	movwf	fsr2l,c
  5964  011568  50F4               	movf	prodh,w,c
  5965  01156A  0100               	movlb	0	; () banked
  5966  01156C  21DC               	addwfc	(??_PortProperty_Valid+1)& (0+255),w,b
  5967  01156E  6EDA               	movwf	fsr2h,c
  5968  011570  50DF               	movf	indf2,w,c
  5969                           
  5970                           ; BSR set to: 0
  5971  011572  0012               	return	
  5972  011574                     l9042:
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;Types.c: 237: return ePinErrorState;
  5976  011574  0E05               	movlw	5
  5977  011576  0012               	return	
  5978  011578                     __end_of_PortProperty_Valid:
  5979                           	opt stack 0
  5980                           tblptru	equ	0xFF8
  5981                           tblptrh	equ	0xFF7
  5982                           tblptrl	equ	0xFF6
  5983                           tablat	equ	0xFF5
  5984                           prodh	equ	0xFF4
  5985                           prodl	equ	0xFF3
  5986                           postinc0	equ	0xFEE
  5987                           wreg	equ	0xFE8
  5988                           postdec1	equ	0xFE5
  5989                           fsr1h	equ	0xFE2
  5990                           fsr1l	equ	0xFE1
  5991                           indf2	equ	0xFDF
  5992                           postinc2	equ	0xFDE
  5993                           postdec2	equ	0xFDD
  5994                           fsr2h	equ	0xFDA
  5995                           fsr2l	equ	0xFD9
  5996                           status	equ	0xFD8
  5997                           
  5998 ;; *************** function _LED_Set *****************
  5999 ;; Defined at:
  6000 ;;		line 33 in file "Library/LED.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;  pLED            1    wreg     enum E7683
  6003 ;;  pValue          1   20[BANK0 ] unsigned char 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  pLED            1   21[BANK0 ] enum E7683
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  1    wreg      void 
  6008 ;; Registers used:
  6009 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6015 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6018 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6019 ;;Total ram usage:        2 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:   11
  6022 ;; This function calls:
  6023 ;;		_Port_SetPin
  6024 ;; This function is called by:
  6025 ;;		_LED_Init
  6026 ;;		_SYSTEM_Initialize
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text21
  6031  011834                     __ptext21:
  6032                           	opt stack 0
  6033  011834                     _LED_Set:
  6034                           	opt stack 17
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;incstack = 0
  6038                           ;LED_Set@pLED stored from wreg
  6039  011834  0100               	movlb	0	; () banked
  6040  011836  6FDD               	movwf	LED_Set@pLED& (0+255),b
  6041                           
  6042                           ;LED.c: 35: switch (pLED)
  6043  011838  D01C               	goto	l9210
  6044  01183A                     l9204:
  6045                           
  6046                           ;LED.c: 38: Port_SetPin(&PortC, eP0, pValue);
  6047  01183A  0E76               	movlw	low _PortC
  6048  01183C  0100               	movlb	0	; () banked
  6049  01183E  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6050  011840  0E00               	movlw	high _PortC
  6051  011842  0100               	movlb	0	; () banked
  6052  011844  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6053  011846  0E00               	movlw	0
  6054  011848  0100               	movlb	0	; () banked
  6055  01184A  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6056  01184C  C0DC  F0DA         	movff	LED_Set@pValue,Port_SetPin@pValue
  6057  011850  EC94  F087         	call	_Port_SetPin	;wreg free
  6058                           
  6059                           ;LED.c: 39: break;
  6060  011854  0012               	return	
  6061  011856                     l9206:
  6062                           
  6063                           ;LED.c: 41: Port_SetPin(&PortC, eP1, pValue);
  6064  011856  0E76               	movlw	low _PortC
  6065  011858  0100               	movlb	0	; () banked
  6066  01185A  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6067  01185C  0E00               	movlw	high _PortC
  6068  01185E  0100               	movlb	0	; () banked
  6069  011860  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6070  011862  0E01               	movlw	1
  6071  011864  0100               	movlb	0	; () banked
  6072  011866  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6073  011868  C0DC  F0DA         	movff	LED_Set@pValue,Port_SetPin@pValue
  6074  01186C  EC94  F087         	call	_Port_SetPin	;wreg free
  6075                           
  6076                           ;LED.c: 43: }
  6077                           
  6078                           ;LED.c: 42: break;
  6079  011870  0012               	return	
  6080  011872                     l9210:
  6081  011872  0100               	movlb	0	; () banked
  6082  011874  51DD               	movf	LED_Set@pLED& (0+255),w,b
  6083                           
  6084                           ; Switch size 1, requested type "space"
  6085                           ; Number of cases is 2, Range of values is 0 to 1
  6086                           ; switch strategies available:
  6087                           ; Name         Instructions Cycles
  6088                           ; simple_byte            7     4 (average)
  6089                           ;	Chosen strategy is simple_byte
  6090  011876  0A00               	xorlw	0	; case 0
  6091  011878  B4D8               	btfsc	status,2,c
  6092  01187A  D7DF               	goto	l9204
  6093  01187C  0A01               	xorlw	1	; case 1
  6094  01187E  A4D8               	btfss	status,2,c
  6095  011880  0012               	return	
  6096  011882  D7E9               	goto	l9206
  6097  011884                     __end_of_LED_Set:
  6098                           	opt stack 0
  6099                           tblptru	equ	0xFF8
  6100                           tblptrh	equ	0xFF7
  6101                           tblptrl	equ	0xFF6
  6102                           tablat	equ	0xFF5
  6103                           prodh	equ	0xFF4
  6104                           prodl	equ	0xFF3
  6105                           postinc0	equ	0xFEE
  6106                           wreg	equ	0xFE8
  6107                           postdec1	equ	0xFE5
  6108                           fsr1h	equ	0xFE2
  6109                           fsr1l	equ	0xFE1
  6110                           indf2	equ	0xFDF
  6111                           postinc2	equ	0xFDE
  6112                           postdec2	equ	0xFDD
  6113                           fsr2h	equ	0xFDA
  6114                           fsr2l	equ	0xFD9
  6115                           status	equ	0xFD8
  6116                           
  6117 ;; *************** function _MXK_Dequeue *****************
  6118 ;; Defined at:
  6119 ;;		line 153 in file "Library/MXK.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;		None
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;		None
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1    wreg      void 
  6126 ;; Registers used:
  6127 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;Total ram usage:        0 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:   12
  6140 ;; This function calls:
  6141 ;;		Absolute function
  6142 ;;		_Motor_Step
  6143 ;; This function is called by:
  6144 ;;		_main
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           	psect	text22
  6149  011A92                     __ptext22:
  6150                           	opt stack 0
  6151  011A92                     _MXK_Dequeue:
  6152                           	opt stack 18
  6153                           
  6154                           ;MXK.c: 155: if (lQueue)
  6155                           
  6156                           ;incstack = 0
  6157  011A92  5025               	movf	_lQueue,w,c	;volatile
  6158  011A94  1026               	iorwf	_lQueue+1,w,c	;volatile
  6159  011A96  1027               	iorwf	_lQueue+2,w,c	;volatile
  6160  011A98  B4D8               	btfsc	status,2,c
  6161  011A9A  D00C               	goto	l10284
  6162                           
  6163                           ;MXK.c: 156: lQueue();
  6164  011A9C  D801               	call	u7138
  6165  011A9E  D00A               	goto	l10284
  6166  011AA0                     u7138:
  6167  011AA0  0005               	push	
  6168  011AA2  6EFA               	movwf	pclath,c
  6169  011AA4  5025               	movf	_lQueue,w,c	;volatile
  6170  011AA6  6EFD               	movwf	tosl,c
  6171  011AA8  5026               	movf	_lQueue+1,w,c	;volatile
  6172  011AAA  6EFE               	movwf	tosh,c
  6173  011AAC  5027               	movf	_lQueue+2,w,c	;volatile
  6174  011AAE  6EFF               	movwf	tosu,c
  6175  011AB0  50FA               	movf	pclath,w,c
  6176  011AB2  0012               	return		;indir
  6177  011AB4                     l10284:
  6178                           
  6179                           ;MXK.c: 157: lQueue = 0;
  6180  011AB4  0E00               	movlw	0
  6181  011AB6  6E25               	movwf	_lQueue,c	;volatile
  6182  011AB8  0E00               	movlw	0
  6183  011ABA  6E26               	movwf	_lQueue+1,c	;volatile
  6184  011ABC  0E00               	movlw	0
  6185  011ABE  6E27               	movwf	_lQueue+2,c	;volatile
  6186  011AC0  0012               	return		;funcret
  6187  011AC2                     __end_of_MXK_Dequeue:
  6188                           	opt stack 0
  6189                           tosu	equ	0xFFF
  6190                           tosh	equ	0xFFE
  6191                           tosl	equ	0xFFD
  6192                           pclath	equ	0xFFA
  6193                           tblptru	equ	0xFF8
  6194                           tblptrh	equ	0xFF7
  6195                           tblptrl	equ	0xFF6
  6196                           tablat	equ	0xFF5
  6197                           prodh	equ	0xFF4
  6198                           prodl	equ	0xFF3
  6199                           postinc0	equ	0xFEE
  6200                           wreg	equ	0xFE8
  6201                           postdec1	equ	0xFE5
  6202                           fsr1h	equ	0xFE2
  6203                           fsr1l	equ	0xFE1
  6204                           indf2	equ	0xFDF
  6205                           postinc2	equ	0xFDE
  6206                           postdec2	equ	0xFDD
  6207                           fsr2h	equ	0xFDA
  6208                           fsr2l	equ	0xFD9
  6209                           status	equ	0xFD8
  6210                           
  6211 ;; *************** function _Motor_Step *****************
  6212 ;; Defined at:
  6213 ;;		line 75 in file "Library/Motor.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;		None
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;		None
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  1    wreg      void 
  6220 ;; Registers used:
  6221 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6231 ;;Total ram usage:        2 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:   11
  6234 ;; This function calls:
  6235 ;;		_MXK_Queue
  6236 ;;		_MXK_Release
  6237 ;;		_MXK_SwitchTo
  6238 ;;		_Port_SetPin
  6239 ;;		_Timer0_Restart
  6240 ;;		_Timer0_Stop
  6241 ;; This function is called by:
  6242 ;;		_Motor_Init
  6243 ;;		_Timer0_ISR
  6244 ;;		_MXK_Dequeue
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text23
  6249  010D06                     __ptext23:
  6250                           	opt stack 0
  6251  010D06                     _Motor_Step:
  6252                           	opt stack 0
  6253                           
  6254                           ;Skip over the trampoline to the duplicate function for level 2
  6255  010D06  B249               	btfsc	btemp,1,c
  6256  010D08  EF15  F087         	goto	i2_Motor_Step
  6257  010D0C                     _Motor_Step$intlevel0:
  6258                           	opt stack 18
  6259                           
  6260                           ;Motor.c: 77: if (MXK_SwitchTo(lMotor->mAddress))
  6261                           
  6262                           ;incstack = 0
  6263  010D0C  EE20 F004          	lfsr	2,4
  6264  010D10  5030               	movf	_lMotor,w,c
  6265  010D12  26D9               	addwf	fsr2l,f,c
  6266  010D14  5031               	movf	_lMotor+1,w,c
  6267  010D16  22DA               	addwfc	fsr2h,f,c
  6268  010D18  50DF               	movf	indf2,w,c
  6269  010D1A  ECAF  F08C         	call	_MXK_SwitchTo
  6270  010D1E  0900               	iorlw	0
  6271  010D20  B4D8               	btfsc	status,2,c
  6272  010D22  D07A               	goto	l9662
  6273                           
  6274                           ;Motor.c: 78: {
  6275                           ;Motor.c: 79: if (lMotor->mDelta != 0)
  6276  010D24  C030  FFD9         	movff	_lMotor,fsr2l
  6277  010D28  C031  FFDA         	movff	_lMotor+1,fsr2h
  6278  010D2C  50DE               	movf	postinc2,w,c
  6279  010D2E  10DE               	iorwf	postinc2,w,c
  6280  010D30  B4D8               	btfsc	status,2,c
  6281  010D32  D06D               	goto	l9656
  6282                           
  6283                           ;Motor.c: 80: {
  6284                           ;Motor.c: 82: if (lMotor->mDelta > 0)
  6285  010D34  C030  FFD9         	movff	_lMotor,fsr2l
  6286  010D38  C031  FFDA         	movff	_lMotor+1,fsr2h
  6287  010D3C  0E01               	movlw	1
  6288  010D3E  BEDB               	btfsc	plusw2,7,c
  6289  010D40  D026               	goto	l9640
  6290  010D42  0E01               	movlw	1
  6291  010D44  50DB               	movf	plusw2,w,c
  6292  010D46  E103               	bnz	u6310
  6293  010D48  04DE               	decf	postinc2,w,c
  6294  010D4A  A0D8               	btfss	status,0,c
  6295  010D4C  D020               	goto	l9640
  6296  010D4E                     u6310:
  6297                           
  6298                           ;Motor.c: 83: {
  6299                           ;Motor.c: 84: if (lMotor->mDelta != 32767)
  6300  010D4E  C030  FFD9         	movff	_lMotor,fsr2l
  6301  010D52  C031  FFDA         	movff	_lMotor+1,fsr2h
  6302  010D56  28DE               	incf	postinc2,w,c
  6303  010D58  E104               	bnz	u6320
  6304  010D5A  0E7F               	movlw	127
  6305  010D5C  18DE               	xorwf	postinc2,w,c
  6306  010D5E  B4D8               	btfsc	status,2,c
  6307  010D60  D007               	goto	l9638
  6308  010D62                     u6320:
  6309                           
  6310                           ;Motor.c: 85: lMotor->mDelta --;
  6311  010D62  C030  FFD9         	movff	_lMotor,fsr2l
  6312  010D66  C031  FFDA         	movff	_lMotor+1,fsr2h
  6313  010D6A  06DE               	decf	postinc2,f,c
  6314  010D6C  0E00               	movlw	0
  6315  010D6E  5ADD               	subwfb	postdec2,f,c
  6316  010D70                     l9638:
  6317                           
  6318                           ;Motor.c: 87: Port_SetPin(&PortE, eP0, 1);
  6319  010D70  0E8A               	movlw	low _PortE
  6320  010D72  0100               	movlb	0	; () banked
  6321  010D74  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6322  010D76  0E00               	movlw	high _PortE
  6323  010D78  0100               	movlb	0	; () banked
  6324  010D7A  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6325  010D7C  0E00               	movlw	0
  6326  010D7E  0100               	movlb	0	; () banked
  6327  010D80  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6328  010D82  0E01               	movlw	1
  6329  010D84  0100               	movlb	0	; () banked
  6330  010D86  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  6331  010D88  EC94  F087         	call	_Port_SetPin	;wreg free
  6332                           
  6333                           ;Motor.c: 88: }
  6334  010D8C  D01F               	goto	l9646
  6335  010D8E                     l9640:
  6336                           
  6337                           ;Motor.c: 89: else
  6338                           ;Motor.c: 90: {
  6339                           ;Motor.c: 91: if (lMotor->mDelta != -32767)
  6340  010D8E  C030  FFD9         	movff	_lMotor,fsr2l
  6341  010D92  C031  FFDA         	movff	_lMotor+1,fsr2h
  6342  010D96  04DE               	decf	postinc2,w,c
  6343  010D98  E104               	bnz	u6330
  6344  010D9A  0E80               	movlw	128
  6345  010D9C  18DE               	xorwf	postinc2,w,c
  6346  010D9E  B4D8               	btfsc	status,2,c
  6347  010DA0  D007               	goto	l9644
  6348  010DA2                     u6330:
  6349                           
  6350                           ;Motor.c: 92: lMotor->mDelta ++;
  6351  010DA2  C030  FFD9         	movff	_lMotor,fsr2l
  6352  010DA6  C031  FFDA         	movff	_lMotor+1,fsr2h
  6353  010DAA  2ADE               	incf	postinc2,f,c
  6354  010DAC  0E00               	movlw	0
  6355  010DAE  22DD               	addwfc	postdec2,f,c
  6356  010DB0                     l9644:
  6357                           
  6358                           ;Motor.c: 94: Port_SetPin(&PortE, eP0, 0);
  6359  010DB0  0E8A               	movlw	low _PortE
  6360  010DB2  0100               	movlb	0	; () banked
  6361  010DB4  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6362  010DB6  0E00               	movlw	high _PortE
  6363  010DB8  0100               	movlb	0	; () banked
  6364  010DBA  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6365  010DBC  0E00               	movlw	0
  6366  010DBE  0100               	movlb	0	; () banked
  6367  010DC0  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6368  010DC2  0E00               	movlw	0
  6369  010DC4  0100               	movlb	0	; () banked
  6370  010DC6  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  6371  010DC8  EC94  F087         	call	_Port_SetPin	;wreg free
  6372  010DCC                     l9646:
  6373                           
  6374                           ;Motor.c: 95: }
  6375                           ;Motor.c: 98: Port_SetPin(&PortE, eP1, 1);
  6376  010DCC  0E8A               	movlw	low _PortE
  6377  010DCE  0100               	movlb	0	; () banked
  6378  010DD0  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6379  010DD2  0E00               	movlw	high _PortE
  6380  010DD4  0100               	movlb	0	; () banked
  6381  010DD6  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6382  010DD8  0E01               	movlw	1
  6383  010DDA  0100               	movlb	0	; () banked
  6384  010DDC  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6385  010DDE  0E01               	movlw	1
  6386  010DE0  0100               	movlb	0	; () banked
  6387  010DE2  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  6388  010DE4  EC94  F087         	call	_Port_SetPin	;wreg free
  6389                           
  6390                           ;Motor.c: 99: Port_SetPin(&PortE, eP1, 0);
  6391  010DE8  0E8A               	movlw	low _PortE
  6392  010DEA  0100               	movlb	0	; () banked
  6393  010DEC  6FD7               	movwf	Port_SetPin@pInput& (0+255),b
  6394  010DEE  0E00               	movlw	high _PortE
  6395  010DF0  0100               	movlb	0	; () banked
  6396  010DF2  6FD8               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  6397  010DF4  0E01               	movlw	1
  6398  010DF6  0100               	movlb	0	; () banked
  6399  010DF8  6FD9               	movwf	Port_SetPin@pPin& (0+255),b
  6400  010DFA  0E00               	movlw	0
  6401  010DFC  0100               	movlb	0	; () banked
  6402  010DFE  6FDA               	movwf	Port_SetPin@pValue& (0+255),b
  6403  010E00  EC94  F087         	call	_Port_SetPin	;wreg free
  6404                           
  6405                           ;Motor.c: 101: MXK_Release();
  6406  010E04  ECCE  F08D         	call	_MXK_Release	;wreg free
  6407                           
  6408                           ;Motor.c: 102: Timer0_Restart();
  6409  010E08  ECEE  F08D         	call	_Timer0_Restart	;wreg free
  6410                           
  6411                           ;Motor.c: 103: return;
  6412  010E0C  0012               	return	
  6413  010E0E                     l9656:
  6414                           
  6415                           ;Motor.c: 104: }
  6416                           ;Motor.c: 105: MXK_Release();
  6417  010E0E  ECCE  F08D         	call	_MXK_Release	;wreg free
  6418                           
  6419                           ;Motor.c: 106: Timer0_Stop();
  6420  010E12  EC07  F08E         	call	_Timer0_Stop	;wreg free
  6421                           
  6422                           ;Motor.c: 107: return;
  6423  010E16  0012               	return	
  6424  010E18                     l9662:
  6425                           
  6426                           ;Motor.c: 108: }
  6427                           ;Motor.c: 111: MXK_Queue(lStepFunction);
  6428  010E18  C06B  F0C8         	movff	_lStepFunction,MXK_Queue@pCallback
  6429  010E1C  C06C  F0C9         	movff	_lStepFunction+1,MXK_Queue@pCallback+1
  6430  010E20  C06D  F0CA         	movff	_lStepFunction+2,MXK_Queue@pCallback+2
  6431  010E24  ECE0  F08D         	call	_MXK_Queue	;wreg free
  6432  010E28  0012               	return		;funcret
  6433  010E2A                     __end_of_Motor_Step:
  6434                           	opt stack 0
  6435                           tosu	equ	0xFFF
  6436                           tosh	equ	0xFFE
  6437                           tosl	equ	0xFFD
  6438                           pclath	equ	0xFFA
  6439                           tblptru	equ	0xFF8
  6440                           tblptrh	equ	0xFF7
  6441                           tblptrl	equ	0xFF6
  6442                           tablat	equ	0xFF5
  6443                           prodh	equ	0xFF4
  6444                           prodl	equ	0xFF3
  6445                           postinc0	equ	0xFEE
  6446                           wreg	equ	0xFE8
  6447                           postdec1	equ	0xFE5
  6448                           fsr1h	equ	0xFE2
  6449                           fsr1l	equ	0xFE1
  6450                           indf2	equ	0xFDF
  6451                           postinc2	equ	0xFDE
  6452                           postdec2	equ	0xFDD
  6453                           plusw2	equ	0xFDB
  6454                           fsr2h	equ	0xFDA
  6455                           fsr2l	equ	0xFD9
  6456                           status	equ	0xFD8
  6457                           
  6458 ;; *************** function _Timer0_Stop *****************
  6459 ;; Defined at:
  6460 ;;		line 89 in file "Library/Timer0.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;		None
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;		None
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  1    wreg      void 
  6467 ;; Registers used:
  6468 ;;		None
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6478 ;;Total ram usage:        0 bytes
  6479 ;; Hardware stack levels used:    1
  6480 ;; Hardware stack levels required when called:    7
  6481 ;; This function calls:
  6482 ;;		Nothing
  6483 ;; This function is called by:
  6484 ;;		_Motor_Step
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text24
  6489  011C0E                     __ptext24:
  6490                           	opt stack 0
  6491  011C0E                     _Timer0_Stop:
  6492                           	opt stack 21
  6493                           
  6494                           ;Timer0.c: 91: INTCONbits.TMR0IE = 0;
  6495                           
  6496                           ;incstack = 0
  6497  011C0E  9AF2               	bcf	intcon,5,c	;volatile
  6498                           
  6499                           ;Timer0.c: 92: INTCONbits.TMR0IF = 0;
  6500  011C10  94F2               	bcf	intcon,2,c	;volatile
  6501  011C12  0012               	return		;funcret
  6502  011C14                     __end_of_Timer0_Stop:
  6503                           	opt stack 0
  6504                           tosu	equ	0xFFF
  6505                           tosh	equ	0xFFE
  6506                           tosl	equ	0xFFD
  6507                           pclath	equ	0xFFA
  6508                           tblptru	equ	0xFF8
  6509                           tblptrh	equ	0xFF7
  6510                           tblptrl	equ	0xFF6
  6511                           tablat	equ	0xFF5
  6512                           prodh	equ	0xFF4
  6513                           prodl	equ	0xFF3
  6514                           intcon	equ	0xFF2
  6515                           postinc0	equ	0xFEE
  6516                           wreg	equ	0xFE8
  6517                           postdec1	equ	0xFE5
  6518                           fsr1h	equ	0xFE2
  6519                           fsr1l	equ	0xFE1
  6520                           indf2	equ	0xFDF
  6521                           postinc2	equ	0xFDE
  6522                           postdec2	equ	0xFDD
  6523                           plusw2	equ	0xFDB
  6524                           fsr2h	equ	0xFDA
  6525                           fsr2l	equ	0xFD9
  6526                           status	equ	0xFD8
  6527                           
  6528 ;; *************** function _Timer0_Restart *****************
  6529 ;; Defined at:
  6530 ;;		line 83 in file "Library/Timer0.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;		None
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;		None
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  1    wreg      void 
  6537 ;; Registers used:
  6538 ;;		None
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6548 ;;Total ram usage:        0 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; Hardware stack levels required when called:    7
  6551 ;; This function calls:
  6552 ;;		Nothing
  6553 ;; This function is called by:
  6554 ;;		_Motor_Step
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text25
  6559  011BDC                     __ptext25:
  6560                           	opt stack 0
  6561  011BDC                     _Timer0_Restart:
  6562                           	opt stack 21
  6563                           
  6564                           ;Timer0.c: 85: TMR0 = COUNTER;
  6565                           
  6566                           ;incstack = 0
  6567  011BDC  C02A  FFD6         	movff	_COUNTER,4054	;volatile
  6568  011BE0  C02B  FFD7         	movff	_COUNTER+1,4055	;volatile
  6569                           
  6570                           ;Timer0.c: 87: INTCONbits.TMR0IE = 1;
  6571  011BE4  8AF2               	bsf	intcon,5,c	;volatile
  6572  011BE6  0012               	return		;funcret
  6573  011BE8                     __end_of_Timer0_Restart:
  6574                           	opt stack 0
  6575                           tosu	equ	0xFFF
  6576                           tosh	equ	0xFFE
  6577                           tosl	equ	0xFFD
  6578                           pclath	equ	0xFFA
  6579                           tblptru	equ	0xFF8
  6580                           tblptrh	equ	0xFF7
  6581                           tblptrl	equ	0xFF6
  6582                           tablat	equ	0xFF5
  6583                           prodh	equ	0xFF4
  6584                           prodl	equ	0xFF3
  6585                           intcon	equ	0xFF2
  6586                           postinc0	equ	0xFEE
  6587                           wreg	equ	0xFE8
  6588                           postdec1	equ	0xFE5
  6589                           fsr1h	equ	0xFE2
  6590                           fsr1l	equ	0xFE1
  6591                           indf2	equ	0xFDF
  6592                           postinc2	equ	0xFDE
  6593                           postdec2	equ	0xFDD
  6594                           plusw2	equ	0xFDB
  6595                           fsr2h	equ	0xFDA
  6596                           fsr2l	equ	0xFD9
  6597                           status	equ	0xFD8
  6598                           
  6599 ;; *************** function _Port_SetPin *****************
  6600 ;; Defined at:
  6601 ;;		line 247 in file "Library/Port.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  pInput          2   15[BANK0 ] const PTR struct Port
  6604 ;;		 -> PortG(10), PortE(10), PortC(10), PortF(10), 
  6605 ;;  pPin            1   17[BANK0 ] enum E7694
  6606 ;;  pValue          1   18[BANK0 ] unsigned char 
  6607 ;; Auto vars:     Size  Location     Type
  6608 ;;  Type            1   19[BANK0 ] enum E7739
  6609 ;; Return value:  Size  Location     Type
  6610 ;;                  1    wreg      void 
  6611 ;; Registers used:
  6612 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6613 ;; Tracked objects:
  6614 ;;		On entry : 0/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6618 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6619 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;Total ram usage:        5 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; Hardware stack levels required when called:   10
  6625 ;; This function calls:
  6626 ;;		_Byte_SetBit
  6627 ;;		_Word_GetPair
  6628 ;; This function is called by:
  6629 ;;		_LED_Set
  6630 ;;		_Motor_Step
  6631 ;;		_MXK_Init
  6632 ;;		_Reset_Low
  6633 ;;		_Reset_High
  6634 ;;		_Port_TogglePin
  6635 ;;		_Motor_Init
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           	psect	text26
  6640  010F28                     __ptext26:
  6641                           	opt stack 0
  6642  010F28                     _Port_SetPin:
  6643                           	opt stack 19
  6644                           
  6645                           ;Port.c: 249: ePinType Type = (ePinType)Word_GetPair(&pInput->mType, (UINT8)pPin);
  6646                           
  6647                           ;incstack = 0
  6648  010F28  0E08               	movlw	8
  6649  010F2A  0100               	movlb	0	; () banked
  6650  010F2C  25D7               	addwf	Port_SetPin@pInput& (0+255),w,b
  6651  010F2E  0100               	movlb	0	; () banked
  6652  010F30  6FD4               	movwf	Word_GetPair@pInput& (0+255),b
  6653  010F32  0E00               	movlw	0
  6654  010F34  0100               	movlb	0	; () banked
  6655  010F36  21D8               	addwfc	(Port_SetPin@pInput+1)& (0+255),w,b
  6656  010F38  0100               	movlb	0	; () banked
  6657  010F3A  6FD5               	movwf	(Word_GetPair@pInput+1)& (0+255),b
  6658  010F3C  C0D9  F0D6         	movff	Port_SetPin@pPin,Word_GetPair@pPair
  6659  010F40  ECF0  F08C         	call	_Word_GetPair	;wreg free
  6660  010F44  0100               	movlb	0	; () banked
  6661  010F46  6FDB               	movwf	Port_SetPin@Type& (0+255),b
  6662                           
  6663                           ;Port.c: 250: switch (Type)
  6664  010F48  D042               	goto	l9126
  6665  010F4A                     l9112:
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;Port.c: 256: pValue &= 1;
  6669  010F4A  0E01               	movlw	1
  6670  010F4C  0100               	movlb	0	; () banked
  6671  010F4E  17DA               	andwf	Port_SetPin@pValue& (0+255),f,b
  6672                           
  6673                           ; BSR set to: 0
  6674                           ;Port.c: 257: Byte_SetBit(pInput->mDirection, pPin, pValue);
  6675  010F50  0100               	movlb	0	; () banked
  6676  010F52  EE20 F002          	lfsr	2,2
  6677  010F56  51D7               	movf	Port_SetPin@pInput& (0+255),w,b
  6678  010F58  26D9               	addwf	fsr2l,f,c
  6679  010F5A  51D8               	movf	(Port_SetPin@pInput+1)& (0+255),w,b
  6680  010F5C  22DA               	addwfc	fsr2h,f,c
  6681  010F5E  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  6682  010F62  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  6683  010F66  C0D9  F0CA         	movff	Port_SetPin@pPin,Byte_SetBit@pBit
  6684  010F6A  C0DA  F0CB         	movff	Port_SetPin@pValue,Byte_SetBit@pValue
  6685  010F6E  EC61  F08B         	call	_Byte_SetBit	;wreg free
  6686                           
  6687                           ;Port.c: 258: break;
  6688  010F72  0012               	return	
  6689  010F74                     l9116:
  6690                           
  6691                           ;Port.c: 261: pValue &= 1;
  6692  010F74  0E01               	movlw	1
  6693  010F76  0100               	movlb	0	; () banked
  6694  010F78  17DA               	andwf	Port_SetPin@pValue& (0+255),f,b
  6695                           
  6696                           ;Port.c: 262: pValue ^= 1;
  6697  010F7A  0E01               	movlw	1
  6698  010F7C  0100               	movlb	0	; () banked
  6699  010F7E  1BDA               	xorwf	Port_SetPin@pValue& (0+255),f,b
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;Port.c: 263: Byte_SetBit(pInput->mDirection, pPin, pValue);
  6703  010F80  0100               	movlb	0	; () banked
  6704  010F82  EE20 F002          	lfsr	2,2
  6705  010F86  51D7               	movf	Port_SetPin@pInput& (0+255),w,b
  6706  010F88  26D9               	addwf	fsr2l,f,c
  6707  010F8A  51D8               	movf	(Port_SetPin@pInput+1)& (0+255),w,b
  6708  010F8C  22DA               	addwfc	fsr2h,f,c
  6709  010F8E  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  6710  010F92  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  6711  010F96  C0D9  F0CA         	movff	Port_SetPin@pPin,Byte_SetBit@pBit
  6712  010F9A  C0DA  F0CB         	movff	Port_SetPin@pValue,Byte_SetBit@pValue
  6713  010F9E  EC61  F08B         	call	_Byte_SetBit	;wreg free
  6714                           
  6715                           ;Port.c: 264: break;
  6716  010FA2  0012               	return	
  6717  010FA4                     l9120:
  6718                           
  6719                           ;Port.c: 266: pValue &= 1;
  6720  010FA4  0E01               	movlw	1
  6721  010FA6  0100               	movlb	0	; () banked
  6722  010FA8  17DA               	andwf	Port_SetPin@pValue& (0+255),f,b
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;Port.c: 267: Byte_SetBit(pInput->mOutput, pPin, pValue);
  6726  010FAA  0100               	movlb	0	; () banked
  6727  010FAC  EE20 F004          	lfsr	2,4
  6728  010FB0  51D7               	movf	Port_SetPin@pInput& (0+255),w,b
  6729  010FB2  26D9               	addwf	fsr2l,f,c
  6730  010FB4  51D8               	movf	(Port_SetPin@pInput+1)& (0+255),w,b
  6731  010FB6  22DA               	addwfc	fsr2h,f,c
  6732  010FB8  CFDE F0C8          	movff	postinc2,Byte_SetBit@pInput
  6733  010FBC  CFDD F0C9          	movff	postdec2,Byte_SetBit@pInput+1
  6734  010FC0  C0D9  F0CA         	movff	Port_SetPin@pPin,Byte_SetBit@pBit
  6735  010FC4  C0DA  F0CB         	movff	Port_SetPin@pValue,Byte_SetBit@pValue
  6736  010FC8  EC61  F08B         	call	_Byte_SetBit	;wreg free
  6737                           
  6738                           ;Port.c: 269: }
  6739                           
  6740                           ;Port.c: 268: break;
  6741  010FCC  0012               	return	
  6742  010FCE                     l9126:
  6743  010FCE  0100               	movlb	0	; () banked
  6744  010FD0  51DB               	movf	Port_SetPin@Type& (0+255),w,b
  6745                           
  6746                           ; Switch size 1, requested type "space"
  6747                           ; Number of cases is 4, Range of values is 0 to 3
  6748                           ; switch strategies available:
  6749                           ; Name         Instructions Cycles
  6750                           ; simple_byte           13     7 (average)
  6751                           ;	Chosen strategy is simple_byte
  6752  010FD2  0A00               	xorlw	0	; case 0
  6753  010FD4  B4D8               	btfsc	status,2,c
  6754  010FD6  0012               	return	
  6755  010FD8  0A01               	xorlw	1	; case 1
  6756  010FDA  B4D8               	btfsc	status,2,c
  6757  010FDC  D7B6               	goto	l9112
  6758  010FDE  0A03               	xorlw	3	; case 2
  6759  010FE0  B4D8               	btfsc	status,2,c
  6760  010FE2  D7C8               	goto	l9116
  6761  010FE4  0A01               	xorlw	1	; case 3
  6762  010FE6  A4D8               	btfss	status,2,c
  6763  010FE8  0012               	return	
  6764  010FEA  D7DC               	goto	l9120
  6765  010FEC                     __end_of_Port_SetPin:
  6766                           	opt stack 0
  6767                           tosu	equ	0xFFF
  6768                           tosh	equ	0xFFE
  6769                           tosl	equ	0xFFD
  6770                           pclath	equ	0xFFA
  6771                           tblptru	equ	0xFF8
  6772                           tblptrh	equ	0xFF7
  6773                           tblptrl	equ	0xFF6
  6774                           tablat	equ	0xFF5
  6775                           prodh	equ	0xFF4
  6776                           prodl	equ	0xFF3
  6777                           intcon	equ	0xFF2
  6778                           postinc0	equ	0xFEE
  6779                           wreg	equ	0xFE8
  6780                           postdec1	equ	0xFE5
  6781                           fsr1h	equ	0xFE2
  6782                           fsr1l	equ	0xFE1
  6783                           indf2	equ	0xFDF
  6784                           postinc2	equ	0xFDE
  6785                           postdec2	equ	0xFDD
  6786                           plusw2	equ	0xFDB
  6787                           fsr2h	equ	0xFDA
  6788                           fsr2l	equ	0xFD9
  6789                           status	equ	0xFD8
  6790                           
  6791 ;; *************** function _Word_GetPair *****************
  6792 ;; Defined at:
  6793 ;;		line 156 in file "Library/Types.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;  pInput          2   12[BANK0 ] PTR struct Word
  6796 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  6797 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
  6798 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
  6799 ;;		 -> PortC(10), PortF(10), NULL(0), 
  6800 ;;  pPair           1   14[BANK0 ] unsigned char 
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      unsigned char 
  6805 ;; Registers used:
  6806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6812 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6815 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6816 ;;Total ram usage:        3 bytes
  6817 ;; Hardware stack levels used:    1
  6818 ;; Hardware stack levels required when called:    9
  6819 ;; This function calls:
  6820 ;;		_Byte_GetPair
  6821 ;; This function is called by:
  6822 ;;		_Port_Init
  6823 ;;		_Port_SetPin
  6824 ;;		_Port_Set
  6825 ;;		_PortProperty_Valid
  6826 ;;		_Port_SetPair
  6827 ;;		_Port_SetQuad
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text27
  6832  0119E0                     __ptext27:
  6833                           	opt stack 0
  6834  0119E0                     _Word_GetPair:
  6835                           	opt stack 15
  6836                           
  6837                           ;Types.c: 158: if (pPair >= 4)
  6838                           
  6839                           ;incstack = 0
  6840  0119E0  0E03               	movlw	3
  6841  0119E2  0100               	movlb	0	; () banked
  6842  0119E4  65D6               	cpfsgt	Word_GetPair@pPair& (0+255),b
  6843  0119E6  D012               	goto	l9026
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;Types.c: 159: return Byte_GetPair(&(pInput->MS_Byte), pPair - 4);
  6847  0119E8  0E01               	movlw	1
  6848  0119EA  0100               	movlb	0	; () banked
  6849  0119EC  25D4               	addwf	Word_GetPair@pInput& (0+255),w,b
  6850  0119EE  0100               	movlb	0	; () banked
  6851  0119F0  6FD1               	movwf	Byte_GetPair@pInput& (0+255),b
  6852  0119F2  0E00               	movlw	0
  6853  0119F4  0100               	movlb	0	; () banked
  6854  0119F6  21D5               	addwfc	(Word_GetPair@pInput+1)& (0+255),w,b
  6855  0119F8  0100               	movlb	0	; () banked
  6856  0119FA  6FD2               	movwf	(Byte_GetPair@pInput+1)& (0+255),b
  6857  0119FC  0100               	movlb	0	; () banked
  6858  0119FE  51D6               	movf	Word_GetPair@pPair& (0+255),w,b
  6859  011A00  0FFC               	addlw	252
  6860  011A02  0100               	movlb	0	; () banked
  6861  011A04  6FD3               	movwf	Byte_GetPair@pPair& (0+255),b
  6862  011A06  ECB2  F08D         	call	_Byte_GetPair	;wreg free
  6863  011A0A  0012               	return	
  6864  011A0C                     l9026:
  6865                           
  6866                           ;Types.c: 160: else
  6867                           ;Types.c: 161: return Byte_GetPair(&(pInput->LS_Byte), pPair);
  6868  011A0C  C0D4  F0D1         	movff	Word_GetPair@pInput,Byte_GetPair@pInput
  6869  011A10  C0D5  F0D2         	movff	Word_GetPair@pInput+1,Byte_GetPair@pInput+1
  6870  011A14  C0D6  F0D3         	movff	Word_GetPair@pPair,Byte_GetPair@pPair
  6871  011A18  ECB2  F08D         	call	_Byte_GetPair	;wreg free
  6872  011A1C  0012               	return	
  6873  011A1E                     __end_of_Word_GetPair:
  6874                           	opt stack 0
  6875                           tosu	equ	0xFFF
  6876                           tosh	equ	0xFFE
  6877                           tosl	equ	0xFFD
  6878                           pclath	equ	0xFFA
  6879                           tblptru	equ	0xFF8
  6880                           tblptrh	equ	0xFF7
  6881                           tblptrl	equ	0xFF6
  6882                           tablat	equ	0xFF5
  6883                           prodh	equ	0xFF4
  6884                           prodl	equ	0xFF3
  6885                           intcon	equ	0xFF2
  6886                           postinc0	equ	0xFEE
  6887                           wreg	equ	0xFE8
  6888                           postdec1	equ	0xFE5
  6889                           fsr1h	equ	0xFE2
  6890                           fsr1l	equ	0xFE1
  6891                           indf2	equ	0xFDF
  6892                           postinc2	equ	0xFDE
  6893                           postdec2	equ	0xFDD
  6894                           plusw2	equ	0xFDB
  6895                           fsr2h	equ	0xFDA
  6896                           fsr2l	equ	0xFD9
  6897                           status	equ	0xFD8
  6898                           
  6899 ;; *************** function _Byte_GetPair *****************
  6900 ;; Defined at:
  6901 ;;		line 87 in file "Library/Types.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  pInput          2    9[BANK0 ] PTR struct Byte
  6904 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
  6905 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
  6906 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
  6907 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
  6908 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
  6909 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
  6910 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
  6911 ;;		 -> NULL(0), 
  6912 ;;  pPair           1   11[BANK0 ] unsigned char 
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;		None
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  1    wreg      unsigned char 
  6917 ;; Registers used:
  6918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6924 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;Total ram usage:        3 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; Hardware stack levels required when called:    8
  6931 ;; This function calls:
  6932 ;;		_Byte_GetZone
  6933 ;; This function is called by:
  6934 ;;		_Word_GetPair
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text28
  6939  011B64                     __ptext28:
  6940                           	opt stack 0
  6941  011B64                     _Byte_GetPair:
  6942                           	opt stack 15
  6943                           
  6944                           ;Types.c: 89: return Byte_GetZone(pInput, 4, pPair, 2);
  6945                           
  6946                           ;incstack = 0
  6947  011B64  C0D1  F0C8         	movff	Byte_GetPair@pInput,Byte_GetZone@pInput
  6948  011B68  C0D2  F0C9         	movff	Byte_GetPair@pInput+1,Byte_GetZone@pInput+1
  6949  011B6C  0E04               	movlw	4
  6950  011B6E  0100               	movlb	0	; () banked
  6951  011B70  6FCA               	movwf	Byte_GetZone@pMax& (0+255),b
  6952  011B72  C0D3  F0CB         	movff	Byte_GetPair@pPair,Byte_GetZone@pChunk
  6953  011B76  0E02               	movlw	2
  6954  011B78  0100               	movlb	0	; () banked
  6955  011B7A  6FCC               	movwf	Byte_GetZone@pChunkSize& (0+255),b
  6956  011B7C  ECF0  F089         	call	_Byte_GetZone	;wreg free
  6957  011B80  0012               	return	
  6958  011B82                     __end_of_Byte_GetPair:
  6959                           	opt stack 0
  6960                           tosu	equ	0xFFF
  6961                           tosh	equ	0xFFE
  6962                           tosl	equ	0xFFD
  6963                           pclath	equ	0xFFA
  6964                           tblptru	equ	0xFF8
  6965                           tblptrh	equ	0xFF7
  6966                           tblptrl	equ	0xFF6
  6967                           tablat	equ	0xFF5
  6968                           prodh	equ	0xFF4
  6969                           prodl	equ	0xFF3
  6970                           intcon	equ	0xFF2
  6971                           postinc0	equ	0xFEE
  6972                           wreg	equ	0xFE8
  6973                           postdec1	equ	0xFE5
  6974                           fsr1h	equ	0xFE2
  6975                           fsr1l	equ	0xFE1
  6976                           indf2	equ	0xFDF
  6977                           postinc2	equ	0xFDE
  6978                           postdec2	equ	0xFDD
  6979                           plusw2	equ	0xFDB
  6980                           fsr2h	equ	0xFDA
  6981                           fsr2l	equ	0xFD9
  6982                           status	equ	0xFD8
  6983                           
  6984 ;; *************** function _Byte_GetZone *****************
  6985 ;; Defined at:
  6986 ;;		line 64 in file "Library/Types.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;  pInput          2    0[BANK0 ] PTR struct Byte
  6989 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
  6990 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
  6991 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
  6992 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
  6993 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
  6994 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
  6995 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
  6996 ;;		 -> NULL(0), 
  6997 ;;  pMax            1    2[BANK0 ] unsigned char 
  6998 ;;  pChunk          1    3[BANK0 ] unsigned char 
  6999 ;;  pChunkSize      1    4[BANK0 ] unsigned char 
  7000 ;; Auto vars:     Size  Location     Type
  7001 ;;  Output          1    8[BANK0 ] unsigned char 
  7002 ;;  Offset          1    7[BANK0 ] unsigned char 
  7003 ;;  MASK            1    6[BANK0 ] unsigned char 
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  1    wreg      unsigned char 
  7006 ;; Registers used:
  7007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7013 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7014 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7015 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7016 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7017 ;;Total ram usage:        9 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; Hardware stack levels required when called:    7
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		_Byte_GetPair
  7024 ;;		_Byte_GetTriple
  7025 ;;		_Byte_GetQuad
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           	psect	text29
  7030  0113E0                     __ptext29:
  7031                           	opt stack 0
  7032  0113E0                     _Byte_GetZone:
  7033                           	opt stack 15
  7034                           
  7035                           ;Types.c: 66: UINT8 Output = pInput->mBits;
  7036                           
  7037                           ;incstack = 0
  7038  0113E0  C0C8  FFF6         	movff	Byte_GetZone@pInput,tblptrl
  7039  0113E4  C0C9  FFF7         	movff	Byte_GetZone@pInput+1,tblptrh
  7040  0113E8  0E00               	movlw	low (__mediumconst shr (0+16))
  7041  0113EA  6EF8               	movwf	tblptru,c
  7042  0113EC  0E0F               	movlw	(high __ramtop+-1)
  7043  0113EE  64F7               	cpfsgt	tblptrh,c
  7044  0113F0  D003               	bra	u5707
  7045  0113F2  0008               	tblrd		*
  7046  0113F4  50F5               	movf	tablat,w,c
  7047  0113F6  D005               	bra	u5700
  7048  0113F8                     u5707:
  7049  0113F8  CFF6 FFE9          	movff	tblptrl,fsr0l
  7050  0113FC  CFF7 FFEA          	movff	tblptrh,fsr0h
  7051  011400  50EF               	movf	indf0,w,c
  7052  011402                     u5700:
  7053  011402  0100               	movlb	0	; () banked
  7054  011404  6FD0               	movwf	Byte_GetZone@Output& (0+255),b
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;Types.c: 67: UINT8 MASK = MASKS[pChunkSize];
  7058  011406  0100               	movlb	0	; () banked
  7059  011408  51CC               	movf	Byte_GetZone@pChunkSize& (0+255),w,b
  7060  01140A  0D01               	mullw	1
  7061  01140C  0E01               	movlw	low _MASKS
  7062  01140E  24F3               	addwf	prodl,w,c
  7063  011410  6EF6               	movwf	tblptrl,c
  7064  011412  0EFE               	movlw	high _MASKS
  7065  011414  20F4               	addwfc	prodh,w,c
  7066  011416  6EF7               	movwf	tblptrh,c
  7067  011418                     	if	1	;There are 3 active tblptr bytes
  7068  011418  6AF8               	clrf	tblptru,c
  7069  01141A  0E00               	movlw	low (__mediumconst shr (0+16))
  7070  01141C  22F8               	addwfc	tblptru,f,c
  7071  01141E                     	endif
  7072  01141E  0008               	tblrd		*
  7073  011420  CFF5 F0CE          	movff	tablat,Byte_GetZone@MASK
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;Types.c: 68: UINT8 Offset = 0;
  7077  011424  0E00               	movlw	0
  7078  011426  0100               	movlb	0	; () banked
  7079  011428  6FCF               	movwf	Byte_GetZone@Offset& (0+255),b
  7080                           
  7081                           ;Types.c: 70: while (pChunk >= pMax)
  7082  01142A  D006               	goto	l9000
  7083  01142C                     l8996:
  7084                           
  7085                           ; BSR set to: 0
  7086                           ;Types.c: 71: {
  7087                           ;Types.c: 72: pChunk -= pMax;
  7088  01142C  0100               	movlb	0	; () banked
  7089  01142E  51CA               	movf	Byte_GetZone@pMax& (0+255),w,b
  7090  011430  0100               	movlb	0	; () banked
  7091  011432  5FCB               	subwf	Byte_GetZone@pChunk& (0+255),f,b
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;Types.c: 73: Offset += 1;
  7095  011434  0100               	movlb	0	; () banked
  7096  011436  2BCF               	incf	Byte_GetZone@Offset& (0+255),f,b
  7097  011438                     l9000:
  7098                           
  7099                           ; BSR set to: 0
  7100  011438  0100               	movlb	0	; () banked
  7101  01143A  51CA               	movf	Byte_GetZone@pMax& (0+255),w,b
  7102  01143C  0100               	movlb	0	; () banked
  7103  01143E  5DCB               	subwf	Byte_GetZone@pChunk& (0+255),w,b
  7104  011440  B0D8               	btfsc	status,0,c
  7105  011442  D7F4               	goto	l8996
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;Types.c: 74: }
  7109                           ;Types.c: 75: pChunk *= pChunkSize;
  7110                           
  7111                           ; BSR set to: 0
  7112  011444  0100               	movlb	0	; () banked
  7113  011446  51CC               	movf	Byte_GetZone@pChunkSize& (0+255),w,b
  7114  011448  0100               	movlb	0	; () banked
  7115  01144A  03CB               	mulwf	Byte_GetZone@pChunk& (0+255),b
  7116  01144C  50F3               	movf	prodl,w,c
  7117  01144E  6FCB               	movwf	Byte_GetZone@pChunk& (0+255),b
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;Types.c: 76: pChunk += Offset;
  7121  011450  0100               	movlb	0	; () banked
  7122  011452  51CF               	movf	Byte_GetZone@Offset& (0+255),w,b
  7123  011454  0100               	movlb	0	; () banked
  7124  011456  27CB               	addwf	Byte_GetZone@pChunk& (0+255),f,b
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;Types.c: 78: Output >>= pChunk;
  7128  011458  0100               	movlb	0	; () banked
  7129  01145A  29CB               	incf	Byte_GetZone@pChunk& (0+255),w,b
  7130  01145C  0100               	movlb	0	; () banked
  7131  01145E  6FCD               	movwf	??_Byte_GetZone& (0+255),b
  7132  011460  D003               	goto	u5720
  7133  011462                     u5725:
  7134  011462  0100               	movlb	0	; () banked
  7135  011464  90D8               	bcf	status,0,c
  7136  011466  33D0               	rrcf	Byte_GetZone@Output& (0+255),f,b
  7137  011468                     u5720:
  7138  011468  0100               	movlb	0	; () banked
  7139  01146A  2FCD               	decfsz	??_Byte_GetZone& (0+255),f,b
  7140  01146C  D7FA               	goto	u5725
  7141                           
  7142                           ;Types.c: 79: Output &= MASK;
  7143  01146E  0100               	movlb	0	; () banked
  7144  011470  51CE               	movf	Byte_GetZone@MASK& (0+255),w,b
  7145  011472  0100               	movlb	0	; () banked
  7146  011474  17D0               	andwf	Byte_GetZone@Output& (0+255),f,b
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;Types.c: 80: return Output;
  7150  011476  0100               	movlb	0	; () banked
  7151  011478  51D0               	movf	Byte_GetZone@Output& (0+255),w,b
  7152  01147A  0012               	return	
  7153  01147C                     __end_of_Byte_GetZone:
  7154                           	opt stack 0
  7155                           tosu	equ	0xFFF
  7156                           tosh	equ	0xFFE
  7157                           tosl	equ	0xFFD
  7158                           pclath	equ	0xFFA
  7159                           tblptru	equ	0xFF8
  7160                           tblptrh	equ	0xFF7
  7161                           tblptrl	equ	0xFF6
  7162                           tablat	equ	0xFF5
  7163                           prodh	equ	0xFF4
  7164                           prodl	equ	0xFF3
  7165                           intcon	equ	0xFF2
  7166                           indf0	equ	0xFEF
  7167                           postinc0	equ	0xFEE
  7168                           fsr0h	equ	0xFEA
  7169                           fsr0l	equ	0xFE9
  7170                           wreg	equ	0xFE8
  7171                           postdec1	equ	0xFE5
  7172                           fsr1h	equ	0xFE2
  7173                           fsr1l	equ	0xFE1
  7174                           indf2	equ	0xFDF
  7175                           postinc2	equ	0xFDE
  7176                           postdec2	equ	0xFDD
  7177                           plusw2	equ	0xFDB
  7178                           fsr2h	equ	0xFDA
  7179                           fsr2l	equ	0xFD9
  7180                           status	equ	0xFD8
  7181                           
  7182 ;; *************** function _Byte_SetBit *****************
  7183 ;; Defined at:
  7184 ;;		line 32 in file "Library/Types.c"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;  pInput          2    0[BANK0 ] PTR struct Byte
  7187 ;;		 -> SSP2CON2(1), SSP1CON2(1), SSP2CON1(1), SSP2STAT(1), 
  7188 ;;		 -> SSP1CON1(1), SSP1STAT(1), TRISG(1), TRISF(1), 
  7189 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
  7190 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
  7191 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
  7192 ;;		 -> NULL(0), 
  7193 ;;  pBit            1    2[BANK0 ] unsigned char 
  7194 ;;  pValue          1    3[BANK0 ] unsigned char 
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7206 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7208 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7209 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7210 ;;Total ram usage:        7 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:    7
  7213 ;; This function calls:
  7214 ;;		Nothing
  7215 ;; This function is called by:
  7216 ;;		_Port_SetPinType
  7217 ;;		_Port_SetPin
  7218 ;;		_SPI_Init
  7219 ;;		_SPI_MinSpeed
  7220 ;;		_SPI_MaxSpeed
  7221 ;;		_Word_SetBit
  7222 ;;		_I2C_Init
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text30
  7227  0116C2                     __ptext30:
  7228                           	opt stack 0
  7229  0116C2                     _Byte_SetBit:
  7230                           	opt stack 21
  7231                           
  7232                           ;Types.c: 34: pValue &= 1;
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;incstack = 0
  7236  0116C2  0E01               	movlw	1
  7237  0116C4  0100               	movlb	0	; () banked
  7238  0116C6  17CB               	andwf	Byte_SetBit@pValue& (0+255),f,b
  7239                           
  7240                           ; BSR set to: 0
  7241                           ;Types.c: 35: pInput->mBits &= ~(1 << pBit);
  7242  0116C8  C0CA  F0CC         	movff	Byte_SetBit@pBit,??_Byte_SetBit
  7243  0116CC  0E01               	movlw	1
  7244  0116CE  0100               	movlb	0	; () banked
  7245  0116D0  6FCD               	movwf	(??_Byte_SetBit+1)& (0+255),b
  7246  0116D2  0100               	movlb	0	; () banked
  7247  0116D4  2BCC               	incf	??_Byte_SetBit& (0+255),f,b
  7248  0116D6  D003               	goto	u5824
  7249  0116D8                     u5825:
  7250  0116D8  0100               	movlb	0	; () banked
  7251  0116DA  90D8               	bcf	status,0,c
  7252  0116DC  37CD               	rlcf	(??_Byte_SetBit+1)& (0+255),f,b
  7253  0116DE                     u5824:
  7254  0116DE  0100               	movlb	0	; () banked
  7255  0116E0  2FCC               	decfsz	??_Byte_SetBit& (0+255),f,b
  7256  0116E2  D7FA               	goto	u5825
  7257  0116E4  0100               	movlb	0	; () banked
  7258  0116E6  51CD               	movf	(??_Byte_SetBit+1)& (0+255),w,b
  7259  0116E8  0AFF               	xorlw	255
  7260  0116EA  0100               	movlb	0	; () banked
  7261  0116EC  6FCE               	movwf	(??_Byte_SetBit+2)& (0+255),b
  7262  0116EE  C0C8  FFD9         	movff	Byte_SetBit@pInput,fsr2l
  7263  0116F2  C0C9  FFDA         	movff	Byte_SetBit@pInput+1,fsr2h
  7264  0116F6  0100               	movlb	0	; () banked
  7265  0116F8  51CE               	movf	(??_Byte_SetBit+2)& (0+255),w,b
  7266  0116FA  16DF               	andwf	indf2,f,c
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;Types.c: 36: pInput->mBits |= pValue << pBit;
  7270  0116FC  C0CA  F0CC         	movff	Byte_SetBit@pBit,??_Byte_SetBit
  7271  011700  C0CB  F0CD         	movff	Byte_SetBit@pValue,??_Byte_SetBit+1
  7272  011704  0100               	movlb	0	; () banked
  7273  011706  2BCC               	incf	??_Byte_SetBit& (0+255),f,b
  7274  011708  D003               	goto	u5834
  7275  01170A                     u5835:
  7276  01170A  0100               	movlb	0	; () banked
  7277  01170C  90D8               	bcf	status,0,c
  7278  01170E  37CD               	rlcf	(??_Byte_SetBit+1)& (0+255),f,b
  7279  011710                     u5834:
  7280  011710  0100               	movlb	0	; () banked
  7281  011712  2FCC               	decfsz	??_Byte_SetBit& (0+255),f,b
  7282  011714  D7FA               	goto	u5835
  7283  011716  C0C8  FFD9         	movff	Byte_SetBit@pInput,fsr2l
  7284  01171A  C0C9  FFDA         	movff	Byte_SetBit@pInput+1,fsr2h
  7285  01171E  0100               	movlb	0	; () banked
  7286  011720  51CD               	movf	(??_Byte_SetBit+1)& (0+255),w,b
  7287  011722  12DF               	iorwf	indf2,f,c
  7288                           
  7289                           ; BSR set to: 0
  7290  011724  0012               	return		;funcret
  7291  011726                     __end_of_Byte_SetBit:
  7292                           	opt stack 0
  7293                           tosu	equ	0xFFF
  7294                           tosh	equ	0xFFE
  7295                           tosl	equ	0xFFD
  7296                           pclath	equ	0xFFA
  7297                           tblptru	equ	0xFF8
  7298                           tblptrh	equ	0xFF7
  7299                           tblptrl	equ	0xFF6
  7300                           tablat	equ	0xFF5
  7301                           prodh	equ	0xFF4
  7302                           prodl	equ	0xFF3
  7303                           intcon	equ	0xFF2
  7304                           indf0	equ	0xFEF
  7305                           postinc0	equ	0xFEE
  7306                           fsr0h	equ	0xFEA
  7307                           fsr0l	equ	0xFE9
  7308                           wreg	equ	0xFE8
  7309                           postdec1	equ	0xFE5
  7310                           fsr1h	equ	0xFE2
  7311                           fsr1l	equ	0xFE1
  7312                           indf2	equ	0xFDF
  7313                           postinc2	equ	0xFDE
  7314                           postdec2	equ	0xFDD
  7315                           plusw2	equ	0xFDB
  7316                           fsr2h	equ	0xFDA
  7317                           fsr2l	equ	0xFD9
  7318                           status	equ	0xFD8
  7319                           
  7320 ;; *************** function _MXK_SwitchTo *****************
  7321 ;; Defined at:
  7322 ;;		line 105 in file "Library/MXK.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  pModule         1    wreg     enum E7869
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;  pModule         1    7[BANK0 ] enum E7869
  7327 ;;  CUR             1    6[BANK0 ] unsigned char 
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  1    wreg      unsigned char 
  7330 ;; Registers used:
  7331 ;;		wreg, status,2, status,0, cstack
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7338 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7341 ;;Total ram usage:        2 bytes
  7342 ;; Hardware stack levels used:    1
  7343 ;; Hardware stack levels required when called:    8
  7344 ;; This function calls:
  7345 ;;		_delay_us
  7346 ;; This function is called by:
  7347 ;;		_Motor_Step
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           	psect	text31
  7352  01195E                     __ptext31:
  7353                           	opt stack 0
  7354  01195E                     _MXK_SwitchTo:
  7355                           	opt stack 20
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;incstack = 0
  7359                           ;MXK_SwitchTo@pModule stored from wreg
  7360  01195E  0100               	movlb	0	; () banked
  7361  011960  6FCF               	movwf	MXK_SwitchTo@pModule& (0+255),b
  7362                           
  7363                           ;MXK.c: 107: UINT8 CUR = 0xF & PORTG;
  7364  011962  5086               	movf	3974,w,c	;volatile
  7365  011964  0B0F               	andlw	15
  7366  011966  0100               	movlb	0	; () banked
  7367  011968  6FCE               	movwf	MXK_SwitchTo@CUR& (0+255),b
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;MXK.c: 109: if (Bus_State == eMXK_Busy)
  7371  01196A  5044               	movf	_Bus_State,w,c
  7372  01196C  A4D8               	btfss	status,2,c
  7373  01196E  D002               	goto	l9394
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;MXK.c: 110: return 0;
  7377  011970  0E00               	movlw	0
  7378                           
  7379                           ; BSR set to: 0
  7380  011972  0012               	return	
  7381  011974                     l9394:
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;MXK.c: 112: Bus_State = eMXK_Busy;
  7385  011974  0E00               	movlw	0
  7386  011976  6E44               	movwf	_Bus_State,c
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;MXK.c: 114: if (CUR != pModule)
  7390  011978  0100               	movlb	0	; () banked
  7391  01197A  51CF               	movf	MXK_SwitchTo@pModule& (0+255),w,b
  7392  01197C  0100               	movlb	0	; () banked
  7393  01197E  19CE               	xorwf	MXK_SwitchTo@CUR& (0+255),w,b
  7394  011980  B4D8               	btfsc	status,2,c
  7395  011982  D00C               	goto	l9402
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;MXK.c: 115: {
  7399                           ;MXK.c: 116: PORTG &= ~(0xF);
  7400  011984  0EF0               	movlw	240
  7401  011986  1686               	andwf	3974,f,c	;volatile
  7402                           
  7403                           ;MXK.c: 117: PORTG |= pModule;
  7404  011988  0100               	movlb	0	; () banked
  7405  01198A  51CF               	movf	MXK_SwitchTo@pModule& (0+255),w,b
  7406  01198C  1286               	iorwf	3974,f,c	;volatile
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;MXK.c: 120: delay_us(10);
  7410  01198E  0E00               	movlw	0
  7411  011990  0100               	movlb	0	; () banked
  7412  011992  6FC9               	movwf	(delay_us@us+1)& (0+255),b
  7413  011994  0E0A               	movlw	10
  7414  011996  6FC8               	movwf	delay_us@us& (0+255),b
  7415  011998  ECF1  F08B         	call	_delay_us	;wreg free
  7416  01199C                     l9402:
  7417                           
  7418                           ;MXK.c: 121: }
  7419                           ;MXK.c: 122: return 1;
  7420  01199C  0E01               	movlw	1
  7421  01199E  0012               	return	
  7422  0119A0                     __end_of_MXK_SwitchTo:
  7423                           	opt stack 0
  7424                           tosu	equ	0xFFF
  7425                           tosh	equ	0xFFE
  7426                           tosl	equ	0xFFD
  7427                           pclath	equ	0xFFA
  7428                           tblptru	equ	0xFF8
  7429                           tblptrh	equ	0xFF7
  7430                           tblptrl	equ	0xFF6
  7431                           tablat	equ	0xFF5
  7432                           prodh	equ	0xFF4
  7433                           prodl	equ	0xFF3
  7434                           intcon	equ	0xFF2
  7435                           indf0	equ	0xFEF
  7436                           postinc0	equ	0xFEE
  7437                           fsr0h	equ	0xFEA
  7438                           fsr0l	equ	0xFE9
  7439                           wreg	equ	0xFE8
  7440                           postdec1	equ	0xFE5
  7441                           fsr1h	equ	0xFE2
  7442                           fsr1l	equ	0xFE1
  7443                           indf2	equ	0xFDF
  7444                           postinc2	equ	0xFDE
  7445                           postdec2	equ	0xFDD
  7446                           plusw2	equ	0xFDB
  7447                           fsr2h	equ	0xFDA
  7448                           fsr2l	equ	0xFD9
  7449                           status	equ	0xFD8
  7450                           
  7451 ;; *************** function _MXK_Release *****************
  7452 ;; Defined at:
  7453 ;;		line 130 in file "Library/MXK.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;		None
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;		None
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  1    wreg      unsigned char 
  7460 ;; Registers used:
  7461 ;;		wreg, status,2, status,0
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7471 ;;Total ram usage:        0 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    7
  7474 ;; This function calls:
  7475 ;;		Nothing
  7476 ;; This function is called by:
  7477 ;;		_Motor_Step
  7478 ;;		_main
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text32
  7483  011B9C                     __ptext32:
  7484                           	opt stack 0
  7485  011B9C                     _MXK_Release:
  7486                           	opt stack 23
  7487                           
  7488                           ;MXK.c: 132: Bus_State = eMXK_Idle;
  7489                           
  7490                           ;incstack = 0
  7491  011B9C  0E01               	movlw	1
  7492  011B9E  6E44               	movwf	_Bus_State,c
  7493                           
  7494                           ;MXK.c: 134: if (lQueue != 0)
  7495  011BA0  5025               	movf	_lQueue,w,c	;volatile
  7496  011BA2  1026               	iorwf	_lQueue+1,w,c	;volatile
  7497  011BA4  1027               	iorwf	_lQueue+2,w,c	;volatile
  7498  011BA6  B4D8               	btfsc	status,2,c
  7499  011BA8  D002               	goto	l9414
  7500                           
  7501                           ;MXK.c: 135: return 1;
  7502  011BAA  0E01               	movlw	1
  7503  011BAC  0012               	return	
  7504  011BAE                     l9414:
  7505                           
  7506                           ;MXK.c: 137: return 0;
  7507  011BAE  0E00               	movlw	0
  7508  011BB0  0012               	return	
  7509  011BB2                     __end_of_MXK_Release:
  7510                           	opt stack 0
  7511                           tosu	equ	0xFFF
  7512                           tosh	equ	0xFFE
  7513                           tosl	equ	0xFFD
  7514                           pclath	equ	0xFFA
  7515                           tblptru	equ	0xFF8
  7516                           tblptrh	equ	0xFF7
  7517                           tblptrl	equ	0xFF6
  7518                           tablat	equ	0xFF5
  7519                           prodh	equ	0xFF4
  7520                           prodl	equ	0xFF3
  7521                           intcon	equ	0xFF2
  7522                           indf0	equ	0xFEF
  7523                           postinc0	equ	0xFEE
  7524                           fsr0h	equ	0xFEA
  7525                           fsr0l	equ	0xFE9
  7526                           wreg	equ	0xFE8
  7527                           postdec1	equ	0xFE5
  7528                           fsr1h	equ	0xFE2
  7529                           fsr1l	equ	0xFE1
  7530                           indf2	equ	0xFDF
  7531                           postinc2	equ	0xFDE
  7532                           postdec2	equ	0xFDD
  7533                           plusw2	equ	0xFDB
  7534                           fsr2h	equ	0xFDA
  7535                           fsr2l	equ	0xFD9
  7536                           status	equ	0xFD8
  7537                           
  7538 ;; *************** function _MXK_Queue *****************
  7539 ;; Defined at:
  7540 ;;		line 144 in file "Library/MXK.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;  pCallback       3    0[BANK0 ] PTR FTN()void 
  7543 ;;		 -> Absolute function(1), Motor_Step(1), 
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;		None
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  1    wreg      void 
  7548 ;; Registers used:
  7549 ;;		wreg, status,2, status,0
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7555 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7558 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7559 ;;Total ram usage:        3 bytes
  7560 ;; Hardware stack levels used:    1
  7561 ;; Hardware stack levels required when called:    7
  7562 ;; This function calls:
  7563 ;;		Nothing
  7564 ;; This function is called by:
  7565 ;;		_Motor_Step
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569                           	psect	text33
  7570  011BC0                     __ptext33:
  7571                           	opt stack 0
  7572  011BC0                     _MXK_Queue:
  7573                           	opt stack 21
  7574                           
  7575                           ;MXK.c: 146: lQueue = pCallback;
  7576                           
  7577                           ;incstack = 0
  7578  011BC0  C0C8  F025         	movff	MXK_Queue@pCallback,_lQueue	;volatile
  7579  011BC4  C0C9  F026         	movff	MXK_Queue@pCallback+1,_lQueue+1	;volatile
  7580  011BC8  C0CA  F027         	movff	MXK_Queue@pCallback+2,_lQueue+2	;volatile
  7581  011BCC  0012               	return		;funcret
  7582  011BCE                     __end_of_MXK_Queue:
  7583                           	opt stack 0
  7584                           tosu	equ	0xFFF
  7585                           tosh	equ	0xFFE
  7586                           tosl	equ	0xFFD
  7587                           pclath	equ	0xFFA
  7588                           tblptru	equ	0xFF8
  7589                           tblptrh	equ	0xFF7
  7590                           tblptrl	equ	0xFF6
  7591                           tablat	equ	0xFF5
  7592                           prodh	equ	0xFF4
  7593                           prodl	equ	0xFF3
  7594                           intcon	equ	0xFF2
  7595                           indf0	equ	0xFEF
  7596                           postinc0	equ	0xFEE
  7597                           fsr0h	equ	0xFEA
  7598                           fsr0l	equ	0xFE9
  7599                           wreg	equ	0xFE8
  7600                           postdec1	equ	0xFE5
  7601                           fsr1h	equ	0xFE2
  7602                           fsr1l	equ	0xFE1
  7603                           indf2	equ	0xFDF
  7604                           postinc2	equ	0xFDE
  7605                           postdec2	equ	0xFDD
  7606                           plusw2	equ	0xFDB
  7607                           fsr2h	equ	0xFDA
  7608                           fsr2l	equ	0xFD9
  7609                           status	equ	0xFD8
  7610                           
  7611 ;; *************** function _MXK_BlockSwitchTo *****************
  7612 ;; Defined at:
  7613 ;;		line 82 in file "Library/MXK.c"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;  pModule         1    wreg     enum E7869
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;  pModule         1    7[BANK0 ] enum E7869
  7618 ;;  CUR             1    6[BANK0 ] unsigned char 
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  1    wreg      unsigned char 
  7621 ;; Registers used:
  7622 ;;		wreg, status,2, status,0, cstack
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7629 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7631 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7632 ;;Total ram usage:        2 bytes
  7633 ;; Hardware stack levels used:    1
  7634 ;; Hardware stack levels required when called:    8
  7635 ;; This function calls:
  7636 ;;		_delay_us
  7637 ;; This function is called by:
  7638 ;;		_main
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           	psect	text34
  7643  011A1E                     __ptext34:
  7644                           	opt stack 0
  7645  011A1E                     _MXK_BlockSwitchTo:
  7646                           	opt stack 22
  7647                           
  7648                           ;incstack = 0
  7649                           ;MXK_BlockSwitchTo@pModule stored from wreg
  7650  011A1E  0100               	movlb	0	; () banked
  7651  011A20  6FCF               	movwf	MXK_BlockSwitchTo@pModule& (0+255),b
  7652                           
  7653                           ;MXK.c: 85: UINT8 CUR = 0xF & PORTG;
  7654  011A22  5086               	movf	3974,w,c	;volatile
  7655  011A24  0B0F               	andlw	15
  7656  011A26  0100               	movlb	0	; () banked
  7657  011A28  6FCE               	movwf	MXK_BlockSwitchTo@CUR& (0+255),b
  7658  011A2A                     l9898:
  7659  011A2A  5044               	movf	_Bus_State,w,c
  7660  011A2C  B4D8               	btfsc	status,2,c
  7661  011A2E  D7FD               	goto	l9898
  7662                           
  7663                           ;MXK.c: 88: Bus_State = eMXK_Busy;
  7664  011A30  0E00               	movlw	0
  7665  011A32  6E44               	movwf	_Bus_State,c
  7666                           
  7667                           ;MXK.c: 90: if (CUR != pModule)
  7668  011A34  0100               	movlb	0	; () banked
  7669  011A36  51CF               	movf	MXK_BlockSwitchTo@pModule& (0+255),w,b
  7670  011A38  0100               	movlb	0	; () banked
  7671  011A3A  19CE               	xorwf	MXK_BlockSwitchTo@CUR& (0+255),w,b
  7672  011A3C  B4D8               	btfsc	status,2,c
  7673  011A3E  D00C               	goto	l9908
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;MXK.c: 91: {
  7677                           ;MXK.c: 92: PORTG &= ~(0xF);
  7678  011A40  0EF0               	movlw	240
  7679  011A42  1686               	andwf	3974,f,c	;volatile
  7680                           
  7681                           ;MXK.c: 93: PORTG |= pModule;
  7682  011A44  0100               	movlb	0	; () banked
  7683  011A46  51CF               	movf	MXK_BlockSwitchTo@pModule& (0+255),w,b
  7684  011A48  1286               	iorwf	3974,f,c	;volatile
  7685                           
  7686                           ; BSR set to: 0
  7687                           ;MXK.c: 96: delay_us(10);
  7688  011A4A  0E00               	movlw	0
  7689  011A4C  0100               	movlb	0	; () banked
  7690  011A4E  6FC9               	movwf	(delay_us@us+1)& (0+255),b
  7691  011A50  0E0A               	movlw	10
  7692  011A52  6FC8               	movwf	delay_us@us& (0+255),b
  7693  011A54  ECF1  F08B         	call	_delay_us	;wreg free
  7694  011A58                     l9908:
  7695                           
  7696                           ;MXK.c: 97: }
  7697                           ;MXK.c: 98: return 1;
  7698  011A58  0E01               	movlw	1
  7699  011A5A  0012               	return	
  7700  011A5C                     __end_of_MXK_BlockSwitchTo:
  7701                           	opt stack 0
  7702                           tosu	equ	0xFFF
  7703                           tosh	equ	0xFFE
  7704                           tosl	equ	0xFFD
  7705                           pclath	equ	0xFFA
  7706                           tblptru	equ	0xFF8
  7707                           tblptrh	equ	0xFF7
  7708                           tblptrl	equ	0xFF6
  7709                           tablat	equ	0xFF5
  7710                           prodh	equ	0xFF4
  7711                           prodl	equ	0xFF3
  7712                           intcon	equ	0xFF2
  7713                           indf0	equ	0xFEF
  7714                           postinc0	equ	0xFEE
  7715                           fsr0h	equ	0xFEA
  7716                           fsr0l	equ	0xFE9
  7717                           wreg	equ	0xFE8
  7718                           postdec1	equ	0xFE5
  7719                           fsr1h	equ	0xFE2
  7720                           fsr1l	equ	0xFE1
  7721                           indf2	equ	0xFDF
  7722                           postinc2	equ	0xFDE
  7723                           postdec2	equ	0xFDD
  7724                           plusw2	equ	0xFDB
  7725                           fsr2h	equ	0xFDA
  7726                           fsr2l	equ	0xFD9
  7727                           status	equ	0xFD8
  7728                           
  7729 ;; *************** function _delay_us *****************
  7730 ;; Defined at:
  7731 ;;		line 255 in file "Library/Types.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;  us              2    0[BANK0 ] unsigned short 
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;  u               4    2[BANK0 ] unsigned long 
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  1    wreg      void 
  7738 ;; Registers used:
  7739 ;;		wreg, status,2, status,0
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7745 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7746 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7748 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7749 ;;Total ram usage:        6 bytes
  7750 ;; Hardware stack levels used:    1
  7751 ;; Hardware stack levels required when called:    7
  7752 ;; This function calls:
  7753 ;;		Nothing
  7754 ;; This function is called by:
  7755 ;;		_MXK_BlockSwitchTo
  7756 ;;		_MXK_SwitchTo
  7757 ;; This function uses a non-reentrant model
  7758 ;;
  7759                           
  7760                           	psect	text35
  7761  0117E2                     __ptext35:
  7762                           	opt stack 0
  7763  0117E2                     _delay_us:
  7764                           	opt stack 20
  7765                           
  7766                           ;Types.c: 256: unsigned long u;
  7767                           ;Types.c: 257: while (us--) {
  7768                           
  7769                           ;incstack = 0
  7770  0117E2  D01C               	goto	l9166
  7771  0117E4                     l9158:
  7772                           
  7773                           ;Types.c: 259: for (u = 0; u < ((((48*1000000L) / 4000UL) / 10UL)/1000UL); u++) {
  7774  0117E4  0E00               	movlw	0
  7775  0117E6  0100               	movlb	0	; () banked
  7776  0117E8  6FCA               	movwf	delay_us@u& (0+255),b
  7777  0117EA  0E00               	movlw	0
  7778  0117EC  6FCB               	movwf	(delay_us@u+1)& (0+255),b
  7779  0117EE  0E00               	movlw	0
  7780  0117F0  6FCC               	movwf	(delay_us@u+2)& (0+255),b
  7781  0117F2  0E00               	movlw	0
  7782  0117F4  6FCD               	movwf	(delay_us@u+3)& (0+255),b
  7783  0117F6                     l9160:
  7784                           
  7785                           ; BSR set to: 0
  7786  0117F6  0100               	movlb	0	; () banked
  7787  0117F8  51CA               	movf	delay_us@u& (0+255),w,b
  7788  0117FA  0100               	movlb	0	; () banked
  7789  0117FC  11CB               	iorwf	(delay_us@u+1)& (0+255),w,b
  7790  0117FE  0100               	movlb	0	; () banked
  7791  011800  11CC               	iorwf	(delay_us@u+2)& (0+255),w,b
  7792  011802  0100               	movlb	0	; () banked
  7793  011804  11CD               	iorwf	(delay_us@u+3)& (0+255),w,b
  7794  011806  A4D8               	btfss	status,2,c
  7795  011808  D009               	goto	l9166
  7796                           
  7797                           ; BSR set to: 0
  7798                           
  7799                           ; BSR set to: 0
  7800  01180A  F000               	nop		; ;# 
  7801  01180C  0E01               	movlw	1
  7802  01180E  0100               	movlb	0	; () banked
  7803  011810  27CA               	addwf	delay_us@u& (0+255),f,b
  7804  011812  0E00               	movlw	0
  7805  011814  23CB               	addwfc	(delay_us@u+1)& (0+255),f,b
  7806  011816  23CC               	addwfc	(delay_us@u+2)& (0+255),f,b
  7807  011818  23CD               	addwfc	(delay_us@u+3)& (0+255),f,b
  7808  01181A  D7ED               	goto	l9160
  7809  01181C                     l9166:
  7810  01181C  0100               	movlb	0	; () banked
  7811  01181E  07C8               	decf	delay_us@us& (0+255),f,b
  7812  011820  A0D8               	btfss	status,0,c
  7813  011822  07C9               	decf	(delay_us@us+1)& (0+255),f,b
  7814  011824  0100               	movlb	0	; () banked
  7815  011826  29C8               	incf	delay_us@us& (0+255),w,b
  7816  011828  E1DD               	bnz	l9158
  7817  01182A  0100               	movlb	0	; () banked
  7818  01182C  29C9               	incf	(delay_us@us+1)& (0+255),w,b
  7819  01182E  B4D8               	btfsc	status,2,c
  7820  011830  0012               	return	
  7821  011832  D7D8               	goto	l9158
  7822  011834                     __end_of_delay_us:
  7823                           	opt stack 0
  7824                           tosu	equ	0xFFF
  7825                           tosh	equ	0xFFE
  7826                           tosl	equ	0xFFD
  7827                           pclath	equ	0xFFA
  7828                           tblptru	equ	0xFF8
  7829                           tblptrh	equ	0xFF7
  7830                           tblptrl	equ	0xFF6
  7831                           tablat	equ	0xFF5
  7832                           prodh	equ	0xFF4
  7833                           prodl	equ	0xFF3
  7834                           intcon	equ	0xFF2
  7835                           indf0	equ	0xFEF
  7836                           postinc0	equ	0xFEE
  7837                           fsr0h	equ	0xFEA
  7838                           fsr0l	equ	0xFE9
  7839                           wreg	equ	0xFE8
  7840                           postdec1	equ	0xFE5
  7841                           fsr1h	equ	0xFE2
  7842                           fsr1l	equ	0xFE1
  7843                           indf2	equ	0xFDF
  7844                           postinc2	equ	0xFDE
  7845                           postdec2	equ	0xFDD
  7846                           plusw2	equ	0xFDB
  7847                           fsr2h	equ	0xFDA
  7848                           fsr2l	equ	0xFD9
  7849                           status	equ	0xFD8
  7850                           
  7851 ;; *************** function _ISR_Function *****************
  7852 ;; Defined at:
  7853 ;;		line 38 in file "Library/ISR.c"
  7854 ;; Parameters:    Size  Location     Type
  7855 ;;		None
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;		None
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  1    wreg      void 
  7860 ;; Registers used:
  7861 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7869 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7870 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7871 ;;Total ram usage:       14 bytes
  7872 ;; Hardware stack levels used:    1
  7873 ;; Hardware stack levels required when called:    6
  7874 ;; This function calls:
  7875 ;;		_Timer0_ISR
  7876 ;; This function is called by:
  7877 ;;		Interrupt level 2
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           	psect	intcode
  7882  001408                     __pintcode:
  7883                           	opt stack 0
  7884  001408                     _ISR_Function:
  7885                           	opt stack 14
  7886                           
  7887                           ; BSR set to: 0
  7888                           ;incstack = 0
  7889  001408  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7890  00140A  CFFA F017          	movff	pclath,??_ISR_Function
  7891  00140E  CFFB F018          	movff	pclatu,??_ISR_Function+1
  7892  001412  CFE9 F019          	movff	fsr0l,??_ISR_Function+2
  7893  001416  CFEA F01A          	movff	fsr0h,??_ISR_Function+3
  7894  00141A  CFE1 F01B          	movff	fsr1l,??_ISR_Function+4
  7895  00141E  CFE2 F01C          	movff	fsr1h,??_ISR_Function+5
  7896  001422  CFD9 F01D          	movff	fsr2l,??_ISR_Function+6
  7897  001426  CFDA F01E          	movff	fsr2h,??_ISR_Function+7
  7898  00142A  CFF3 F01F          	movff	prodl,??_ISR_Function+8
  7899  00142E  CFF4 F020          	movff	prodh,??_ISR_Function+9
  7900  001432  CFF6 F021          	movff	tblptrl,??_ISR_Function+10
  7901  001436  CFF7 F022          	movff	tblptrh,??_ISR_Function+11
  7902  00143A  CFF8 F023          	movff	tblptru,??_ISR_Function+12
  7903  00143E  CFF5 F024          	movff	tablat,??_ISR_Function+13
  7904                           
  7905                           ;ISR.c: 41: INTCONbits.INT0IF = 0;
  7906  001442  92F2               	bcf	intcon,1,c	;volatile
  7907                           
  7908                           ;ISR.c: 67: if (((INTCONbits.TMR0IF) && (INTCONbits.TMR0IE)))
  7909  001444  B4F2               	btfsc	intcon,2,c	;volatile
  7910  001446  AAF2               	btfss	intcon,5,c	;volatile
  7911  001448  D002               	goto	i2l1597
  7912                           
  7913                           ;ISR.c: 68: Timer0_ISR();
  7914  00144A  EC79  F08D         	call	_Timer0_ISR	;wreg free
  7915  00144E                     i2l1597:
  7916  00144E  C024  FFF5         	movff	??_ISR_Function+13,tablat
  7917  001452  C023  FFF8         	movff	??_ISR_Function+12,tblptru
  7918  001456  C022  FFF7         	movff	??_ISR_Function+11,tblptrh
  7919  00145A  C021  FFF6         	movff	??_ISR_Function+10,tblptrl
  7920  00145E  C020  FFF4         	movff	??_ISR_Function+9,prodh
  7921  001462  C01F  FFF3         	movff	??_ISR_Function+8,prodl
  7922  001466  C01E  FFDA         	movff	??_ISR_Function+7,fsr2h
  7923  00146A  C01D  FFD9         	movff	??_ISR_Function+6,fsr2l
  7924  00146E  C01C  FFE2         	movff	??_ISR_Function+5,fsr1h
  7925  001472  C01B  FFE1         	movff	??_ISR_Function+4,fsr1l
  7926  001476  C01A  FFEA         	movff	??_ISR_Function+3,fsr0h
  7927  00147A  C019  FFE9         	movff	??_ISR_Function+2,fsr0l
  7928  00147E  C018  FFFB         	movff	??_ISR_Function+1,pclatu
  7929  001482  C017  FFFA         	movff	??_ISR_Function,pclath
  7930  001486  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7931  001488  0011               	retfie		f
  7932  00148A                     __end_of_ISR_Function:
  7933                           	opt stack 0
  7934                           tosu	equ	0xFFF
  7935                           tosh	equ	0xFFE
  7936                           tosl	equ	0xFFD
  7937                           pclatu	equ	0xFFB
  7938                           pclath	equ	0xFFA
  7939                           tblptru	equ	0xFF8
  7940                           tblptrh	equ	0xFF7
  7941                           tblptrl	equ	0xFF6
  7942                           tablat	equ	0xFF5
  7943                           prodh	equ	0xFF4
  7944                           prodl	equ	0xFF3
  7945                           intcon	equ	0xFF2
  7946                           indf0	equ	0xFEF
  7947                           postinc0	equ	0xFEE
  7948                           fsr0h	equ	0xFEA
  7949                           fsr0l	equ	0xFE9
  7950                           wreg	equ	0xFE8
  7951                           postdec1	equ	0xFE5
  7952                           fsr1h	equ	0xFE2
  7953                           fsr1l	equ	0xFE1
  7954                           indf2	equ	0xFDF
  7955                           postinc2	equ	0xFDE
  7956                           postdec2	equ	0xFDD
  7957                           plusw2	equ	0xFDB
  7958                           fsr2h	equ	0xFDA
  7959                           fsr2l	equ	0xFD9
  7960                           status	equ	0xFD8
  7961                           
  7962 ;; *************** function _Timer0_ISR *****************
  7963 ;; Defined at:
  7964 ;;		line 94 in file "Library/Timer0.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;		None
  7967 ;; Auto vars:     Size  Location     Type
  7968 ;;		None
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  1    wreg      void 
  7971 ;; Registers used:
  7972 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7982 ;;Total ram usage:        0 bytes
  7983 ;; Hardware stack levels used:    1
  7984 ;; Hardware stack levels required when called:    5
  7985 ;; This function calls:
  7986 ;;		Absolute function
  7987 ;;		i2_Motor_Step
  7988 ;;		i2_Timer0_Stop
  7989 ;; This function is called by:
  7990 ;;		_ISR_Function
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text37
  7995  011AF2                     __ptext37:
  7996                           	opt stack 0
  7997  011AF2                     _Timer0_ISR:
  7998                           	opt stack 14
  7999                           
  8000                           ;Timer0.c: 96: Timer0_Stop();
  8001                           
  8002                           ;incstack = 0
  8003  011AF2  EC0A  F08E         	call	i2_Timer0_Stop	;wreg free
  8004                           
  8005                           ;Timer0.c: 99: if (gISR != 0)
  8006  011AF6  0100               	movlb	0	; () banked
  8007  011AF8  5168               	movf	_gISR& (0+255),w,b
  8008  011AFA  0100               	movlb	0	; () banked
  8009  011AFC  1169               	iorwf	(_gISR+1)& (0+255),w,b
  8010  011AFE  0100               	movlb	0	; () banked
  8011  011B00  116A               	iorwf	(_gISR+2)& (0+255),w,b
  8012  011B02  B4D8               	btfsc	status,2,c
  8013  011B04  0012               	return	
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;Timer0.c: 100: gISR();
  8017  011B06  D801               	call	i2u711_48
  8018  011B08  0012               	return	
  8019  011B0A                     i2u711_48:
  8020  011B0A  0005               	push	
  8021  011B0C  6EFA               	movwf	pclath,c
  8022  011B0E  0100               	movlb	0	; () banked
  8023  011B10  5168               	movf	_gISR& (0+255),w,b
  8024  011B12  6EFD               	movwf	tosl,c
  8025  011B14  5169               	movf	(_gISR+1)& (0+255),w,b
  8026  011B16  6EFE               	movwf	tosh,c
  8027  011B18  516A               	movf	(_gISR+2)& (0+255),w,b
  8028  011B1A  6EFF               	movwf	tosu,c
  8029  011B1C  50FA               	movf	pclath,w,c
  8030  011B1E  0012               	return		;indir
  8031  011B20                     __end_of_Timer0_ISR:
  8032                           	opt stack 0
  8033                           tosu	equ	0xFFF
  8034                           tosh	equ	0xFFE
  8035                           tosl	equ	0xFFD
  8036                           pclatu	equ	0xFFB
  8037                           pclath	equ	0xFFA
  8038                           tblptru	equ	0xFF8
  8039                           tblptrh	equ	0xFF7
  8040                           tblptrl	equ	0xFF6
  8041                           tablat	equ	0xFF5
  8042                           prodh	equ	0xFF4
  8043                           prodl	equ	0xFF3
  8044                           intcon	equ	0xFF2
  8045                           indf0	equ	0xFEF
  8046                           postinc0	equ	0xFEE
  8047                           fsr0h	equ	0xFEA
  8048                           fsr0l	equ	0xFE9
  8049                           wreg	equ	0xFE8
  8050                           postdec1	equ	0xFE5
  8051                           fsr1h	equ	0xFE2
  8052                           fsr1l	equ	0xFE1
  8053                           indf2	equ	0xFDF
  8054                           postinc2	equ	0xFDE
  8055                           postdec2	equ	0xFDD
  8056                           plusw2	equ	0xFDB
  8057                           fsr2h	equ	0xFDA
  8058                           fsr2l	equ	0xFD9
  8059                           status	equ	0xFD8
  8060                           
  8061 ;; *************** function i2_Motor_Step *****************
  8062 ;; Defined at:
  8063 ;;		line 75 in file "Library/Motor.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;		None
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;		None
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  1    wreg      void 
  8070 ;; Registers used:
  8071 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8079 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8080 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8081 ;;Total ram usage:        2 bytes
  8082 ;; Hardware stack levels used:    1
  8083 ;; Hardware stack levels required when called:    4
  8084 ;; This function calls:
  8085 ;;		i2_MXK_Queue
  8086 ;;		i2_MXK_Release
  8087 ;;		i2_MXK_SwitchTo
  8088 ;;		i2_Port_SetPin
  8089 ;;		i2_Timer0_Restart
  8090 ;;		i2_Timer0_Stop
  8091 ;; This function is called by:
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095                           	psect	text38
  8096  010E2A                     __ptext38:
  8097                           	opt stack 0
  8098  010E2A                     i2_Motor_Step:
  8099                           	opt stack 14
  8100                           
  8101                           ;Motor.c: 77: if (MXK_SwitchTo(lMotor->mAddress))
  8102                           
  8103                           ;incstack = 0
  8104  010E2A  EE20 F004          	lfsr	2,4
  8105  010E2E  5030               	movf	_lMotor,w,c
  8106  010E30  26D9               	addwf	fsr2l,f,c
  8107  010E32  5031               	movf	_lMotor+1,w,c
  8108  010E34  22DA               	addwfc	fsr2h,f,c
  8109  010E36  50DF               	movf	indf2,w,c
  8110  010E38  EC2E  F08D         	call	i2_MXK_SwitchTo
  8111  010E3C  0900               	iorlw	0
  8112  010E3E  B4D8               	btfsc	status,2,c
  8113  010E40  D06A               	goto	i2l7320
  8114                           
  8115                           ;Motor.c: 78: {
  8116                           ;Motor.c: 79: if (lMotor->mDelta != 0)
  8117  010E42  C030  FFD9         	movff	_lMotor,fsr2l
  8118  010E46  C031  FFDA         	movff	_lMotor+1,fsr2h
  8119  010E4A  50DE               	movf	postinc2,w,c
  8120  010E4C  10DE               	iorwf	postinc2,w,c
  8121  010E4E  B4D8               	btfsc	status,2,c
  8122  010E50  D05D               	goto	i2l7314
  8123                           
  8124                           ;Motor.c: 80: {
  8125                           ;Motor.c: 82: if (lMotor->mDelta > 0)
  8126  010E52  C030  FFD9         	movff	_lMotor,fsr2l
  8127  010E56  C031  FFDA         	movff	_lMotor+1,fsr2h
  8128  010E5A  0E01               	movlw	1
  8129  010E5C  BEDB               	btfsc	plusw2,7,c
  8130  010E5E  D022               	goto	i2l7298
  8131  010E60  0E01               	movlw	1
  8132  010E62  50DB               	movf	plusw2,w,c
  8133  010E64  E103               	bnz	i2u399_40
  8134  010E66  04DE               	decf	postinc2,w,c
  8135  010E68  A0D8               	btfss	status,0,c
  8136  010E6A  D01C               	goto	i2l7298
  8137  010E6C                     i2u399_40:
  8138                           
  8139                           ;Motor.c: 83: {
  8140                           ;Motor.c: 84: if (lMotor->mDelta != 32767)
  8141  010E6C  C030  FFD9         	movff	_lMotor,fsr2l
  8142  010E70  C031  FFDA         	movff	_lMotor+1,fsr2h
  8143  010E74  28DE               	incf	postinc2,w,c
  8144  010E76  E104               	bnz	i2u400_40
  8145  010E78  0E7F               	movlw	127
  8146  010E7A  18DE               	xorwf	postinc2,w,c
  8147  010E7C  B4D8               	btfsc	status,2,c
  8148  010E7E  D007               	goto	i2l7296
  8149  010E80                     i2u400_40:
  8150                           
  8151                           ;Motor.c: 85: lMotor->mDelta --;
  8152  010E80  C030  FFD9         	movff	_lMotor,fsr2l
  8153  010E84  C031  FFDA         	movff	_lMotor+1,fsr2h
  8154  010E88  06DE               	decf	postinc2,f,c
  8155  010E8A  0E00               	movlw	0
  8156  010E8C  5ADD               	subwfb	postdec2,f,c
  8157  010E8E                     i2l7296:
  8158                           
  8159                           ;Motor.c: 87: Port_SetPin(&PortE, eP0, 1);
  8160  010E8E  0E8A               	movlw	low _PortE
  8161  010E90  6E10               	movwf	i2Port_SetPin@pInput,c
  8162  010E92  0E00               	movlw	high _PortE
  8163  010E94  6E11               	movwf	i2Port_SetPin@pInput+1,c
  8164  010E96  0E00               	movlw	0
  8165  010E98  6E12               	movwf	i2Port_SetPin@pPin,c
  8166  010E9A  0E01               	movlw	1
  8167  010E9C  6E13               	movwf	i2Port_SetPin@pValue,c
  8168  010E9E  EC51  F088         	call	i2_Port_SetPin	;wreg free
  8169                           
  8170                           ;Motor.c: 88: }
  8171  010EA2  D01B               	goto	i2l7304
  8172  010EA4                     i2l7298:
  8173                           
  8174                           ;Motor.c: 89: else
  8175                           ;Motor.c: 90: {
  8176                           ;Motor.c: 91: if (lMotor->mDelta != -32767)
  8177  010EA4  C030  FFD9         	movff	_lMotor,fsr2l
  8178  010EA8  C031  FFDA         	movff	_lMotor+1,fsr2h
  8179  010EAC  04DE               	decf	postinc2,w,c
  8180  010EAE  E104               	bnz	i2u401_40
  8181  010EB0  0E80               	movlw	128
  8182  010EB2  18DE               	xorwf	postinc2,w,c
  8183  010EB4  B4D8               	btfsc	status,2,c
  8184  010EB6  D007               	goto	i2l7302
  8185  010EB8                     i2u401_40:
  8186                           
  8187                           ;Motor.c: 92: lMotor->mDelta ++;
  8188  010EB8  C030  FFD9         	movff	_lMotor,fsr2l
  8189  010EBC  C031  FFDA         	movff	_lMotor+1,fsr2h
  8190  010EC0  2ADE               	incf	postinc2,f,c
  8191  010EC2  0E00               	movlw	0
  8192  010EC4  22DD               	addwfc	postdec2,f,c
  8193  010EC6                     i2l7302:
  8194                           
  8195                           ;Motor.c: 94: Port_SetPin(&PortE, eP0, 0);
  8196  010EC6  0E8A               	movlw	low _PortE
  8197  010EC8  6E10               	movwf	i2Port_SetPin@pInput,c
  8198  010ECA  0E00               	movlw	high _PortE
  8199  010ECC  6E11               	movwf	i2Port_SetPin@pInput+1,c
  8200  010ECE  0E00               	movlw	0
  8201  010ED0  6E12               	movwf	i2Port_SetPin@pPin,c
  8202  010ED2  0E00               	movlw	0
  8203  010ED4  6E13               	movwf	i2Port_SetPin@pValue,c
  8204  010ED6  EC51  F088         	call	i2_Port_SetPin	;wreg free
  8205  010EDA                     i2l7304:
  8206                           
  8207                           ;Motor.c: 95: }
  8208                           ;Motor.c: 98: Port_SetPin(&PortE, eP1, 1);
  8209  010EDA  0E8A               	movlw	low _PortE
  8210  010EDC  6E10               	movwf	i2Port_SetPin@pInput,c
  8211  010EDE  0E00               	movlw	high _PortE
  8212  010EE0  6E11               	movwf	i2Port_SetPin@pInput+1,c
  8213  010EE2  0E01               	movlw	1
  8214  010EE4  6E12               	movwf	i2Port_SetPin@pPin,c
  8215  010EE6  0E01               	movlw	1
  8216  010EE8  6E13               	movwf	i2Port_SetPin@pValue,c
  8217  010EEA  EC51  F088         	call	i2_Port_SetPin	;wreg free
  8218                           
  8219                           ;Motor.c: 99: Port_SetPin(&PortE, eP1, 0);
  8220  010EEE  0E8A               	movlw	low _PortE
  8221  010EF0  6E10               	movwf	i2Port_SetPin@pInput,c
  8222  010EF2  0E00               	movlw	high _PortE
  8223  010EF4  6E11               	movwf	i2Port_SetPin@pInput+1,c
  8224  010EF6  0E01               	movlw	1
  8225  010EF8  6E12               	movwf	i2Port_SetPin@pPin,c
  8226  010EFA  0E00               	movlw	0
  8227  010EFC  6E13               	movwf	i2Port_SetPin@pValue,c
  8228  010EFE  EC51  F088         	call	i2_Port_SetPin	;wreg free
  8229                           
  8230                           ;Motor.c: 101: MXK_Release();
  8231  010F02  EC0D  F08E         	call	i2_MXK_Release	;wreg free
  8232                           
  8233                           ;Motor.c: 102: Timer0_Restart();
  8234  010F06  ECF4  F08D         	call	i2_Timer0_Restart	;wreg free
  8235                           
  8236                           ;Motor.c: 103: return;
  8237  010F0A  0012               	return	
  8238  010F0C                     i2l7314:
  8239                           
  8240                           ;Motor.c: 104: }
  8241                           ;Motor.c: 105: MXK_Release();
  8242  010F0C  EC0D  F08E         	call	i2_MXK_Release	;wreg free
  8243                           
  8244                           ;Motor.c: 106: Timer0_Stop();
  8245  010F10  EC0A  F08E         	call	i2_Timer0_Stop	;wreg free
  8246                           
  8247                           ;Motor.c: 107: return;
  8248  010F14  0012               	return	
  8249  010F16                     i2l7320:
  8250                           
  8251                           ;Motor.c: 108: }
  8252                           ;Motor.c: 111: MXK_Queue(lStepFunction);
  8253  010F16  C06B  F001         	movff	_lStepFunction,i2MXK_Queue@pCallback
  8254  010F1A  C06C  F002         	movff	_lStepFunction+1,i2MXK_Queue@pCallback+1
  8255  010F1E  C06D  F003         	movff	_lStepFunction+2,i2MXK_Queue@pCallback+2
  8256  010F22  ECE7  F08D         	call	i2_MXK_Queue	;wreg free
  8257  010F26  0012               	return		;funcret
  8258  010F28                     __end_ofi2_Motor_Step:
  8259                           	opt stack 0
  8260                           tosu	equ	0xFFF
  8261                           tosh	equ	0xFFE
  8262                           tosl	equ	0xFFD
  8263                           pclatu	equ	0xFFB
  8264                           pclath	equ	0xFFA
  8265                           tblptru	equ	0xFF8
  8266                           tblptrh	equ	0xFF7
  8267                           tblptrl	equ	0xFF6
  8268                           tablat	equ	0xFF5
  8269                           prodh	equ	0xFF4
  8270                           prodl	equ	0xFF3
  8271                           intcon	equ	0xFF2
  8272                           indf0	equ	0xFEF
  8273                           postinc0	equ	0xFEE
  8274                           fsr0h	equ	0xFEA
  8275                           fsr0l	equ	0xFE9
  8276                           wreg	equ	0xFE8
  8277                           postdec1	equ	0xFE5
  8278                           fsr1h	equ	0xFE2
  8279                           fsr1l	equ	0xFE1
  8280                           indf2	equ	0xFDF
  8281                           postinc2	equ	0xFDE
  8282                           postdec2	equ	0xFDD
  8283                           plusw2	equ	0xFDB
  8284                           fsr2h	equ	0xFDA
  8285                           fsr2l	equ	0xFD9
  8286                           status	equ	0xFD8
  8287                           
  8288 ;; *************** function i2_Timer0_Stop *****************
  8289 ;; Defined at:
  8290 ;;		line 89 in file "Library/Timer0.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;		None
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;		None
  8295 ;; Return value:  Size  Location     Type
  8296 ;;                  1    wreg      void 
  8297 ;; Registers used:
  8298 ;;		None
  8299 ;; Tracked objects:
  8300 ;;		On entry : 0/0
  8301 ;;		On exit  : 0/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8308 ;;Total ram usage:        0 bytes
  8309 ;; Hardware stack levels used:    1
  8310 ;; This function calls:
  8311 ;;		Nothing
  8312 ;; This function is called by:
  8313 ;;		_Timer0_ISR
  8314 ;;		i2_Motor_Step
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           
  8318                           	psect	text39
  8319  011C14                     __ptext39:
  8320                           	opt stack 0
  8321  011C14                     i2_Timer0_Stop:
  8322                           	opt stack 18
  8323                           
  8324                           ;Timer0.c: 91: INTCONbits.TMR0IE = 0;
  8325                           
  8326                           ;incstack = 0
  8327  011C14  9AF2               	bcf	intcon,5,c	;volatile
  8328                           
  8329                           ;Timer0.c: 92: INTCONbits.TMR0IF = 0;
  8330  011C16  94F2               	bcf	intcon,2,c	;volatile
  8331  011C18  0012               	return		;funcret
  8332  011C1A                     __end_ofi2_Timer0_Stop:
  8333                           	opt stack 0
  8334                           tosu	equ	0xFFF
  8335                           tosh	equ	0xFFE
  8336                           tosl	equ	0xFFD
  8337                           pclatu	equ	0xFFB
  8338                           pclath	equ	0xFFA
  8339                           tblptru	equ	0xFF8
  8340                           tblptrh	equ	0xFF7
  8341                           tblptrl	equ	0xFF6
  8342                           tablat	equ	0xFF5
  8343                           prodh	equ	0xFF4
  8344                           prodl	equ	0xFF3
  8345                           intcon	equ	0xFF2
  8346                           indf0	equ	0xFEF
  8347                           postinc0	equ	0xFEE
  8348                           fsr0h	equ	0xFEA
  8349                           fsr0l	equ	0xFE9
  8350                           wreg	equ	0xFE8
  8351                           postdec1	equ	0xFE5
  8352                           fsr1h	equ	0xFE2
  8353                           fsr1l	equ	0xFE1
  8354                           indf2	equ	0xFDF
  8355                           postinc2	equ	0xFDE
  8356                           postdec2	equ	0xFDD
  8357                           plusw2	equ	0xFDB
  8358                           fsr2h	equ	0xFDA
  8359                           fsr2l	equ	0xFD9
  8360                           status	equ	0xFD8
  8361                           
  8362 ;; *************** function i2_Timer0_Restart *****************
  8363 ;; Defined at:
  8364 ;;		line 83 in file "Library/Timer0.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;		None
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;		None
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  1    wreg      void 
  8371 ;; Registers used:
  8372 ;;		None
  8373 ;; Tracked objects:
  8374 ;;		On entry : 0/0
  8375 ;;		On exit  : 0/0
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8382 ;;Total ram usage:        0 bytes
  8383 ;; Hardware stack levels used:    1
  8384 ;; This function calls:
  8385 ;;		Nothing
  8386 ;; This function is called by:
  8387 ;;		i2_Motor_Step
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391                           	psect	text40
  8392  011BE8                     __ptext40:
  8393                           	opt stack 0
  8394  011BE8                     i2_Timer0_Restart:
  8395                           	opt stack 17
  8396                           
  8397                           ;Timer0.c: 85: TMR0 = COUNTER;
  8398                           
  8399                           ;incstack = 0
  8400  011BE8  C02A  FFD6         	movff	_COUNTER,4054	;volatile
  8401  011BEC  C02B  FFD7         	movff	_COUNTER+1,4055	;volatile
  8402                           
  8403                           ;Timer0.c: 87: INTCONbits.TMR0IE = 1;
  8404  011BF0  8AF2               	bsf	intcon,5,c	;volatile
  8405  011BF2  0012               	return		;funcret
  8406  011BF4                     __end_ofi2_Timer0_Restart:
  8407                           	opt stack 0
  8408                           tosu	equ	0xFFF
  8409                           tosh	equ	0xFFE
  8410                           tosl	equ	0xFFD
  8411                           pclatu	equ	0xFFB
  8412                           pclath	equ	0xFFA
  8413                           tblptru	equ	0xFF8
  8414                           tblptrh	equ	0xFF7
  8415                           tblptrl	equ	0xFF6
  8416                           tablat	equ	0xFF5
  8417                           prodh	equ	0xFF4
  8418                           prodl	equ	0xFF3
  8419                           intcon	equ	0xFF2
  8420                           indf0	equ	0xFEF
  8421                           postinc0	equ	0xFEE
  8422                           fsr0h	equ	0xFEA
  8423                           fsr0l	equ	0xFE9
  8424                           wreg	equ	0xFE8
  8425                           postdec1	equ	0xFE5
  8426                           fsr1h	equ	0xFE2
  8427                           fsr1l	equ	0xFE1
  8428                           indf2	equ	0xFDF
  8429                           postinc2	equ	0xFDE
  8430                           postdec2	equ	0xFDD
  8431                           plusw2	equ	0xFDB
  8432                           fsr2h	equ	0xFDA
  8433                           fsr2l	equ	0xFD9
  8434                           status	equ	0xFD8
  8435                           
  8436 ;; *************** function i2_Port_SetPin *****************
  8437 ;; Defined at:
  8438 ;;		line 247 in file "Library/Port.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;  pInput          2   15[COMRAM] const PTR struct Port
  8441 ;;		 -> PortG(10), PortE(10), PortC(10), PortF(10), 
  8442 ;;  pPin            1   17[COMRAM] enum E7694
  8443 ;;  pValue          1   18[COMRAM] unsigned char 
  8444 ;; Auto vars:     Size  Location     Type
  8445 ;;  Port_SetPin     1   19[COMRAM] enum E7739
  8446 ;; Return value:  Size  Location     Type
  8447 ;;                  1    wreg      void 
  8448 ;; Registers used:
  8449 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8455 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8458 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8459 ;;Total ram usage:        5 bytes
  8460 ;; Hardware stack levels used:    1
  8461 ;; Hardware stack levels required when called:    3
  8462 ;; This function calls:
  8463 ;;		i2_Byte_SetBit
  8464 ;;		i2_Word_GetPair
  8465 ;; This function is called by:
  8466 ;;		i2_Motor_Step
  8467 ;; This function uses a non-reentrant model
  8468 ;;
  8469                           
  8470                           	psect	text41
  8471  0110A2                     __ptext41:
  8472                           	opt stack 0
  8473  0110A2                     i2_Port_SetPin:
  8474                           	opt stack 14
  8475                           
  8476                           ;Port.c: 249: ePinType Type = (ePinType)Word_GetPair(&pInput->mType, (UINT8)pPin);
  8477                           
  8478                           ;incstack = 0
  8479  0110A2  0E08               	movlw	8
  8480  0110A4  2410               	addwf	i2Port_SetPin@pInput,w,c
  8481  0110A6  6E0D               	movwf	i2Word_GetPair@pInput,c
  8482  0110A8  0E00               	movlw	0
  8483  0110AA  2011               	addwfc	i2Port_SetPin@pInput+1,w,c
  8484  0110AC  6E0E               	movwf	i2Word_GetPair@pInput+1,c
  8485  0110AE  C012  F00F         	movff	i2Port_SetPin@pPin,i2Word_GetPair@pPair
  8486  0110B2  EC61  F08D         	call	i2_Word_GetPair	;wreg free
  8487  0110B6  6E14               	movwf	i2Port_SetPin@Type,c
  8488                           
  8489                           ;Port.c: 250: switch (Type)
  8490  0110B8  D03B               	goto	i2l6920
  8491  0110BA                     i2l6906:
  8492                           
  8493                           ;Port.c: 256: pValue &= 1;
  8494  0110BA  0E01               	movlw	1
  8495  0110BC  1613               	andwf	i2Port_SetPin@pValue,f,c
  8496                           
  8497                           ;Port.c: 257: Byte_SetBit(pInput->mDirection, pPin, pValue);
  8498  0110BE  EE20 F002          	lfsr	2,2
  8499  0110C2  5010               	movf	i2Port_SetPin@pInput,w,c
  8500  0110C4  26D9               	addwf	fsr2l,f,c
  8501  0110C6  5011               	movf	i2Port_SetPin@pInput+1,w,c
  8502  0110C8  22DA               	addwfc	fsr2h,f,c
  8503  0110CA  CFDE F001          	movff	postinc2,i2Byte_SetBit@pInput
  8504  0110CE  CFDD F002          	movff	postdec2,i2Byte_SetBit@pInput+1
  8505  0110D2  C012  F003         	movff	i2Port_SetPin@pPin,i2Byte_SetBit@pBit
  8506  0110D6  C013  F004         	movff	i2Port_SetPin@pValue,i2Byte_SetBit@pValue
  8507  0110DA  EC42  F08C         	call	i2_Byte_SetBit	;wreg free
  8508                           
  8509                           ;Port.c: 258: break;
  8510  0110DE  0012               	return	
  8511  0110E0                     i2l6910:
  8512                           
  8513                           ;Port.c: 261: pValue &= 1;
  8514  0110E0  0E01               	movlw	1
  8515  0110E2  1613               	andwf	i2Port_SetPin@pValue,f,c
  8516                           
  8517                           ;Port.c: 262: pValue ^= 1;
  8518  0110E4  0E01               	movlw	1
  8519  0110E6  1A13               	xorwf	i2Port_SetPin@pValue,f,c
  8520                           
  8521                           ;Port.c: 263: Byte_SetBit(pInput->mDirection, pPin, pValue);
  8522  0110E8  EE20 F002          	lfsr	2,2
  8523  0110EC  5010               	movf	i2Port_SetPin@pInput,w,c
  8524  0110EE  26D9               	addwf	fsr2l,f,c
  8525  0110F0  5011               	movf	i2Port_SetPin@pInput+1,w,c
  8526  0110F2  22DA               	addwfc	fsr2h,f,c
  8527  0110F4  CFDE F001          	movff	postinc2,i2Byte_SetBit@pInput
  8528  0110F8  CFDD F002          	movff	postdec2,i2Byte_SetBit@pInput+1
  8529  0110FC  C012  F003         	movff	i2Port_SetPin@pPin,i2Byte_SetBit@pBit
  8530  011100  C013  F004         	movff	i2Port_SetPin@pValue,i2Byte_SetBit@pValue
  8531  011104  EC42  F08C         	call	i2_Byte_SetBit	;wreg free
  8532                           
  8533                           ;Port.c: 264: break;
  8534  011108  0012               	return	
  8535  01110A                     i2l6914:
  8536                           
  8537                           ;Port.c: 266: pValue &= 1;
  8538  01110A  0E01               	movlw	1
  8539  01110C  1613               	andwf	i2Port_SetPin@pValue,f,c
  8540                           
  8541                           ;Port.c: 267: Byte_SetBit(pInput->mOutput, pPin, pValue);
  8542  01110E  EE20 F004          	lfsr	2,4
  8543  011112  5010               	movf	i2Port_SetPin@pInput,w,c
  8544  011114  26D9               	addwf	fsr2l,f,c
  8545  011116  5011               	movf	i2Port_SetPin@pInput+1,w,c
  8546  011118  22DA               	addwfc	fsr2h,f,c
  8547  01111A  CFDE F001          	movff	postinc2,i2Byte_SetBit@pInput
  8548  01111E  CFDD F002          	movff	postdec2,i2Byte_SetBit@pInput+1
  8549  011122  C012  F003         	movff	i2Port_SetPin@pPin,i2Byte_SetBit@pBit
  8550  011126  C013  F004         	movff	i2Port_SetPin@pValue,i2Byte_SetBit@pValue
  8551  01112A  EC42  F08C         	call	i2_Byte_SetBit	;wreg free
  8552                           
  8553                           ;Port.c: 269: }
  8554                           
  8555                           ;Port.c: 268: break;
  8556  01112E  0012               	return	
  8557  011130                     i2l6920:
  8558  011130  5014               	movf	i2Port_SetPin@Type,w,c
  8559                           
  8560                           ; Switch size 1, requested type "space"
  8561                           ; Number of cases is 4, Range of values is 0 to 3
  8562                           ; switch strategies available:
  8563                           ; Name         Instructions Cycles
  8564                           ; simple_byte           13     7 (average)
  8565                           ;	Chosen strategy is simple_byte
  8566  011132  0A00               	xorlw	0	; case 0
  8567  011134  B4D8               	btfsc	status,2,c
  8568  011136  0012               	return	
  8569  011138  0A01               	xorlw	1	; case 1
  8570  01113A  B4D8               	btfsc	status,2,c
  8571  01113C  D7BE               	goto	i2l6906
  8572  01113E  0A03               	xorlw	3	; case 2
  8573  011140  B4D8               	btfsc	status,2,c
  8574  011142  D7CE               	goto	i2l6910
  8575  011144  0A01               	xorlw	1	; case 3
  8576  011146  A4D8               	btfss	status,2,c
  8577  011148  0012               	return	
  8578  01114A  D7DF               	goto	i2l6914
  8579  01114C                     __end_ofi2_Port_SetPin:
  8580                           	opt stack 0
  8581                           tosu	equ	0xFFF
  8582                           tosh	equ	0xFFE
  8583                           tosl	equ	0xFFD
  8584                           pclatu	equ	0xFFB
  8585                           pclath	equ	0xFFA
  8586                           tblptru	equ	0xFF8
  8587                           tblptrh	equ	0xFF7
  8588                           tblptrl	equ	0xFF6
  8589                           tablat	equ	0xFF5
  8590                           prodh	equ	0xFF4
  8591                           prodl	equ	0xFF3
  8592                           intcon	equ	0xFF2
  8593                           indf0	equ	0xFEF
  8594                           postinc0	equ	0xFEE
  8595                           fsr0h	equ	0xFEA
  8596                           fsr0l	equ	0xFE9
  8597                           wreg	equ	0xFE8
  8598                           postdec1	equ	0xFE5
  8599                           fsr1h	equ	0xFE2
  8600                           fsr1l	equ	0xFE1
  8601                           indf2	equ	0xFDF
  8602                           postinc2	equ	0xFDE
  8603                           postdec2	equ	0xFDD
  8604                           plusw2	equ	0xFDB
  8605                           fsr2h	equ	0xFDA
  8606                           fsr2l	equ	0xFD9
  8607                           status	equ	0xFD8
  8608                           
  8609 ;; *************** function i2_Word_GetPair *****************
  8610 ;; Defined at:
  8611 ;;		line 156 in file "Library/Types.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;  pInput          2   12[COMRAM] PTR struct Word
  8614 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  8615 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
  8616 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
  8617 ;;		 -> PortC(10), PortF(10), NULL(0), 
  8618 ;;  pPair           1   14[COMRAM] unsigned char 
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;		None
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  1    wreg      unsigned char 
  8623 ;; Registers used:
  8624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8630 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8633 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8634 ;;Total ram usage:        3 bytes
  8635 ;; Hardware stack levels used:    1
  8636 ;; Hardware stack levels required when called:    2
  8637 ;; This function calls:
  8638 ;;		i2_Byte_GetPair
  8639 ;; This function is called by:
  8640 ;;		i2_Port_SetPin
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           	psect	text42
  8645  011AC2                     __ptext42:
  8646                           	opt stack 0
  8647  011AC2                     i2_Word_GetPair:
  8648                           	opt stack 14
  8649                           
  8650                           ;Types.c: 158: if (pPair >= 4)
  8651                           
  8652                           ;incstack = 0
  8653  011AC2  0E03               	movlw	3
  8654  011AC4  640F               	cpfsgt	i2Word_GetPair@pPair,c
  8655  011AC6  D00C               	goto	i2l6492
  8656                           
  8657                           ;Types.c: 159: return Byte_GetPair(&(pInput->MS_Byte), pPair - 4);
  8658  011AC8  0E01               	movlw	1
  8659  011ACA  240D               	addwf	i2Word_GetPair@pInput,w,c
  8660  011ACC  6E0A               	movwf	i2Byte_GetPair@pInput,c
  8661  011ACE  0E00               	movlw	0
  8662  011AD0  200E               	addwfc	i2Word_GetPair@pInput+1,w,c
  8663  011AD2  6E0B               	movwf	i2Byte_GetPair@pInput+1,c
  8664  011AD4  500F               	movf	i2Word_GetPair@pPair,w,c
  8665  011AD6  0FFC               	addlw	252
  8666  011AD8  6E0C               	movwf	i2Byte_GetPair@pPair,c
  8667  011ADA  ECC1  F08D         	call	i2_Byte_GetPair	;wreg free
  8668  011ADE  0012               	return	
  8669  011AE0                     i2l6492:
  8670                           
  8671                           ;Types.c: 160: else
  8672                           ;Types.c: 161: return Byte_GetPair(&(pInput->LS_Byte), pPair);
  8673  011AE0  C00D  F00A         	movff	i2Word_GetPair@pInput,i2Byte_GetPair@pInput
  8674  011AE4  C00E  F00B         	movff	i2Word_GetPair@pInput+1,i2Byte_GetPair@pInput+1
  8675  011AE8  C00F  F00C         	movff	i2Word_GetPair@pPair,i2Byte_GetPair@pPair
  8676  011AEC  ECC1  F08D         	call	i2_Byte_GetPair	;wreg free
  8677  011AF0  0012               	return	
  8678  011AF2                     __end_ofi2_Word_GetPair:
  8679                           	opt stack 0
  8680                           tosu	equ	0xFFF
  8681                           tosh	equ	0xFFE
  8682                           tosl	equ	0xFFD
  8683                           pclatu	equ	0xFFB
  8684                           pclath	equ	0xFFA
  8685                           tblptru	equ	0xFF8
  8686                           tblptrh	equ	0xFF7
  8687                           tblptrl	equ	0xFF6
  8688                           tablat	equ	0xFF5
  8689                           prodh	equ	0xFF4
  8690                           prodl	equ	0xFF3
  8691                           intcon	equ	0xFF2
  8692                           indf0	equ	0xFEF
  8693                           postinc0	equ	0xFEE
  8694                           fsr0h	equ	0xFEA
  8695                           fsr0l	equ	0xFE9
  8696                           wreg	equ	0xFE8
  8697                           postdec1	equ	0xFE5
  8698                           fsr1h	equ	0xFE2
  8699                           fsr1l	equ	0xFE1
  8700                           indf2	equ	0xFDF
  8701                           postinc2	equ	0xFDE
  8702                           postdec2	equ	0xFDD
  8703                           plusw2	equ	0xFDB
  8704                           fsr2h	equ	0xFDA
  8705                           fsr2l	equ	0xFD9
  8706                           status	equ	0xFD8
  8707                           
  8708 ;; *************** function i2_Byte_GetPair *****************
  8709 ;; Defined at:
  8710 ;;		line 87 in file "Library/Types.c"
  8711 ;; Parameters:    Size  Location     Type
  8712 ;;  pInput          2    9[COMRAM] PTR struct Byte
  8713 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
  8714 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
  8715 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
  8716 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
  8717 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
  8718 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
  8719 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
  8720 ;;		 -> NULL(0), 
  8721 ;;  pPair           1   11[COMRAM] unsigned char 
  8722 ;; Auto vars:     Size  Location     Type
  8723 ;;		None
  8724 ;; Return value:  Size  Location     Type
  8725 ;;                  1    wreg      unsigned char 
  8726 ;; Registers used:
  8727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8728 ;; Tracked objects:
  8729 ;;		On entry : 0/0
  8730 ;;		On exit  : 0/0
  8731 ;;		Unchanged: 0/0
  8732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8733 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8736 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8737 ;;Total ram usage:        3 bytes
  8738 ;; Hardware stack levels used:    1
  8739 ;; Hardware stack levels required when called:    1
  8740 ;; This function calls:
  8741 ;;		i2_Byte_GetZone
  8742 ;; This function is called by:
  8743 ;;		i2_Word_GetPair
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           	psect	text43
  8748  011B82                     __ptext43:
  8749                           	opt stack 0
  8750  011B82                     i2_Byte_GetPair:
  8751                           	opt stack 14
  8752                           
  8753                           ;Types.c: 89: return Byte_GetZone(pInput, 4, pPair, 2);
  8754                           
  8755                           ;incstack = 0
  8756  011B82  C00A  F001         	movff	i2Byte_GetPair@pInput,i2Byte_GetZone@pInput
  8757  011B86  C00B  F002         	movff	i2Byte_GetPair@pInput+1,i2Byte_GetZone@pInput+1
  8758  011B8A  0E04               	movlw	4
  8759  011B8C  6E03               	movwf	i2Byte_GetZone@pMax,c
  8760  011B8E  C00C  F004         	movff	i2Byte_GetPair@pPair,i2Byte_GetZone@pChunk
  8761  011B92  0E02               	movlw	2
  8762  011B94  6E05               	movwf	i2Byte_GetZone@pChunkSize,c
  8763  011B96  ECBC  F08A         	call	i2_Byte_GetZone	;wreg free
  8764  011B9A  0012               	return	
  8765  011B9C                     __end_ofi2_Byte_GetPair:
  8766                           	opt stack 0
  8767                           tosu	equ	0xFFF
  8768                           tosh	equ	0xFFE
  8769                           tosl	equ	0xFFD
  8770                           pclatu	equ	0xFFB
  8771                           pclath	equ	0xFFA
  8772                           tblptru	equ	0xFF8
  8773                           tblptrh	equ	0xFF7
  8774                           tblptrl	equ	0xFF6
  8775                           tablat	equ	0xFF5
  8776                           prodh	equ	0xFF4
  8777                           prodl	equ	0xFF3
  8778                           intcon	equ	0xFF2
  8779                           indf0	equ	0xFEF
  8780                           postinc0	equ	0xFEE
  8781                           fsr0h	equ	0xFEA
  8782                           fsr0l	equ	0xFE9
  8783                           wreg	equ	0xFE8
  8784                           postdec1	equ	0xFE5
  8785                           fsr1h	equ	0xFE2
  8786                           fsr1l	equ	0xFE1
  8787                           indf2	equ	0xFDF
  8788                           postinc2	equ	0xFDE
  8789                           postdec2	equ	0xFDD
  8790                           plusw2	equ	0xFDB
  8791                           fsr2h	equ	0xFDA
  8792                           fsr2l	equ	0xFD9
  8793                           status	equ	0xFD8
  8794                           
  8795 ;; *************** function i2_Byte_GetZone *****************
  8796 ;; Defined at:
  8797 ;;		line 64 in file "Library/Types.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;  pInput          2    0[COMRAM] PTR struct Byte
  8800 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
  8801 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
  8802 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
  8803 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
  8804 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
  8805 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
  8806 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
  8807 ;;		 -> NULL(0), 
  8808 ;;  pMax            1    2[COMRAM] unsigned char 
  8809 ;;  pChunk          1    3[COMRAM] unsigned char 
  8810 ;;  pChunkSize      1    4[COMRAM] unsigned char 
  8811 ;; Auto vars:     Size  Location     Type
  8812 ;;  Byte_GetZone    1    8[COMRAM] unsigned char 
  8813 ;;  Byte_GetZone    1    7[COMRAM] unsigned char 
  8814 ;;  Byte_GetZone    1    6[COMRAM] unsigned char 
  8815 ;; Return value:  Size  Location     Type
  8816 ;;                  1    wreg      unsigned char 
  8817 ;; Registers used:
  8818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/0
  8821 ;;		On exit  : 0/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8824 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8825 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8827 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8828 ;;Total ram usage:        9 bytes
  8829 ;; Hardware stack levels used:    1
  8830 ;; This function calls:
  8831 ;;		Nothing
  8832 ;; This function is called by:
  8833 ;;		i2_Byte_GetPair
  8834 ;; This function uses a non-reentrant model
  8835 ;;
  8836                           
  8837                           	psect	text44
  8838  011578                     __ptext44:
  8839                           	opt stack 0
  8840  011578                     i2_Byte_GetZone:
  8841                           	opt stack 14
  8842                           
  8843                           ;Types.c: 66: UINT8 Output = pInput->mBits;
  8844                           
  8845                           ;incstack = 0
  8846  011578  C001  FFF6         	movff	i2Byte_GetZone@pInput,tblptrl
  8847  01157C  C002  FFF7         	movff	i2Byte_GetZone@pInput+1,tblptrh
  8848  011580  0E00               	movlw	low (__mediumconst shr (0+16))
  8849  011582  6EF8               	movwf	tblptru,c
  8850  011584  0E0F               	movlw	(high __ramtop+-1)
  8851  011586  64F7               	cpfsgt	tblptrh,c
  8852  011588  D003               	bra	i2u295_47
  8853  01158A  0008               	tblrd		*
  8854  01158C  50F5               	movf	tablat,w,c
  8855  01158E  D005               	bra	i2u295_40
  8856  011590                     i2u295_47:
  8857  011590  CFF6 FFE9          	movff	tblptrl,fsr0l
  8858  011594  CFF7 FFEA          	movff	tblptrh,fsr0h
  8859  011598  50EF               	movf	indf0,w,c
  8860  01159A                     i2u295_40:
  8861  01159A  6E09               	movwf	i2Byte_GetZone@Output,c
  8862                           
  8863                           ;Types.c: 67: UINT8 MASK = MASKS[pChunkSize];
  8864  01159C  5005               	movf	i2Byte_GetZone@pChunkSize,w,c
  8865  01159E  0D01               	mullw	1
  8866  0115A0  0E01               	movlw	low _MASKS
  8867  0115A2  24F3               	addwf	prodl,w,c
  8868  0115A4  6EF6               	movwf	tblptrl,c
  8869  0115A6  0EFE               	movlw	high _MASKS
  8870  0115A8  20F4               	addwfc	prodh,w,c
  8871  0115AA  6EF7               	movwf	tblptrh,c
  8872  0115AC                     	if	1	;There are 3 active tblptr bytes
  8873  0115AC  6AF8               	clrf	tblptru,c
  8874  0115AE  0E00               	movlw	low (__mediumconst shr (0+16))
  8875  0115B0  22F8               	addwfc	tblptru,f,c
  8876  0115B2                     	endif
  8877  0115B2  0008               	tblrd		*
  8878  0115B4  CFF5 F007          	movff	tablat,i2Byte_GetZone@MASK
  8879                           
  8880                           ;Types.c: 68: UINT8 Offset = 0;
  8881  0115B8  0E00               	movlw	0
  8882  0115BA  6E08               	movwf	i2Byte_GetZone@Offset,c
  8883                           
  8884                           ;Types.c: 70: while (pChunk >= pMax)
  8885  0115BC  D003               	goto	i2l6232
  8886  0115BE                     i2l6228:
  8887                           
  8888                           ;Types.c: 71: {
  8889                           ;Types.c: 72: pChunk -= pMax;
  8890  0115BE  5003               	movf	i2Byte_GetZone@pMax,w,c
  8891  0115C0  5E04               	subwf	i2Byte_GetZone@pChunk,f,c
  8892                           
  8893                           ;Types.c: 73: Offset += 1;
  8894  0115C2  2A08               	incf	i2Byte_GetZone@Offset,f,c
  8895  0115C4                     i2l6232:
  8896  0115C4  5003               	movf	i2Byte_GetZone@pMax,w,c
  8897  0115C6  5C04               	subwf	i2Byte_GetZone@pChunk,w,c
  8898  0115C8  B0D8               	btfsc	status,0,c
  8899  0115CA  D7F9               	goto	i2l6228
  8900                           
  8901                           ;Types.c: 74: }
  8902                           ;Types.c: 75: pChunk *= pChunkSize;
  8903  0115CC  5005               	movf	i2Byte_GetZone@pChunkSize,w,c
  8904  0115CE  0204               	mulwf	i2Byte_GetZone@pChunk,c
  8905  0115D0  50F3               	movf	prodl,w,c
  8906  0115D2  6E04               	movwf	i2Byte_GetZone@pChunk,c
  8907                           
  8908                           ;Types.c: 76: pChunk += Offset;
  8909  0115D4  5008               	movf	i2Byte_GetZone@Offset,w,c
  8910  0115D6  2604               	addwf	i2Byte_GetZone@pChunk,f,c
  8911                           
  8912                           ;Types.c: 78: Output >>= pChunk;
  8913  0115D8  2804               	incf	i2Byte_GetZone@pChunk,w,c
  8914  0115DA  6E06               	movwf	??i2_Byte_GetZone& (0+255),c
  8915  0115DC  D002               	goto	i2u297_40
  8916  0115DE                     i2u297_45:
  8917  0115DE  90D8               	bcf	status,0,c
  8918  0115E0  3209               	rrcf	i2Byte_GetZone@Output,f,c
  8919  0115E2                     i2u297_40:
  8920  0115E2  2E06               	decfsz	??i2_Byte_GetZone& (0+255),f,c
  8921  0115E4  D7FC               	goto	i2u297_45
  8922                           
  8923                           ;Types.c: 79: Output &= MASK;
  8924  0115E6  5007               	movf	i2Byte_GetZone@MASK,w,c
  8925  0115E8  1609               	andwf	i2Byte_GetZone@Output,f,c
  8926                           
  8927                           ;Types.c: 80: return Output;
  8928  0115EA  5009               	movf	i2Byte_GetZone@Output,w,c
  8929  0115EC  0012               	return	
  8930  0115EE                     __end_ofi2_Byte_GetZone:
  8931                           	opt stack 0
  8932                           tosu	equ	0xFFF
  8933                           tosh	equ	0xFFE
  8934                           tosl	equ	0xFFD
  8935                           pclatu	equ	0xFFB
  8936                           pclath	equ	0xFFA
  8937                           tblptru	equ	0xFF8
  8938                           tblptrh	equ	0xFF7
  8939                           tblptrl	equ	0xFF6
  8940                           tablat	equ	0xFF5
  8941                           prodh	equ	0xFF4
  8942                           prodl	equ	0xFF3
  8943                           intcon	equ	0xFF2
  8944                           indf0	equ	0xFEF
  8945                           postinc0	equ	0xFEE
  8946                           fsr0h	equ	0xFEA
  8947                           fsr0l	equ	0xFE9
  8948                           wreg	equ	0xFE8
  8949                           postdec1	equ	0xFE5
  8950                           fsr1h	equ	0xFE2
  8951                           fsr1l	equ	0xFE1
  8952                           indf2	equ	0xFDF
  8953                           postinc2	equ	0xFDE
  8954                           postdec2	equ	0xFDD
  8955                           plusw2	equ	0xFDB
  8956                           fsr2h	equ	0xFDA
  8957                           fsr2l	equ	0xFD9
  8958                           status	equ	0xFD8
  8959                           
  8960 ;; *************** function i2_Byte_SetBit *****************
  8961 ;; Defined at:
  8962 ;;		line 32 in file "Library/Types.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;  pInput          2    0[COMRAM] PTR struct Byte
  8965 ;;		 -> SSP2CON2(1), SSP1CON2(1), SSP2CON1(1), SSP2STAT(1), 
  8966 ;;		 -> SSP1CON1(1), SSP1STAT(1), TRISG(1), TRISF(1), 
  8967 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
  8968 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
  8969 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
  8970 ;;		 -> NULL(0), 
  8971 ;;  pBit            1    2[COMRAM] unsigned char 
  8972 ;;  pValue          1    3[COMRAM] unsigned char 
  8973 ;; Auto vars:     Size  Location     Type
  8974 ;;		None
  8975 ;; Return value:  Size  Location     Type
  8976 ;;                  1    wreg      void 
  8977 ;; Registers used:
  8978 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8979 ;; Tracked objects:
  8980 ;;		On entry : 0/0
  8981 ;;		On exit  : 0/0
  8982 ;;		Unchanged: 0/0
  8983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8984 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8986 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8987 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8988 ;;Total ram usage:        7 bytes
  8989 ;; Hardware stack levels used:    1
  8990 ;; This function calls:
  8991 ;;		Nothing
  8992 ;; This function is called by:
  8993 ;;		i2_Port_SetPin
  8994 ;; This function uses a non-reentrant model
  8995 ;;
  8996                           
  8997                           	psect	text45
  8998  011884                     __ptext45:
  8999                           	opt stack 0
  9000  011884                     i2_Byte_SetBit:
  9001                           	opt stack 16
  9002                           
  9003                           ;Types.c: 34: pValue &= 1;
  9004                           
  9005                           ;incstack = 0
  9006  011884  0E01               	movlw	1
  9007  011886  1604               	andwf	i2Byte_SetBit@pValue,f,c
  9008                           
  9009                           ;Types.c: 35: pInput->mBits &= ~(1 << pBit);
  9010  011888  C003  F005         	movff	i2Byte_SetBit@pBit,??i2_Byte_SetBit
  9011  01188C  0E01               	movlw	1
  9012  01188E  6E06               	movwf	(??i2_Byte_SetBit+1)& (0+255),c
  9013  011890  2A05               	incf	??i2_Byte_SetBit,f,c
  9014  011892  D002               	goto	i2u326_44
  9015  011894                     i2u326_45:
  9016  011894  90D8               	bcf	status,0,c
  9017  011896  3606               	rlcf	??i2_Byte_SetBit+1,f,c
  9018  011898                     i2u326_44:
  9019  011898  2E05               	decfsz	??i2_Byte_SetBit,f,c
  9020  01189A  D7FC               	goto	i2u326_45
  9021  01189C  5006               	movf	??i2_Byte_SetBit+1,w,c
  9022  01189E  0AFF               	xorlw	255
  9023  0118A0  6E07               	movwf	(??i2_Byte_SetBit+2)& (0+255),c
  9024  0118A2  C001  FFD9         	movff	i2Byte_SetBit@pInput,fsr2l
  9025  0118A6  C002  FFDA         	movff	i2Byte_SetBit@pInput+1,fsr2h
  9026  0118AA  5007               	movf	??i2_Byte_SetBit+2,w,c
  9027  0118AC  16DF               	andwf	indf2,f,c
  9028                           
  9029                           ;Types.c: 36: pInput->mBits |= pValue << pBit;
  9030  0118AE  C003  F005         	movff	i2Byte_SetBit@pBit,??i2_Byte_SetBit
  9031  0118B2  C004  F006         	movff	i2Byte_SetBit@pValue,??i2_Byte_SetBit+1
  9032  0118B6  2A05               	incf	??i2_Byte_SetBit,f,c
  9033  0118B8  D002               	goto	i2u327_44
  9034  0118BA                     i2u327_45:
  9035  0118BA  90D8               	bcf	status,0,c
  9036  0118BC  3606               	rlcf	??i2_Byte_SetBit+1,f,c
  9037  0118BE                     i2u327_44:
  9038  0118BE  2E05               	decfsz	??i2_Byte_SetBit,f,c
  9039  0118C0  D7FC               	goto	i2u327_45
  9040  0118C2  C001  FFD9         	movff	i2Byte_SetBit@pInput,fsr2l
  9041  0118C6  C002  FFDA         	movff	i2Byte_SetBit@pInput+1,fsr2h
  9042  0118CA  5006               	movf	??i2_Byte_SetBit+1,w,c
  9043  0118CC  12DF               	iorwf	indf2,f,c
  9044  0118CE  0012               	return		;funcret
  9045  0118D0                     __end_ofi2_Byte_SetBit:
  9046                           	opt stack 0
  9047                           tosu	equ	0xFFF
  9048                           tosh	equ	0xFFE
  9049                           tosl	equ	0xFFD
  9050                           pclatu	equ	0xFFB
  9051                           pclath	equ	0xFFA
  9052                           tblptru	equ	0xFF8
  9053                           tblptrh	equ	0xFF7
  9054                           tblptrl	equ	0xFF6
  9055                           tablat	equ	0xFF5
  9056                           prodh	equ	0xFF4
  9057                           prodl	equ	0xFF3
  9058                           intcon	equ	0xFF2
  9059                           indf0	equ	0xFEF
  9060                           postinc0	equ	0xFEE
  9061                           fsr0h	equ	0xFEA
  9062                           fsr0l	equ	0xFE9
  9063                           wreg	equ	0xFE8
  9064                           postdec1	equ	0xFE5
  9065                           fsr1h	equ	0xFE2
  9066                           fsr1l	equ	0xFE1
  9067                           indf2	equ	0xFDF
  9068                           postinc2	equ	0xFDE
  9069                           postdec2	equ	0xFDD
  9070                           plusw2	equ	0xFDB
  9071                           fsr2h	equ	0xFDA
  9072                           fsr2l	equ	0xFD9
  9073                           status	equ	0xFD8
  9074                           
  9075 ;; *************** function i2_MXK_SwitchTo *****************
  9076 ;; Defined at:
  9077 ;;		line 105 in file "Library/MXK.c"
  9078 ;; Parameters:    Size  Location     Type
  9079 ;;  pModule         1    wreg     enum E7869
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;  pModule         1    7[COMRAM] enum E7869
  9082 ;;  MXK_SwitchTo    1    6[COMRAM] unsigned char 
  9083 ;; Return value:  Size  Location     Type
  9084 ;;                  1    wreg      unsigned char 
  9085 ;; Registers used:
  9086 ;;		wreg, status,2, status,0, cstack
  9087 ;; Tracked objects:
  9088 ;;		On entry : 0/0
  9089 ;;		On exit  : 0/0
  9090 ;;		Unchanged: 0/0
  9091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9095 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9096 ;;Total ram usage:        2 bytes
  9097 ;; Hardware stack levels used:    1
  9098 ;; Hardware stack levels required when called:    1
  9099 ;; This function calls:
  9100 ;;		i2_delay_us
  9101 ;; This function is called by:
  9102 ;;		i2_Motor_Step
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106                           	psect	text46
  9107  011A5C                     __ptext46:
  9108                           	opt stack 0
  9109  011A5C                     i2_MXK_SwitchTo:
  9110                           	opt stack 16
  9111                           
  9112                           ;incstack = 0
  9113                           ;i2MXK_SwitchTo@pModule stored from wreg
  9114  011A5C  6E08               	movwf	i2MXK_SwitchTo@pModule,c
  9115                           
  9116                           ;MXK.c: 107: UINT8 CUR = 0xF & PORTG;
  9117  011A5E  5086               	movf	3974,w,c	;volatile
  9118  011A60  0B0F               	andlw	15
  9119  011A62  6E07               	movwf	i2MXK_SwitchTo@CUR,c
  9120                           
  9121                           ;MXK.c: 109: if (Bus_State == eMXK_Busy)
  9122  011A64  5044               	movf	_Bus_State,w,c
  9123  011A66  A4D8               	btfss	status,2,c
  9124  011A68  D002               	goto	i2l6930
  9125                           
  9126                           ;MXK.c: 110: return 0;
  9127  011A6A  0E00               	movlw	0
  9128  011A6C  0012               	return	
  9129  011A6E                     i2l6930:
  9130                           
  9131                           ;MXK.c: 112: Bus_State = eMXK_Busy;
  9132  011A6E  0E00               	movlw	0
  9133  011A70  6E44               	movwf	_Bus_State,c
  9134                           
  9135                           ;MXK.c: 114: if (CUR != pModule)
  9136  011A72  5008               	movf	i2MXK_SwitchTo@pModule,w,c
  9137  011A74  1807               	xorwf	i2MXK_SwitchTo@CUR,w,c
  9138  011A76  B4D8               	btfsc	status,2,c
  9139  011A78  D00A               	goto	i2l6938
  9140                           
  9141                           ;MXK.c: 115: {
  9142                           ;MXK.c: 116: PORTG &= ~(0xF);
  9143  011A7A  0EF0               	movlw	240
  9144  011A7C  1686               	andwf	3974,f,c	;volatile
  9145                           
  9146                           ;MXK.c: 117: PORTG |= pModule;
  9147  011A7E  5008               	movf	i2MXK_SwitchTo@pModule,w,c
  9148  011A80  1286               	iorwf	3974,f,c	;volatile
  9149                           
  9150                           ;MXK.c: 120: delay_us(10);
  9151  011A82  0E00               	movlw	0
  9152  011A84  6E02               	movwf	i2delay_us@us+1,c
  9153  011A86  0E0A               	movlw	10
  9154  011A88  6E01               	movwf	i2delay_us@us,c
  9155  011A8A  ECD0  F08C         	call	i2_delay_us	;wreg free
  9156  011A8E                     i2l6938:
  9157                           
  9158                           ;MXK.c: 121: }
  9159                           ;MXK.c: 122: return 1;
  9160  011A8E  0E01               	movlw	1
  9161  011A90  0012               	return	
  9162  011A92                     __end_ofi2_MXK_SwitchTo:
  9163                           	opt stack 0
  9164                           tosu	equ	0xFFF
  9165                           tosh	equ	0xFFE
  9166                           tosl	equ	0xFFD
  9167                           pclatu	equ	0xFFB
  9168                           pclath	equ	0xFFA
  9169                           tblptru	equ	0xFF8
  9170                           tblptrh	equ	0xFF7
  9171                           tblptrl	equ	0xFF6
  9172                           tablat	equ	0xFF5
  9173                           prodh	equ	0xFF4
  9174                           prodl	equ	0xFF3
  9175                           intcon	equ	0xFF2
  9176                           indf0	equ	0xFEF
  9177                           postinc0	equ	0xFEE
  9178                           fsr0h	equ	0xFEA
  9179                           fsr0l	equ	0xFE9
  9180                           wreg	equ	0xFE8
  9181                           postdec1	equ	0xFE5
  9182                           fsr1h	equ	0xFE2
  9183                           fsr1l	equ	0xFE1
  9184                           indf2	equ	0xFDF
  9185                           postinc2	equ	0xFDE
  9186                           postdec2	equ	0xFDD
  9187                           plusw2	equ	0xFDB
  9188                           fsr2h	equ	0xFDA
  9189                           fsr2l	equ	0xFD9
  9190                           status	equ	0xFD8
  9191                           
  9192 ;; *************** function i2_delay_us *****************
  9193 ;; Defined at:
  9194 ;;		line 255 in file "Library/Types.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;  us              2    0[COMRAM] unsigned short 
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;  delay_us        4    2[COMRAM] unsigned long 
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  1    wreg      void 
  9201 ;; Registers used:
  9202 ;;		wreg, status,2, status,0
  9203 ;; Tracked objects:
  9204 ;;		On entry : 0/0
  9205 ;;		On exit  : 0/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9209 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9211 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9212 ;;Total ram usage:        6 bytes
  9213 ;; Hardware stack levels used:    1
  9214 ;; This function calls:
  9215 ;;		Nothing
  9216 ;; This function is called by:
  9217 ;;		i2_MXK_SwitchTo
  9218 ;; This function uses a non-reentrant model
  9219 ;;
  9220                           
  9221                           	psect	text47
  9222  0119A0                     __ptext47:
  9223                           	opt stack 0
  9224  0119A0                     i2_delay_us:
  9225                           	opt stack 16
  9226                           
  9227                           ;Types.c: 256: unsigned long u;
  9228                           ;Types.c: 257: while (us--) {
  9229                           
  9230                           ;incstack = 0
  9231  0119A0  D016               	goto	i2l6506
  9232  0119A2                     i2l6498:
  9233                           
  9234                           ;Types.c: 259: for (u = 0; u < ((((48*1000000L) / 4000UL) / 10UL)/1000UL); u++) {
  9235  0119A2  0E00               	movlw	0
  9236  0119A4  6E03               	movwf	i2delay_us@u,c
  9237  0119A6  0E00               	movlw	0
  9238  0119A8  6E04               	movwf	i2delay_us@u+1,c
  9239  0119AA  0E00               	movlw	0
  9240  0119AC  6E05               	movwf	i2delay_us@u+2,c
  9241  0119AE  0E00               	movlw	0
  9242  0119B0  6E06               	movwf	i2delay_us@u+3,c
  9243  0119B2                     i2l6500:
  9244  0119B2  5003               	movf	i2delay_us@u,w,c
  9245  0119B4  1004               	iorwf	i2delay_us@u+1,w,c
  9246  0119B6  1005               	iorwf	i2delay_us@u+2,w,c
  9247  0119B8  1006               	iorwf	i2delay_us@u+3,w,c
  9248  0119BA  A4D8               	btfss	status,2,c
  9249  0119BC  D008               	goto	i2l6506
  9250  0119BE  F000               	nop		; ;# 
  9251  0119C0  0E01               	movlw	1
  9252  0119C2  2603               	addwf	i2delay_us@u,f,c
  9253  0119C4  0E00               	movlw	0
  9254  0119C6  2204               	addwfc	i2delay_us@u+1,f,c
  9255  0119C8  2205               	addwfc	i2delay_us@u+2,f,c
  9256  0119CA  2206               	addwfc	i2delay_us@u+3,f,c
  9257  0119CC  D7F2               	goto	i2l6500
  9258  0119CE                     i2l6506:
  9259  0119CE  0601               	decf	i2delay_us@us,f,c
  9260  0119D0  A0D8               	btfss	status,0,c
  9261  0119D2  0602               	decf	i2delay_us@us+1,f,c
  9262  0119D4  2801               	incf	i2delay_us@us,w,c
  9263  0119D6  E1E5               	bnz	i2l6498
  9264  0119D8  2802               	incf	i2delay_us@us+1,w,c
  9265  0119DA  B4D8               	btfsc	status,2,c
  9266  0119DC  0012               	return	
  9267  0119DE  D7E1               	goto	i2l6498
  9268  0119E0                     __end_ofi2_delay_us:
  9269                           	opt stack 0
  9270                           tosu	equ	0xFFF
  9271                           tosh	equ	0xFFE
  9272                           tosl	equ	0xFFD
  9273                           pclatu	equ	0xFFB
  9274                           pclath	equ	0xFFA
  9275                           tblptru	equ	0xFF8
  9276                           tblptrh	equ	0xFF7
  9277                           tblptrl	equ	0xFF6
  9278                           tablat	equ	0xFF5
  9279                           prodh	equ	0xFF4
  9280                           prodl	equ	0xFF3
  9281                           intcon	equ	0xFF2
  9282                           indf0	equ	0xFEF
  9283                           postinc0	equ	0xFEE
  9284                           fsr0h	equ	0xFEA
  9285                           fsr0l	equ	0xFE9
  9286                           wreg	equ	0xFE8
  9287                           postdec1	equ	0xFE5
  9288                           fsr1h	equ	0xFE2
  9289                           fsr1l	equ	0xFE1
  9290                           indf2	equ	0xFDF
  9291                           postinc2	equ	0xFDE
  9292                           postdec2	equ	0xFDD
  9293                           plusw2	equ	0xFDB
  9294                           fsr2h	equ	0xFDA
  9295                           fsr2l	equ	0xFD9
  9296                           status	equ	0xFD8
  9297                           
  9298 ;; *************** function i2_MXK_Release *****************
  9299 ;; Defined at:
  9300 ;;		line 130 in file "Library/MXK.c"
  9301 ;; Parameters:    Size  Location     Type
  9302 ;;		None
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;		None
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  1    wreg      unsigned char 
  9307 ;; Registers used:
  9308 ;;		wreg, status,2, status,0
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9318 ;;Total ram usage:        0 bytes
  9319 ;; Hardware stack levels used:    1
  9320 ;; This function calls:
  9321 ;;		Nothing
  9322 ;; This function is called by:
  9323 ;;		i2_Motor_Step
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327                           	psect	text48
  9328  011C1A                     __ptext48:
  9329                           	opt stack 0
  9330  011C1A                     i2_MXK_Release:
  9331                           	opt stack 17
  9332                           
  9333                           ;MXK.c: 132: Bus_State = eMXK_Idle;
  9334                           
  9335                           ;incstack = 0
  9336  011C1A  0E01               	movlw	1
  9337  011C1C  6E44               	movwf	_Bus_State,c
  9338                           
  9339                           ;MXK.c: 135: return 1;
  9340                           ;	Return value of i2_MXK_Release is never used
  9341  011C1E  0012               	return	
  9342  011C20                     __end_ofi2_MXK_Release:
  9343                           	opt stack 0
  9344                           tosu	equ	0xFFF
  9345                           tosh	equ	0xFFE
  9346                           tosl	equ	0xFFD
  9347                           pclatu	equ	0xFFB
  9348                           pclath	equ	0xFFA
  9349                           tblptru	equ	0xFF8
  9350                           tblptrh	equ	0xFF7
  9351                           tblptrl	equ	0xFF6
  9352                           tablat	equ	0xFF5
  9353                           prodh	equ	0xFF4
  9354                           prodl	equ	0xFF3
  9355                           intcon	equ	0xFF2
  9356                           indf0	equ	0xFEF
  9357                           postinc0	equ	0xFEE
  9358                           fsr0h	equ	0xFEA
  9359                           fsr0l	equ	0xFE9
  9360                           wreg	equ	0xFE8
  9361                           postdec1	equ	0xFE5
  9362                           fsr1h	equ	0xFE2
  9363                           fsr1l	equ	0xFE1
  9364                           indf2	equ	0xFDF
  9365                           postinc2	equ	0xFDE
  9366                           postdec2	equ	0xFDD
  9367                           plusw2	equ	0xFDB
  9368                           fsr2h	equ	0xFDA
  9369                           fsr2l	equ	0xFD9
  9370                           status	equ	0xFD8
  9371                           
  9372 ;; *************** function i2_MXK_Queue *****************
  9373 ;; Defined at:
  9374 ;;		line 144 in file "Library/MXK.c"
  9375 ;; Parameters:    Size  Location     Type
  9376 ;;  pCallback       3    0[COMRAM] PTR FTN()void 
  9377 ;;		 -> Absolute function(1), Motor_Step(1), 
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;		None
  9380 ;; Return value:  Size  Location     Type
  9381 ;;                  1    wreg      void 
  9382 ;; Registers used:
  9383 ;;		wreg, status,2, status,0
  9384 ;; Tracked objects:
  9385 ;;		On entry : 0/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9389 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9392 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9393 ;;Total ram usage:        3 bytes
  9394 ;; Hardware stack levels used:    1
  9395 ;; This function calls:
  9396 ;;		Nothing
  9397 ;; This function is called by:
  9398 ;;		i2_Motor_Step
  9399 ;; This function uses a non-reentrant model
  9400 ;;
  9401                           
  9402                           	psect	text49
  9403  011BCE                     __ptext49:
  9404                           	opt stack 0
  9405  011BCE                     i2_MXK_Queue:
  9406                           	opt stack 17
  9407                           
  9408                           ;MXK.c: 146: lQueue = pCallback;
  9409                           
  9410                           ;incstack = 0
  9411  011BCE  C001  F025         	movff	i2MXK_Queue@pCallback,_lQueue	;volatile
  9412  011BD2  C002  F026         	movff	i2MXK_Queue@pCallback+1,_lQueue+1	;volatile
  9413  011BD6  C003  F027         	movff	i2MXK_Queue@pCallback+2,_lQueue+2	;volatile
  9414  011BDA  0012               	return		;funcret
  9415  011BDC                     __end_ofi2_MXK_Queue:
  9416                           	opt stack 0
  9417                           tosu	equ	0xFFF
  9418                           tosh	equ	0xFFE
  9419                           tosl	equ	0xFFD
  9420                           pclatu	equ	0xFFB
  9421                           pclath	equ	0xFFA
  9422                           tblptru	equ	0xFF8
  9423                           tblptrh	equ	0xFF7
  9424                           tblptrl	equ	0xFF6
  9425                           tablat	equ	0xFF5
  9426                           prodh	equ	0xFF4
  9427                           prodl	equ	0xFF3
  9428                           intcon	equ	0xFF2
  9429                           indf0	equ	0xFEF
  9430                           postinc0	equ	0xFEE
  9431                           fsr0h	equ	0xFEA
  9432                           fsr0l	equ	0xFE9
  9433                           wreg	equ	0xFE8
  9434                           postdec1	equ	0xFE5
  9435                           fsr1h	equ	0xFE2
  9436                           fsr1l	equ	0xFE1
  9437                           indf2	equ	0xFDF
  9438                           postinc2	equ	0xFDE
  9439                           postdec2	equ	0xFDD
  9440                           plusw2	equ	0xFDB
  9441                           fsr2h	equ	0xFDA
  9442                           fsr2l	equ	0xFD9
  9443                           status	equ	0xFD8
  9444                           tosu	equ	0xFFF
  9445                           tosh	equ	0xFFE
  9446                           tosl	equ	0xFFD
  9447                           pclatu	equ	0xFFB
  9448                           pclath	equ	0xFFA
  9449                           tblptru	equ	0xFF8
  9450                           tblptrh	equ	0xFF7
  9451                           tblptrl	equ	0xFF6
  9452                           tablat	equ	0xFF5
  9453                           prodh	equ	0xFF4
  9454                           prodl	equ	0xFF3
  9455                           intcon	equ	0xFF2
  9456                           indf0	equ	0xFEF
  9457                           postinc0	equ	0xFEE
  9458                           fsr0h	equ	0xFEA
  9459                           fsr0l	equ	0xFE9
  9460                           wreg	equ	0xFE8
  9461                           postdec1	equ	0xFE5
  9462                           fsr1h	equ	0xFE2
  9463                           fsr1l	equ	0xFE1
  9464                           indf2	equ	0xFDF
  9465                           postinc2	equ	0xFDE
  9466                           postdec2	equ	0xFDD
  9467                           plusw2	equ	0xFDB
  9468                           fsr2h	equ	0xFDA
  9469                           fsr2l	equ	0xFD9
  9470                           status	equ	0xFD8
  9471                           
  9472                           	psect	text50
  9473  000000                     __ptext50:
  9474                           	opt stack 0
  9475                           tosu	equ	0xFFF
  9476                           tosh	equ	0xFFE
  9477                           tosl	equ	0xFFD
  9478                           pclatu	equ	0xFFB
  9479                           pclath	equ	0xFFA
  9480                           tblptru	equ	0xFF8
  9481                           tblptrh	equ	0xFF7
  9482                           tblptrl	equ	0xFF6
  9483                           tablat	equ	0xFF5
  9484                           prodh	equ	0xFF4
  9485                           prodl	equ	0xFF3
  9486                           intcon	equ	0xFF2
  9487                           indf0	equ	0xFEF
  9488                           postinc0	equ	0xFEE
  9489                           fsr0h	equ	0xFEA
  9490                           fsr0l	equ	0xFE9
  9491                           wreg	equ	0xFE8
  9492                           postdec1	equ	0xFE5
  9493                           fsr1h	equ	0xFE2
  9494                           fsr1l	equ	0xFE1
  9495                           indf2	equ	0xFDF
  9496                           postinc2	equ	0xFDE
  9497                           postdec2	equ	0xFDD
  9498                           plusw2	equ	0xFDB
  9499                           fsr2h	equ	0xFDA
  9500                           fsr2l	equ	0xFD9
  9501                           status	equ	0xFD8
  9502                           
  9503                           	psect	rparam
  9504  0000                     tosu	equ	0xFFF
  9505                           tosh	equ	0xFFE
  9506                           tosl	equ	0xFFD
  9507                           pclatu	equ	0xFFB
  9508                           pclath	equ	0xFFA
  9509                           tblptru	equ	0xFF8
  9510                           tblptrh	equ	0xFF7
  9511                           tblptrl	equ	0xFF6
  9512                           tablat	equ	0xFF5
  9513                           prodh	equ	0xFF4
  9514                           prodl	equ	0xFF3
  9515                           intcon	equ	0xFF2
  9516                           indf0	equ	0xFEF
  9517                           postinc0	equ	0xFEE
  9518                           fsr0h	equ	0xFEA
  9519                           fsr0l	equ	0xFE9
  9520                           wreg	equ	0xFE8
  9521                           postdec1	equ	0xFE5
  9522                           fsr1h	equ	0xFE2
  9523                           fsr1l	equ	0xFE1
  9524                           indf2	equ	0xFDF
  9525                           postinc2	equ	0xFDE
  9526                           postdec2	equ	0xFDD
  9527                           plusw2	equ	0xFDB
  9528                           fsr2h	equ	0xFDA
  9529                           fsr2l	equ	0xFD9
  9530                           status	equ	0xFD8
  9531                           
  9532                           	psect	temp
  9533  000049                     btemp:
  9534                           	opt stack 0
  9535  000049                     	ds	1
  9536  0000                     int$flags	set	btemp
  9537                           tosu	equ	0xFFF
  9538                           tosh	equ	0xFFE
  9539                           tosl	equ	0xFFD
  9540                           pclatu	equ	0xFFB
  9541                           pclath	equ	0xFFA
  9542                           tblptru	equ	0xFF8
  9543                           tblptrh	equ	0xFF7
  9544                           tblptrl	equ	0xFF6
  9545                           tablat	equ	0xFF5
  9546                           prodh	equ	0xFF4
  9547                           prodl	equ	0xFF3
  9548                           intcon	equ	0xFF2
  9549                           indf0	equ	0xFEF
  9550                           postinc0	equ	0xFEE
  9551                           fsr0h	equ	0xFEA
  9552                           fsr0l	equ	0xFE9
  9553                           wreg	equ	0xFE8
  9554                           postdec1	equ	0xFE5
  9555                           fsr1h	equ	0xFE2
  9556                           fsr1l	equ	0xFE1
  9557                           indf2	equ	0xFDF
  9558                           postinc2	equ	0xFDE
  9559                           postdec2	equ	0xFDD
  9560                           plusw2	equ	0xFDB
  9561                           fsr2h	equ	0xFDA
  9562                           fsr2l	equ	0xFD9
  9563                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    720
    Data        25
    BSS         673
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      72
    BANK0           160     48     160
    BANK1           256      6     256
    BANK2           256     16      16
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    ADC_AN0.mNext.mNext	PTR struct ADC size(2) Largest target is 0
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_AN1.mNext.mNext	PTR struct ADC size(2) Largest target is 0
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_AN2.mNext.mNext	PTR struct ADC size(2) Largest target is 0
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    HMIBoard.mGetState	PTR FTN()unsigned char  size(3) Largest target is 0
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    I2C1_More$0	const PTR struct I2CT size(2) Largest target is 7
		 -> I2C1T(BANK0[7]), 

    ADC_AN3.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_AN2.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_AN1.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_AN0.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    gISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    MXK_Queue@pCallback	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    lQueue	volatile PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    DIPSwitch.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    DIPSwitch.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    TestButton.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    TestButton.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    lMotor	PTR struct Motor size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    lStepFunction	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    I2C2_More	PTR FTN(const PTR struct I2CT,)unsigned char  size(3) Largest target is 1
		 -> Absolute function(), 

    I2C2_Done	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    I2C1_More	PTR FTN(const PTR struct I2CT,)unsigned char  size(3) Largest target is 1
		 -> Absolute function(), 

    I2C1_Done	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    I2CT_WAddress@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Stop@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Continue@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Next@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_IsWrite@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_IsRead@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_At@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Put@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Get@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Reset@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_InitW@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_InitR@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Init@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2C2T.mData	PTR unsigned char  size(2) Largest target is 0

    S10680I2CT$mData	PTR unsigned char  size(2) Largest target is 0

    I2C1T.mData	PTR unsigned char  size(2) Largest target is 0

    ADC_Voltage@pInput.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_Start@pInput.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_Sequence@pItemB.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_Sequence@pItemA.mNext.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_Sequence@pItemA.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    ADC_Init@pInput.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    S10351ADC$mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    lCurrent.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), NULL(NULL[0]), 

    lCurrent	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK0[5]), ADC_AN2(BANK0[5]), ADC_AN1(BANK0[5]), ADC_AN0(BANK0[5]), 
		 -> NULL(NULL[0]), 

    HMIBoard.mDIP.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mDIP.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    HMIBoard.mDown.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mDown.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    HMIBoard.mUp.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mUp.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    HMIBoard.mLeft.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mLeft.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    HMIBoard.mRight.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mRight.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    sp__Console_MakeField	PTR unsigned short  size(2) Largest target is 70
		 -> Console_MakeField@Fill(BANK1[70]), 

    PortProperty_Valid@pInput	PTR struct PortProperty size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), 
		 -> PortD_Property(CODE[2]), PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), 
		 -> PortC(BANK0[10]), PortF(BANK0[10]), NULL(NULL[0]), 

    Word_GetPair@pInput	PTR struct Word size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), 
		 -> PortD_Property(CODE[2]), PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), 
		 -> PortC(BANK0[10]), PortF(BANK0[10]), NULL(NULL[0]), 

    Word_SetPair@pInput	PTR struct Word size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Byte_SetByte@pInput	PTR struct Byte size(2) Largest target is 1
		 -> SSP2CON2(SFR_1[1]), SSP1CON2(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> NULL(NULL[0]), 

    Byte_SetQuad@pInput	PTR struct Byte size(2) Largest target is 1
		 -> SSP2CON1(SFR_1[1]), SSP1CON1(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> NULL(NULL[0]), 

    Byte_GetPair@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortA_Property..(CODE[2]), PortB_Property..(CODE[2]), PortC_Property..(CODE[2]), PortD_Property..(CODE[2]), 
		 -> PortE_Property..(CODE[2]), PortF_Property..(CODE[2]), PortG_Property..(CODE[2]), PortF..(BANK0[2]), 
		 -> PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), PortB..(BANK1[2]), 
		 -> PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), PortA(BANK1[10]), 
		 -> PortB(BANK1[10]), PortE(BANK0[10]), PortD(BANK0[10]), PortG_Property(CODE[2]), 
		 -> PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), PortC_Property(CODE[2]), 
		 -> PortB_Property(CODE[2]), PortA_Property(CODE[2]), PortC(BANK0[10]), PortF(BANK0[10]), 
		 -> NULL(NULL[0]), 

    Byte_SetPair@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortF..(BANK0[2]), PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), 
		 -> PortB..(BANK1[2]), PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), 
		 -> PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), PortD(BANK0[10]), 
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), PORTG(SFR_1[1]), 
		 -> PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), PORTC(SFR_1[1]), 
		 -> PORTB(SFR_1[1]), PORTA(SFR_1[1]), PortC(BANK0[10]), PortF(BANK0[10]), 
		 -> NULL(NULL[0]), 

    Byte_GetZone@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortA_Property..(CODE[2]), PortB_Property..(CODE[2]), PortC_Property..(CODE[2]), PortD_Property..(CODE[2]), 
		 -> PortE_Property..(CODE[2]), PortF_Property..(CODE[2]), PortG_Property..(CODE[2]), PortF..(BANK0[2]), 
		 -> PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), PortB..(BANK1[2]), 
		 -> PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), PortA(BANK1[10]), 
		 -> PortB(BANK1[10]), PortE(BANK0[10]), PortD(BANK0[10]), PortG_Property(CODE[2]), 
		 -> PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), PortC_Property(CODE[2]), 
		 -> PortB_Property(CODE[2]), PortA_Property(CODE[2]), PortC(BANK0[10]), PortF(BANK0[10]), 
		 -> NULL(NULL[0]), 

    Byte_SetZone@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortF..(BANK0[2]), PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), 
		 -> PortB..(BANK1[2]), PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), 
		 -> PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), SSP2CON1(SFR_1[1]), 
		 -> PortD(BANK0[10]), SSP1CON1(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> PortC(BANK0[10]), PortF(BANK0[10]), NULL(NULL[0]), 

    Byte_SetBit@pInput	PTR struct Byte size(2) Largest target is 1
		 -> SSP2CON2(SFR_1[1]), SSP1CON2(SFR_1[1]), SSP2CON1(SFR_1[1]), SSP2STAT(SFR_1[1]), 
		 -> SSP1CON1(SFR_1[1]), SSP1STAT(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> NULL(NULL[0]), 

    SPI_Send9@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Send9@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Send9@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Send9@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_Send@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Send@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Send@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Send@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_DCS@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_DCS@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_DCS@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_DCS@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_CS@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_CS@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_CS@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_CS@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_MaxSpeed@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_MaxSpeed@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_MaxSpeed@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_MaxSpeed@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_MinSpeed@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_MinSpeed@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_MinSpeed@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_MinSpeed@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_DisableISR@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_DisableISR@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_DisableISR@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_DisableISR@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_EnableISR@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_EnableISR@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_EnableISR@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_EnableISR@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_SetFlags@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_SetFlags@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_SetFlags@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_SetFlags@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_ClearFlags@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_ClearFlags@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_ClearFlags@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_ClearFlags@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    sp__SPI_Buffer	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Buffer@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Buffer@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Buffer@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Buffer@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_BF@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_BF@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_BF@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_BF@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_Init@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Init@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Init@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Init@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI1.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI1...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI1...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI1...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    Port_Get@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Get@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Get@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_Get@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Set@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Set@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Set@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_Set@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Set@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_SetType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_GetQuad@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetQuad@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetQuad@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetQuad@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetQuadType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortB(BANK1[10]), PortD(BANK0[10]), 

    Port_GetPair@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPair@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPair@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPair@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPair@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPair@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPair@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPair@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_GetPin@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPin@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPin@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPin@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPin@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPin@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPin@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPin@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPin@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortE(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_SetPinType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPinType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPinType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPinType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPinType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_SetPinType@Props	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Init@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Init@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Init@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_Init@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Init@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_CheckPortType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_CheckQuadType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_CheckPairType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_CheckPairType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_CheckPairType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_CheckPairType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_CheckPairType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK0[10]), 

    Port_CheckPairType@Props	PTR struct PortProperty size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), 
		 -> PortD_Property(CODE[2]), PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), 
		 -> PortC(BANK0[10]), PortF(BANK0[10]), NULL(NULL[0]), 

    sp__GetPortLAT	PTR struct Byte size(2) Largest target is 1
		 -> LATG(SFR_1[1]), LATF(SFR_1[1]), LATE(SFR_1[1]), LATD(SFR_1[1]), 
		 -> LATC(SFR_1[1]), LATB(SFR_1[1]), LATA(SFR_1[1]), NULL(NULL[0]), 

    sp__GetPortTRIS	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    sp__GetPortPORT	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    sp__GetPortProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortG.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortG.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortG.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortG.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortE.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortE.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortE.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortE.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortD.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortD.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortD.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortD.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortB.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortB.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortB.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortB.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortA.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortA.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortA.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortA.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortC.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortC.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortC.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortC.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    S560SPI$SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI2.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    S557$SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI2...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    S509$SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI2...SSPSTATTb	PTR struct . size(2) Largest target is 0

    S509$SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI2...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    S139Port$mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortF.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    S139Port$mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortF.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    S139Port$mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortF.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    S139Port$mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortF.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Button_Poll@pButton.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    Button_Poll@pButton.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    S23Button$mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    Button_Init@pInput.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    S23Button$mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 

    Button_Init@pInput.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_HMI_DownButton(), Event_HMI_UpButton(), 
		 -> Event_HMI_RightButton(), Event_HMI_LeftButton(), Event_HMI_DIPSwitch(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Function in COMRAM

    _Timer0_ISR->i2_Motor_Step
    i2_Motor_Step->i2_Port_SetPin
    i2_Port_SetPin->i2_Word_GetPair
    i2_Word_GetPair->i2_Byte_GetPair
    i2_Byte_GetPair->i2_Byte_GetZone
    i2_MXK_SwitchTo->i2_delay_us

Critical Paths under _main in BANK0

    _MXK_Init->_Port_SetQuadType
    _Byte_SetQuad->_Byte_SetZone
    _Port_SetType->_Port_CheckPortType
    _Port_CheckQuadType->_Port_CheckPairType
    _Port_CheckPairType->_PortProperty_Valid
    _Port_Set->_Word_GetPair
    _LED_Init->_Port_SetPinType
    _Port_SetPinType->_PortProperty_Valid
    _Word_SetPair->_Byte_SetPair
    _Byte_SetPair->_Byte_SetZone
    _PortProperty_Valid->_Word_GetPair
    _LED_Set->_Port_SetPin
    _MXK_Dequeue->_Motor_Step
    _Motor_Step->_Port_SetPin
    _Port_SetPin->_Word_GetPair
    _Word_GetPair->_Byte_GetPair
    _Byte_GetPair->_Byte_GetZone
    _MXK_SwitchTo->_delay_us
    _MXK_BlockSwitchTo->_delay_us

Critical Paths under _ISR_Function in BANK0

    None.

Critical Paths under _main in BANK1

    _MXK_Init->_Port_SetType
    _Port_SetQuadType->_Port_CheckQuadType
    _Port_Init->_Port_SetType
    _Port_CheckPortType->_Port_CheckQuadType

Critical Paths under _ISR_Function in BANK1

    None.

Critical Paths under _main in BANK2

    _MXK_Init->_Port_Init
    _Port_SetQuadType->_Port_CheckQuadType
    _Port_Init->_Port_SetType
    _Port_SetType->_Port_CheckPortType
    _Port_CheckPortType->_Port_CheckQuadType

Critical Paths under _ISR_Function in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Function in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Function in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Function in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Function in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Function in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Function in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Function in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Function in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Function in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Function in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR_Function in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR_Function in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR_Function in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  393472
                  _MXK_BlockSwitchTo
                        _MXK_Dequeue
                           _MXK_Init
                        _MXK_Release
 ---------------------------------------------------------------------------------
 (1) _MXK_Init                                             0     0      0  362160
                           _LED_Init
                          _Port_Init
                        _Port_SetPin
                    _Port_SetPinType
                   _Port_SetQuadType
                       _Port_SetType
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             6     4      2    1166
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _Port_SetQuadType                                     5     1      4   44669
                                             47 BANK0      1     1      0
                                              3 BANK2      4     0      4
                       _Byte_SetQuad
                 _Port_CheckQuadType
                       _Word_SetPair
 ---------------------------------------------------------------------------------
 (3) _Byte_SetQuad                                         4     0      4   10549
                                             11 BANK0      4     0      4
                       _Byte_SetZone
 ---------------------------------------------------------------------------------
 (2) _Port_Init                                            6     3      3  111429
                                             10 BANK2      6     3      3
                        _GetPortPORT
                  _GetPortProperties
                        _GetPortTRIS
                           _Port_Set
                    _Port_SetPinType
                       _Port_SetType
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (2) _Port_SetType                                         6     3      3   34613
                                              4 BANK1      2     2      0
                                              6 BANK2      4     1      3
                 _Port_CheckPortType
                       _Word_SetPair
 ---------------------------------------------------------------------------------
 (3) _Port_CheckPortType                                   4     1      3   16921
                                             47 BANK0      1     1      0
                                              3 BANK2      3     0      3
                 _Port_CheckQuadType
 ---------------------------------------------------------------------------------
 (4) _Port_CheckQuadType                                   7     3      4   15845
                                              0 BANK1      4     0      4
                                              0 BANK2      3     3      0
                 _Port_CheckPairType
 ---------------------------------------------------------------------------------
 (5) _Port_CheckPairType                                   9     5      4   13271
                                             38 BANK0      9     5      4
                 _PortProperty_Valid
 ---------------------------------------------------------------------------------
 (3) _Port_Set                                            24    21      3   10910
                                             15 BANK0     24    21      3
                       _Byte_SetByte
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (4) _Byte_SetByte                                         3     0      3    1278
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _GetPortTRIS                                          3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _GetPortProperties                                    3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _GetPortPORT                                          3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _LED_Init                                             1     1      0   85371
                                             45 BANK0      1     1      0
                            _LED_Set
                    _Port_SetPinType
 ---------------------------------------------------------------------------------
 (2) _Port_SetPinType                                      7     3      4   54781
                                             38 BANK0      7     3      4
                        _Byte_SetBit
                 _PortProperty_Valid
                       _Word_SetPair
 ---------------------------------------------------------------------------------
 (3) _Word_SetPair                                         4     0      4   16238
                                             15 BANK0      4     0      4
                       _Byte_SetPair
 ---------------------------------------------------------------------------------
 (4) _Byte_SetPair                                         4     0      4    8725
                                             11 BANK0      4     0      4
                       _Byte_SetZone
 ---------------------------------------------------------------------------------
 (5) _Byte_SetZone                                        11     5      6    2704
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _PortProperty_Valid                                  23    19      4   10663
                                             15 BANK0     23    19      4
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (3) _LED_Set                                              2     1      1   30528
                                             20 BANK0      2     1      1
                        _Port_SetPin
 ---------------------------------------------------------------------------------
 (1) _MXK_Dequeue                                          0     0      0   30813
                   Absolute function *
                         _Motor_Step *
 ---------------------------------------------------------------------------------
 (2) _Motor_Step                                           2     2      0   30813
                                             20 BANK0      2     2      0
                          _MXK_Queue
                        _MXK_Release
                       _MXK_SwitchTo
                        _Port_SetPin
                     _Timer0_Restart
                        _Timer0_Stop
 ---------------------------------------------------------------------------------
 (3) _Timer0_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timer0_Restart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Port_SetPin                                          5     1      4   30131
                                             15 BANK0      5     1      4
                        _Byte_SetBit
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (7) _Word_GetPair                                         3     0      3    8154
                                             12 BANK0      3     0      3
                       _Byte_GetPair
 ---------------------------------------------------------------------------------
 (8) _Byte_GetPair                                         3     0      3    2831
                                              9 BANK0      3     0      3
                       _Byte_GetZone
 ---------------------------------------------------------------------------------
 (9) _Byte_GetZone                                         9     4      5    2161
                                              0 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (3) _Byte_SetBit                                          7     3      4   15662
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _MXK_SwitchTo                                         2     2      0     499
                                              6 BANK0      2     2      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _MXK_Release                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MXK_Queue                                            3     0      3     183
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MXK_BlockSwitchTo                                    2     2      0     499
                                              6 BANK0      2     2      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             6     4      2     403
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR_Function                                       14    14      0    1778
                                             22 COMRAM    14    14      0
                         _Timer0_ISR
 ---------------------------------------------------------------------------------
 (12) _Timer0_ISR                                          0     0      0    1778
                   Absolute function *
                       i2_Motor_Step *
                      i2_Timer0_Stop
 ---------------------------------------------------------------------------------
 (13) i2_Motor_Step                                        2     2      0    1778
                                             20 COMRAM     2     2      0
                        i2_MXK_Queue
                      i2_MXK_Release
                     i2_MXK_SwitchTo
                      i2_Port_SetPin
                   i2_Timer0_Restart
                      i2_Timer0_Stop
 ---------------------------------------------------------------------------------
 (13) i2_Timer0_Stop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_Timer0_Restart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_Port_SetPin                                       5     1      4    1569
                                             15 COMRAM     5     1      4
                      i2_Byte_SetBit
                     i2_Word_GetPair
 ---------------------------------------------------------------------------------
 (15) i2_Word_GetPair                                      3     0      3     643
                                             12 COMRAM     3     0      3
                     i2_Byte_GetPair
 ---------------------------------------------------------------------------------
 (16) i2_Byte_GetPair                                      3     0      3     481
                                              9 COMRAM     3     0      3
                     i2_Byte_GetZone
 ---------------------------------------------------------------------------------
 (17) i2_Byte_GetZone                                      9     4      5     333
                                              0 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (15) i2_Byte_SetBit                                       7     3      4     345
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (14) i2_MXK_SwitchTo                                      2     2      0     161
                                              6 COMRAM     2     2      0
                         i2_delay_us
 ---------------------------------------------------------------------------------
 (15) i2_delay_us                                          6     4      2      94
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (14) i2_MXK_Release                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_MXK_Queue                                         3     0      3      48
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MXK_BlockSwitchTo
     _delay_us
   _MXK_Dequeue
     Absolute function(Fake) *
     _Motor_Step *
       _MXK_Queue
       _MXK_Release
       _MXK_SwitchTo
         _delay_us
       _Port_SetPin
         _Byte_SetBit
         _Word_GetPair
           _Byte_GetPair
             _Byte_GetZone
       _Timer0_Restart
       _Timer0_Stop
   _MXK_Init
     _LED_Init
       _LED_Set
         _Port_SetPin
           _Byte_SetBit
           _Word_GetPair
             _Byte_GetPair
               _Byte_GetZone
       _Port_SetPinType
         _Byte_SetBit
         _PortProperty_Valid
           _Word_GetPair
             _Byte_GetPair
               _Byte_GetZone
         _Word_SetPair
           _Byte_SetPair
             _Byte_SetZone
     _Port_Init
       _GetPortPORT
       _GetPortProperties
       _GetPortTRIS
       _Port_Set
         _Byte_SetByte
         _Word_GetPair
           _Byte_GetPair
             _Byte_GetZone
       _Port_SetPinType
         _Byte_SetBit
         _PortProperty_Valid
           _Word_GetPair
             _Byte_GetPair
               _Byte_GetZone
         _Word_SetPair
           _Byte_SetPair
             _Byte_SetZone
       _Port_SetType
         _Port_CheckPortType
           _Port_CheckQuadType
             _Port_CheckPairType
               _PortProperty_Valid
                 _Word_GetPair
                   _Byte_GetPair
                     _Byte_GetZone
         _Word_SetPair
           _Byte_SetPair
             _Byte_SetZone
       _Word_GetPair
         _Byte_GetPair
           _Byte_GetZone
     _Port_SetPin
       _Byte_SetBit
       _Word_GetPair
         _Byte_GetPair
           _Byte_GetZone
     _Port_SetPinType
       _Byte_SetBit
       _PortProperty_Valid
         _Word_GetPair
           _Byte_GetPair
             _Byte_GetZone
       _Word_SetPair
         _Byte_SetPair
           _Byte_SetZone
     _Port_SetQuadType
       _Byte_SetQuad
         _Byte_SetZone
       _Port_CheckQuadType
         _Port_CheckPairType
           _PortProperty_Valid
             _Word_GetPair
               _Byte_GetPair
                 _Byte_GetZone
       _Word_SetPair
         _Byte_SetPair
           _Byte_SetZone
     _Port_SetType
       _Port_CheckPortType
         _Port_CheckQuadType
           _Port_CheckPairType
             _PortProperty_Valid
               _Word_GetPair
                 _Byte_GetPair
                   _Byte_GetZone
       _Word_SetPair
         _Byte_SetPair
           _Byte_SetZone
     _delay_ms
   _MXK_Release

 _ISR_Function (ROOT)
   _Timer0_ISR
     Absolute function(Fake) *
     i2_Motor_Step *
       i2_MXK_Queue
       i2_MXK_Release
       i2_MXK_SwitchTo
         i2_delay_us
       i2_Port_SetPin
         i2_Byte_SetBit
         i2_Word_GetPair
           i2_Byte_GetPair
             i2_Byte_GetZone
       i2_Timer0_Restart
       i2_Timer0_Stop
     i2_Timer0_Stop *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0     12C      37        7.7%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     10      10       9        6.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     30      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      48       1       76.6%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F8      12        0.0%
DATA                 0      0     324       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Aug 06 18:53:43 2017

                  i2_Timer0_Stop 1C14       __size_of_MXK_BlockSwitchTo 003E  
                   i2_Motor_Step 0E2A                                _A 00FE  
                              _a 00FF                                _i 0073  
                              _j 0074                                _l 0046  
                              _u 0075                                _w 0047  
                  _HMI_DIPSwitch 000000                 i2_Timer0_Restart 1BE8  
                            l528 03B8                              _PR2 000FCB  
                            _val 0070                     _Word_GetPair 19E0  
            MXK_SwitchTo@pModule 00CF                              tosl 000FFD  
                            wreg 000FE8                       i2_delay_us 19A0  
           Port_Set@TypeRequired 00EA            Port_SetPinType@Output 00F2  
                Port_SetPin@Type 00DB                  Port_SetPin@pPin 00D9  
                  ?_Byte_GetPair 00D1                  __end_of_LED_Set 1884  
        __size_ofi2_Word_GetPair 0030                    i2_Port_SetPin 10A2  
                   _Word_SetPair 1918                    ?_Byte_GetZone 00C8  
                           l9000 1438                             l9120 0FA4  
                           l9112 0F4A                             l9026 1A0C  
                           l9210 1872                             l9042 1574  
                           l9116 0F74                             l9204 183A  
                           l9126 0FCE                             l9206 1856  
                           l9070 101E                             l9230 1230  
                           l9222 1214                             l9214 11F8  
                           l9310 1198                             l9302 117C  
                           l9160 17F6                             l9152 1948  
                           l9144 1912                             l9402 199C  
                           l9066 1012                             l9242 125A  
                           l9234 123E                             l9226 1222  
                           l9218 1206                             l9314 11A6  
                           l9306 118A                             l9058 16BC  
                           l9330 063A                             l9260 12BA  
                           l9252 129E                             l9324 11C2  
                           l9158 17E4                             l9166 181C  
                           l9414 1BAE                             l9190 0950  
                           l9238 124C                             l9318 11B4  
                           l9334 0682                             l9184 08E4  
                           l9176 0852                             l9280 1300  
                           l9272 12E4                             l9264 12C8  
                           l9256 12AC                             l9248 1268  
                           l9328 0618                             l9344 070C  
                           l9178 0878                             l9290 1152  
                           l9098 17DC                             l9338 06CA  
                           l9346 0728                             l9602 0B78  
                           l9196 09BC                             l9276 12F2  
                           l9268 12D6                             l9372 0336  
                           l9612 0478                             l9198 09D8  
                           l9286 130E                             l9294 1160  
                           l9374 0356                             l9382 039A  
                           l9606 03C2                             l9622 0550  
                           l9550 1602            Port_SetPinType@pInput 00EE  
                           l9640 0D8E                             l9616 04E4  
                           l9608 040C                             l9624 056C  
                           l9394 1974                             l9570 1778  
                           l9562 172C                             l9298 116E  
                           l9378 037A                             l9644 0DB0  
                           l9564 174A                             l9548 15F0  
                           l9556 162E                             l9646 0DCC  
                           l9638 0D70                             l9662 0E18  
                           l9590 0B12                             l9582 0AD8  
                           l9656 0E0E                             l9568 1768  
                           l9592 0B2A                             l9586 0AE2  
                           l9908 1A58                             l9588 0AFA  
                           l9596 0B42                             l9598 0B72  
                           l8996 142C                             l9898 1A2A  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _LATD 000F8C  
                           _LATE 000F8D                             _LATF 000F8E  
                           _LATG 000F8F                             u6005 027E  
            __end_of_GetPortPORT 133E                             u6015 02C0  
                           u6025 0302                             u6310 0D4E  
                           u6320 0D62                             u6330 0DA2  
                           u5700 1402                             u5720 1468  
                           _PIR1 000F9E                             u7138 1AA0  
                           _PIR2 000FA1                             u5707 13F8  
                           _PIR3 000FA4                             u5740 150E  
                           u5804 108C                             u5725 1462  
                           u5805 1086                             u5824 16DE  
            __end_of_GetPortTRIS 11F2                             u5825 16D8  
                           u5834 1710                             u5835 170A  
                           u5794 105A                             u5795 1054  
                           u5955 002E                             u5965 0046  
                           u5975 005E                             u5985 0080  
                           u5995 0200                             _SPI1 01AA  
                           _SPI2 01B5                             _TMR0 000FD6  
                           _gISR 0068                    ?_Byte_SetByte 00C8  
                  ?_Byte_SetPair 00D3                             _main 147C  
                ??i2_Byte_SetBit 0005                    ?_Byte_SetQuad 00D3  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           indf0 000FEF                             fsr0l 000FE9  
                           fsr2h 000FDA                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                  ?_Byte_SetZone 00C8                             btemp 0049  
                           _zero 0048                             pclat 000FFA  
                  ??_Byte_SetBit 00CC                             prodh 000FF4  
                           prodl 000FF3                             start 148A  
                  __CFG_IESO$OFF 000000                   ?i2_Timer0_Stop 0001  
              i2Byte_SetBit@pBit 0003                     ___param_bank 000010  
                __end_of_Font5x7 FFF1                    __CFG_PLLDIV$3 000000  
               __end_of_LED_Init 1788          GetPortProperties@pInput 00CA  
                          l10300 1498                            l10312 14C8  
                          l10306 14B0                            l10318 14E0  
                          l10284 1AB4                            _I2C1T 009E  
                          _I2C2T 00A5                            ?_main 0001  
                _Event_DIPSwitch 000000                            _INDEX 003B  
                          _MASKS FE01                            _PORTA 000F80  
                          _PORTB 000F81                            _PORTC 000F82  
                          _PORTD 000F83                            _PORTE 000F84  
                          _PORTF 000F85                            _PORTG 000F86  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                            _TRISF 000F97  
                          _TRISG 000F98                 ??i2_Byte_GetPair 000D  
               ??i2_Byte_GetZone 0006                   __CFG_FCMEN$OFF 000000  
                          _PortA 01CA                            _PortB 01D4  
                          _PortC 0076                            _PortD 0080  
                          _PortE 008A                            _PortF 0094  
                          _PortG 01DE          __end_of_Port_SetPinType 09FA  
                _ADC_Initialised 0072                   ??_Byte_GetPair 00D4  
                 ?i2_Port_SetPin 0010                      LED_Set@pLED 00DD  
                 ??_Byte_GetZone 00CD                 __end_of_MXK_Init 0D06  
           i2Byte_GetPair@pInput 000A            __end_ofi2_MXK_Release 1C20  
                          pclath 000FFA                            tablat 000FF5  
             __size_of_MXK_Queue 000E                   ??_Byte_SetByte 00CB  
                 ??_Byte_SetPair 00D7                   ??_Byte_SetQuad 00D7  
                          plusw2 000FDB                   ??_Byte_SetZone 00CE  
                          status 000FD8             i2MXK_Queue@pCallback 0001  
                    i2delay_us@u 0003      __size_of_Port_CheckPairType 006A  
                __initialization 133E                     __end_of_main 14FC  
                   SPI_Send9@dat 006E              __end_of_Byte_SetBit 1726  
               __end_of_InitList FDE1      __size_of_Port_CheckQuadType 005A  
    __size_of_Port_CheckPortType 0048                           ??_main 00F8  
                  __activetblptr 000003                Port_SetPin@pInput 00D7  
              Port_SetPin@pValue 00DA                        ??_LED_Set 00DD  
              _MXK_InitDIPSwitch 000000                GetPortPORT@pInput 00CA  
         Port_CheckPairType@Pin1 00F2           Port_CheckPairType@Pin2 00F3  
                    _GetPortPORT 1298                     ?i2_MXK_Queue 0001  
                    _GetPortTRIS 114C       __end_of_PortProperty_Valid 1578  
               __end_of_Port_Set 03BA                      ?i2_delay_us 0001  
              Word_GetPair@pPair 00D6                           _ADRESH 000FC4  
                         _ADRESL 000FC3           Port_SetQuadType@Output 00F7  
                         _ANCON0 000FC1           Port_SetQuadType@pInput 0203  
                 __CFG_WDTEN$OFF 000000                           i2l1597 144E  
                         i2l6232 15C4                           i2l6500 19B2  
                         i2l6228 15BE                           i2l7302 0EC6  
                         i2l7304 0EDA                           i2l7320 0F16  
                         i2l6506 19CE                           i2l7314 0F0C  
                         i2l6492 1AE0                           i2l6910 10E0  
                         i2l6920 1130                           i2l7296 0E8E  
                         i2l6498 19A2                           i2l6930 1A6E  
                         i2l6914 110A                           i2l6906 10BA  
                         i2l7298 0EA4                           i2l6938 1A8E  
                 _Timer0_Restart 1BDC                   i2_MXK_SwitchTo 1A5C  
                ??i2_Timer0_Stop 0001                 __end_of_delay_ms 1658  
                   LED_Init@pLED 00F5                 __end_of_delay_us 1834  
                  ??_Timer0_Stop 00C8                       _Timer0_ISR 1AF2  
                 __CFG_XINST$OFF 000000                       _Motor_Step 0D06  
           _Event_HMI_LeftButton 000000                   __CFG_STVREN$ON 000000  
                         _change 0045                           _lMotor 0030  
                         _lQueue 0025                       _TestButton 01E8  
           _Event_HMI_DownButton 000000         __end_of_Port_SetQuadType 0610  
       i2Byte_GetZone@pChunkSize 0005                     HMI_GRender@a 0028  
              GetPortTRIS@pInput 00CA                           clear_0 13A6  
                         clear_1 13B8                           clear_2 13C4  
                         clear_3 13D0                       Port_Init@i 020F  
              __end_of_MXK_Queue 1BCE       __end_ofHMI_SetButton@F8155 FE0E  
                   __pdataCOMRAM 0040               __size_of_Port_Init 0192  
       Port_CheckPortType@Output 00F7                  ??i2_Port_SetPin 0014  
                   __mediumconst FD2E      __end_ofTimer2_Init@PRESCALE FE11  
       Port_CheckPortType@pDrive 0205                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                   ?_MXK_Dequeue 0001         Port_CheckPortType@pInput 0203  
                  ??_Port_SetPin 00DB            Console_MakeField@Fill 012A  
               ?_Port_SetPinType 00EE                   i2_Word_GetPair 1AC2  
         __end_of_Timer0_Restart 1BE8                     ?_MXK_Release 0001  
                __CFG_FOSC$HSPLL 000000           __end_ofi2_MXK_SwitchTo 1A92  
                   i2delay_us@us 0001                       __accesstop 0060  
        __end_of__initialization 13D6                        ?_LED_Init 0001  
       __end_ofi2_Timer0_Restart 1BF4                    ___rparam_used 000001  
                    _Byte_SetBit 16C2                    __end_of_MASKS FE0A  
                 _PortA_Property FFF1                   __pcstackCOMRAM 0001  
                 _PortB_Property FFF3              __size_ofi2_delay_us 0040  
                   __pidataBANK0 1BFD                     __pidataBANK1 1C05  
            i2Byte_SetBit@pInput 0001             __end_of_Byte_GetPair 1B82  
            i2Byte_SetBit@pValue 0004              Timer0_Init@PRESCALE FDF1  
           __end_of_Byte_GetZone 147C                   _PortC_Property FFF5  
                      ?_MXK_Init 0001              __end_of_Timer0_Stop 1C14  
              Port_SetType@pType 0208             __end_of_Byte_SetByte 1BC0  
           __end_of_Byte_SetPair 1B64                   _HMI_LeftSwitch 000000  
                 _PortD_Property FFF7             __end_of_Byte_SetQuad 1B42  
           __end_of_Byte_SetZone 10A2                   _HMI_DownSwitch 000000  
                 _PortE_Property FFF9           __end_ofi2_Word_GetPair 1AF2  
                 _PortF_Property FFFB          Port_CheckQuadType@Pair1 0200  
        Port_CheckQuadType@Pair2 0201         MXK_BlockSwitchTo@pModule 00CF  
                ?_Timer0_Restart 0001                   _PortG_Property FFFD  
                     __pbssBANK0 0060                       __pbssBANK1 0100  
        Port_CheckQuadType@pQuad 01FC                  ?i2_MXK_SwitchTo 0001  
            __end_of_Port_SetPin 0FEC           __end_of_PortA_Property FFF3  
             Byte_SetByte@pInput 00C8                       ??_LED_Init 00F5  
             Byte_SetByte@pValue 00CA                    ?_ISR_Function 0001  
        Port_CheckPairType@Props 00F5           __end_of_PortB_Property FFF5  
              __end_of_Port_Init 0B8C                      ?_Timer0_ISR 0001  
        Port_CheckPairType@pPair 00F0               Byte_SetPair@pInput 00D3  
                    ?_Motor_Step 0001               Byte_SetPair@pValue 00D6  
         __end_of_PortC_Property FFF7               Word_GetPair@pInput 00D4  
                      ?_Port_Set 00D7           __end_of_PortD_Property FFF9  
                        _ADC_AN0 00AC                          _ADC_AN1 00B1  
                        _ADC_AN2 00B6                          _ADC_AN3 00BB  
                     ??_MXK_Init 00F8           __end_of_PortE_Property FFFB  
            Console_Render@F7900 01F2                          _COUNTER 002A  
                        _LED_Set 1834           __end_of_PortF_Property FFFD  
                    _gBackcolour 002C                        _I2C1_Done 011E  
                ?i2_Word_GetPair 000D                        _I2C2_Done 0124  
                      _I2C1_More 0121                        _I2C2_More 0127  
                      ?_delay_ms 00C8                        ?_delay_us 00C8  
                        _SSP1ADD 000FC8                          _SSP1BUF 000FC9  
                        _SSP2BUF 000F6F           __end_of_PortG_Property FFFF  
           __size_ofi2_MXK_Queue 000E             i2Byte_GetZone@Offset 0008  
                 ??_ISR_Function 0017             i2Byte_GetZone@Output 0009  
              Event_TestButton@j 0034                          _Font5x7 FE11  
           i2Byte_GetZone@pChunk 0004             i2Byte_GetZone@pInput 0001  
                Byte_SetBit@pBit 00CA            __end_ofi2_Byte_SetBit 18D0  
                        __Hparam 0000                          __Lparam 0000  
                    _Timer0_Stop 1C0E                          OutSeg@a 0035  
__end_ofPortProperty_Valid@F7774 FDF1                       ??_Port_Set 00DA  
                  ?_Port_SetType 0206                          _gCursor 0040  
                        _lBuffer 0210                          __pcinit 133E  
                        __ramtop 1000                          __ptext0 147C  
                        __ptext1 0B8C                          __ptext2 15EE  
                        __ptext3 03BA                          __ptext4 1B20  
                        __ptext5 09FA                          __ptext6 0610  
                        __ptext7 18D0                          __ptext8 1788  
                        __ptext9 1658                        _T0CONbits 000FD5  
              i2MXK_SwitchTo@CUR 0007                        _T2CONbits 000FCA  
                  LED_Set@pValue 00DC                     ?_GetPortPORT 00C8  
                   ?_GetPortTRIS 00C8                __CFG_MSSPMSK$MSK5 000000  
            LCD_DrawRectangle@p2 00C0              LCD_DrawRectangle@p4 00C4  
                   ??i2_delay_us 0003                       ??_delay_ms 00CA  
                     ??_delay_us 00CA                        _DIPSwitch 01C0  
            __size_of_Timer0_ISR 002E                      _Port_SetPin 0F28  
            __size_of_Motor_Step 0124             __size_of_MXK_Dequeue 0030  
                     delay_ms@ms 00C8             end_of_initialization 13D6  
                     delay_us@us 00C8             __size_of_MXK_Release 0016  
     __end_of_Port_CheckPairType 16C2               _PortProperty_Valid 14FC  
             Byte_SetQuad@pInput 00D3               Byte_SetQuad@pValue 00D6  
          __size_of_Byte_GetPair 001E            __size_of_Byte_GetZone 009C  
                 ??_Port_SetType 01FE       __end_of_Port_CheckQuadType 17E2  
                 Port_Init@pPort 020C                          postdec1 000FE5  
                        postdec2 000FDD            __size_of_Byte_SetByte 000E  
          __size_of_Byte_SetPair 0022                          postinc0 000FEE  
                        postinc2 000FDE              ?_PortProperty_Valid 00D7  
          __size_of_Byte_SetQuad 0022       __end_of_Port_CheckPortType 1918  
          __size_of_Byte_SetZone 00B6               __end_ofi2_delay_us 19E0  
            _Event_HMI_DIPSwitch 000000                ?_Port_SetQuadType 0203  
                    _gForecolour 00FC           __size_ofi2_MXK_Release 0006  
                      _PORTFbits 000F85               ??_Port_SetQuadType 00F7  
               Byte_GetZone@MASK 00CE                        _MXK_Queue 1BC0  
               __CFG_CPUDIV$OSC1 000000                 Byte_GetZone@pMax 00CA  
                 Port_Set@pInput 00D7             ??_PortProperty_Valid 00DB  
                 Port_Set@pValue 00D9                     _Byte_GetPair 1B64  
             HMI_SetButton@F8155 FE0A                     _Byte_GetZone 13E0  
                  ?_MXK_SwitchTo 0001                 _Event_TestButton 000000  
           Port_SetPinType@Props 00F3          __size_ofi2_Byte_GetPair 001A  
                   _Byte_SetByte 1BB2                     _Byte_SetPair 1B42  
                   _Byte_SetQuad 1B20          __size_ofi2_Byte_GetZone 0076  
                   _Byte_SetZone 0FEC             Port_SetPinType@pType 00F1  
              ?i2_Timer0_Restart 0001                     ?_Byte_SetBit 00C8  
              __size_of_LED_Init 0062            __end_ofi2_Timer0_Stop 1C1A  
             ??i2_Timer0_Restart 0001                    ?i2_Motor_Step 0001  
                  __pidataCOMRAM 1BF4            _Event_HMI_RightButton 000000  
                      _Bus_State 0044              i2Byte_GetPair@pPair 000C  
           __end_of_ISR_Function 148A                __size_of_MXK_Init 017A  
                  ?_Word_GetPair 00D4                 ??_Timer0_Restart 00C8  
             Port_SetType@Output 0209              start_initialization 133E  
                     ?_MXK_Queue 00C8         PortProperty_Valid@Errors 00DD  
               ??i2_MXK_SwitchTo 0007               Port_SetType@pInput 0206  
          __end_ofi2_Port_SetPin 114C                    ?_Word_SetPair 00D7  
              Byte_SetBit@pInput 00C8                   ??_MXK_SwitchTo 00CE  
              Byte_SetBit@pValue 00CB      PortProperty_Valid@pPinDrive 00D9  
           MXK_BlockSwitchTo@CUR 00CE         PortProperty_Valid@pInput 00D7  
                  i2_MXK_Release 1C1A         __size_of_Port_SetPinType 01C0  
          Port_SetQuadType@pQuad 0205            Port_SetQuadType@pType 0206  
                   _HMI_UpSwitch 000000                     ??_Timer0_ISR 0017  
                _HMI_InitButtons 000000                        _gCharSize 00F8  
               Timer2_Init@INDEX 0039                        OutSeg@cur 0036  
                 ??i2_Motor_Step 0015                     ??_Motor_Step 00DC  
             Byte_SetZone@Offset 00D1                        _Port_Init 09FA  
                    __pdataBANK0 00F8                      __pdataBANK1 01F2  
              __size_of_Port_Set 03BA               Byte_SetZone@pChunk 00CB  
               ??i2_Word_GetPair 0010               Byte_SetZone@pInput 00C8  
             Byte_SetZone@pValue 00CD         Port_CheckQuadType@Output 0202  
                      _gLineSize 01F6         Port_CheckQuadType@pDrive 01FD  
                 ??_Word_GetPair 00D7         Port_CheckQuadType@pInput 01FA  
                    __pbssBIGRAM 0210                         ?_LED_Set 00DC  
                    __pbssCOMRAM 0025                    __pcstackBANK0 00C8  
                  __pcstackBANK1 01FA                    __pcstackBANK2 0200  
                 ??_Word_SetPair 00DB               __end_of_Timer0_ISR 1B20  
           __size_of_GetPortPORT 00A6             __size_of_GetPortTRIS 00A6  
           __end_of_Port_SetType 083A                __size_of_delay_ms 006A  
              __size_of_delay_us 0052              __CFG_CCP2MX$DEFAULT 000000  
             __end_of_Motor_Step 0E2A                   ?i2_MXK_Release 0001  
       Port_CheckPairType@Output 00F4         Port_CheckPairType@pDrive 00F1  
       Port_CheckPairType@pInput 00EE               _MXK_InitTestButton 000000  
                   ?_Timer0_Stop 0001                    _lStepFunction 006B  
              Byte_SetPair@pPair 00D5                        __pintcode 1408  
                  __pmediumconst FD2E                        _pShiftVal 0032  
                     ?_Port_Init 020A                _GetPortProperties 11F2  
    __end_ofTimer0_Init@PRESCALE FE01               ?_GetPortProperties 00C8  
                  ??i2_MXK_Queue 0004                      ??_MXK_Queue 00CB  
                   ?_Port_SetPin 00D7                  _HMI_RightSwitch 000000  
            ??_GetPortProperties 00CA               Byte_GetPair@pInput 00D1  
              i2Port_SetPin@Type 0014                i2Port_SetPin@pPin 0012  
                 i2_Byte_GetPair 1B82                         _HMIBoard 0170  
                 i2_Byte_GetZone 1578                         _LED_Init 1726  
                      delay_ms@u 00CA                        delay_us@u 00CA  
             MXK_Queue@pCallback 00C8                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                         _IPR3bits 000FA5  
                       _PIE3bits 000FA3                Byte_SetQuad@pQuad 00D5  
                       i2u400_40 0E80                         i2u401_40 0EB8  
                       i2u326_44 1898                         i2u326_45 1894  
                       i2u327_44 18BE                         i2u327_45 18BA  
                       _PIR1bits 000F9E                         _PIR3bits 000FA4  
                       i2u295_40 159A                         i2u295_47 1590  
                       i2u711_48 1B0A                         i2u297_40 15E2  
                       i2u297_45 15DE                         i2u399_40 0E6C  
           __size_of_Byte_SetBit 0064                         _RCONbits 000FD0  
           i2Word_GetPair@pInput 000D                 __CFG_WDTPS$32768 000000  
                       _SSP1CON1 000FC6                ??_Port_SetPinType 00F2  
                       _SSP1CON2 000FC5                         _SSP2CON1 000F6C  
                       _SSP2CON2 000F6B            __size_of_ISR_Function 0082  
                       _SSP1STAT 000FC7        __end_of_GetPortProperties 1298  
                       _SSP2STAT 000F6D             __end_of_MXK_SwitchTo 19A0  
             _Port_CheckPairType 1658                         _MXK_Init 0B8C  
                MXK_SwitchTo@CUR 00CE                       _ADCON0bits 000FC2  
                     _ADCON1bits 000FC1              Port_SetPinType@pPin 00F0  
             _Port_CheckQuadType 1788                    _MXK_DIPSwitch 000000  
            ?_Port_CheckPairType 00EE                    ??_MXK_Dequeue 00DE  
               __size_of_LED_Set 0050           __size_ofi2_Byte_SetBit 004C  
             _Port_CheckPortType 18D0          PortProperty_Valid@F7774 FDE1  
           __end_ofi2_Motor_Step 0F28                  ??i2_MXK_Release 0001  
                      copy_data0 1352                        copy_data1 1372  
                      copy_data2 1392                    ??_MXK_Release 00C8  
         __end_ofi2_Byte_GetPair 1B9C        __size_of_Port_SetQuadType 0256  
            ?_Port_CheckQuadType 01FA           __end_ofi2_Byte_GetZone 15EE  
            __end_ofi2_MXK_Queue 1BDC              ?_Port_CheckPortType 0203  
                       _InitList FD2F             _Motor_Step$intlevel0 0D0C  
                   _ISR_Function 1408             __end_of_Word_GetPair 1A1E  
                       _lCBuffer 0100             ??_Port_CheckPairType 00F2  
                       __Hrparam 0000                         __Lrparam 0000  
                       _Port_Set 0000                     OutSeg@segset 0037  
                      rand@screw 003F             __end_of_Word_SetPair 195E  
                    ??_Port_Init 020D             ??_Port_CheckQuadType 00F7  
              _MXK_BlockSwitchTo 1A1E             ??_Port_CheckPortType 00F7  
                       _lBufferX 003D                         _lBufferY 003E  
            Timer2_Init@PRESCALE FE0E               _Event_HMI_UpButton 000000  
             ?_MXK_BlockSwitchTo 0001        __size_ofi2_Timer0_Restart 000C  
                       _lCurrent 002E           Byte_GetZone@pChunkSize 00CC  
         Byte_SetZone@pChunkSize 00CC            __size_of_Port_SetType 022A  
          i2MXK_SwitchTo@pModule 0008                         _delay_ms 15EE  
                       _delay_us 17E2                         _clearall 003C  
                       __ptext10 0000                         __ptext11 1BB2  
                       __ptext20 14FC                         __ptext12 114C  
                       __ptext21 1834                         __ptext13 11F2  
                       __ptext30 16C2                         __ptext22 1A92  
                       __ptext14 1298                         __ptext31 195E  
                       __ptext23 0D06                         __ptext15 1726  
                       __ptext40 1BE8                         __ptext32 1B9C  
                       __ptext24 1C0E                         __ptext16 083A  
                       __ptext41 10A2                         __ptext33 1BC0  
                       __ptext25 1BDC                         __ptext17 1918  
                       __ptext50 0000                         __ptext42 1AC2  
                       __ptext34 1A1E                         __ptext26 0F28  
                       __ptext18 1B42                         __ptext43 1B82  
                       __ptext35 17E2                         __ptext27 19E0  
                       __ptext19 0FEC                         __ptext44 1578  
                       __ptext28 1B64                         __ptext45 1884  
                       __ptext37 1AF2                         __ptext29 13E0  
                       __ptext46 1A5C                         __ptext38 0E2A  
                       __ptext47 19A0                         __ptext39 1C14  
            ??_MXK_BlockSwitchTo 00CE                         __ptext48 1C1A  
                       __ptext49 1BCE                     _SSP1CON1bits 000FC6  
                   _SSP1CON2bits 000FC5      __size_of_PortProperty_Valid 007C  
             i2Byte_GetZone@MASK 0007                     _SSP2CON1bits 000F6C  
                   _SSP2CON2bits 000F6B                  ?i2_Byte_GetPair 000A  
                ?i2_Byte_GetZone 0001               i2Byte_GetZone@pMax 0003  
            __end_of_MXK_Dequeue 1AC2                    __size_of_main 0080  
              Byte_GetPair@pPair 00D3              i2Port_SetPin@pInput 0010  
            i2Port_SetPin@pValue 0013              __end_of_MXK_Release 1BB2  
                 _MXK_TestButton 000000                    i2_Byte_SetBit 1884  
            i2Word_GetPair@pPair 000F        __end_of_MXK_BlockSwitchTo 1A5C  
                       int$flags 0049             __size_of_Timer0_Stop 0006  
                   _Port_SetType 0610                     Port_Set@Type 00EE  
     __size_of_GetPortProperties 00A6                     _SSP1STATbits 000FC7  
                 Timer0_Init@DIV 0060                   Timer0_Init@PRE 0038  
                   _SSP2STATbits 000F6D           PortProperty_Valid@Pair 00ED  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
         PortProperty_Valid@pPin 00DA                 Byte_SetZone@MASK 00D2  
                    i2_MXK_Queue 1BCE                   Timer2_Init@DIV 0064  
                 Timer2_Init@PRE 003A                 Byte_SetZone@pMax 00CA  
         __size_ofi2_Timer0_Stop 0006             __size_of_Port_SetPin 00C4  
                       intlevel2 0000                   ?i2_Byte_SetBit 0001  
          __size_of_MXK_SwitchTo 0042                  Port_Init@pInput 020A  
         __size_ofi2_Port_SetPin 00AA            __size_ofi2_Motor_Step 00FE  
                  ??_GetPortPORT 00CA                    ??_GetPortTRIS 00CA  
             Word_SetPair@pInput 00D7               Word_SetPair@pValue 00DA  
                    _MXK_Dequeue 1A92                 _Port_SetQuadType 03BA  
                    _MXK_Release 1B9C                     _MXK_SwitchTo 195E  
          __size_of_Word_GetPair 003E               Byte_GetZone@Offset 00CF  
              Word_SetPair@pPair 00D9                  _Port_SetPinType 083A  
        __size_of_Timer0_Restart 000C               Byte_GetZone@Output 00D0  
             Byte_GetZone@pChunk 00CB               Byte_GetZone@pInput 00C8  
        __size_ofi2_MXK_SwitchTo 0036            __size_of_Word_SetPair 0046  
             Port_Set@TypeActual 00EC  
